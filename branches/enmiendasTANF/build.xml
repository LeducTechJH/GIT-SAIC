<?xml version="1.0"?>

<project name="SAICWEB" default="usage" basedir=".">

<!-- Class path definition for ANT classes that use Subversion functions -->
<path id="svnant.classpath">
    <fileset dir="C:\Program Files\WinAnt\lib">
      <include name="**/*.jar"/>
    </fileset>
</path>  

<!-- Class path definition for SAICWEB source code. Necesary for compiling. Code references to the net.jar, Maintrend's Rally Engine Framework Library-->
<path id="project.class.path">
    <fileset dir="${basedir}/WEB-INF/lib">
    	<include name="net.jar"/>
    </fileset>
</path>

<!-- Class path definition for ANT classes that use Tomcat deployment functions -->
<path id="tomcat.tasks.classpath">
    <fileset dir="C:\Program Files\WinAnt\lib">
    	<include name="catalina-ant.jar"/>
    </fileset>
</path>

<!-- Configure properties to access the Manager application in DEV-->
<property name="devUrl" value="http://10.200.11.180:8081/manager"/>
<property name="devUn" value="admin"/>
<property name="devPw" value="dlfinvent"/>

<!-- Configure properties to access the Manager application in QC-->
<property name="qcUrl" value="http://10.200.11.183:8081/manager"/>
<property name="qcUn" value="admin"/>
<property name="qcPw" value="dlfinvent"/>

<!-- Configure properties to access the Manager application in PROD-->
<property name="proas1Url" value="http://172.16.2.131/manager"/>
<property name="proas2Url" value="http://172.16.2.132/manager"/>
<property name="proas3Url" value="http://172.16.2.133/manager"/>
<property name="proas4Url" value="http://172.16.2.134/manager"/>
<property name="proas5Url" value="http://172.16.2.135/manager"/>
<property name="proas6Url" value="http://172.16.2.136/manager"/>
<property name="proas7Url" value="http://172.16.2.137/manager"/>
<property name="proas8Url" value="http://172.16.2.138/manager"/>
<property name="prodUn" value="admin"/>
<property name="prodPw" value="dlfinvent"/>

<!-- Property definitions for connection strings-->
<property name="devConStr" value="DRIVER={Oracle10g};DataBaseURL={jdbc:oracle:thin:hr/hr@//10.200.11.180:1523/SAICWDEV};LOGIN={saic};PASSWORD={Ora10gr2};SCHEMA={saic};"/>
<property name="qcConStr"  value="DRIVER={Oracle10g};DataBaseURL={jdbc:oracle:thin:hr/hr@//10.200.11.183:1521/SAICWQC};LOGIN={saic};PASSWORD={Ora10gr2};SCHEMA={saic};"/>
<property name="trnConStr" value="DRIVER={Oracle10g};DataBaseURL={jdbc:oracle:thin:hr/hr@//10.200.11.183:1521/SAICWTRN};LOGIN={saic};PASSWORD={Ora10gr2};SCHEMA={saic};"/>
<property name="prdConStr" value="DRIVER={Oracle10g};SCHEMA={saic};DataBaseURL={jdbc:oracle:thin:@(DESCRIPTION=(FAILOVER=ON)(ADDRESS_LIST=(LOAD_BALANCE=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=172.24.27.61)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=172.24.27.62)(PORT=1521)))(CONNECT_DATA= (SERVER = SHARED) (SERVICE_NAME=SAICWPRD)))};LOGIN={saic};PASSWORD={dlf2818};"/>

<!-- Configure the custom Ant tasks for the Tomcat deployment and Manager application -->
<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" classpathref="tomcat.tasks.classpath"/>
<taskdef name="list" classname="org.apache.catalina.ant.ListTask" classpathref="tomcat.tasks.classpath"/>
<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask" classpathref="tomcat.tasks.classpath"/>
<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask" classpathref="tomcat.tasks.classpath"/>
<taskdef name="roles" classname="org.apache.catalina.ant.RolesTask" classpathref="tomcat.tasks.classpath"/>
<taskdef name="start" classname="org.apache.catalina.ant.StartTask" classpathref="tomcat.tasks.classpath"/>
<taskdef name="stop" classname="org.apache.catalina.ant.StopTask" classpathref="tomcat.tasks.classpath"/>
<taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask" classpathref="tomcat.tasks.classpath"/>

<!-- Configure the custom Ant tasks for Subversion functions -->
<taskdef name="svn" classname="org.tigris.subversion.svnant.SvnTask" classpathref="svnant.classpath"/>

<!-- Variable definitions for source code directory and build directory -->
<property name="src" value="WEB-INF/src"/>
<property name="build" value="WEB-INF/classes"/>

<!-- Variable definition for checkout directory when SVN Checkout is used within ANT. For testing purposes. -->
<property name="checkoutPath" value="${basedir}/SAICWEB"/>

<property name="Built-Date" value="${TODAY}"/>
<property name="Built-Time" value="${TIME}"/>

<!-- Property for SVN HEAD revision value on trunk-->
<property name="revNo" value="" id="revisionid"/>

<!-- Property for commit message on SVN tagging -->
<property name="msg" value="Tag copy for version ${Built-Date} release to QC."/>
	
<!-- Property for command invokation when deployment to PROD -->
<property name="command" value="C:\Putty\plink.exe -ssh -noagent root@10.200.11.180 ant deploy.xml"/>

<!-- Propery for branching a tagged QC version -->
<property environment="env"/>
<property name="qcTag" value="${env.VERSION}"/>

<!-- Propery for deploying a branch version -->
<property name="branchName" value="${env.BRANCH}"/>


	<!-- ================================= 
	     Get the date timestamp, format it in YYYYMMDD convention and load it in a variable.              
	     ================================= -->
	
	<tstamp>
	
		<format property="TODAY" pattern="yyyyMMdd" locale="en,US"/>
		<format property="TIME" pattern="HH:mm" locale="en,US" offset="30" unit="minute"/>
	
	</tstamp>


	<!-- ================================= 
	     Clean build directory. Necesary when SVN Update from HUDSON is used.
	     ================================= -->

	<target name="clean" description="Deletes build directory contaning compiled classes">
	    
		<delete dir="${build}"/>

	</target>


	<!-- ================================= 
		 Create build directory. Used after clean invoke.
		 ================================= -->
	
	<target name="prep" description="Creates the build directory for class output compilation">

		<mkdir dir="${build}"/>

	</target>
	
	
	<!-- ================================= 
	     Compile SAICWEB source code.
	     ================================= -->

	<target name="compile" description="Builds the source code.">

		<javac srcdir="${src}" destdir="${build}" fork="true" memoryinitialsize="128m" memorymaximumsize="1024m">

			<classpath refid="project.class.path">
			</classpath>

		</javac>

	</target>
	

	<!-- ================================= 
          Copy JDPs and DSDs to the classes directory. Used after compilation.
         ================================= -->

    <target name="cpSupport" description="Copy datastores and JDPs to classes directory">

    	<copydir dest="WEB-INF/classes/gov/dlf" src="WEB-INF/src/gov/dlf" excludes="**/*.java"/>

    </target>


	<!-- ================================= 
	     Get the build number from the checked out files and load it in a variable.
	     ================================= -->

	<target name="buildNo" description="Get revision number and save it in a property">
		<svn>
			<status path="${basedir}" revisionProperty="revNo"/>
		</svn>
	    	    	
		<echo>SAICWEB Revision: ${revNo}</echo>
	</target>

	
	<!-- ================================= 
         Automatic update of version number and build number on index.jsp file according to '########.###' naming convention. 
         ================================= -->

    <target name="updateVer" depends="buildNo" description="Updates build number">
		
    	<copy file="index.jsp" tofile="tmp.jsp">

    		<filterchain>

    			<tokenfilter>
    				<replaceregex pattern="[0-9]{8}\.[0-9][0-9]+" replace="${TODAY}.${revNo}"/>
    			</tokenfilter>

			</filterchain>

		</copy>
    	
    	<delete file="index.jsp"/>

		<copy file="tmp.jsp" tofile="index.jsp"/>

		<delete file="tmp.jsp"/>

    </target>
	
	<!-- ================================= 
	         Automatic update of version number and build number on index.jsp file according to '########.###' naming convention. 
	     ================================= -->

	    <target name="updateProdVer" depends="buildNo" description="Updates build number">
			
	    	<copy file="index.jsp" tofile="tmp.jsp">

	    		<filterchain>

	    			<tokenfilter>
	    				<replaceregex pattern="[0-9]{8}\.[0-9][0-9]+" replace="${qcTag}.${revNo}"/>
	    			</tokenfilter>

				</filterchain>

			</copy>
	    	
	    	<delete file="index.jsp"/>

			<copy file="tmp.jsp" tofile="index.jsp"/>

			<delete file="tmp.jsp"/>

	    </target>

	
	<!-- ================================= 
	     Build generic SAICWEB war file  
         ================================= -->
	
	<target name="buildWar" description="Build web archive" depends="cpSupport, updateVer">

		<war destfile="${basedir}/work/SAICWEB.war" webxml="WEB-INF/web.xml" defaultexcludes="true">

			<fileset dir="${basedir}" excludes="WEB-INF/src/,.settings/,.project,.classpath,build.xml,Configuration.xml,.tomcatplugin,work/"/>

		</war>

	</target>
	
	
	<!-- ================================= 
	     Deploy to PRD on demand -INCOMPLETE-
         ================================= -->
	
	<target name="depProd" depends="clean, prep, compile, cpSupport, updateProdVer" description="Deploy a war to the 8 production servers PROD">

		<replaceregexp file="Configuration.xml" match="D.*;" replace="${prdConStr}"/>
				
		<war destfile="${basedir}/work/SAICWEB.war" webxml="WEB-INF/web.xml" defaultexcludes="true">

			<fileset dir="${basedir}" excludes="WEB-INF/src/,.settings/,.project,.classpath,build.xml,.tomcatplugin,work/"/>

		</war>
		
		<!-- TESTING FOR PRODUCCTION -->
		
			<move file="${basedir}/work/SAICWEB.war" tofile="${basedir}/work/SAICWEB_TEST.war"/>
		
			<deploy path="/SAICWEB_TEST" war="file:///${basedir}/work/SAICWEB_TEST.war" url="${proas8Url}" username="${prodUn}" password="${prodPw}"/>

			<svn username="ant" password="ant">

				<copy srcUrl="http://10.200.11.192/svn/SAICWeb/tags/saicweb_${qcTag}" destUrl="http://10.200.11.192/svn/SAICWeb/branches/saicweb_${qcTag}" message="${msg}"> </copy>
		
			</svn>
		
		<!-- TESTING FOR PRODUCCTION -->
		
		<!--
		
		<deploy path="/SAICWEB" update="true" war="file:///${basedir}/SAICWEB.war" url="${proas1Url}" username="${prodUn}" password="${prodPw}"/>
		<deploy path="/SAICWEB" update="true" war="file:///${basedir}/SAICWEB.war" url="${proas2Url}" username="${prodUn}" password="${prodPw}"/>
		<deploy path="/SAICWEB" update="true" war="file:///${basedir}/SAICWEB.war" url="${proas3Url}" username="${prodUn}" password="${prodPw}"/>
		<deploy path="/SAICWEB" update="true" war="file:///${basedir}/SAICWEB.war" url="${proas4Url}" username="${prodUn}" password="${prodPw}"/>
		<deploy path="/SAICWEB" update="true" war="file:///${basedir}/SAICWEB.war" url="${proas5Url}" username="${prodUn}" password="${prodPw}"/>
		<deploy path="/SAICWEB" update="true" war="file:///${basedir}/SAICWEB.war" url="${proas6Url}" username="${prodUn}" password="${prodPw}"/>
		<deploy path="/SAICWEB" update="true" war="file:///${basedir}/SAICWEB.war" url="${proas7Url}" username="${prodUn}" password="${prodPw}"/>
		<deploy path="/SAICWEB" update="true" war="file:///${basedir}/SAICWEB.war" url="${proas8Url}" username="${prodUn}" password="${prodPw}"/>

			<svn username="ant" password="ant">

				<copy srcUrl="http://10.200.11.192/svn/SAICWeb/tags/saicweb_${qcTag}" destUrl="http://10.200.11.192/svn/SAICWeb/branches/saicweb_${qcTag}" message="${msg}"> </copy>
		
			</svn>
		-->
		
	</target>
	
	
	<!-- ================================= 
	     Deploy to QC on demand with /SAICWEB_######## context
	     ================================= -->
	
	<target name="depQc" depends="clean, prep, compile, cpSupport, updateVer" description="Deploy to QC the checkedout revision">
        
		<replaceregexp file="Configuration.xml" match="D.*;" replace="${qcConStr}"/>
				
		<war destfile="${basedir}/work/SAICWEB.war" webxml="WEB-INF/web.xml" defaultexcludes="true">

			<fileset dir="${basedir}" excludes="WEB-INF/src/,.settings/,.project,.classpath,build.xml,.tomcatplugin,work/"/>

		</war>
				
		<move file="${basedir}/work/SAICWEB.war" tofile="${basedir}/work/SAICWEB_${TODAY}.war"/>

		<deploy path="/SAICWEB_${TODAY}" war="file:///${basedir}/work/SAICWEB_${TODAY}.war" url="${qcUrl}" username="${qcUn}" password="${qcPw}"/>

		<svn username="ant" password="ant">

			<copy srcUrl="http://10.200.11.192/svn/SAICWeb/trunk" destUrl="http://10.200.11.192/svn/SAICWeb/tags/saicweb_${TODAY}" message="${msg}"> </copy>

		</svn>
	</target>

	
	<!-- ================================= 
		 Deploy to DEV on demand with /current context and utilize QC database.
		 ================================= -->	
	
	<target name="current" depends="clean, prep, compile, cpSupport, updateVer" description="Deploy to DEV the latest trunk revision on demand">
		
		<replaceregexp file="Configuration.xml" match="D.*;" replace="${qcConStr}"/>
		
		<replaceregexp file="index.jsp" match="[0-9]{8}\.[0-9][0-9]+" replace="${TODAY}.${revNo}_${TIME}"/>
		
		<war destfile="${basedir}/work/current.war" webxml="WEB-INF/web.xml" defaultexcludes="true">

			<fileset dir="${basedir}" excludes="WEB-INF/src/,.settings/,.project,.classpath,build.xml,.tomcatplugin,work/"/>

		</war>
		
		<deploy path="/current" update="true" war="file:///${basedir}/work/current.war" url="${devUrl}" username="${devUn}" password="${devPw}"/>

	</target>
	
	<!-- ================================= 
		 Deploy to DEV on demand from a specified branch in Hudson with /$BRANCH context.
		 ================================= -->	
	
	<target name="depBranchDev" depends="clean, prep, compile, cpSupport, updateVer" description="Deploy to DEV from a branch">
		
		<replaceregexp file="Configuration.xml" match="D.*;" replace="${devConStr}"/>
		
		<replaceregexp file="index.jsp" match="[0-9]{8}\.[0-9][0-9]+" replace="${TODAY}.${revNo}_${TIME}"/>
		
		<war destfile="${basedir}/work/${branchName}.war" webxml="WEB-INF/web.xml" defaultexcludes="true">

			<fileset dir="${basedir}" excludes="WEB-INF/src/,.settings/,.project,.classpath,build.xml,.tomcatplugin,work/"/>

		</war>
		
		<deploy path="/${branchName}" update="true" war="file:///${basedir}/work/${branchName}.war" url="${devUrl}" username="${devUn}" password="${devPw}"/>

	</target>

	
	<!-- ================================= 
		 Daily build deployment on DEV
		 ================================= -->	
	
	<target name="daily" depends="clean, prep, compile, cpSupport, updateVer" description="Deploy to DEV the latest trunk revision on demand">
		
		<replaceregexp file="Configuration.xml" match="D.*;" replace="${devConStr}"/>
		
		<war destfile="${basedir}/work/daily.war" webxml="WEB-INF/web.xml" defaultexcludes="true">

			<fileset dir="${basedir}" excludes="WEB-INF/src/,.settings/,.project,.classpath,build.xml,.tomcatplugin,work/"/>

		</war>
		
		<stop url="${devUrl}" username="${devUn}" password="${devPw}" path="/daily"/>
		
		<undeploy url="${devUrl}" username="${devUn}" password="${devPw}" path="/daily"/>
		
		<deploy path="/daily" war="file:///${basedir}/work/daily.war" url="${devUrl}" username="${devUn}" password="${devPw}"/>
		

	</target>
	
	
	<!-- ================================= 
	          target: usage              
	     ================================= -->
	
	<target name="usage" description="Usage instructions when invoking ANT default target on SAICWEB make file">
	
		<echo message="TODO: Usage instructions"/>
	
	</target>


	<!-- ================================= 
	          target: checkout              
	     ================================= -->
	<target name="checkout" description="Downloads the latest code from the trunk in the repository">

		<svn username="ant" password="ant">
		
			<checkout url="http://10.200.11.192/svn/SAICWeb/trunk" destPath="${checkoutPath}"/>
		
		</svn>

	</target>


</project>