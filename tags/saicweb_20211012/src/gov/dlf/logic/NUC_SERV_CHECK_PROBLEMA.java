package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class NUC_SERV_CHECK_PROBLEMA
extends ADL
{
	// -------------------------------------------------------------------
	// ----------   Class Attributes   -----------------------------------

	/**  */
	public static boolean staticCall = true;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes   --------------------------------

	/**  */
	public SAIC_DMQ_ORA_Application app;
	/**  */
	public RallyDataManager dm = null;



	// -------------------------------------------------------------------
	// ----------   Instance Condition Attributes   ----------------------



	// -------------------------------------------------------------------
	// ----------   Instance Export Attributes   -------------------------

	public double COMMAND = 0;

	public double OPEN_ID = 0;

	public double STATUS_CODE = 0;



	public String TEMP = null;

	public String NULLBOY = null;

	public DataStore NUCLEO_CLIENTE_CP_DSD = null;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes' Access Methods   ----------------


	/**  */
	public static void setCOMMAND  ( RallyApplication __app, Parameter value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).COMMAND = value.getDouble ( );
	}  


	/**  */
	public static void setTEMP  ( RallyApplication __app, Parameter value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).TEMP = value.getString ( );
	}  


	/**  */
	public static void setNULLBOY  ( RallyApplication __app, Parameter value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).NULLBOY = value.getString ( );
	}  


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).OPEN_ID = value.getDouble ( );
	}  


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).STATUS_CODE = value.getDouble ( );
	}  



	/**  */
	public static String getTEMP  ( RallyApplication __app )
	{
		return ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).TEMP;
	}


	/**  */
	public static void setTEMP  ( RallyApplication __app, String value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).TEMP = value;
	}


	/**  */
	public static void setTEMP  ( RallyApplication __app, Object value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).TEMP = ( String ) value;
	}



	/**  */
	public static String getNULLBOY  ( RallyApplication __app )
	{
		return ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).NULLBOY;
	}


	/**  */
	public static void setNULLBOY  ( RallyApplication __app, String value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).NULLBOY = value;
	}


	/**  */
	public static void setNULLBOY  ( RallyApplication __app, Object value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).NULLBOY = ( String ) value;
	}




	/**  */
	public static double getCOMMAND  ( RallyApplication __app )
	{
		return ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).COMMAND;
	}


	/**  */
	public static Double getCOMMANDDouble ( RallyApplication __app )
	{
		return new Double ( ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).COMMAND );
	}


	/**  */
	public static void setCOMMAND  ( RallyApplication __app, double value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).COMMAND = value;
	}


	/**  */
	public static void setCOMMAND  ( RallyApplication __app, Object value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getOPEN_ID  ( RallyApplication __app )
	{
		return ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).OPEN_ID;
	}


	/**  */
	public static Double getOPEN_IDDouble ( RallyApplication __app )
	{
		return new Double ( ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).OPEN_ID );
	}


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, double value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).OPEN_ID = value;
	}


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, Object value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTATUS_CODE  ( RallyApplication __app )
	{
		return ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).STATUS_CODE;
	}


	/**  */
	public static Double getSTATUS_CODEDouble ( RallyApplication __app )
	{
		return new Double ( ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).STATUS_CODE );
	}


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, double value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).STATUS_CODE = value;
	}


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
	}

	/**  */
	public static DataStore getNUCLEO_CLIENTE_CP_DSD  ( RallyApplication __app )
	{
		return ( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).NUCLEO_CLIENTE_CP_DSD;
	}


	/**  */
	public static void setNUCLEO_CLIENTE_CP_DSD  ( RallyApplication __app, DataStore value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).NUCLEO_CLIENTE_CP_DSD = value;
	}


	/**  */
	public static void setNUCLEO_CLIENTE_CP_DSD  ( RallyApplication __app, Object value )
	{
		( ( NUC_SERV_CHECK_PROBLEMA ) __app.getADL ( NUC_SERV_CHECK_PROBLEMA.class ) ).NUCLEO_CLIENTE_CP_DSD = ( DataStore ) value;
	}



	// -------------------------------------------------------------------
	// ----------   Methods   --------------------------------------------

	/**
	 * 
	 * @param __app
	 * @return
	 */
	public static NUC_SERV_CHECK_PROBLEMA get ( RallyApplication __app )
	{
		NUC_SERV_CHECK_PROBLEMA adl = new NUC_SERV_CHECK_PROBLEMA ( );
		__app.register ( adl, "NUC_SERV_CHECK_PROBLEMA" );
		__app.setADL ( NUC_SERV_CHECK_PROBLEMA.class, adl ); 
		adl.setApplication ( __app );
		return adl;
	}


	/**
	 *
	 * @param __app
	 * @param ps
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app, ParameterSet ps )
	{
		NUC_SERV_CHECK_PROBLEMA.get ( __app ).process ( ps );
	}


	/**
	 *
	 * @param __app
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app )
	{
		ParameterSet ps = null;
		NUC_SERV_CHECK_PROBLEMA.exec ( __app, ps );
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param __app
	 */
	public void setApplication ( RallyApplication __app )
	{
		this.app = ( SAIC_DMQ_ORA_Application ) __app;
		if ( this.app != null )
		{
			this.dm = ( RallyDataManager ) this.app.getDataManager ( );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param parms
	 */
	public void execute ( ParameterSet parms )
	{
		this.process ( parms );
	}




	/**
	 *
	 */
	protected void doReturn ( )
	{
		this.unregister ( );
	}


	/**
	 *
	 */
	public void unregister ( )
	{
		this.app.unregister ( this );
		IRegisteredObject rObj = this.app.get ( "NUC_SERV_CHECK_PROBLEMA" );
		if ( rObj != null && rObj instanceof NUC_SERV_CHECK_PROBLEMA )
		{
			this.app.setADL ( NUC_SERV_CHECK_PROBLEMA.class, ( NUC_SERV_CHECK_PROBLEMA ) rObj );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param ps
	 */
	protected void process ( ParameterSet ps )
	{
		Debug.println ( Debug.TRACE, "NUC_SERV_CHECK_PROBLEMA Step " + this.currentStep );
		super.process ( ps );
		switch ( this.currentStep ) 
		{
		case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
		case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
		default: 
		{ 
			this.currentStep = 0;
			Debug.println ( Debug.TRACE, "NUC_SERV_CHECK_PROBLEMA ended" );
			this.unregister ( );
			break;
		}
		}
		if ( this.currentStep > 0 ) this.app.goOn ( );
	}
	
	protected void step0 ( ParameterSet ps )
	{
		NUCLEO_CLIENTE_CP_DSD = this.dm.create ( "NUCLEO_CLIENTE_CP_DSD" );
		OPEN_ID = NUCLEO_CLIENTE_CP_DSD.getId ( );
		STATUS_CODE = RallyDataStoreException.getDefault ( );
		return;
	}
	
	protected void step1 ( ParameterSet ps )
	{
		STATUS_CODE  = this.dm.reset ( OPEN_ID );

		this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_CP_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SSN_JEFE_FAM_GBL);
		this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_CP_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

		STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
		STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

		STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

		while ( Compare.equals ( STATUS_CODE, 0 )  )
		{
			int counter =0;
			if (Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_CP_DSD" ), "COD_PROBLEMA" ), "IPRO" ))
			{
				this.app.setError ( "0", "Miembro en la familia posee informacion protegida." );
				counter++;
			}
			if(Compare.ge(counter, 1))
			{
				break;
			}
			STATUS_CODE  = this.dm.nextRow ( OPEN_ID );
		}
		return;
	}
}




