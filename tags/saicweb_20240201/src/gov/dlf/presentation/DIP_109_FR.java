package gov.dlf.presentation;


import gov.dlf.facade.*;
import gov.dlf.external.*;
import gov.dlf.logic.*;

import java.text.SimpleDateFormat;
import java.util.Date;


import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.jdatapanel.*;
import net.maintrend.jdatapanel.edit.*;
import net.maintrend.jdatapanel.commands.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.rallyengine.appcommands.RallyCommand_Commit;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DIP_109_FR
     extends Form
{
  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;



  // -------------------------------------------------------------------
  // ----------   Constructors and supporting methods   ----------------

  /**
   *
   */
  public DIP_109_FR ( )
  {
    super ( );
    this.setName ( "DIP_109_FR" );

    Debug.println ( Debug.TRACE, "DIP_109_FR - constructor" );

    this.setDefinitionPath ( "gov/dlf/presentation/DIP_109.jdp" );
    String definition = ResourceUtil.getResourceText ( this.definitionPath );
    this.setDefinition     ( definition );

    this.setHighLightSelected   ( false );
    this.compressFieldLocations ( false, true );  // Compresses only Y-locations
  }
  
  
  /**
   * Overrides ancestor's script
   *
   * @param __app
   */
  public void setApplication ( Application __app )
  {
    
	this.app = ( SAIC_DMQ_ORA_Application ) __app;
	if ( this.app != null )
	{
	  this.setDataManager ( this.app.getDataManager ( ) );
	}
	
	ICalculator           calculator;
    IBooleanValueProvider txtVisible;
    IBooleanValueProvider groupVisible;
    IObjectValueProvider  valueProvider;
    JDataPanelField       field;
    JDataPanelTextGroup   txtGroup;
    JDataPanelGroup       visGroup;
	  
    this.setObjectEvents ( );
    
    field = ( JDataPanelField ) this.getInDepth ( "OFICINA_REGIONAL" );
    field.set( this.app.getREG_GBL() );
    
    field = ( JDataPanelField ) this.getInDepth ( "OFICINA_LOCAL" );
    field.set( this.app.getOFICINA_GBL() );
    
    field = ( JDataPanelField ) this.getInDepth ( "SS_JEFE_FAMILIA" );
    String SSJefFam =  Double.toString(this.app.getSS_JEFE_FAMILIA_GBL());
    SSJefFam = SSJefFam.substring(6, 10);
    SSJefFam = "XXX-XX-" + SSJefFam;
    field.set(SSJefFam);
    
    field = ( JDataPanelField ) this.getInDepth ( "SS_JEFE_SERVICIO" );
    String SSJefServ =  Double.toString(this.app.getSS_JEFE_SERVICIO_GBL());
    SSJefServ = SSJefServ.substring(6, 10);
    SSJefServ = "XXX-XX-" + SSJefServ;
    field.set(SSJefServ);
    
    field = ( JDataPanelField ) this.getInDepth ( "NOMBRE_JEFE_SERVICIO" );
    field.set( this.app.getNOMBRE_JUF_GBL());
       
    this.model.build();
    
  }


  /**
   * Overrides ancestor's method
   * 
   * @return
   */
  public RallyApplication getApplication ( )
  {
    return this.app;
  }

 
  // -------------------------------------------------------------------
  // ----------   Action Sites   ---------------------------------------

  /**
   *
   */
  public void setObjectEvents ( )
  {

  }
  
}








