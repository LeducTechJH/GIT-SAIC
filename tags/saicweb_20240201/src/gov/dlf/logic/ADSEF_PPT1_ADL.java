package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class ADSEF_PPT1_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_CODE = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }  
    



  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_PPT1_ADL ) __app.getADL ( ADSEF_PPT1_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static ADSEF_PPT1_ADL get ( RallyApplication __app )
  {
    ADSEF_PPT1_ADL adl = new ADSEF_PPT1_ADL ( );
    __app.register ( adl, "ADSEF_PPT1_ADL" );
    __app.setADL ( ADSEF_PPT1_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    ADSEF_PPT1_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    ADSEF_PPT1_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "ADSEF_PPT1_ADL" );
    if ( rObj != null && rObj instanceof ADSEF_PPT1_ADL )
    {
      this.app.setADL ( ADSEF_PPT1_ADL.class, ( ADSEF_PPT1_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "ADSEF_PPT1_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "ADSEF_PPT1_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( Compare.le ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_INSTITUCION" ), "    " ) ) 
    {
      this.app.setError ( 0, 6186 );
      this.app.errorFlag = false;
      this.app.browseToField ( "INFOR_BIO_FRM", "COD_INSTITUCION" ); 
      this.doReturn ( );
      return; 
    }
    if ( Compare.le ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TIPO_REGISTRO" ), "    " ) ) 
    {
      this.app.setError ( 1, 6187 );
      this.app.errorFlag = false;
      this.app.browseToField ( "INFOR_BIO_FRM", "TIPO_REGISTRO" ); 
      this.doReturn ( );
      return; 
    }
    if ( Compare.le ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PSM" ), "    " ) ) 
    {
      this.app.setError ( 2, 6188 );
      this.app.errorFlag = false;
      this.app.browseToField ( "INFOR_BIO_FRM", "COD_PSM" ); 
      this.doReturn ( );
      return; 
    }
    if ( Compare.le ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "    " ) ) 
    {
      this.app.setError ( 3, 6189 );
      this.app.errorFlag = false;
      this.app.browseToField ( "INFOR_BIO_FRM", "COD_PASOS" ); 
      this.doReturn ( );
      return; 
    }
    if ( ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TIPO_REGISTRO" ), "HABL" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TIPO_REGISTRO" ), "DISP" ) ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      ADSEF_PPT1_PKT.exec ( this.app );
      return;
    }

  }
}



/* ---------------------------------------------------------------------


     
VAR 

OPEN_ID : NUMBER;
STATUS_CODE : NUMBER;
{
DB_OPEN(NUCLEO_READ_LOC_DSD,OPEN_ID,STATUS_CODE);

DB_RESET(OPEN_ID,STATUS_CODE);

NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO := INFOR_BIO_FRM.SEGURO_SOCIAL_CL
IENTE;
NUCLEO_READ_LOC_DSD.COD_SERVICIO := 'AE-C';
DB_QUERY(OPEN_ID,STATUS_CODE);
DB_GET_FIRST(OPEN_ID,STATUS_CODE);

IF STATUS_CODE = 0 THEN
BEGIN
        IF (INFOR_BIO_FRM.COD_PASOS = ' ') OR
           (INFOR_BIO_FRM.COD_PASOS = 'NA') THEN
         BEGIN
                error(6189);
                SET_FAILURE();
                SET_CURRENT_FIELD(INFOR_BIO_FRM.COD_PASOS);
                RETURN;
           END;
        IF INFOR_BIO_FRM.ESTATUS_PARTICIPA_TRABAJO = ' ' THEN
         BEGIN
                error(6189);
                SET_FAILURE();
                SET_CURRENT_FIELD(INFOR_BIO_FRM.ESTATUS_PARTICIPA_TRABAJO);
                RETURN;
           END;

END;
DB_CLOSE(OPEN_ID,STATUS_CODE);
}

SET_TRACE();
IF INFOR_BIO_FRM.COD_INSTITUCION <= '    ' THEN
   BEGIN
        error(6186);
        SET_FAILURE();
        SET_CURRENT_FIELD(INFOR_BIO_FRM.COD_INSTITUCION);
        RETURN;
   END;
IF (INFOR_BIO_FRM.TIPO_REGISTRO <= '    ') 
 THEN
  BEGIN
        error(6187);
        SET_FAILURE();
        SET_CURRENT_FIELD(INFOR_BIO_FRM.TIPO_REGISTRO);
        RETURN;
  END;

IF INFOR_BIO_FRM.COD_PSM <= '    ' THEN
   BEGIN
        error(6188);
        SET_FAILURE();
        SET_CURRENT_FIELD(INFOR_BIO_FRM.COD_PSM);
        RETURN;
   END;
IF INFOR_BIO_FRM.COD_PASOS <= '    ' THEN
   BEGIN
        error(6189);
        SET_FAILURE();
        SET_CURRENT_FIELD(INFOR_BIO_FRM.COD_PASOS);
        RETURN;
   END;
IF ((INFOR_BIO_FRM.TIPO_REGISTRO ='OBLI') OR
   (INFOR_BIO_FRM.TIPO_REGISTRO ='VOLU'))
 THEN
        CALL ADSEF_PPT1_PKT;
SET_NOTRACE();

    



--------------------------------------------------------------------- */
