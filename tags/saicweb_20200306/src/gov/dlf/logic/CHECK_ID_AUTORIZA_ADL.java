package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CHECK_ID_AUTORIZA_ADL
extends ADL
{
	// -------------------------------------------------------------------
	// ----------   Class Attributes   -----------------------------------

	/**  */
	public static boolean staticCall = true;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes   --------------------------------

	/**  */
	public SAIC_DMQ_ORA_Application app;
	/**  */
	public RallyDataManager dm = null;



	// -------------------------------------------------------------------
	// ----------   Instance Condition Attributes   ----------------------



	// -------------------------------------------------------------------
	// ----------   Instance Export Attributes   -------------------------

	public double OPEN_ID = 0;

	public double STATUS_CODE = 0;

	public double NULL_VAL = 0;



	public DataStore SERVICIOS_READ_LOC_DSD = null;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes' Access Methods   ----------------


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).OPEN_ID = value.getDouble ( );
	}  


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).STATUS_CODE = value.getDouble ( );
	}  


	/**  */
	public static void setNULL_VAL  ( RallyApplication __app, Parameter value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).NULL_VAL = value.getDouble ( );
	}  



	/**  */
	public static DataStore getSERVICIOS_READ_LOC_DSD  ( RallyApplication __app )
	{
		return ( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).SERVICIOS_READ_LOC_DSD;
	}


	/**  */
	public static void setSERVICIOS_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).SERVICIOS_READ_LOC_DSD = value;
	}


	/**  */
	public static void setSERVICIOS_READ_LOC_DSD  ( RallyApplication __app, Object value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).SERVICIOS_READ_LOC_DSD = ( DataStore ) value;
	}




	/**  */
	public static double getOPEN_ID  ( RallyApplication __app )
	{
		return ( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).OPEN_ID;
	}


	/**  */
	public static Double getOPEN_IDDouble ( RallyApplication __app )
	{
		return new Double ( ( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).OPEN_ID );
	}


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, double value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).OPEN_ID = value;
	}


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, Object value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTATUS_CODE  ( RallyApplication __app )
	{
		return ( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).STATUS_CODE;
	}


	/**  */
	public static Double getSTATUS_CODEDouble ( RallyApplication __app )
	{
		return new Double ( ( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).STATUS_CODE );
	}


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, double value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).STATUS_CODE = value;
	}


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getNULL_VAL  ( RallyApplication __app )
	{
		return ( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).NULL_VAL;
	}


	/**  */
	public static Double getNULL_VALDouble ( RallyApplication __app )
	{
		return new Double ( ( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).NULL_VAL );
	}


	/**  */
	public static void setNULL_VAL  ( RallyApplication __app, double value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).NULL_VAL = value;
	}


	/**  */
	public static void setNULL_VAL  ( RallyApplication __app, Object value )
	{
		( ( CHECK_ID_AUTORIZA_ADL ) __app.getADL ( CHECK_ID_AUTORIZA_ADL.class ) ).NULL_VAL = ( ( Double ) value ).doubleValue ( );
	}



	// -------------------------------------------------------------------
	// ----------   Methods   --------------------------------------------

	/**
	 * 
	 * @param __app
	 * @return
	 */
	public static CHECK_ID_AUTORIZA_ADL get ( RallyApplication __app )
	{
		CHECK_ID_AUTORIZA_ADL adl = new CHECK_ID_AUTORIZA_ADL ( );
		__app.register ( adl, "CHECK_ID_AUTORIZA_ADL" );
		__app.setADL ( CHECK_ID_AUTORIZA_ADL.class, adl ); 
		adl.setApplication ( __app );
		return adl;
	}


	/**
	 *
	 * @param __app
	 * @param ps
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app, ParameterSet ps )
	{
		CHECK_ID_AUTORIZA_ADL.get ( __app ).process ( ps );
	}


	/**
	 *
	 * @param __app
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app )
	{
		ParameterSet ps = null;
		CHECK_ID_AUTORIZA_ADL.exec ( __app, ps );
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param __app
	 */
	@Override
	public void setApplication ( RallyApplication __app )
	{
		this.app = ( SAIC_DMQ_ORA_Application ) __app;
		if ( this.app != null )
		{
			this.dm = ( RallyDataManager ) this.app.getDataManager ( );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param parms
	 */
	@Override
	public void execute ( ParameterSet parms )
	{
		this.process ( parms );
	}




	/**
	 *
	 */
	protected void doReturn ( )
	{
		this.unregister ( );
	}


	/**
	 *
	 */
	public void unregister ( )
	{
		this.app.unregister ( this );
		IRegisteredObject rObj = this.app.get ( "CHECK_ID_AUTORIZA_ADL" );
		if ( rObj != null && rObj instanceof CHECK_ID_AUTORIZA_ADL )
		{
			this.app.setADL ( CHECK_ID_AUTORIZA_ADL.class, ( CHECK_ID_AUTORIZA_ADL ) rObj );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param ps
	 */
	@Override
	protected void process ( ParameterSet ps )
	{
		Debug.println ( Debug.TRACE, "CHECK_ID_AUTORIZA_ADL Step " + this.currentStep );
		super.process ( ps );
		switch ( this.currentStep ) 
		{
		case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
		default: 
		{ 
			this.currentStep = 0;
			Debug.println ( Debug.TRACE, "CHECK_ID_AUTORIZA_ADL ended" );
			this.unregister ( );
			break;
		}
		}
		if ( this.currentStep > 0 ) this.app.goOn ( );
	}



	/**
	 *
	 */
	protected void step0 ( ParameterSet ps )
	{

		NULL_VAL = TruncService.setNull ( NULL_VAL  );
		SERVICIOS_READ_LOC_DSD = this.dm.create ( "SERVICIOS_READ_LOC_DSD" );
		OPEN_ID = SERVICIOS_READ_LOC_DSD.getId ( );
		STATUS_CODE = RallyDataStoreException.getDefault ( );

		STATUS_CODE  = this.dm.reset ( OPEN_ID );

		this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
		this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
		this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
//		this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

		STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
		STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

		STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

		if (  Compare.equals ( STATUS_CODE, 0 ) ) 
		{
			if ( ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "ID_TECNICO_AUTORIZA" ), NULL_VAL ) ) || ( Compare.le ( StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "FCH_TERMINACION" ) ), " " ) ) ) 
			{
				this.app.AUTORIZADA_GBL = "N";
			}
			else
			{
				this.app.AUTORIZADA_GBL = "S";
			}
		}
		else
		{
			this.app.AUTORIZADA_GBL = "N";
		}
		STATUS_CODE  = this.dm.dbClose ( OPEN_ID );

	}
}



/* ---------------------------------------------------------------------



PROCEDURE CHECK_ID_AUTORIZA_ADL;
VAR

        OPEN_ID         : NUMBER;
        STATUS_CODE     : NUMBER;
        NULL_VAL        : NUMBER;

BEGIN
SET_TRACE();
        MAKE_NULL(NULL_VAL);
        DB_OPEN(SERVICIOS_READ_LOC_DSD,OPEN_ID,STATUS_CODE);

        DB_RESET(OPEN_ID,STATUS_CODE);
        SERVICIOS_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        SERVICIOS_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        SERVICIOS_READ_LOC_DSD.COD_SERVICIO := COD_SERV_GBL;
        SERVICIOS_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN_ID,STATUS_CODE);
        IF (SERVICIOS_READ_LOC_DSD.ID_TECNICO_AUTORIZA = NULL_VAL) OR 
           (TO_CHAR(SERVICIOS_READ_LOC_DSD.FCH_TERMINACION) <= ' ')
        THEN
                AUTORIZADA_GBL := 'N';
        ELSE
                AUTORIZADA_GBL := 'S';
        DB_CLOSE(OPEN_ID,STATUS_CODE);
SET_NOTRACE();
END;




--------------------------------------------------------------------- */
