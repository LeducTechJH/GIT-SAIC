package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class LLENAR_APELACIONES_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;



  public DataStore SERVICIOS_TBL_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getSERVICIOS_TBL_RO_DSD  ( RallyApplication __app )
  {
    return ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).SERVICIOS_TBL_RO_DSD;
  }


  /**  */
  public static void setSERVICIOS_TBL_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).SERVICIOS_TBL_RO_DSD = value;
  }


  /**  */
  public static void setSERVICIOS_TBL_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).SERVICIOS_TBL_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_APELACIONES_ADL ) __app.getADL ( LLENAR_APELACIONES_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static LLENAR_APELACIONES_ADL get ( RallyApplication __app )
  {
    LLENAR_APELACIONES_ADL adl = new LLENAR_APELACIONES_ADL ( );
    __app.register ( adl, "LLENAR_APELACIONES_ADL" );
    __app.setADL ( LLENAR_APELACIONES_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    LLENAR_APELACIONES_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    LLENAR_APELACIONES_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "LLENAR_APELACIONES_ADL" );
    if ( rObj != null && rObj instanceof LLENAR_APELACIONES_ADL )
    {
      this.app.setADL ( LLENAR_APELACIONES_ADL.class, ( LLENAR_APELACIONES_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "LLENAR_APELACIONES_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "LLENAR_APELACIONES_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    FLUJO_APELACIONES_ADL.setAPEL_STATUS ( this.app, "FAILURE" );
    VERIFICAR_APELACIONES_ADL.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    this.app.form ( "APELACIONES_FR" ).setItem ( "SEGURO_SOCIAL_CLIENTE", this.app.SSN_GBL  );
    this.app.form ( "APELACIONES_FR" ).setItem ( "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL  );
    this.app.form ( "APELACIONES_FR" ).setItem ( "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL  );
    this.app.form ( "APELACIONES_FR" ).setItem ( "COD_SERVICIO", this.app.COD_SERVICIO_GBL  );
    this.app.form ( "APELACIONES_FR" ).setItem ( "RMO_OFICINA", this.app.RMO_GBL  );

    this.callParms.clear ( );
    this.callParms.set ( this.app.SSN_GBL  );
    this.callParms.set ( this.app.form ( "APELACIONES_FR" ).getStringItem ( "NOMBRE_SOLICITANTE" ) );
    BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.app.SSN_GBL  = this.callParms.getDouble ( );
    this.app.form ( "APELACIONES_FR" ).setItem ( "NOMBRE_SOLICITANTE", this.callParms.getString ( ) );

    this.callParms.clear ( );
    this.callParms.set ( this.app.SS_JEFE_FAMILIA_GBL  );
    this.callParms.set ( this.app.form ( "APELACIONES_FR" ).getStringItem ( "NOMBRE_JEFE_FAMILIA" ) );
    BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.app.SS_JEFE_FAMILIA_GBL  = this.callParms.getDouble ( );
    this.app.form ( "APELACIONES_FR" ).setItem ( "NOMBRE_JEFE_FAMILIA", this.callParms.getString ( ) );

    this.callParms.clear ( );
    this.callParms.set ( this.app.SS_JEFE_SERVICIO_GBL  );
    this.callParms.set ( this.app.form ( "APELACIONES_FR" ).getStringItem ( "NOMBRE_JEFE_SERV" ) );
    BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.app.SS_JEFE_SERVICIO_GBL  = this.callParms.getDouble ( );
    this.app.form ( "APELACIONES_FR" ).setItem ( "NOMBRE_JEFE_SERV", this.callParms.getString ( ) );

    if ( ! Compare.equals ( this.app.form ( "APELACIONES_FR" ).getStringItem ( "COD_SERVICIO" ), "" ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      SERVICIOS_TBL_RO_DSD = this.dm.create ( "SERVICIOS_TBL_RO_DSD" );
      OPEN_ID = SERVICIOS_TBL_RO_DSD.getId ( );
      STATUS_ID = RallyDataStoreException.getDefault ( );

      STATUS_ID  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "SERVICIOS_TBL_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERVICIO_GBL );

      STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_ID  = this.dm.retrieve ( OPEN_ID );

      STATUS_ID  = this.dm.firstRow ( OPEN_ID );

      this.app.form ( "APELACIONES_FR" ).setItem ( "DESC_SERVICIO", this.dm.getFieldString ( this.dm.get ( "SERVICIOS_TBL_RO_DSD" ), "DSC_NOMBRE_SERVICIO" )  );
      STATUS_ID  = this.dm.dbClose ( OPEN_ID );

      BUSCAR_SS_REPRE_ADL.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ! Compare.equals ( this.app.form ( "APELACIONES_FR" ).getStringItem ( "COD_SERVICIO" ), "" ) ) 
    {
      this.app.browseToField ( "APELACIONES_FR", "FCH_RADICADA" ); 
    }
    else
    {
      this.app.browseToField ( "APELACIONES_FR", "COD_SERVICIO" ); 
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure llenar_apelaciones_adl;
var
        open_id :number(9,0);
        status_id:number(9,0);

begin
set_trace();
        flujo_apelaciones_adl.apel_status := 'FAILURE';
        call verificar_apelaciones_adl;
        APELACIONES_FR.SEGURO_SOCIAL_CLIENTE := ssn_gbl;
        APELACIONES_FR.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
        APELACIONES_FR.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
        APELACIONES_FR.COD_SERVICIO := cod_servicio_gbl;        
        APELACIONES_FR.RMO_OFICINA := RMO_GBL;
        call buscar_nombre_completo_adl(ssn_gbl,APELACIONES_FR.NOMBRE_SOLICITANT
E);
        call buscar_nombre_completo_adl(ss_jefe_familia_gbl,APELACIONES_FR.NOMBR
E_JEFE_FAMILIA);
        call buscar_nombre_completo_adl(ss_jefe_servicio_gbl,APELACIONES_FR.NOMB
RE_JEFE_SERV);

        if apelaciones_fr.cod_servicio <> '' 
        then
        begin
                db_open(SERVICIOS_TBL_RO_DSD,open_id,status_id);
                db_reset(open_id,status_id);
                SERVICIOS_TBL_RO_DSD.cod_servicio := cod_servicio_gbl;
                db_query(open_id,status_id);    
                db_get_first(open_id,status_id);
                APELACIONES_FR.DESC_SERVICIO:= SERVICIOS_TBL_RO_DSD.dsc_nombre_s
ervicio;
                db_close(open_id,status_id);            
                call BUSCAR_SS_REPRE_ADL;
                set_current_field(APELACIONES_FR.FCH_RADICADA);
        end;
        else
                set_current_field(APELACIONES_FR.COD_SERVICIO);
        {endif}
set_notrace();
end;
    



--------------------------------------------------------------------- */
