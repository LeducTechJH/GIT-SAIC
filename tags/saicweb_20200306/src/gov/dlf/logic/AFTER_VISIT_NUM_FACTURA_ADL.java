package gov.dlf.logic;


import gov.dlf.facade.*;
import java.util.*;

import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AFTER_VISIT_NUM_FACTURA_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double LASTKEY = 0;



  public Date NULLDATE = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setLASTKEY  ( RallyApplication __app, Parameter value )
  {
    ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).LASTKEY = value.getDouble ( );
  }  

  
  /**  */
  public static void setNULLDATE  ( RallyApplication __app, Parameter value )
  {
    ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).NULLDATE = value.getDate ( );
  }  
    


  /**  */
  public static Date getNULLDATE  ( RallyApplication __app )
  {
    return ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).NULLDATE;
  }


  /**  */
  public static void setNULLDATE  ( RallyApplication __app, Date value )
  {
    ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).NULLDATE = value;
  }


  /**  */
  public static void setNULLDATE  ( RallyApplication __app, Object value )
  {
    ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).NULLDATE = ( Date ) value;
  }




  /**  */
  public static double getLASTKEY  ( RallyApplication __app )
  {
    return ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).LASTKEY;
  }


  /**  */
  public static Double getLASTKEYDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).LASTKEY );
  }


  /**  */
  public static void setLASTKEY  ( RallyApplication __app, double value )
  {
    ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).LASTKEY = value;
  }


  /**  */
  public static void setLASTKEY  ( RallyApplication __app, Object value )
  {
    ( ( AFTER_VISIT_NUM_FACTURA_ADL ) __app.getADL ( AFTER_VISIT_NUM_FACTURA_ADL.class ) ).LASTKEY = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static AFTER_VISIT_NUM_FACTURA_ADL get ( RallyApplication __app )
  {
    AFTER_VISIT_NUM_FACTURA_ADL adl = new AFTER_VISIT_NUM_FACTURA_ADL ( );
    __app.register ( adl, "AFTER_VISIT_NUM_FACTURA_ADL" );
    __app.setADL ( AFTER_VISIT_NUM_FACTURA_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    AFTER_VISIT_NUM_FACTURA_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    AFTER_VISIT_NUM_FACTURA_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "AFTER_VISIT_NUM_FACTURA_ADL" );
    if ( rObj != null && rObj instanceof AFTER_VISIT_NUM_FACTURA_ADL )
    {
      this.app.setADL ( AFTER_VISIT_NUM_FACTURA_ADL.class, ( AFTER_VISIT_NUM_FACTURA_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "AFTER_VISIT_NUM_FACTURA_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "AFTER_VISIT_NUM_FACTURA_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    LASTKEY = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    NULLDATE = TruncService.setNull ( NULLDATE  );
    if ( Compare.equals ( LASTKEY, RallyAppCommandFactory.EXITACTION ) ) 
    {
      if ( Compare.equals ( this.app.form ( "GET_SC724_FACTURA_FR" ).getDateItem ( "FCH_FACTURA" ), NULLDATE ) ) 
      {
        this.app.browseToField ( "GET_SC724_FACTURA_FR", "FCH_FACTURA" ); 
      }
      else
      {
        this.app.browseToField ( "GET_SC724_FACTURA_FR", "PARK" ); 
      }
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE AFTER_VISIT_NUM_FACTURA_ADL;
VAR
        LASTKEY : NUMBER;
        NULLDATE : DATE;
BEGIN
   LASTKEY := GET_CMD();
   MAKE_NULL(NULLDATE);
   IF LASTKEY = EXITACTION
   THEN
        BEGIN
                IF GET_SC724_FACTURA_FR.FCH_FACTURA = NULLDATE
                THEN
                        SET_CURRENT_FIELD(GET_SC724_FACTURA_FR.FCH_FACTURA);
                ELSE
                        SET_CURRENT_FIELD(GET_SC724_FACTURA_FR.PARK);
                {ENDIF}         
        END;
   {ENDIF}
END;
    



--------------------------------------------------------------------- */
