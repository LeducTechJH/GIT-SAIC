package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class REFERIDO_INSERT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMMAND = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( REFERIDO_INSERT_ADL ) __app.getADL ( REFERIDO_INSERT_ADL.class ) ).COMMAND = value.getDouble ( );
  }  
    



  /**  */
  public static double getCOMMAND  ( RallyApplication __app )
  {
    return ( ( REFERIDO_INSERT_ADL ) __app.getADL ( REFERIDO_INSERT_ADL.class ) ).COMMAND;
  }


  /**  */
  public static Double getCOMMANDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( REFERIDO_INSERT_ADL ) __app.getADL ( REFERIDO_INSERT_ADL.class ) ).COMMAND );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, double value )
  {
    ( ( REFERIDO_INSERT_ADL ) __app.getADL ( REFERIDO_INSERT_ADL.class ) ).COMMAND = value;
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Object value )
  {
    ( ( REFERIDO_INSERT_ADL ) __app.getADL ( REFERIDO_INSERT_ADL.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static REFERIDO_INSERT_ADL get ( RallyApplication __app )
  {
    REFERIDO_INSERT_ADL adl = new REFERIDO_INSERT_ADL ( );
    __app.register ( adl, "REFERIDO_INSERT_ADL" );
    __app.setADL ( REFERIDO_INSERT_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    REFERIDO_INSERT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    REFERIDO_INSERT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "REFERIDO_INSERT_ADL" );
    if ( rObj != null && rObj instanceof REFERIDO_INSERT_ADL )
    {
      this.app.setADL ( REFERIDO_INSERT_ADL.class, ( REFERIDO_INSERT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "REFERIDO_INSERT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "REFERIDO_INSERT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    COMMAND = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.INSAFTER ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.callCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.INSAFTER ) ) 
    {
      if ( Compare.gt ( this.app.form ( "REFERIDOS_FRM" ).getDoubleItem ( "RECORD_NUM" ), 1 ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        this.app.callCommand ( RallyAppCommandFactory.RHOME );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.INSAFTER ) ) 
    {
      if ( this._condition1 )    //      if ( Compare.gt ( this.app.form ( "REFERIDOS_FRM" ).getDoubleItem ( "RECORD_NUM" ), 1 ) ) 
      {
      }
      this.app.callCommand ( RallyAppCommandFactory.INSBEFORE );
      return;
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.INSAFTER ) ) 
    {
      this.app.form ( "REFERIDOS_FRM" ).setItem ( "FCH_REFERIDO", this.app.SYSTEM_DATE  );
      this.app.callCommand ( RallyAppCommandFactory.FNEXT );
      return;
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE REFERIDO_INSERT_ADL;

VAR

COMMAND:        NUMBER(9,0);

BEGIN
SET_TRACE();
COMMAND:=GET_CMD();

IF COMMAND=INSAFTER
   THEN BEGIN
         CALL_CMD('IGNORE');
         IF REFERIDOS_FRM.RECORD_NUM>1
            THEN CALL_CMD('First record');
         CALL_CMD('Insert record before');
         REFERIDOS_FRM.FCH_REFERIDO:=SYSTEM_DATE;
         CALL_CMD('Next field');
        END;
SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
