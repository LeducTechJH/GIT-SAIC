package gov.dlf.logic;


import gov.dlf.facade.*;
import java.util.*;

import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------



  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double DHM_OLD_HH = 0;

  public double DHM_OLD_MI = 0;

  public double DUR_OLD_HH = 0;

  public double DUR_OLD_MI = 0;

  public double DHM_NEW_HH = 0;

  public double DHM_NEW_MI = 0;

  public double DUR_NEW_HH = 0;

  public double DUR_NEW_MI = 0;

  public double TOTAL_MI = 0;

  public double TOTAL_HH = 0;

  public double RESTO_HH = 0;

  public double TMP_HH = 0;

  public double TMP_MI = 0;

  public double DUR_OLD_HH_SALVA = 0;

  public double DUR_OLD_MI_SALVA = 0;

  public double NULL_NUMBER = 0;



  public Date DHM_OLD = null;

  public Date DUR_OLD = null;

  public String DHM_OLD_CHAR = null;

  public String DUR_OLD_CHAR = null;

  public String DHM_OLD_FCH_CHAR = null;

  public Date DHM_OLD_MAIS_DUR_OLD = null;

  public Date DHM_NEW = null;

  public Date DUR_NEW = null;

  public String DHM_NEW_CHAR = null;

  public String DUR_NEW_CHAR = null;

  public String DHM_NEW_FCH_CHAR = null;

  public Date DHM_NEW_MAIS_DUR_NEW = null;

  public Date NULL_DATE = null;

  public String TOTAL_HH_CHAR = null;

  public String TOTAL_MI_CHAR = null;

  public Date FECHA_AUX = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------


  /**  */
  public static Date getDHM_OLD  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD;
  }


  /**  */
  public static void setDHM_OLD  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD = value;
  }


  /**  */
  public static void setDHM_OLD  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD = ( Date ) value;
  }



  /**  */
  public static Date getDUR_OLD  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD;
  }


  /**  */
  public static void setDUR_OLD  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD = value;
  }


  /**  */
  public static void setDUR_OLD  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD = ( Date ) value;
  }



  /**  */
  public static String getDHM_OLD_CHAR  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_CHAR;
  }


  /**  */
  public static void setDHM_OLD_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_CHAR = value;
  }


  /**  */
  public static void setDHM_OLD_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_CHAR = ( String ) value;
  }



  /**  */
  public static String getDUR_OLD_CHAR  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_CHAR;
  }


  /**  */
  public static void setDUR_OLD_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_CHAR = value;
  }


  /**  */
  public static void setDUR_OLD_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_CHAR = ( String ) value;
  }



  /**  */
  public static String getDHM_OLD_FCH_CHAR  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_FCH_CHAR;
  }


  /**  */
  public static void setDHM_OLD_FCH_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_FCH_CHAR = value;
  }


  /**  */
  public static void setDHM_OLD_FCH_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_FCH_CHAR = ( String ) value;
  }



  /**  */
  public static Date getDHM_OLD_MAIS_DUR_OLD  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_MAIS_DUR_OLD;
  }


  /**  */
  public static void setDHM_OLD_MAIS_DUR_OLD  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_MAIS_DUR_OLD = value;
  }


  /**  */
  public static void setDHM_OLD_MAIS_DUR_OLD  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_MAIS_DUR_OLD = ( Date ) value;
  }



  /**  */
  public static Date getDHM_NEW  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW;
  }


  /**  */
  public static void setDHM_NEW  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW = value;
  }


  /**  */
  public static void setDHM_NEW  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW = ( Date ) value;
  }



  /**  */
  public static Date getDUR_NEW  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW;
  }


  /**  */
  public static void setDUR_NEW  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW = value;
  }


  /**  */
  public static void setDUR_NEW  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW = ( Date ) value;
  }



  /**  */
  public static String getDHM_NEW_CHAR  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_CHAR;
  }


  /**  */
  public static void setDHM_NEW_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_CHAR = value;
  }


  /**  */
  public static void setDHM_NEW_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_CHAR = ( String ) value;
  }



  /**  */
  public static String getDUR_NEW_CHAR  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_CHAR;
  }


  /**  */
  public static void setDUR_NEW_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_CHAR = value;
  }


  /**  */
  public static void setDUR_NEW_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_CHAR = ( String ) value;
  }



  /**  */
  public static String getDHM_NEW_FCH_CHAR  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_FCH_CHAR;
  }


  /**  */
  public static void setDHM_NEW_FCH_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_FCH_CHAR = value;
  }


  /**  */
  public static void setDHM_NEW_FCH_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_FCH_CHAR = ( String ) value;
  }



  /**  */
  public static Date getDHM_NEW_MAIS_DUR_NEW  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_MAIS_DUR_NEW;
  }


  /**  */
  public static void setDHM_NEW_MAIS_DUR_NEW  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_MAIS_DUR_NEW = value;
  }


  /**  */
  public static void setDHM_NEW_MAIS_DUR_NEW  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_MAIS_DUR_NEW = ( Date ) value;
  }



  /**  */
  public static Date getNULL_DATE  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).NULL_DATE;
  }


  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).NULL_DATE = value;
  }


  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).NULL_DATE = ( Date ) value;
  }



  /**  */
  public static String getTOTAL_HH_CHAR  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_HH_CHAR;
  }


  /**  */
  public static void setTOTAL_HH_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_HH_CHAR = value;
  }


  /**  */
  public static void setTOTAL_HH_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_HH_CHAR = ( String ) value;
  }



  /**  */
  public static String getTOTAL_MI_CHAR  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_MI_CHAR;
  }


  /**  */
  public static void setTOTAL_MI_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_MI_CHAR = value;
  }


  /**  */
  public static void setTOTAL_MI_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_MI_CHAR = ( String ) value;
  }



  /**  */
  public static Date getFECHA_AUX  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).FECHA_AUX;
  }


  /**  */
  public static void setFECHA_AUX  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).FECHA_AUX = value;
  }


  /**  */
  public static void setFECHA_AUX  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).FECHA_AUX = ( Date ) value;
  }




  /**  */
  public static double getDHM_OLD_HH  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_HH;
  }


  /**  */
  public static Double getDHM_OLD_HHDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_HH );
  }


  /**  */
  public static void setDHM_OLD_HH  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_HH = value;
  }


  /**  */
  public static void setDHM_OLD_HH  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_HH = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDHM_OLD_MI  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_MI;
  }


  /**  */
  public static Double getDHM_OLD_MIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_MI );
  }


  /**  */
  public static void setDHM_OLD_MI  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_MI = value;
  }


  /**  */
  public static void setDHM_OLD_MI  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_OLD_MI = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDUR_OLD_HH  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_HH;
  }


  /**  */
  public static Double getDUR_OLD_HHDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_HH );
  }


  /**  */
  public static void setDUR_OLD_HH  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_HH = value;
  }


  /**  */
  public static void setDUR_OLD_HH  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_HH = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDUR_OLD_MI  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_MI;
  }


  /**  */
  public static Double getDUR_OLD_MIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_MI );
  }


  /**  */
  public static void setDUR_OLD_MI  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_MI = value;
  }


  /**  */
  public static void setDUR_OLD_MI  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_MI = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDHM_NEW_HH  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_HH;
  }


  /**  */
  public static Double getDHM_NEW_HHDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_HH );
  }


  /**  */
  public static void setDHM_NEW_HH  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_HH = value;
  }


  /**  */
  public static void setDHM_NEW_HH  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_HH = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDHM_NEW_MI  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_MI;
  }


  /**  */
  public static Double getDHM_NEW_MIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_MI );
  }


  /**  */
  public static void setDHM_NEW_MI  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_MI = value;
  }


  /**  */
  public static void setDHM_NEW_MI  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DHM_NEW_MI = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDUR_NEW_HH  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_HH;
  }


  /**  */
  public static Double getDUR_NEW_HHDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_HH );
  }


  /**  */
  public static void setDUR_NEW_HH  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_HH = value;
  }


  /**  */
  public static void setDUR_NEW_HH  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_HH = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDUR_NEW_MI  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_MI;
  }


  /**  */
  public static Double getDUR_NEW_MIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_MI );
  }


  /**  */
  public static void setDUR_NEW_MI  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_MI = value;
  }


  /**  */
  public static void setDUR_NEW_MI  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_NEW_MI = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOTAL_MI  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_MI;
  }


  /**  */
  public static Double getTOTAL_MIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_MI );
  }


  /**  */
  public static void setTOTAL_MI  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_MI = value;
  }


  /**  */
  public static void setTOTAL_MI  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_MI = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOTAL_HH  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_HH;
  }


  /**  */
  public static Double getTOTAL_HHDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_HH );
  }


  /**  */
  public static void setTOTAL_HH  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_HH = value;
  }


  /**  */
  public static void setTOTAL_HH  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TOTAL_HH = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRESTO_HH  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).RESTO_HH;
  }


  /**  */
  public static Double getRESTO_HHDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).RESTO_HH );
  }


  /**  */
  public static void setRESTO_HH  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).RESTO_HH = value;
  }


  /**  */
  public static void setRESTO_HH  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).RESTO_HH = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTMP_HH  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TMP_HH;
  }


  /**  */
  public static Double getTMP_HHDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TMP_HH );
  }


  /**  */
  public static void setTMP_HH  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TMP_HH = value;
  }


  /**  */
  public static void setTMP_HH  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TMP_HH = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTMP_MI  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TMP_MI;
  }


  /**  */
  public static Double getTMP_MIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TMP_MI );
  }


  /**  */
  public static void setTMP_MI  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TMP_MI = value;
  }


  /**  */
  public static void setTMP_MI  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).TMP_MI = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDUR_OLD_HH_SALVA  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_HH_SALVA;
  }


  /**  */
  public static Double getDUR_OLD_HH_SALVADouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_HH_SALVA );
  }


  /**  */
  public static void setDUR_OLD_HH_SALVA  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_HH_SALVA = value;
  }


  /**  */
  public static void setDUR_OLD_HH_SALVA  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_HH_SALVA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDUR_OLD_MI_SALVA  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_MI_SALVA;
  }


  /**  */
  public static Double getDUR_OLD_MI_SALVADouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_MI_SALVA );
  }


  /**  */
  public static void setDUR_OLD_MI_SALVA  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_MI_SALVA = value;
  }


  /**  */
  public static void setDUR_OLD_MI_SALVA  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).DUR_OLD_MI_SALVA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNULL_NUMBER  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).NULL_NUMBER;
  }


  /**  */
  public static Double getNULL_NUMBERDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).NULL_NUMBER );
  }


  /**  */
  public static void setNULL_NUMBER  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).NULL_NUMBER = value;
  }


  /**  */
  public static void setNULL_NUMBER  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class ) ).NULL_NUMBER = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   *
   * @param __app
   * @return
   */
  public static CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL get ( RallyApplication __app )
  {
    CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL adl = new CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ( );
    __app.register ( adl, "CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL" );
    __app.setADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class, adl );
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   *
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   *
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL" );
    if ( rObj != null && rObj instanceof CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL )
    {
      this.app.setADL ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL.class, ( CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   *
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep )
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default:
      {
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
	    
    //***** START MODS BY JOR 3/5/2009 *****
    if ( Compare.equals ( this.app.form ( "CALENDARIO_MAIN_FR" ).getStringItem ( "COD_RAZON_COPY" ), "" ) || Compare.equals ( this.app.form ( "CALENDARIO_MAIN_FR" ).getStringItem ( RallyStringService.subString ( "COD_RAZON_COPY", 0, 1 ) ), " " ) )
    {
        this.app.setError ( 1, 4512 );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
    }
    if ( Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getStringItem ( "COD_RAZON" ), "" ) || Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getStringItem ( RallyStringService.subString ( "COD_RAZON", 0, 1 ) ), " " ) )
    {
        this.app.setError ( 1, 4512 );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
    }
    //***** END MODS BY JOR 3/5/2009 *****

    NULL_DATE = TruncService.setNull ( NULL_DATE  );
    NULL_NUMBER = TruncService.setNull ( NULL_NUMBER  );
    this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "RMO_OFICINA", this.app.RMO_GBL  );
    if ( Compare.equals ( this.app.INFORMACION_REQUERIMIENTO_GBL, "P" ) )
    {
      if ( ! Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getStringItem ( "COD_RAZON" ), "DISP" ) )
      {
        FECHA_AUX = MathService.minus ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" ), PLAN_TRAB_PARK_CALEND_LF_ADL.getDIAS_NOTIF ( this.app )  );
        this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "FCH_NOTIF_TECNICO", TruncService.trunc ( FECHA_AUX, "DDD" )   );
      }
      else
      {
        this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "SEGURO_SOCIAL_JEFE_FAM", NULL_NUMBER  );
        this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "SEGURO_SOCIAL_JEFE_SERV", NULL_NUMBER  );
      }
    }
    if ( ( Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getStringItem ( "COD_RAZON" ), "INTK" ) ) || ( Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getStringItem ( "COD_RAZON" ), "MANT" ) ) )
    {
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "SEGURO_SOCIAL_JEFE_FAM", NULL_NUMBER  );
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "SEGURO_SOCIAL_JEFE_SERV", NULL_NUMBER  );
    }
    if ( ! Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DHM_NUEVA" ), NULL_DATE ) )
    {
      this.doReturn ( );
      return;
    }
    DHM_OLD = this.app.form ( "CALENDARIO_MAIN_FR" ).getDateItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" );
    DUR_OLD = this.app.form ( "CALENDARIO_MAIN_FR" ).getDateItem ( "DURACION_HORA_MIN_CONTACTO" );
    DHM_NEW = this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" );
    DUR_NEW = this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DURACION_HORA_MIN_CONTACTO" );
    DHM_OLD_CHAR = StringService.toStringValue  ( DHM_OLD ,"ddMMyyyyHHmm" ,StringService.Language.SPANISH );
    DUR_OLD_CHAR = StringService.toStringValue  ( DUR_OLD ,"HHmm" ,StringService.Language.SPANISH );
    DHM_NEW_CHAR = StringService.toStringValue  ( DHM_NEW ,"ddMMyyyyHHmm" ,StringService.Language.SPANISH );
    DUR_NEW_CHAR = StringService.toStringValue  ( DUR_NEW ,"HHmm" ,StringService.Language.SPANISH );
    DHM_OLD_FCH_CHAR = RallyStringService.subString ( DHM_OLD_CHAR, 0, 8 );
    DHM_NEW_FCH_CHAR = RallyStringService.subString ( DHM_NEW_CHAR, 0, 8 );
    DHM_OLD_HH = FormattingFactory.parseStringToDouble ( RallyStringService.subString ( DHM_OLD_CHAR, 8, 2 ) );
    DHM_OLD_MI = FormattingFactory.parseStringToDouble ( RallyStringService.subString ( DHM_OLD_CHAR, 10, 2 ) );
    DHM_NEW_HH = FormattingFactory.parseStringToDouble ( RallyStringService.subString ( DHM_NEW_CHAR, 8, 2 ) );
    DHM_NEW_MI = FormattingFactory.parseStringToDouble ( RallyStringService.subString ( DHM_NEW_CHAR, 10, 2 ) );
    DUR_OLD_HH = FormattingFactory.parseStringToDouble ( RallyStringService.subString ( DUR_OLD_CHAR, 0, 2 ) );
    DUR_OLD_MI = FormattingFactory.parseStringToDouble ( RallyStringService.subString ( DUR_OLD_CHAR, 2, 2 ) );
    DUR_NEW_HH = FormattingFactory.parseStringToDouble ( RallyStringService.subString ( DUR_NEW_CHAR, 0, 2 ) );
    DUR_NEW_MI = FormattingFactory.parseStringToDouble ( RallyStringService.subString ( DUR_NEW_CHAR, 2, 2 ) );
    if ( ( Compare.lt ( DHM_NEW_HH, 6 ) ) || ( Compare.gt ( DHM_NEW_HH, 20 ) ) )
    {
      this.app.setError ( 0, 4503 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    else if ( ( ! Compare.equals ( DHM_NEW_MI, 0 ) ) && ( ! Compare.equals ( DHM_NEW_MI, 15 ) )  && ( ! Compare.equals ( DHM_NEW_MI, 30 ) )  && ( ! Compare.equals ( DHM_NEW_MI, 45 ) )   )
    {
      this.app.setError ( 1, 4504 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    if ( ( Compare.lt ( DUR_NEW_HH, 0 ) ) || ( Compare.gt ( DUR_NEW_HH, 15 ) ) )
    {
      this.app.setError ( 2, 4505 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    else if ( ( ! Compare.equals ( DUR_NEW_MI, 0 ) ) && ( ! Compare.equals ( DUR_NEW_MI, 15 ) )  && ( ! Compare.equals ( DUR_NEW_MI, 30 ) )  && ( ! Compare.equals ( DUR_NEW_MI, 45 ) )   )
    {
      this.app.setError ( 3, 4504 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    else if ( ( Compare.equals ( DUR_NEW_HH, 0 ) ) && ( Compare.equals ( DUR_NEW_MI, 0 ) )   )
    {
      this.app.setError ( 4, 4506 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    else if ( ( Compare.equals ( DUR_NEW_HH, 15 ) ) && ( ! Compare.equals ( DUR_NEW_MI, 0 ) )   )
    {
      this.app.setError ( 5, 4507 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    TOTAL_MI = MathService.plus ( DHM_OLD_MI, DUR_OLD_MI  );
    if ( Compare.ge ( TOTAL_MI, 60 ) )
    {
      TOTAL_MI = MathService.minus ( TOTAL_MI, 60  );
      RESTO_HH = 1;
    }
    TOTAL_HH = MathService.plus ( MathService.plus ( DHM_OLD_HH, DUR_OLD_HH  ), RESTO_HH  );
    if ( Compare.equals ( TOTAL_MI, 0 ) )
    {
      TOTAL_MI_CHAR = "00";
    }
    else
    {
      TOTAL_MI_CHAR = StringService.toStringValue  ( TOTAL_MI );
    }
    if ( Compare.le ( TOTAL_HH, 9 ) )
    {
      TOTAL_HH_CHAR = "0" + StringService.toStringValue  ( TOTAL_HH );
    }
    else
    {
      TOTAL_HH_CHAR = StringService.toStringValue  ( TOTAL_HH );
    }
    DHM_OLD_MAIS_DUR_OLD = RallySpanishDatesParser.parseDateString ( DHM_OLD_FCH_CHAR + TOTAL_HH_CHAR + TOTAL_MI_CHAR, "DDMMYYYYHH24MI" );
    RESTO_HH = 0;
    TOTAL_MI = 0;
    TOTAL_MI = MathService.plus ( DHM_NEW_MI, DUR_NEW_MI  );
    if ( Compare.ge ( TOTAL_MI, 60 ) )
    {
      TOTAL_MI = MathService.minus ( TOTAL_MI, 60  );
      RESTO_HH = 1;
    }
    TOTAL_HH = MathService.plus ( MathService.plus ( DHM_NEW_HH, DUR_NEW_HH  ), RESTO_HH  );
    if ( Compare.equals ( TOTAL_MI, 0 ) )
    {
      TOTAL_MI_CHAR = "00";
    }
    else
    {
      TOTAL_MI_CHAR = StringService.toStringValue  ( TOTAL_MI );
    }
    if ( Compare.le ( TOTAL_HH, 9 ) )
    {
      TOTAL_HH_CHAR = "0" + StringService.toStringValue  ( TOTAL_HH );
    }
    else
    {
      TOTAL_HH_CHAR = StringService.toStringValue  ( TOTAL_HH );
    }
    DHM_NEW_MAIS_DUR_NEW = RallySpanishDatesParser.parseDateString ( DHM_NEW_FCH_CHAR + TOTAL_HH_CHAR + TOTAL_MI_CHAR, "DDMMYYYYHH24MI" );
    IR_CALEND_SELECT_SAVE_VALUES_ADL.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    this.app.IR_CALEND_SELECT_HASTA_GBL = DHM_NEW_MAIS_DUR_NEW;
    if ( ( Compare.lt ( DHM_NEW, DHM_OLD ) ) || ( Compare.ge ( DHM_NEW, DHM_OLD_MAIS_DUR_OLD ) ) )
    {
      this.app.setError ( 6, 4508 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    else if ( Compare.gt ( DHM_NEW_MAIS_DUR_NEW, DHM_OLD_MAIS_DUR_OLD ) )
    {
      this.app.setError ( 7, 4509 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    else if ( ( Compare.equals ( DHM_NEW, DHM_OLD ) ) && ( Compare.equals ( DUR_NEW, DUR_OLD ) )   )
    {
      this.app.setError ( 8, 4510 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return;
    }
    else if ( ( Compare.gt ( DHM_NEW, DHM_OLD ) ) && ( Compare.equals ( DHM_NEW_MAIS_DUR_NEW, DHM_OLD_MAIS_DUR_OLD ) )   )
    {
      if ( Compare.lt ( DUR_OLD_MI, DUR_NEW_MI ) )
      {
        TOTAL_MI = MathService.minus ( ( MathService.plus ( 60, DUR_OLD_MI  ) ), DUR_NEW_MI  );
        TOTAL_HH = MathService.minus ( ( MathService.minus ( DUR_OLD_HH, 1  ) ), DUR_NEW_HH  );
      }
      else
      {
        TOTAL_MI = MathService.minus ( DUR_OLD_MI, DUR_NEW_MI  );
        TOTAL_HH = MathService.minus ( DUR_OLD_HH, DUR_NEW_HH  );
      }
      if ( Compare.equals ( TOTAL_MI, 0 ) )
      {
        TOTAL_MI_CHAR = "00";
      }
      else
      {
        TOTAL_MI_CHAR = StringService.toStringValue  ( TOTAL_MI );
      }
      if ( Compare.le ( TOTAL_HH, 9 ) )
      {
        TOTAL_HH_CHAR = "0" + StringService.toStringValue  ( TOTAL_HH );
      }
      else
      {
        TOTAL_HH_CHAR = StringService.toStringValue  ( TOTAL_HH );
      }
      
      //***** START MODS BY JOR 3/5/2009 *****
      if ( ( Compare.equals ( TOTAL_HH_CHAR, "00" ) ) && ( Compare.equals ( TOTAL_MI_CHAR, "00" ) )   )
      {
        this.app.setError ( 4, 4506 );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }
      //***** END MODS BY JOR 3/5/2009 *****
      
      DUR_OLD = RallySpanishDatesParser.parseDateString ( TOTAL_HH_CHAR + TOTAL_MI_CHAR, "HH24MI" );
      this.app.form ( "CALENDARIO_MAIN_FR" ).setItem ( "DURACION_HORA_MIN_CONTACTO", DUR_OLD  );
    }
    else if ( ( Compare.equals ( DHM_NEW, DHM_OLD ) ) && ( Compare.lt ( DHM_NEW_MAIS_DUR_NEW, DHM_OLD_MAIS_DUR_OLD ) )   )
    {
      RESTO_HH = 0;
      TOTAL_MI = 0;
      TOTAL_MI = MathService.plus ( DHM_OLD_MI, DUR_NEW_MI  );
      if ( Compare.ge ( TOTAL_MI, 60 ) )
      {
        TOTAL_MI = MathService.minus ( TOTAL_MI, 60  );
        RESTO_HH = 1;
      }
      TOTAL_HH = MathService.plus ( MathService.plus ( DHM_OLD_HH, DUR_NEW_HH  ), RESTO_HH  );
      if ( Compare.equals ( TOTAL_MI, 0 ) )
      {
        TOTAL_MI_CHAR = "00";
      }
      else
      {
        TOTAL_MI_CHAR = StringService.toStringValue  ( TOTAL_MI );
      }
      if ( Compare.le ( TOTAL_HH, 9 ) )
      {
        TOTAL_HH_CHAR = "0" + StringService.toStringValue  ( TOTAL_HH );
      }
      else
      {
        TOTAL_HH_CHAR = StringService.toStringValue  ( TOTAL_HH );
      }
      DHM_OLD = RallySpanishDatesParser.parseDateString ( DHM_OLD_FCH_CHAR + TOTAL_HH_CHAR + TOTAL_MI_CHAR, "DDMMYYYYHH24MI" );
      this.app.form ( "CALENDARIO_MAIN_FR" ).setItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0", DHM_OLD  );

      if ( Compare.lt ( DUR_OLD_MI, DUR_NEW_MI ) )
      {
        TOTAL_MI = MathService.minus ( ( MathService.plus ( 60, DUR_OLD_MI  ) ), DUR_NEW_MI  );
        TOTAL_HH = MathService.minus ( ( MathService.minus ( DUR_OLD_HH, 1  ) ), DUR_NEW_HH  );
      }
      else
      {
        TOTAL_MI = MathService.minus ( DUR_OLD_MI, DUR_NEW_MI  );
        TOTAL_HH = MathService.minus ( DUR_OLD_HH, DUR_NEW_HH  );
      }
      if ( Compare.equals ( TOTAL_MI, 0 ) )
      {
        TOTAL_MI_CHAR = "00";
      }
      else
      {
        TOTAL_MI_CHAR = StringService.toStringValue  ( TOTAL_MI );
      }
      if ( Compare.le ( TOTAL_HH, 9 ) )
      {
        TOTAL_HH_CHAR = "0" + StringService.toStringValue  ( TOTAL_HH );
      }
      else
      {
        TOTAL_HH_CHAR = StringService.toStringValue  ( TOTAL_HH );
      }
      
      //***** START MODS BY JOR 3/5/2009 *****
      if ( ( Compare.equals ( TOTAL_HH_CHAR, "00" ) ) && ( Compare.equals ( TOTAL_MI_CHAR, "00" ) )   )
      {
        this.app.setError ( 4, 4506 );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }
      //***** END MODS BY JOR 3/5/2009 *****
      
      DUR_OLD = RallySpanishDatesParser.parseDateString ( TOTAL_HH_CHAR + TOTAL_MI_CHAR, "HH24MI" );
      this.app.form ( "CALENDARIO_MAIN_FR" ).setItem ( "DURACION_HORA_MIN_CONTACTO", DUR_OLD  );
    }
    else
    {
      DUR_OLD_HH_SALVA = DUR_OLD_HH;
      DUR_OLD_MI_SALVA = DUR_OLD_MI;
      if ( Compare.lt ( DHM_NEW_MI, DHM_OLD_MI ) )
      {
        TOTAL_MI = MathService.minus ( ( MathService.plus ( 60, DHM_NEW_MI  ) ), DHM_OLD_MI  );
        TOTAL_HH = MathService.minus ( ( MathService.minus ( DHM_NEW_HH, 1  ) ), DHM_OLD_HH  );
      }
      else
      {
        TOTAL_MI = MathService.minus ( DHM_NEW_MI, DHM_OLD_MI  );
        TOTAL_HH = MathService.minus ( DHM_NEW_HH, DHM_OLD_HH  );
      }
      DUR_OLD_HH = TOTAL_HH;
      DUR_OLD_MI = TOTAL_MI;
      if ( Compare.equals ( TOTAL_MI, 0 ) )
      {
        TOTAL_MI_CHAR = "00";
      }
      else
      {
        TOTAL_MI_CHAR = StringService.toStringValue  ( TOTAL_MI );
      }
      if ( Compare.le ( TOTAL_HH, 9 ) )
      {
        TOTAL_HH_CHAR = "0" + StringService.toStringValue  ( TOTAL_HH );
      }
      else
      {
        TOTAL_HH_CHAR = StringService.toStringValue  ( TOTAL_HH );
      }
      
      //***** START MODS BY JOR 3/5/2009 *****
      if ( ( Compare.equals ( TOTAL_HH_CHAR, "00" ) ) && ( Compare.equals ( TOTAL_MI_CHAR, "00" ) )   )
      {
        this.app.setError ( 4, 4506 );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }
      //***** END MODS BY JOR 3/5/2009 *****
      
      DUR_OLD = RallySpanishDatesParser.parseDateString ( TOTAL_HH_CHAR + TOTAL_MI_CHAR, "HH24MI" );
      this.app.form ( "CALENDARIO_MAIN_FR" ).setItem ( "DURACION_HORA_MIN_CONTACTO", DUR_OLD  );

      RESTO_HH = 0;
      TOTAL_MI = 0;
      TOTAL_MI = MathService.plus ( DUR_OLD_MI, DUR_NEW_MI  );
      if ( Compare.ge ( TOTAL_MI, 60 ) )
      {
        TOTAL_MI = MathService.minus ( TOTAL_MI, 60  );
        RESTO_HH = 1;
      }
      TOTAL_HH = MathService.plus ( MathService.plus ( DUR_OLD_HH, DUR_NEW_HH  ), RESTO_HH  );
      TMP_HH = TOTAL_HH;
      TMP_MI = TOTAL_MI;
      RESTO_HH = 0;
      TOTAL_MI = MathService.plus ( TOTAL_MI, DHM_OLD_MI  );
      if ( Compare.ge ( TOTAL_MI, 60 ) )
      {
        TOTAL_MI = MathService.minus ( TOTAL_MI, 60  );
        RESTO_HH = 1;
      }
      TOTAL_HH = MathService.plus ( MathService.plus ( TOTAL_HH, DHM_OLD_HH  ), RESTO_HH  );
      if ( Compare.equals ( TOTAL_MI, 0 ) )
      {
        TOTAL_MI_CHAR = "00";
      }
      else
      {
        TOTAL_MI_CHAR = StringService.toStringValue  ( TOTAL_MI );
      }
      if ( Compare.le ( TOTAL_HH, 9 ) )
      {
        TOTAL_HH_CHAR = "0" + StringService.toStringValue  ( TOTAL_HH );
      }
      else
      {
        TOTAL_HH_CHAR = StringService.toStringValue  ( TOTAL_HH );
      }
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "DHM_NUEVA", RallySpanishDatesParser.parseDateString ( DHM_OLD_FCH_CHAR + TOTAL_HH_CHAR + TOTAL_MI_CHAR, "DDMMYYYYHH24MI" )  );
      if ( Compare.lt ( DUR_OLD_MI_SALVA, TMP_MI ) )
      {
        TOTAL_MI = MathService.minus ( ( MathService.plus ( 60, DUR_OLD_MI_SALVA  ) ), TMP_MI  );
        TOTAL_HH = MathService.minus ( ( MathService.minus ( DUR_OLD_HH_SALVA, 1  ) ), TMP_HH  );
      }
      else
      {
        TOTAL_MI = MathService.minus ( DUR_OLD_MI_SALVA, TMP_MI  );
        TOTAL_HH = MathService.minus ( DUR_OLD_HH_SALVA, TMP_HH  );
      }
      if ( Compare.equals ( TOTAL_MI, 0 ) )
      {
        TOTAL_MI_CHAR = "00";
      }
      else
      {
        TOTAL_MI_CHAR = StringService.toStringValue  ( TOTAL_MI );
      }
      if ( Compare.le ( TOTAL_HH, 9 ) )
      {
        TOTAL_HH_CHAR = "0" + StringService.toStringValue  ( TOTAL_HH );
      }
      else
      {
        TOTAL_HH_CHAR = StringService.toStringValue  ( TOTAL_HH );
      }
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "DUR_NUEVA", RallySpanishDatesParser.parseDateString ( TOTAL_HH_CHAR + TOTAL_MI_CHAR, "HH24MI" )  );
    }
    //this.app.form ( "CALENDARIO_MAIN_FR" ).update ();
  }
}



/* ---------------------------------------------------------------------



PROCEDURE CALENDARIO_LOCAL_FUNCTION_BEFORE_INSERT_ADL;
VAR
        DHM_OLD                 :       DATE;
        DUR_OLD                 :       DATE;
        DHM_OLD_CHAR            :       CHAR(12);
        DUR_OLD_CHAR            :       CHAR(4);
        DHM_OLD_FCH_CHAR        :       CHAR(8);
        DHM_OLD_MAIS_DUR_OLD    :       DATE;

        DHM_NEW                 :       DATE;
        DUR_NEW                 :       DATE;
        DHM_NEW_CHAR            :       CHAR(12);
        DUR_NEW_CHAR            :       CHAR(4);
        DHM_NEW_FCH_CHAR        :       CHAR(8);
        DHM_NEW_MAIS_DUR_NEW    :       DATE;

        DHM_OLD_HH              :       NUMBER;
        DHM_OLD_MI              :       NUMBER;
        DUR_OLD_HH              :       NUMBER;
        DUR_OLD_MI              :       NUMBER;

        DHM_NEW_HH              :       NUMBER;
        DHM_NEW_MI              :       NUMBER;
        DUR_NEW_HH              :       NUMBER;
        DUR_NEW_MI              :       NUMBER;

        TOTAL_MI                :       NUMBER;
        TOTAL_HH                :       NUMBER;
        RESTO_HH                :       NUMBER;

        TMP_HH                  :       NUMBER;
        TMP_MI                  :       NUMBER;
        DUR_OLD_HH_SALVA        :       NUMBER;
        DUR_OLD_MI_SALVA        :       NUMBER;
        NULL_DATE               :       DATE;
        TOTAL_HH_CHAR           :       CHAR(2);
        TOTAL_MI_CHAR           :       CHAR(2);
        FECHA_AUX               :       DATE;
        NULL_NUMBER             :       NUMBER;

BEGIN
SET_TRACE();
MAKE_NULL(NULL_DATE);
MAKE_NULL(NULL_NUMBER);
CALENDARIO_LOCAL_FUNCTION_FR.RMO_OFICINA:=RMO_GBL;

IF (INFORMACION_REQUERIMIENTO_GBL = 'P') THEN
BEGIN
  IF (CALENDARIO_LOCAL_FUNCTION_FR.COD_RAZON <> 'DISP') THEN
  BEGIN
        FECHA_AUX :=
        CALENDARIO_LOCAL_FUNCTION_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0 -
        PLAN_TRAB_PARK_CALEND_LF_ADL.DIAS_NOTIF;

        CALENDARIO_LOCAL_FUNCTION_FR.FCH_NOTIF_TECNICO :=
                TRUNC (FECHA_AUX, 'DDD');
  END;
  ELSE
  BEGIN
        CALENDARIO_LOCAL_FUNCTION_FR.SEGURO_SOCIAL_JEFE_FAM := NULL_NUMBER;
        CALENDARIO_LOCAL_FUNCTION_FR.SEGURO_SOCIAL_JEFE_SERV := NULL_NUMBER;
  END;
END;
IF (CALENDARIO_LOCAL_FUNCTION_FR.COD_RAZON = 'INTK') OR
    (CALENDARIO_LOCAL_FUNCTION_FR.COD_RAZON = 'MANT')
      THEN BEGIN
        CALENDARIO_LOCAL_FUNCTION_FR.SEGURO_SOCIAL_JEFE_FAM := NULL_NUMBER;
        CALENDARIO_LOCAL_FUNCTION_FR.SEGURO_SOCIAL_JEFE_SERV := NULL_NUMBER;
           END;

IF CALENDARIO_LOCAL_FUNCTION_FR.DHM_NUEVA <> NULL_DATE THEN RETURN;

DHM_OLD:=CALENDARIO_MAIN_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0;
DUR_OLD:=CALENDARIO_MAIN_FR.DURACION_HORA_MIN_CONTACTO;
DHM_NEW:=CALENDARIO_LOCAL_FUNCTION_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0;
DUR_NEW:=CALENDARIO_LOCAL_FUNCTION_FR.DURACION_HORA_MIN_CONTACTO;

DHM_OLD_CHAR:=TO_CHAR(DHM_OLD,'DDMMYYYYHH24MI');
DUR_OLD_CHAR:=TO_CHAR(DUR_OLD,'HH24MI');
DHM_NEW_CHAR:=TO_CHAR(DHM_NEW,'DDMMYYYYHH24MI');
DUR_NEW_CHAR:=TO_CHAR(DUR_NEW,'HH24MI');

DEBUG_LOG('DHM_OLD_CHAR='||DHM_OLD_CHAR);
DEBUG_LOG('DUR_OLD_CHAR='||DUR_OLD_CHAR);
DEBUG_LOG('DHM_NEW_CHAR='||DHM_NEW_CHAR);
DEBUG_LOG('DUR_NEW_CHAR='||DUR_NEW_CHAR);

DHM_OLD_FCH_CHAR:=SUBSTR(DHM_OLD_CHAR,0,8);
DHM_NEW_FCH_CHAR:=SUBSTR(DHM_NEW_CHAR,0,8);

DHM_OLD_HH:=TO_NUMBER(SUBSTR(DHM_OLD_CHAR,8,2));
DHM_OLD_MI:=TO_NUMBER(SUBSTR(DHM_OLD_CHAR,10,2));
DHM_NEW_HH:=TO_NUMBER(SUBSTR(DHM_NEW_CHAR,8,2));
DHM_NEW_MI:=TO_NUMBER(SUBSTR(DHM_NEW_CHAR,10,2));

DUR_OLD_HH:=TO_NUMBER(SUBSTR(DUR_OLD_CHAR,0,2));
DUR_OLD_MI:=TO_NUMBER(SUBSTR(DUR_OLD_CHAR,2,2));
DUR_NEW_HH:=TO_NUMBER(SUBSTR(DUR_NEW_CHAR,0,2));
DUR_NEW_MI:=TO_NUMBER(SUBSTR(DUR_NEW_CHAR,2,2));

{VALIDATION OF HH AND MI OF DHM_NEW}

IF (DHM_NEW_HH < 6) OR (DHM_NEW_HH > 20)
THEN BEGIN
        ERROR(4503);            {[6,20]}
        SET_FAILURE();
        RETURN;
     END;
ELSE IF (DHM_NEW_MI <> 0)  AND (DHM_NEW_MI <> 15) AND
        (DHM_NEW_MI <> 30) AND (DHM_NEW_MI <> 45)
     THEN BEGIN
                ERROR(4504);    {(00,15,30,45)}
                SET_FAILURE();
                RETURN;
          END;

{VALIDATION OF HH AND MI OF DUR_NEW}

IF (DUR_NEW_HH < 0) OR (DUR_NEW_HH > 15)
THEN BEGIN
        ERROR(4505);            {[00:15,15:00]}
        SET_FAILURE();
        RETURN;
     END;
ELSE IF (DUR_NEW_MI <> 0)  AND (DUR_NEW_MI <> 15) AND
        (DUR_NEW_MI <> 30) AND (DUR_NEW_MI <> 45)
     THEN BEGIN
                ERROR(4504);    {(00,15,30,45)}
                SET_FAILURE();
                RETURN;
          END;
     ELSE IF (DUR_NEW_HH = 0) AND (DUR_NEW_MI = 0)
          THEN  BEGIN
                ERROR(4506);    {00:00}
                SET_FAILURE();
                RETURN;
                END;
          ELSE IF (DUR_NEW_HH = 15) AND (DUR_NEW_MI <> 0)
          THEN  BEGIN
                ERROR(4507);    {15:..}
                SET_FAILURE();
                RETURN;
                END;


{GENERAR DHM_OLD_MAIS_DUR_OLD}

TOTAL_MI:=DHM_OLD_MI + DUR_OLD_MI;
IF TOTAL_MI >= 60
THEN BEGIN
        TOTAL_MI:=TOTAL_MI - 60;
        RESTO_HH:=1;
     END;

TOTAL_HH:=DHM_OLD_HH + DUR_OLD_HH + RESTO_HH;

IF TOTAL_MI = 0
THEN TOTAL_MI_CHAR:='00';
ELSE TOTAL_MI_CHAR:=TO_CHAR(TOTAL_MI);

IF TOTAL_HH <= 9
THEN TOTAL_HH_CHAR:='0'||TO_CHAR(TOTAL_HH);
ELSE TOTAL_HH_CHAR:=TO_CHAR(TOTAL_HH);

DHM_OLD_MAIS_DUR_OLD:= TO_DATE(DHM_OLD_FCH_CHAR||
                               TOTAL_HH_CHAR||
                               TOTAL_MI_CHAR,'DDMMYYYYHH24MI');


{GENERAR DHM_NEW_MAIS_DUR_NEW}

RESTO_HH:=0;
TOTAL_MI:=0;

TOTAL_MI:=DHM_NEW_MI + DUR_NEW_MI;
IF TOTAL_MI >= 60
THEN BEGIN
        TOTAL_MI:=TOTAL_MI - 60;
        RESTO_HH:=1;
     END;

TOTAL_HH:=DHM_NEW_HH + DUR_NEW_HH + RESTO_HH;

IF TOTAL_MI = 0
THEN TOTAL_MI_CHAR:='00';
ELSE TOTAL_MI_CHAR:=TO_CHAR(TOTAL_MI);

IF TOTAL_HH <= 9
THEN TOTAL_HH_CHAR:='0'||TO_CHAR(TOTAL_HH);
ELSE TOTAL_HH_CHAR:=TO_CHAR(TOTAL_HH);

DHM_NEW_MAIS_DUR_NEW:= TO_DATE(DHM_NEW_FCH_CHAR||
                               TOTAL_HH_CHAR||
                               TOTAL_MI_CHAR,'DDMMYYYYHH24MI');

{ SAVE SOME VALUES TO PRODUCE I/R REPORT LATER}
CALL IR_CALEND_SELECT_SAVE_VALUES_ADL;
IR_CALEND_SELECT_HASTA_GBL:=DHM_NEW_MAIS_DUR_NEW;

{VALIDATION OF THE RANGES}

IF (DHM_NEW < DHM_OLD) OR (DHM_NEW >= DHM_OLD_MAIS_DUR_OLD)
THEN BEGIN
     ERROR(4508);
     SET_FAILURE();
     RETURN;
     END;
ELSE IF (DHM_NEW_MAIS_DUR_NEW > DHM_OLD_MAIS_DUR_OLD)
     THEN BEGIN
          ERROR(4509);
          SET_FAILURE();
          RETURN;
          END;
     ELSE IF (DHM_NEW = DHM_OLD) AND (DUR_NEW = DUR_OLD)
          THEN BEGIN
                  ERROR(4510);
                  SET_FAILURE();
                  RETURN;
               END;
          ELSE IF (DHM_NEW > DHM_OLD) AND
                  (DHM_NEW_MAIS_DUR_NEW = DHM_OLD_MAIS_DUR_OLD)
                THEN BEGIN
                     IF DUR_OLD_MI < DUR_NEW_MI
                     THEN BEGIN
                          TOTAL_MI:= (60 + DUR_OLD_MI) - DUR_NEW_MI;
                          TOTAL_HH:= (DUR_OLD_HH - 1)  - DUR_NEW_HH;
                          END;
                     ELSE BEGIN
                          TOTAL_MI:= DUR_OLD_MI - DUR_NEW_MI;
                          TOTAL_HH:= DUR_OLD_HH - DUR_NEW_HH;
                          END;

                     IF TOTAL_MI = 0
                     THEN TOTAL_MI_CHAR:='00';
                     ELSE TOTAL_MI_CHAR:=TO_CHAR(TOTAL_MI);

                     IF TOTAL_HH <= 9
                     THEN TOTAL_HH_CHAR:='0'||TO_CHAR(TOTAL_HH);
                     ELSE TOTAL_HH_CHAR:=TO_CHAR(TOTAL_HH);

                     DUR_OLD := TO_DATE(TOTAL_HH_CHAR||
                                        TOTAL_MI_CHAR,'HH24MI');

                     CALENDARIO_MAIN_FR.DURACION_HORA_MIN_CONTACTO:=DUR_OLD;

                     END;
                ELSE IF (DHM_NEW = DHM_OLD) AND
                        (DHM_NEW_MAIS_DUR_NEW < DHM_OLD_MAIS_DUR_OLD)
                     THEN BEGIN
                          {GENERAR DHM_OLD_MAIS_DUR_NEW}

                          RESTO_HH:=0;
                          TOTAL_MI:=0;

                          TOTAL_MI:=DHM_OLD_MI + DUR_NEW_MI;
                          IF TOTAL_MI >= 60
                          THEN BEGIN
                                TOTAL_MI:=TOTAL_MI - 60;
                                RESTO_HH:=1;
                               END;

                          TOTAL_HH:=DHM_OLD_HH + DUR_NEW_HH + RESTO_HH;

                          IF TOTAL_MI = 0
                          THEN TOTAL_MI_CHAR:='00';
                          ELSE TOTAL_MI_CHAR:=TO_CHAR(TOTAL_MI);

                          IF TOTAL_HH <= 9
                          THEN TOTAL_HH_CHAR:='0'||TO_CHAR(TOTAL_HH);
                          ELSE TOTAL_HH_CHAR:=TO_CHAR(TOTAL_HH);

                          DHM_OLD:= TO_DATE(DHM_OLD_FCH_CHAR||
                                            TOTAL_HH_CHAR||
                                            TOTAL_MI_CHAR,'DDMMYYYYHH24MI');

                          CALENDARIO_MAIN_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0:=
                          DHM_OLD;

                          {DUR_OLD - DUR_NEW}

                          IF DUR_OLD_MI < DUR_NEW_MI
                          THEN BEGIN
                                  TOTAL_MI:= (60 + DUR_OLD_MI) - DUR_NEW_MI;
                                  TOTAL_HH:= (DUR_OLD_HH - 1)  - DUR_NEW_HH;
                               END;
                          ELSE BEGIN
                                  TOTAL_MI:= DUR_OLD_MI - DUR_NEW_MI;
                                  TOTAL_HH:= DUR_OLD_HH - DUR_NEW_HH;
                               END;

                          IF TOTAL_MI = 0
                          THEN TOTAL_MI_CHAR:='00';
                          ELSE TOTAL_MI_CHAR:=TO_CHAR(TOTAL_MI);

                          IF TOTAL_HH <= 9
                          THEN TOTAL_HH_CHAR:='0'||TO_CHAR(TOTAL_HH);
                          ELSE TOTAL_HH_CHAR:=TO_CHAR(TOTAL_HH);

                          DUR_OLD := TO_DATE(TOTAL_HH_CHAR||
                                             TOTAL_MI_CHAR,'HH24MI');

                          CALENDARIO_MAIN_FR.DURACION_HORA_MIN_CONTACTO:=
                          DUR_OLD;
                          END;

                     ELSE BEGIN
                          {DHM_NEW - DHM_OLD}

                          DUR_OLD_HH_SALVA:=DUR_OLD_HH;
                          DUR_OLD_MI_SALVA:=DUR_OLD_MI;

                          IF DHM_NEW_MI < DHM_OLD_MI
                          THEN BEGIN
                                  TOTAL_MI:= (60 + DHM_NEW_MI) - DHM_OLD_MI;
                                  TOTAL_HH:= (DHM_NEW_HH - 1)  - DHM_OLD_HH;
                               END;
                          ELSE BEGIN
                                  TOTAL_MI:= DHM_NEW_MI - DHM_OLD_MI;
                                  TOTAL_HH:= DHM_NEW_HH - DHM_OLD_HH;
                               END;

                          DUR_OLD_HH:=TOTAL_HH;
                          DUR_OLD_MI:=TOTAL_MI;

                          IF TOTAL_MI = 0
                          THEN TOTAL_MI_CHAR:='00';
                          ELSE TOTAL_MI_CHAR:=TO_CHAR(TOTAL_MI);

                          IF TOTAL_HH <= 9
                          THEN TOTAL_HH_CHAR:='0'||TO_CHAR(TOTAL_HH);
                          ELSE TOTAL_HH_CHAR:=TO_CHAR(TOTAL_HH);

                          DUR_OLD := TO_DATE(TOTAL_HH_CHAR||
                                             TOTAL_MI_CHAR,'HH24MI');

                          CALENDARIO_MAIN_FR.DURACION_HORA_MIN_CONTACTO:=
                          DUR_OLD;

                          {GENERAR "NEW"_DUR_OLD_MAIS_DUR_NEW}

                          RESTO_HH:=0;
                          TOTAL_MI:=0;

                          TOTAL_MI:=DUR_OLD_MI + DUR_NEW_MI;
                          IF TOTAL_MI >= 60
                          THEN BEGIN
                                TOTAL_MI:=TOTAL_MI - 60;
                                RESTO_HH:=1;
                               END;

                          TOTAL_HH:=DUR_OLD_HH + DUR_NEW_HH + RESTO_HH;

                          TMP_HH:=TOTAL_HH;
                          TMP_MI:=TOTAL_MI;

                          {GENERAR RESULTADO_MAIS_DHM_OLD}

                          RESTO_HH:=0;

                          TOTAL_MI:=TOTAL_MI + DHM_OLD_MI;
                          IF TOTAL_MI >= 60
                          THEN BEGIN
                                TOTAL_MI:=TOTAL_MI - 60;
                                RESTO_HH:=1;
                               END;

                          TOTAL_HH:=TOTAL_HH + DHM_OLD_HH + RESTO_HH;

                          IF TOTAL_MI = 0
                          THEN TOTAL_MI_CHAR:='00';
                          ELSE TOTAL_MI_CHAR:=TO_CHAR(TOTAL_MI);

                          IF TOTAL_HH <= 9
                          THEN TOTAL_HH_CHAR:='0'||TO_CHAR(TOTAL_HH);
                          ELSE TOTAL_HH_CHAR:=TO_CHAR(TOTAL_HH);

                          CALENDARIO_LOCAL_FUNCTION_FR.DHM_NUEVA:=
                          TO_DATE(DHM_OLD_FCH_CHAR||
                          TOTAL_HH_CHAR||
                          TOTAL_MI_CHAR,'DDMMYYYYHH24MI');

                          {GENERAR DUR_NOVA}

                          {DUR_SALVA - TMP's}

                          IF DUR_OLD_MI_SALVA < TMP_MI
                          THEN BEGIN
                                TOTAL_MI:= (60 + DUR_OLD_MI_SALVA) - TMP_MI;
                                TOTAL_HH:= (DUR_OLD_HH_SALVA - 1)  - TMP_HH;
                               END;
                          ELSE BEGIN
                                  TOTAL_MI:= DUR_OLD_MI_SALVA - TMP_MI;
                                  TOTAL_HH:= DUR_OLD_HH_SALVA - TMP_HH;
                               END;

                          IF TOTAL_MI = 0
                          THEN TOTAL_MI_CHAR:='00';
                          ELSE TOTAL_MI_CHAR:=TO_CHAR(TOTAL_MI);

                          IF TOTAL_HH <= 9
                          THEN TOTAL_HH_CHAR:='0'||TO_CHAR(TOTAL_HH);
                          ELSE TOTAL_HH_CHAR:=TO_CHAR(TOTAL_HH);

                          CALENDARIO_LOCAL_FUNCTION_FR.DUR_NUEVA:=
                          TO_DATE(TOTAL_HH_CHAR||TOTAL_MI_CHAR,'HH24MI');

                  END;
SET_NOTRACE();
END;




--------------------------------------------------------------------- */
