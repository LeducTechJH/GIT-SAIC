package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class TECNICO_NOMBRE_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double TECNICO_ID_IN = 0;

  public double TECNICO_TABLE = 0;

  public double TECNICO_STATUS = 0;



  public String NOMBRE = null;

  public DataStore TECNICO_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setTECNICO_ID_IN  ( RallyApplication __app, Parameter value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_ID_IN = value.getDouble ( );
  }  

  
  /**  */
  public static void setNOMBRE  ( RallyApplication __app, Parameter value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).NOMBRE = value.getString ( );
  }  

  
  /**  */
  public static void setTECNICO_TABLE  ( RallyApplication __app, Parameter value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_TABLE = value.getDouble ( );
  }  

  
  /**  */
  public static void setTECNICO_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_STATUS = value.getDouble ( );
  }  
    


  /**  */
  public static String getNOMBRE  ( RallyApplication __app )
  {
    return ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).NOMBRE;
  }


  /**  */
  public static void setNOMBRE  ( RallyApplication __app, String value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).NOMBRE = value;
  }


  /**  */
  public static void setNOMBRE  ( RallyApplication __app, Object value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).NOMBRE = ( String ) value;
  }



  /**  */
  public static DataStore getTECNICO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_RO_DSD;
  }


  /**  */
  public static void setTECNICO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_RO_DSD = value;
  }


  /**  */
  public static void setTECNICO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getTECNICO_ID_IN  ( RallyApplication __app )
  {
    return ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_ID_IN;
  }


  /**  */
  public static Double getTECNICO_ID_INDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_ID_IN );
  }


  /**  */
  public static void setTECNICO_ID_IN  ( RallyApplication __app, double value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_ID_IN = value;
  }


  /**  */
  public static void setTECNICO_ID_IN  ( RallyApplication __app, Object value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_ID_IN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTECNICO_TABLE  ( RallyApplication __app )
  {
    return ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_TABLE;
  }


  /**  */
  public static Double getTECNICO_TABLEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_TABLE );
  }


  /**  */
  public static void setTECNICO_TABLE  ( RallyApplication __app, double value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_TABLE = value;
  }


  /**  */
  public static void setTECNICO_TABLE  ( RallyApplication __app, Object value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_TABLE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTECNICO_STATUS  ( RallyApplication __app )
  {
    return ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_STATUS;
  }


  /**  */
  public static Double getTECNICO_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_STATUS );
  }


  /**  */
  public static void setTECNICO_STATUS  ( RallyApplication __app, double value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_STATUS = value;
  }


  /**  */
  public static void setTECNICO_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( TECNICO_NOMBRE_ADL ) __app.getADL ( TECNICO_NOMBRE_ADL.class ) ).TECNICO_STATUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static TECNICO_NOMBRE_ADL get ( RallyApplication __app )
  {
    TECNICO_NOMBRE_ADL adl = new TECNICO_NOMBRE_ADL ( );
    __app.register ( adl, "TECNICO_NOMBRE_ADL" );
    __app.setADL ( TECNICO_NOMBRE_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    TECNICO_NOMBRE_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    TECNICO_NOMBRE_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }


  /**
   * Populating the parameter set object with return values
   */
  protected void returnParms ( ParameterSet ps, double TECNICO_ID_IN, String NOMBRE )
  {
    ps.reset ( );
    ps.set ( TECNICO_ID_IN );
    ps.set ( NOMBRE );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "TECNICO_NOMBRE_ADL" );
    if ( rObj != null && rObj instanceof TECNICO_NOMBRE_ADL )
    {
      this.app.setADL ( TECNICO_NOMBRE_ADL.class, ( TECNICO_NOMBRE_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "TECNICO_NOMBRE_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "TECNICO_NOMBRE_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    ps.reset ( );
    TECNICO_ID_IN = ps.getDouble( );
    NOMBRE = ps.getString( );

    TECNICO_RO_DSD = this.dm.create ( "TECNICO_RO_DSD" );
    TECNICO_TABLE = TECNICO_RO_DSD.getId ( );
    TECNICO_STATUS = RallyDataStoreException.getDefault ( );

    TECNICO_STATUS  = this.dm.reset ( TECNICO_TABLE );

    this.dm.setField ( this.dm.get ( "TECNICO_RO_DSD" ), "ID_TECNICO", TECNICO_ID_IN );

    TECNICO_STATUS  = this.dm.limitQueryFromBuffer ( TECNICO_TABLE );
    TECNICO_STATUS  = this.dm.retrieve ( TECNICO_TABLE );

    TECNICO_STATUS  = this.dm.firstRow ( TECNICO_TABLE );

    if ( Compare.equals ( TECNICO_STATUS, 0 ) ) 
    {
      NOMBRE = this.dm.getFieldString ( this.dm.get ( "TECNICO_RO_DSD" ), "DSC_NOMBRE" ) + " " + this.dm.getFieldString ( this.dm.get ( "TECNICO_RO_DSD" ), "DSC_INICIAL" ) + " " + this.dm.getFieldString ( this.dm.get ( "TECNICO_RO_DSD" ), "DSC_APELLIDO_PATERNO" ) + " " + this.dm.getFieldString ( this.dm.get ( "TECNICO_RO_DSD" ), "DSC_APELLIDO_MATERNO" );
      app.setNOMB_TECN_GBL(NOMBRE);
    }
    else
    {
      NOMBRE = "********" + StringService.toStringValue  ( TECNICO_ID_IN ) + "***";
    }
    TECNICO_STATUS  = this.dm.dbClose ( TECNICO_TABLE );

    this.returnParms ( ps, TECNICO_ID_IN, NOMBRE );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE TECNICO_NOMBRE_ADL(   var TECNICO_ID_in: number;
                                var nombre: char(45););

var     TECNICO_TABLE  :        number(9,0);
        TECNICO_status :        number(9,0);

begin
        db_open(TECNICO_RO_dsd,TECNICO_table,TECNICO_status);
        db_reset(TECNICO_table,TECNICO_status);
        TECNICO_RO_dsd.ID_TECNICO := TECNICO_ID_in;
        db_query(TECNICO_table,TECNICO_status);
        db_get_first(TECNICO_table,TECNICO_status);
        if TECNICO_status=0
        then    
                begin
                        nombre:=TECNICO_RO_dsd.dsc_nombre || ' ' ||
                                TECNICO_RO_dsd.dsc_inicial || ' ' ||
                                TECNICO_RO_dsd.dsc_apellido_paterno || ' ' ||
                                TECNICO_RO_dsd.dsc_apellido_materno;
                end;
        else
                nombre:='********' || to_char(tecnico_id_in) || '***';
        {end-if}
        db_close(TECNICO_table,TECNICO_status);
end;
    



--------------------------------------------------------------------- */
