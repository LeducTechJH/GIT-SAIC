package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class BFR_DSS171_RPT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RID = 0;

  public double RCD = 0;

  public double ID = 0;

  public double CD = 0;

  public double NULL = 0;



  public String FECHA_DESDE_HASTA = null;

  public DataStore RETRO_RPT_RO_DSD = null;

  public DataStore RETRO_RPT_DSD = null;

  public DataStore RAZON_RETRO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRID  ( RallyApplication __app, Parameter value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRCD  ( RallyApplication __app, Parameter value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RCD = value.getDouble ( );
  }  

  
  /**  */
  public static void setID  ( RallyApplication __app, Parameter value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCD  ( RallyApplication __app, Parameter value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).CD = value.getDouble ( );
  }  

  
  /**  */
  public static void setNULL  ( RallyApplication __app, Parameter value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).NULL = value.getDouble ( );
  }  

  
  /**  */
  public static void setFECHA_DESDE_HASTA  ( RallyApplication __app, Parameter value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).FECHA_DESDE_HASTA = value.getString ( );
  }  
    


  /**  */
  public static String getFECHA_DESDE_HASTA  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).FECHA_DESDE_HASTA;
  }


  /**  */
  public static void setFECHA_DESDE_HASTA  ( RallyApplication __app, String value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).FECHA_DESDE_HASTA = value;
  }


  /**  */
  public static void setFECHA_DESDE_HASTA  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).FECHA_DESDE_HASTA = ( String ) value;
  }



  /**  */
  public static DataStore getRETRO_RPT_RO_DSD  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RETRO_RPT_RO_DSD;
  }


  /**  */
  public static void setRETRO_RPT_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RETRO_RPT_RO_DSD = value;
  }


  /**  */
  public static void setRETRO_RPT_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RETRO_RPT_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRETRO_RPT_DSD  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RETRO_RPT_DSD;
  }


  /**  */
  public static void setRETRO_RPT_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RETRO_RPT_DSD = value;
  }


  /**  */
  public static void setRETRO_RPT_DSD  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RETRO_RPT_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRAZON_RETRO_DSD  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RAZON_RETRO_DSD;
  }


  /**  */
  public static void setRAZON_RETRO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RAZON_RETRO_DSD = value;
  }


  /**  */
  public static void setRAZON_RETRO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RAZON_RETRO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRID  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RID;
  }


  /**  */
  public static Double getRIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RID );
  }


  /**  */
  public static void setRID  ( RallyApplication __app, double value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RID = value;
  }


  /**  */
  public static void setRID  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRCD  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RCD;
  }


  /**  */
  public static Double getRCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RCD );
  }


  /**  */
  public static void setRCD  ( RallyApplication __app, double value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RCD = value;
  }


  /**  */
  public static void setRCD  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).RCD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getID  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).ID;
  }


  /**  */
  public static Double getIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).ID );
  }


  /**  */
  public static void setID  ( RallyApplication __app, double value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).ID = value;
  }


  /**  */
  public static void setID  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCD  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).CD;
  }


  /**  */
  public static Double getCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).CD );
  }


  /**  */
  public static void setCD  ( RallyApplication __app, double value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).CD = value;
  }


  /**  */
  public static void setCD  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).CD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNULL  ( RallyApplication __app )
  {
    return ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).NULL;
  }


  /**  */
  public static Double getNULLDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).NULL );
  }


  /**  */
  public static void setNULL  ( RallyApplication __app, double value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).NULL = value;
  }


  /**  */
  public static void setNULL  ( RallyApplication __app, Object value )
  {
    ( ( BFR_DSS171_RPT_ADL ) __app.getADL ( BFR_DSS171_RPT_ADL.class ) ).NULL = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static BFR_DSS171_RPT_ADL get ( RallyApplication __app )
  {
    BFR_DSS171_RPT_ADL adl = new BFR_DSS171_RPT_ADL ( );
    __app.register ( adl, "BFR_DSS171_RPT_ADL" );
    __app.setADL ( BFR_DSS171_RPT_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    BFR_DSS171_RPT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    BFR_DSS171_RPT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "BFR_DSS171_RPT_ADL" );
    if ( rObj != null && rObj instanceof BFR_DSS171_RPT_ADL )
    {
      this.app.setADL ( BFR_DSS171_RPT_ADL.class, ( BFR_DSS171_RPT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "BFR_DSS171_RPT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "BFR_DSS171_RPT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NULL = TruncService.setNull ( NULL  );
    RETRO_RPT_RO_DSD = this.dm.create ( "RETRO_RPT_RO_DSD" );
    RID = RETRO_RPT_RO_DSD.getId ( );
    RCD = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( RCD, 0 ) ) 
    {
      this.app.setError ( 0, RCD );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }

    RCD  = this.dm.reset ( RID );

    if ( ! Compare.equals ( RCD, 0 ) ) 
    {
      this.app.setError ( 1, RCD );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "DSS171_MENU_FR" ).getDoubleItem ( "DSS171_SSJF" ));
    this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "DSS171_MENU_FR" ).getDoubleItem ( "DSS171_SSES" ));
    this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "COD_SERVICIO", this.app.form ( "DSS171_MENU_FR" ).getStringItem ( "DSS171_CS" ));
    this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "ACCION", this.app.form ( "DSS171_MENU_FR" ).getStringItem ( "DSS171_ACCI" ));
    this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "FECHA_IDENTIFICADO", this.app.form ( "DSS171_MENU_FR" ).getDateItem ( "DSS171_FCHI" ));
    this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RCD  = this.dm.limitQueryFromBuffer ( RID );
    RCD  = this.dm.retrieve ( RID );

    if ( ! Compare.equals ( RCD, 0 ) ) 
    {
      this.app.setError ( 2, RCD );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }

    RCD  = this.dm.firstRow ( RID );

    if ( ! Compare.equals ( RCD, 0 ) ) 
    {
      this.app.setError ( 3, RCD );
      this.doReturn ( );
      return; 
    }
    FECHA_DESDE_HASTA = StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "DESDE" ) ,"MMM-yyyy" ,StringService.Language.SPANISH ) + " - " + StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "HASTA" ) ,"MMM-yyyy" ,StringService.Language.SPANISH );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "OFICINA_LOCAL", this.app.OFICINA_GBL  );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "PROGRAMA", this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "COD_SERVICIO" )  );
    if ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_DSD" ), "REFERIDO_POR_TSS" ), NULL ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.callParms.clear ( );
      this.callParms.set ( this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "REFERIDO_POR_TSS" )  );
      this.callParms.set ( this.app.form ( "DSS171_RPT_FR" ).getStringItem ( "NOMBRE_TECNICO_REFERIDO_POR" ) );
      BUSCAR_NOMBRE_TECNICO_ADL.exec ( this.app, this.callParms );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_DSD" ), "REFERIDO_POR_TSS" ), NULL ) ) 
    {
      this.callParms.reset ( );
      this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "REFERIDO_POR_TSS", this.callParms.getDouble ( ) );
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "NOMBRE_TECNICO_REFERIDO_POR", this.callParms.getString ( ) );

    }
    if ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "REFERIDO_TSS" ), NULL ) ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      this.callParms.clear ( );
      this.callParms.set ( this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "REFERIDO_TSS" )  );
      this.callParms.set ( this.app.form ( "DSS171_RPT_FR" ).getStringItem ( "TECNICO_RECLAMACIONES" ) );
      BUSCAR_NOMBRE_TECNICO_ADL.exec ( this.app, this.callParms );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "REFERIDO_TSS" ), NULL ) ) 
    {
      this.callParms.reset ( );
      this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "REFERIDO_TSS", this.callParms.getDouble ( ) );
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "TECNICO_RECLAMACIONES", this.callParms.getString ( ) );

    }

    this.callParms.clear ( );
    this.callParms.set ( this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" )  );
    this.callParms.set ( this.app.form ( "DSS171_RPT_FR" ).getStringItem ( "NOMBRE_JEFE_FAMILIA" ) );
    BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.dm.setField ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.callParms.getDouble ( ) );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "NOMBRE_JEFE_FAMILIA", this.callParms.getString ( ) );

    this.app.form ( "DSS171_RPT_FR" ).setItem ( "FECHA_IDENTIFICADO", this.dm.getFieldDate ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "FECHA_IDENTIFICADO" )  );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "NUMERO_CASO", this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM" )  );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "NUMERO_JEFE_SERVICIO", this.dm.getFieldDouble ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" )  );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "MARCA_RECLAMACION", ""  );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "DESDE_HASTA_RECLAMACION", ""  );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "MARCA_RETROACTIVO", "X"  );
    if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "RAZON_RETRO" ), "DEMO" ) ) 
    {
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "MARCA_RAZON_RETRO_1", "X"  );
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "DESDE_HASTA_RAZON_RETRO_1", FECHA_DESDE_HASTA  );
    }
    else if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "RAZON_RETRO" ), "REDU" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "NOPROCRE" ) )   )
    {
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "MARCA_RAZON_RETRO_2", "X"  );
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "DESDE_HASTA_RAZON_RETRO_2", FECHA_DESDE_HASTA  );
    }
    else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "RAZON_RETRO" ), "PAEX" )  )
    {
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "MARCA_RAZON_RETRO_3", "X"  );
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "DESDE_HASTA_RAZON_RETRO_3", FECHA_DESDE_HASTA  );
    }
    else
    {
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "MARCA_RAZON_RETRO_4", "X"  );
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "DESDE_HASTA_RAZON_RETRO_4", FECHA_DESDE_HASTA  );
      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "NOPROCRE" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "DESESTIM" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "APELADA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "RETEDESP" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "RETEINAC" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "PAGADO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "SALDADO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "STATUS" ), "RETEOTRO" ) ) ) 
      {
        this.app.form ( "DSS171_RPT_FR" ).setItem ( "NOPROCED", "X"  );
      }
      else
      {
        this.app.form ( "DSS171_RPT_FR" ).setItem ( "PROCEDIO", "X"  );
      }
      RAZON_RETRO_DSD = this.dm.create ( "RAZON_RETRO_DSD" );
      ID = RAZON_RETRO_DSD.getId ( );
      CD = RallyDataStoreException.getDefault ( );
      if ( ! Compare.equals ( CD, 0 ) ) 
      {
        this.app.setError ( 4, CD );
        this.app.errorFlag = false;
        this.doReturn ( );
        return; 
      }

      CD  = this.dm.reset ( ID );

      if ( ! Compare.equals ( CD, 0 ) ) 
      {
        this.app.setError ( 5, CD );
        this.doReturn ( );
        return; 
      }
      this.dm.setField ( this.dm.get ( "RAZON_RETRO_DSD" ), "COD_ID", this.dm.getFieldString ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "RAZON_RETRO" ) );

      CD  = this.dm.limitQueryFromBuffer ( ID );
      CD  = this.dm.retrieve ( ID );

      if ( ! Compare.equals ( CD, 0 ) ) 
      {
        this.app.setError ( 6, CD );
        this.app.errorFlag = false;
        this.doReturn ( );
        return; 
      }

      CD  = this.dm.firstRow ( ID );

      if ( ! Compare.equals ( CD, 0 ) ) 
      {
        this.app.setError ( 7, CD );
        this.doReturn ( );
        return; 
      }
      this.app.form ( "DSS171_RPT_FR" ).setItem ( "RAZON_4", this.dm.getFieldString ( this.dm.get ( "RAZON_RETRO_DSD" ), "DSC_LARGA" )  );
      CD  = this.dm.dbClose ( ID );

      if ( ! Compare.equals ( CD, 0 ) ) 
      {
        this.app.setError ( 8, CD );
        this.doReturn ( );
        return; 
      }
    }
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "FECHA_ASIGNADO", this.dm.getFieldDate ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "FECHA_ASIGNADO" )  );
    this.app.form ( "DSS171_RPT_FR" ).setItem ( "FECHA_COMPLETADO", this.dm.getFieldDate ( this.dm.get ( "RETRO_RPT_RO_DSD" ), "FECHA_COMPLETAR" )  );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE BFR_DSS171_RPT_ADL;

VAR
        RID             :       NUMBER;
        RCD             :       NUMBER;
         ID             :       NUMBER;
         CD             :       NUMBER;
        NULL            :       NUMBER;
FECHA_DESDE_HASTA       :       CHAR(20);

SET_TRACE();

BEGIN

MAKE_NULL (NULL);

DB_OPEN(RETRO_RPT_RO_DSD, RID,RCD);
IF (RCD<>0) THEN
        BEGIN
                ERROR(RCD);
                SET_FAILURE();
                RETURN;
        END;
        
DB_RESET(RID,RCD);
IF (RCD<>0) THEN
        BEGIN
                ERROR(RCD);
                RETURN;
        END;
        
RETRO_RPT_RO_DSD.SEGURO_SOCIAL_JEFE_FAM   := DSS171_MENU_FR.DSS171_SSJF;
RETRO_RPT_RO_DSD.SEGURO_SOCIAL_JEFE_SERV  := DSS171_MENU_FR.DSS171_SSES;
RETRO_RPT_RO_DSD.COD_SERVICIO             := DSS171_MENU_FR.DSS171_CS;
RETRO_RPT_RO_DSD.ACCION                   := DSS171_MENU_FR.DSS171_ACCI;
RETRO_RPT_RO_DSD.FECHA_IDENTIFICADO       := DSS171_MENU_FR.DSS171_FCHI;
RETRO_RPT_RO_DSD.RMO_OFICINA           := RMO_GBL;
DB_QUERY(RID,RCD);
IF (RCD <> 0)    THEN
        BEGIN
                ERROR(RCD);
                SET_FAILURE();
                RETURN;
        END;
        
DB_GET_FIRST(RID,RCD);
IF (RCD <> 0)    THEN
        BEGIN
                ERROR(RCD);
                RETURN;
        END;


FECHA_DESDE_HASTA       :=      to_char(RETRO_RPT_RO_DSD.DESDE,'Mon-YYYY') ||' -
 '||
                                to_char(RETRO_RPT_RO_DSD.HASTA,'Mon-YYYY');

DSS171_RPT_FR.OFICINA_LOCAL     :=      oficina_gbl;
DSS171_RPT_FR.PROGRAMA          :=      RETRO_RPT_RO_DSD.COD_SERVICIO;

IF RETRO_RPT_DSD.REFERIDO_POR_TSS <> NULL THEN
CALL BUSCAR_NOMBRE_TECNICO_ADL(RETRO_RPT_RO_DSD.REFERIDO_POR_TSS,DSS171_RPT_FR.N
OMBRE_TECNICO_REFERIDO_POR);

IF RETRO_RPT_RO_DSD.REFERIDO_TSS <> NULL THEN
CALL BUSCAR_NOMBRE_TECNICO_ADL(RETRO_RPT_RO_DSD.REFERIDO_TSS,DSS171_RPT_FR.TECNI
CO_RECLAMACIONES);

CALL BUSCAR_NOMBRE_COMPLETO_ADL(RETRO_RPT_RO_DSD.SEGURO_SOCIAL_JEFE_SERV,DSS171_
RPT_FR.NOMBRE_JEFE_FAMILIA);

DSS171_RPT_FR.FECHA_IDENTIFICADO        := RETRO_RPT_RO_DSD.FECHA_IDENTIFICADO;
DSS171_RPT_FR.NUMERO_CASO               := RETRO_RPT_RO_DSD.SEGURO_SOCIAL_JEFE_F
AM;
DSS171_RPT_FR.NUMERO_JEFE_SERVICIO      := RETRO_RPT_RO_DSD.SEGURO_SOCIAL_JEFE_S
ERV;
DSS171_RPT_FR.MARCA_RECLAMACION              :=      '';
DSS171_RPT_FR.DESDE_HASTA_RECLAMACION        :=      '';
DSS171_RPT_FR.MARCA_RETROACTIVO              :=      'X';

BEGIN
IF      RETRO_RPT_RO_DSD.RAZON_RETRO = 'DEMO'   THEN
BEGIN
DSS171_RPT_FR.MARCA_RAZON_RETRO_1            :=      'X';
DSS171_RPT_FR.DESDE_HASTA_RAZON_RETRO_1      :=      FECHA_DESDE_HASTA;
END;
ELSE
IF      (RETRO_RPT_RO_DSD.RAZON_RETRO = 'REDU')   AND
        (RETRO_RPT_RO_DSD.STATUS        <> 'NOPROCRE') THEN
BEGIN
DSS171_RPT_FR.MARCA_RAZON_RETRO_2            :=      'X';
DSS171_RPT_FR.DESDE_HASTA_RAZON_RETRO_2      :=      FECHA_DESDE_HASTA;
END;
ELSE
IF      RETRO_RPT_RO_DSD.RAZON_RETRO = 'PAEX'        THEN
BEGIN
DSS171_RPT_FR.MARCA_RAZON_RETRO_3            :=      'X';
DSS171_RPT_FR.DESDE_HASTA_RAZON_RETRO_3      :=      FECHA_DESDE_HASTA;
END;
ELSE
BEGIN
DSS171_RPT_FR.MARCA_RAZON_RETRO_4            :=      'X';
DSS171_RPT_FR.DESDE_HASTA_RAZON_RETRO_4      :=      FECHA_DESDE_HASTA;

IF      
(RETRO_RPT_RO_DSD.STATUS = 'NOPROCRE')  OR
(RETRO_RPT_RO_DSD.STATUS = 'DESESTIM')  OR
(RETRO_RPT_RO_DSD.STATUS = 'APELADA')  OR
(RETRO_RPT_RO_DSD.STATUS = 'RETEDESP')  OR
(RETRO_RPT_RO_DSD.STATUS = 'RETEINAC')  OR
(RETRO_RPT_RO_DSD.STATUS = 'PAGADO')  OR
(RETRO_RPT_RO_DSD.STATUS = 'SALDADO')  OR
(RETRO_RPT_RO_DSD.STATUS = 'RETEOTRO')  THEN
DSS171_RPT_FR.NOPROCED  :=      'X';
ELSE
DSS171_RPT_FR.PROCEDIO  :=      'X';

DB_OPEN(RAZON_RETRO_DSD, ID,CD);
IF (CD<>0) THEN
        BEGIN
                ERROR(CD);
                SET_FAILURE();
                RETURN;
        END;
        
DB_RESET(ID,CD);
IF (CD<>0) THEN
        BEGIN
                ERROR(CD);
                RETURN;
        END;
        
RAZON_RETRO_DSD.COD_ID := RETRO_RPT_RO_DSD.RAZON_RETRO;

DB_QUERY(ID,CD);
IF (CD <> 0)    THEN
        BEGIN
                ERROR(CD);
                SET_FAILURE();
                RETURN;
        END;
        
DB_GET_FIRST(ID,CD);
IF (CD <> 0)    THEN
        BEGIN
                ERROR(CD);
                RETURN;
        END;

DSS171_RPT_FR.RAZON_4    :=     RAZON_RETRO_DSD.DSC_LARGA;

DB_CLOSE(ID,CD);
IF (CD <> 0) THEN
        BEGIN
                ERROR(CD);
                RETURN;
        END;
END;
END;

DSS171_RPT_FR.FECHA_ASIGNADO                 :=      RETRO_RPT_RO_DSD.FECHA_ASIG
NADO;
DSS171_RPT_FR.FECHA_COMPLETADO               :=      RETRO_RPT_RO_DSD.FECHA_COMP
LETAR;

END;

SET_NOTRACE();









    



--------------------------------------------------------------------- */
