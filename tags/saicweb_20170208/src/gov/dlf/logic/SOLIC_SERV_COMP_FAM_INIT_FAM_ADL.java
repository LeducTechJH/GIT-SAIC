package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SOLIC_SERV_COMP_FAM_INIT_FAM_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STAT_ID = 0;

  public double C_OPEN_ID = 0;

  public double C_STAT_ID = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTAT_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).STAT_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setC_OPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setC_STAT_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_STAT_ID = value.getDouble ( );
  }  
    



  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTAT_ID  ( RallyApplication __app )
  {
    return ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).STAT_ID;
  }


  /**  */
  public static Double getSTAT_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).STAT_ID );
  }


  /**  */
  public static void setSTAT_ID  ( RallyApplication __app, double value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).STAT_ID = value;
  }


  /**  */
  public static void setSTAT_ID  ( RallyApplication __app, Object value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).STAT_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getC_OPEN_ID  ( RallyApplication __app )
  {
    return ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_OPEN_ID;
  }


  /**  */
  public static Double getC_OPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_OPEN_ID );
  }


  /**  */
  public static void setC_OPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_OPEN_ID = value;
  }


  /**  */
  public static void setC_OPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getC_STAT_ID  ( RallyApplication __app )
  {
    return ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_STAT_ID;
  }


  /**  */
  public static Double getC_STAT_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_STAT_ID );
  }


  /**  */
  public static void setC_STAT_ID  ( RallyApplication __app, double value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_STAT_ID = value;
  }


  /**  */
  public static void setC_STAT_ID  ( RallyApplication __app, Object value )
  {
    ( ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) __app.getADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class ) ).C_STAT_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SOLIC_SERV_COMP_FAM_INIT_FAM_ADL get ( RallyApplication __app )
  {
    SOLIC_SERV_COMP_FAM_INIT_FAM_ADL adl = new SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ( );
    __app.register ( adl, "SOLIC_SERV_COMP_FAM_INIT_FAM_ADL" );
    __app.setADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SOLIC_SERV_COMP_FAM_INIT_FAM_ADL" );
    if ( rObj != null && rObj instanceof SOLIC_SERV_COMP_FAM_INIT_FAM_ADL )
    {
      this.app.setADL ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL.class, ( SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SOLIC_SERV_COMP_FAM_INIT_FAM_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SOLIC_SERV_COMP_FAM_INIT_FAM_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).setItem ( "RMO_OFICINA", this.app.RMO_GBL  );
    if ( Compare.equals ( this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).getDoubleItem ( "RECORDS_LEIDOS_AGREGATE" ), 0 ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.callCommand ( RallyAppCommandFactory.FINSNEXT );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).getDoubleItem ( "RECORDS_LEIDOS_AGREGATE" ), 0 ) ) 
    {
      this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).setItem ( "SEGURO_SOCIAL_JEFE_FAM0", this.app.SSN_JEFE_FAM_GBL  );
      this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).setItem ( "RMO_OFICINA", this.app.RMO_GBL  );
      this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).setItem ( "RMO_OFICINA2", this.app.RMO_GBL  );
      this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).setItem ( "RMO_OFICINA3", this.app.RMO_GBL  );
      this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).setItem ( "RMO_OFICINA4", this.app.RMO_GBL  );
      this.app.callCommand ( RallyAppCommandFactory.COMMIT );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.form ( "SOLIC_SERV_COMP_FAMILIAR_FR" ).getDoubleItem ( "RECORDS_LEIDOS_AGREGATE" ), 0 ) ) 
    {
      this.app.callCommand ( RallyAppCommandFactory.EXITACTION );
      return;
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SOLIC_SERV_COMP_FAM_INIT_FAM_ADL;

VAR
        OPEN_ID :       NUMBER;
        STAT_ID :       NUMBER;
        C_OPEN_ID:      NUMBER;
        C_STAT_ID:      NUMBER;
BEGIN

SET_TRACE();
DEBUG_LOG('RUTINA_GBL=>'||RUTINA_GBL);
 SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA:=rmo_gbl;
IF SOLIC_SERV_COMP_FAMILIAR_FR.RECORDS_LEIDOS_AGREGATE=0
   THEN BEGIN
         CALL_CMD('Insert record next_group');
         SOLIC_SERV_COMP_FAMILIAR_FR.SEGURO_SOCIAL_JEFE_FAM0:=
                        SSN_JEFE_FAM_GBL;
         SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA:=rmo_gbl;
         SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA2:=rmo_gbl;
         SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA3:=rmo_gbl;
         SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA4:=rmo_gbl;

         CALL_CMD('commit');
         CALL_CMD('Finish action');
{ CALL_CMD('Set query');
         CALL_CMD('Execute query');   }
        END;



{IF (SOLIC_SERV_COMP_FAMILIAR_FR.RECORDS_LEIDOS_AGREGATE=0) AND (RUTINA_GBL='MC'
)
   THEN BEGIN
                  DB_OPEN(clientes2_dsd,OPEN_ID,STAT_ID);
                  DB_RESET(OPEN_ID,STAT_ID);
                  clientes2_dsd.SEGURO_SOCIAL_CLIENTE:=SSN_GBL;
                  clientes2_dsd.rmo_oficina:=rmo_gbl;
                  DB_QUERY(OPEN_ID,STAT_ID);
                  DB_GET_FIRST(OPEN_ID,STAT_ID);
                  clientes2_dsd.SEGURO_SOCIAL_JEFE_FAMILIA:=SSN_GBL;
                  DB_UPDATE(OPEN_ID,STAT_ID);

                  DB_OPEN(CENTRAL_clientes_dsd,C_OPEN_ID,C_STAT_ID);
                  DB_RESET(C_OPEN_ID,C_STAT_ID);
                  CENTRAL_CLIENTES_DSD.SEGURO_SOCIAL_CLIENTE:=SSN_GBL;
                  DB_QUERY(C_OPEN_ID,C_STAT_ID);
                  DB_GET_FIRST(C_OPEN_ID,C_STAT_ID);
                  CENTRAL_CLIENTES_DSD.SEGURO_SOCIAL_JEFE_FAMILIA:=SSN_GBL;
                  DB_UPDATE(C_OPEN_ID,C_STAT_ID);

                  DB_COMMIT(STAT_ID);
                  DB_CLOSE(OPEN_ID,STAT_ID);
                  DB_CLOSE(C_OPEN_ID,C_STAT_ID);


                  DB_OPEN(DIRECCIONES_DSD,OPEN_ID,STAT_ID);
                  DIRECCIONES_DSD.SEGURO_SOCIAL_JEFE_FAM:=SSN_GBL;
                  DIRECCIONES_DSD.COD_TIPO_DIRECCION:='RESI';
                  direcciones_dsd.rmo_oficina:=rmo_gbl;
                  DB_INSERT(OPEN_ID,STAT_ID);
                  DIRECCIONES_DSD.SEGURO_SOCIAL_JEFE_FAM:=SSN_GBL;
                  DIRECCIONES_DSD.COD_TIPO_DIRECCION:='POST';
                  direcciones_dsd.rmo_oficina:=rmo_gbl;
                  DB_INSERT(OPEN_ID,STAT_ID);

                  DB_OPEN(CENTRAL_DIRECCION_W_DSD,C_OPEN_ID,C_STAT_ID);
                  CENTRAL_DIRECCION_W_DSD.SEGURO_SOCIAL_JEFE_FAM:=SSN_GBL;
                  CENTRAL_DIRECCION_W_DSD.COD_TIPO_DIRECCION:='RESI';
                  DB_INSERT(C_OPEN_ID,C_STAT_ID);
                  CENTRAL_DIRECCION_W_DSD.SEGURO_SOCIAL_JEFE_FAM:=SSN_GBL;
                  CENTRAL_DIRECCION_W_DSD.COD_TIPO_DIRECCION:='POST';
                  DB_INSERT(C_OPEN_ID,C_STAT_ID);

                  DB_COMMIT(STAT_ID);
                  DB_CLOSE(OPEN_ID,STAT_ID);
                  DB_CLOSE(C_OPEN_ID,C_STAT_ID);
                  CALL_CMD('Insert record next_group');
                   SOLIC_SERV_COMP_FAMILIAR_FR.SEGURO_SOCIAL_JEFE_FAM0:=
                        SSN_JEFE_FAM_GBL;
                    SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA:=rmo_gbl;
                    SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA2:=rmo_gbl;
                    SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA3:=rmo_gbl;
                    SOLIC_SERV_COMP_FAMILIAR_FR.RMO_OFICINA4:=rmo_gbl;
         CALL_CMD('commit');
         CALL_CMD('Finish action');
         CALL_CMD('Set query');
         CALL_CMD('Execute query');   
        END;}
SET_NOTRACE();

END;

    



--------------------------------------------------------------------- */
