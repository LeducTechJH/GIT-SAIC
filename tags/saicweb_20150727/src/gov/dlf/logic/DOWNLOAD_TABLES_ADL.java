package gov.dlf.logic;


import java.util.Date;

import gov.dlf.facade.SAIC_DMQ_ORA_Application;
import net.maintrend.datamanager.DataStore;
import net.maintrend.interfaces.IRegisteredObject;
import net.maintrend.interlink.Parameter;
import net.maintrend.interlink.ParameterSet;
import net.maintrend.rallyengine.ADL;
import net.maintrend.rallyengine.RallyApplication;
import net.maintrend.rallyengine.RallyDataManager;
import net.maintrend.rallyengine.RallyDataStoreException;
import net.maintrend.util.Compare;
import net.maintrend.util.Debug;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DOWNLOAD_TABLES_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double CLIENTES2_DSD_ID = 0;

  public double NUCLEO_SERVICIO_DSD_ID = 0;

  public double INGRESOS_CLIENTE_2_DSD_ID = 0;

  public double RECURSOS_CLIENTE_2_DSD_ID = 0;

  public double DEDUCCIONES_CLIENTE2_DSD_ID = 0;

  public double CLIENTES_HIST_RW_DSD_ID = 0;

  public double CLIENTES_HIST_RO_DSD_ID = 0;

  public double NUCLEO_SERVICIO_HIST_RW_DSD_ID = 0;

  public double INGRESOS_CLIENTE_HIST_RW_DSD_ID = 0;

  public double RECURSOS_CLIENTE_HIST_RW_DSD_ID = 0;

  public double DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID = 0;

  public double BILLETES_DSD_ID = 0;

  public double BILLETES_HIST_RW_DSD_ID = 0;

  public double CLIENTES2_STATUS_CODE = 0;

  public double NUCLEO_SERVICIO_STATUS_CODE = 0;

  public double INGRESOS_CLIENTE_2_STATUS_CODE = 0;

  public double RECURSOS_CLIENTE_STATUS_CODE = 0;

  public double DEDUCCIONES_CLIENTE2_STATUS_CODE = 0;

  public double CLIENTES_HIST_RW_STATUS_CODE = 0;

  public double CLIENTES_HIST_RO_STATUS_CODE = 0;

  public double NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = 0;

  public double INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = 0;

  public double RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = 0;

  public double DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = 0;

  public double BILLETES_STATUS_CODE = 0;

  public double BILLETES_HIST_RW_STATUS_CODE = 0;



  public DataStore CLIENTES2_DSD = null;

  public DataStore NUCLEO_SERVICIO_UPD_DSD = null;

  public DataStore INGRESOS_CLIENTE_2_DSD = null;

  public DataStore RECURSOS_CLIENTE_2_DSD = null;

  public DataStore DEDUCCIONES_CLIENTE2_DSD = null;

  public DataStore BILLETES_DSD = null;
  

  public DataStore CLIENTES_HIST_RW_DSD = null;

  public DataStore CLIENTES_HIST_RO_DSD = null;

  public DataStore NUCLEO_SERVICIO_HIST_RW_DSD = null;

  public DataStore INGRESOS_CLIENTE_HIST_RW_DSD = null;

  public DataStore RECURSOS_CLIENTE_HIST_RW_DSD = null;

  public DataStore DEDUCCIONES_CLIENTE_HIST_RW_DSD = null;

  public DataStore BILLETES_HIST_RW_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID2  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID3  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID4  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_2_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID5  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID6  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID = value.getDouble ( );
  }  
  
  /**  */
  public static void setOPEN_ID26  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID7  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID8  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID9  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID10  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID11  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID12  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE2  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE3  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE4  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE5  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE6  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  
  
  /**  */
  public static void setSTATUS_CODE26  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE7  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE8  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE9  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE10  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE11  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE12  ( RallyApplication __app, Parameter value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getCLIENTES2_DSD  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_DSD;
  }


  /**  */
  public static void setCLIENTES2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_DSD = value;
  }


  /**  */
  public static void setCLIENTES2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_SERVICIO_UPD_DSD  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_UPD_DSD;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_UPD_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_UPD_DSD = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_UPD_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_UPD_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getINGRESOS_CLIENTE_2_DSD  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_DSD;
  }


  /**  */
  public static void setINGRESOS_CLIENTE_2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_DSD = value;
  }


  /**  */
  public static void setINGRESOS_CLIENTE_2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECURSOS_CLIENTE_2_DSD  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_2_DSD;
  }


  /**  */
  public static void setRECURSOS_CLIENTE_2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_2_DSD = value;
  }


  /**  */
  public static void setRECURSOS_CLIENTE_2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_2_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getDEDUCCIONES_CLIENTE2_DSD  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD = value;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getBILLETES_DSD  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_DSD;
  }


  /**  */
  public static void setBILLETES_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_DSD = value;
  }


  /**  */
  public static void setBILLETES_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getCLIENTES_FIX_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD;
  }

  /**  */
  public static DataStore getCLIENTES_HIST_FIX_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD;
  }


  /**  */
  public static void setCLIENTES_FIX_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD = value;
  }

  /**  */
  public static void setCLIENTES_HIST_FIX_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD = value;
  }


  /**  */
  public static void setCLIENTES_FIX_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD = ( DataStore ) value;
  }

  /**  */
  public static void setCLIENTES_HIST_FIX_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_SERVICIO_FIX_RO  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_FIX_RO  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_FIX_RO  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getINGRESOS_CLIENTE_FIX_RO  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD;
  }


  /**  */
  public static void setINGRESOS_CLIENTE_FIX_RO  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD = value;
  }


  /**  */
  public static void setINGRESOS_CLIENTE_FIX_RO  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECURSOS_CLIENTE_FIX_RO  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD;
  }


  /**  */
  public static void setRECURSOS_CLIENTE_FIX_RO  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD = value;
  }


  /**  */
  public static void setRECURSOS_CLIENTE_FIX_RO  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getDEDUCCIONES_CLIENTE_FIX_RO  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE_FIX_RO  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD = value;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE_FIX_RO  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getBILLETES_FIX_RO  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD;
  }


  /**  */
  public static void setBILLETES_FIX_RO  ( RallyApplication __app, DataStore value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD = value;
  }


  /**  */
  public static void setBILLETES_FIX_RO  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_DSD_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID2  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID2Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID2  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID2  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID3  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID3Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID3  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID3  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID4  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_2_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID4Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_2_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID4  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_2_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID4  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_2_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID5  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID5Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID5  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID5  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID6  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID;
  }

  /**  */
  public static double getOPEN_ID26  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID6Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID );
  }

  /**  */
  public static Double getOPEN_ID26Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID6  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID = value;
  }

  /**  */
  public static void setOPEN_ID26  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID6  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }

  /**  */
  public static void setOPEN_ID26  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID7  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID7Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID7  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID7  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID8  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID8Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID8  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID8  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID9  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID9Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID9  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID9  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID10  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID10Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID10  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID10  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID11  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID11Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID11  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID11  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID12  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID12Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID12  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID12  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES2_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE2  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE2Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE2  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE2  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE3  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE3Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE3  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE3  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_2_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE4  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE4Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE4  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE4  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE5  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE5Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE5  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE5  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE2_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE6  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE;
  }

  /**  */
  public static double getSTATUS_CODE26  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE6Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE );
  }

  /**  */
  public static Double getSTATUS_CODE26Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE6  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE = value;
  }

  /**  */
  public static void setSTATUS_CODE26  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE6  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }

  /**  */
  public static void setSTATUS_CODE26  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE7  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE7Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE7  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE7  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE8  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE8Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE8  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE8  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE9  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE9Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE9  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE9  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE10  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE10Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE10  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE10  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE11  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE11Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE11  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE11  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE12  ( RallyApplication __app )
  {
    return ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE12Double ( RallyApplication __app )
  {
    return new Double ( ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE12  ( RallyApplication __app, double value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE12  ( RallyApplication __app, Object value )
  {
    ( ( DOWNLOAD_TABLES_ADL ) __app.getADL ( DOWNLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DOWNLOAD_TABLES_ADL get ( RallyApplication __app )
  {
    DOWNLOAD_TABLES_ADL adl = new DOWNLOAD_TABLES_ADL ( );
    __app.register ( adl, "DOWNLOAD_TABLES_ADL" );
    __app.setADL ( DOWNLOAD_TABLES_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DOWNLOAD_TABLES_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DOWNLOAD_TABLES_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }

  protected void doReturn ( )
  {
    this.unregister ( );
  }

  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DOWNLOAD_TABLES_ADL" );
    if ( rObj != null && rObj instanceof DOWNLOAD_TABLES_ADL )
    {
      this.app.setADL ( DOWNLOAD_TABLES_ADL.class, ( DOWNLOAD_TABLES_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DOWNLOAD_TABLES_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DOWNLOAD_TABLES_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }

  protected void step0 ( ParameterSet ps )
  {
    /* Obtener DataStores */
    CLIENTES2_DSD = this.dm.create ( "CLIENTES2_DSD" );
    CLIENTES2_DSD_ID = CLIENTES2_DSD.getId ( );
    CLIENTES2_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    if ( ! Compare.equals ( CLIENTES2_STATUS_CODE, 0 ) ) 
    {
      this.app.setError ( 0, CLIENTES2_STATUS_CODE );
    }
    NUCLEO_SERVICIO_UPD_DSD = this.dm.create ( "NUCLEO_SERVICIO_UPD_DSD" );
    NUCLEO_SERVICIO_DSD_ID = NUCLEO_SERVICIO_UPD_DSD.getId ( );
    NUCLEO_SERVICIO_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    INGRESOS_CLIENTE_2_DSD = this.dm.create ( "INGRESOS_CLIENTE_2_DSD" );
    INGRESOS_CLIENTE_2_DSD_ID = INGRESOS_CLIENTE_2_DSD.getId ( );
    INGRESOS_CLIENTE_2_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    RECURSOS_CLIENTE_2_DSD = this.dm.create ( "RECURSOS_CLIENTE_2_DSD" );
    RECURSOS_CLIENTE_2_DSD_ID = RECURSOS_CLIENTE_2_DSD.getId ( );
    RECURSOS_CLIENTE_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    DEDUCCIONES_CLIENTE2_DSD = this.dm.create ( "DEDUCCIONES_CLIENTE2_DSD" );
    DEDUCCIONES_CLIENTE2_DSD_ID = DEDUCCIONES_CLIENTE2_DSD.getId ( );
    DEDUCCIONES_CLIENTE2_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    BILLETES_DSD = this.dm.create ( "BILLETES_DSD" );
    BILLETES_DSD_ID = BILLETES_DSD.getId ( );
    BILLETES_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    CLIENTES_HIST_RW_DSD = this.dm.create ( "CLIENTES_HIST_RW_DSD" );
    CLIENTES_HIST_RW_DSD_ID = CLIENTES_HIST_RW_DSD.getId ( );
    CLIENTES_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    if ( ! Compare.equals ( CLIENTES_HIST_RW_STATUS_CODE, 0 ) ) 
    {
      this.app.setError ( 1, CLIENTES_HIST_RW_STATUS_CODE );
    }
    
    CLIENTES_HIST_RO_DSD = this.dm.create ( "CLIENTES_HIST_RO_DSD" );
    CLIENTES_HIST_RO_DSD_ID = CLIENTES_HIST_RO_DSD.getId ( );
    CLIENTES_HIST_RO_STATUS_CODE = RallyDataStoreException.getDefault ( );

    NUCLEO_SERVICIO_HIST_RW_DSD = this.dm.create ( "NUCLEO_SERVICIO_HIST_RW_DSD" );
    NUCLEO_SERVICIO_HIST_RW_DSD_ID = NUCLEO_SERVICIO_HIST_RW_DSD.getId ( );
    NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );

    INGRESOS_CLIENTE_HIST_RW_DSD = this.dm.create ( "INGRESOS_CLIENTE_HIST_RW_DSD" );
    INGRESOS_CLIENTE_HIST_RW_DSD_ID = INGRESOS_CLIENTE_HIST_RW_DSD.getId ( );
    INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    RECURSOS_CLIENTE_HIST_RW_DSD = this.dm.create ( "RECURSOS_CLIENTE_HIST_RW_DSD" );
    RECURSOS_CLIENTE_HIST_RW_DSD_ID = RECURSOS_CLIENTE_HIST_RW_DSD.getId ( );
    RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    DEDUCCIONES_CLIENTE_HIST_RW_DSD = this.dm.create ( "DEDUCCIONES_CLIENTE_HIST_RW_DSD" );
    DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID = DEDUCCIONES_CLIENTE_HIST_RW_DSD.getId ( );
    DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    BILLETES_HIST_RW_DSD = this.dm.create ( "BILLETES_HIST_RW_DSD" );
    BILLETES_HIST_RW_DSD_ID = BILLETES_HIST_RW_DSD.getId ( );
    BILLETES_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );

	/*---------------------------------------------------------------------------------- */
    /* Main Processing Logic:                                                            */
	/*   1. Read HISTORY rows for JEFE_FAMILIA.                                          */
	/*   2. For each HISTORY row found:                                                  */
	/*      2.1. Delete children from regular tables:                                    */
	/*           2.1.1. Delete INGRESOS_CLIENTES for SSN.                                */
	/*           2.1.2. Delete RECURSOS_CLIENTES for SSN.                                */
	/*           2.1.3. Delete DEDUCCIONES_CLIENTES for SSN.                             */
	/*           2.1.4. Delete BILLETES for SSN.                                         */
	/*           2.1.5. Delete NUCLEO_SERVICIO for SS_BENEFICIARIO.                      */
	/*           2.1.6. Delete CLIENTES for SSN.                                         */
	/*      2.2. Copy HISTORY data to regular tables:                                    */
	/*           2.2.1. CLIENTES data:                                                   */
	/*                  2.2.1.1. Copy CLIENTES_HIST to CLIENTES.                         */
	/*                  2.2.1.2. Delete CLIENTES_HIST for SSN.                           */
	/*           2.2.2. INGRESOS_CLIENTES data:                                          */
	/*                  2.2.2.1. Copy INGRESOS_CLIENTES_HIST to INGRESOS_CLIENTES.       */
	/*                  2.2.2.2. Delete INGRESOS_CLIENTES_HIST for SSN.                  */
	/*           2.2.3. RECURSOS_CLIENTES data:                                          */
	/*                  2.2.3.1. Copy RECURSOS_CLIENTES_HIST to RECURSOS_CLIENTES.       */
	/*                  2.2.3.2. Delete RECURSOS_CLIENTES_HIST for SSN.                  */
	/*           2.2.4. DEDUCCIONES_CLIENTES data:                                       */
	/*                  2.2.4.1. Copy DEDUCCIONES_CLIENTES_HIST to DEDUCCIONES_CLIENTES. */
	/*                  2.2.4.2. Delete DEDUCCIONES_CLIENTES_HIST for SSN.               */
	/*           2.2.5. BILLETES data:                                                   */
	/*                  2.2.5.1. Copy BILLETES_HIST to BILLETES.                         */
	/*                  2.2.5.2. Delete BILLETES_HIST for SSN.                           */
	/*           2.2.6. NUCLEO_SERVICIO data:                                            */
	/*                  2.2.6.1. Copy from NUCLEO_SERVICIO_HIST to NUCLEO_SERVICIO.      */
	/*                  2.2.6.2. Delete from NUCLEO_SERVICIO_HIST for SS_BENEFICIARIO.   */
	/*      2.3. Read next HISTORY row, repeat from step 2.                              */
	/*   3. Commit changes made to database.                                             */
	/*   4. Close data stores.                                                           */
	/*---------------------------------------------------------------------------------- */
    
    CLIENTES_HIST_RO_STATUS_CODE  = this.dm.reset ( CLIENTES_HIST_RO_DSD_ID );
    setFieldDouble ( CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );
    setFieldString ( CLIENTES_HIST_RO_DSD, "TIPO_TRANS", "T" );
    CLIENTES_HIST_RO_STATUS_CODE  = this.getFirstRow ( CLIENTES_HIST_RO_DSD_ID );
    if ( Compare.equals ( CLIENTES_HIST_RO_STATUS_CODE, 0 )  )
    {
	    while ( Compare.equals ( CLIENTES_HIST_RO_STATUS_CODE, 0 )  )
	    {
	    	/* Delete INGRESOS_CLIENTES for SSN */
			INGRESOS_CLIENTE_2_STATUS_CODE  = this.dm.reset ( INGRESOS_CLIENTE_2_DSD_ID );
			setFieldDouble ( INGRESOS_CLIENTE_2_DSD,  CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
			INGRESOS_CLIENTE_2_STATUS_CODE  = this.deleteRows( INGRESOS_CLIENTE_2_DSD_ID );
			/* Delete RECURSOS_CLIENTE for SSN */
			RECURSOS_CLIENTE_STATUS_CODE  = this.dm.reset ( RECURSOS_CLIENTE_2_DSD_ID );
			setFieldDouble ( RECURSOS_CLIENTE_2_DSD,  CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
			RECURSOS_CLIENTE_STATUS_CODE  = this.deleteRows( RECURSOS_CLIENTE_2_DSD_ID );
			/* Delete DEDUCCIONES_CLIENTE for SSN */
			DEDUCCIONES_CLIENTE2_STATUS_CODE  = this.dm.reset ( DEDUCCIONES_CLIENTE2_DSD_ID );
			setFieldDouble ( DEDUCCIONES_CLIENTE2_DSD,  CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
			DEDUCCIONES_CLIENTE2_STATUS_CODE  = this.deleteRows( DEDUCCIONES_CLIENTE2_DSD_ID );
			/* Delete BILLETES for SSN */
			BILLETES_STATUS_CODE  = this.dm.reset ( BILLETES_DSD_ID );
			setFieldDouble ( BILLETES_DSD,  CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
			BILLETES_STATUS_CODE  = this.deleteRows( BILLETES_DSD_ID );
			/* Delete NUCLEO_SERVICIO */
			NUCLEO_SERVICIO_STATUS_CODE = this.dm.reset ( NUCLEO_SERVICIO_DSD_ID );
			setFieldDouble ( NUCLEO_SERVICIO_UPD_DSD, "SEGURO_SOCIAL_BENEFICIARIO", CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
			setFieldDouble ( NUCLEO_SERVICIO_UPD_DSD, "RMO_OFICINA", CLIENTES_HIST_RO_DSD, "RMO_OFICINA" );
			NUCLEO_SERVICIO_STATUS_CODE  = this.deleteRows( NUCLEO_SERVICIO_DSD_ID );
			/* delete CLIENTES */
			CLIENTES2_STATUS_CODE  = this.dm.reset ( CLIENTES2_DSD_ID );
			setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
			CLIENTES2_STATUS_CODE  = this.deleteRows( CLIENTES2_DSD_ID );
			
	    	/*---------------------------------------------------------*/
	    	/* Copy HISTORY data to regular tables.                    */
	    	/*---------------------------------------------------------*/
		    	
	    	/* copiar record corriente de CLIENTES_HIST a CLIENTES */
	    	setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "RMO_OFICINA");
	    	//setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "USUARIO" );
	    	setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
	    	setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_JEFE_FAMILIA" );
	    	setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "DSC_APELLIDO_PATERNO" );
	    	setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "DSC_APELLIDO_MATERNO" );
	    	setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "DSC_NOMBRE" );
	    	setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "DSC_INICIAL" );
	    	setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_PARENTESCO_FAM" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_NACIMIENTO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "SEXO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ID_INDICE_SOUNDEX" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_DISPOSICION_CLIENTE" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_STATUS_DISP" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "TELEFONO_HOGAR" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "TELEFONO_TRABAJO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_INSTITUCION" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_INCAPACIDAD_PRIMARIA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_INCAPACIDAD_SECUNDARIA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_CIUDADANIA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_ESCOLARIDAD" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_ESTATUS_EMPLEO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_ESTADO_CIVIL" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_OCUPACION" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_PROBLEMA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ID_NUMERO_EXTRANJERO" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_ARRIBO_EXTRANJERO" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_EXPIRACION_MEDICAID" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ID_NUMERO_MEDICAID" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_EXPIRACION_MEDICARE" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ID_NUMERO_MEDICARE" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_ANTERIOR" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_PASOS" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_RAZON_DESCALIFICADO_PAN" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_RAZON_DESCALIFICADO_AE" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_ANTECEDENTES_PROGRAMA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ANTECEDE_PROGRAMA_NUM_CASO" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ANTECEDE_PROGRAMA_OFIC_LOCAL" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ANTECEDE_FECHAS_CIERRE" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "NUM_MESES_DESC_PAN" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_DESCALIFICADO_PAN" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "NUM_MESES_DESC_AE" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_DESCALIFACADO_AE" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ANTECEDE_RAZON" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "NUM_VECES_DESC" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_DESCALIFICADO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_INCAPACIDAD_VERIFICADA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "DSC_INSTITUCION_ESCUELA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_PSM" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_AEC_FACTOR_ELEG" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_REHABILITACION_VOC" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FACT_ELEGIBILIDAD_AEC" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "RMO_COD" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "COD_STATUS" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_STATUS" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "CESION_MEDICAID" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "NOMBRE_PLAN_MEDICO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "TIPO_CUBIERTA_MEDICARE" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "DSC_APODO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_PRES" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_TANF" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "TIPO_REGISTRO" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "MESES_SWIP" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ESTUDIA_TIEMPO_COMPLETO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ASISTE_REGULARIDAD" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "CONVICTO_SUSTANCIAS" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "CONVICTO_SUSTANCIAS_F_E" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "CONVICTO_DECL_FRAUD" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "CONVICTO_DECL_FRAUD_F_E" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "VIOLACION_PROBATORIA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "VIOLACION_PROBATORIA_F_E" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "HUELGA" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "CONTEO_60_MESES_TANF" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_VENCIMIENTO_DESC" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_CIERRE_DESCA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "MOTIVOS_ELEGIBILIDAD" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_FIRMO_PRI" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_ENTREGA_AUTOGESTION" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_REFERIDO_MANEJO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ESTATUS_PART_TRABAJO" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_EFECT_DESCA" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "MESES_EXENCION_TANF" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_PTRA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_VET" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_18ANOS" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_60ANOS" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FLG_5MESES" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FECHA_DESDE_EXEN" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FECHA_HASTA_EXEN" );
	        setFieldDouble ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "REMANENTE" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_JUNTA_MEDICA" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "DSC_ASISTE_REGULARIDAD" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_VENCIMIENTO_DESC_AE" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_CIERRE_DESCA_AE" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FCH_EFECT_DESCA_AE" );
	        setFieldDate   ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "FECHA_REGISTRO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "OCUPACION1" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "OCUPACION2" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "OCUPACION3" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ACEPTA_REGISTRO_EMPLEO" );
	        setFieldString ( CLIENTES2_DSD, CLIENTES_HIST_RO_DSD, "ACTIVO_REGISTRO_EMPLEO" );
	        CLIENTES2_STATUS_CODE  = this.dm.insertRow ( CLIENTES2_DSD_ID );
	    	/* Delete CLIENTES_HIST rows for SEGURO_SOCIAL_CLIENTE */
			CLIENTES_HIST_RW_STATUS_CODE  = this.dm.reset( CLIENTES_HIST_RW_DSD_ID );
			setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
			setFieldString ( CLIENTES_HIST_RW_DSD, "TIPO_TRANS", "T" );
			CLIENTES_HIST_RW_STATUS_CODE  = this.deleteRows( CLIENTES_HIST_RW_DSD_ID );
			
			/* copiar records de INGRESOS_CLIENTE_HIST a INGRESOS_CLIENTE */
	        INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = this.dm.reset  ( INGRESOS_CLIENTE_HIST_RW_DSD_ID );  
	        setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD , "TIPO_TRANS", "T" );
	        setFieldDouble ( INGRESOS_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
	        INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = getFirstRow ( INGRESOS_CLIENTE_HIST_RW_DSD_ID );
	        while ( Compare.equals ( INGRESOS_CLIENTE_HIST_RW_STATUS_CODE, 0 )  )
	        {
	        	setFieldDouble ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "SEGURO_SOCIAL_CLIENTE" );
	        	setFieldString ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "COD_TIPO_INGRESO" );
	        	setFieldDouble ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "VLR_CANTIDAD_INGRESO" );
	        	setFieldString ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "DSC_OBS_INGRESO" );
	        	setFieldString ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "DSC_NOMBRE_PATRONO" );
	        	setFieldString ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "FLG_PAN" );
	        	setFieldString ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "FLG_AE" );
	        	setFieldDouble ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "VLR_CANTIDAD_REHABILITACION" );
	        	setFieldString ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "FLG_FRECUENCIA" );
	        	setFieldDate   ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "FCH_HASTA_CANT_REHAB" );
	        	setFieldDate   ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "FCH_RECIBO_GLOB" );
	        	setFieldDouble ( INGRESOS_CLIENTE_2_DSD, INGRESOS_CLIENTE_HIST_RW_DSD, "RMO_OFICINA" );
	        	INGRESOS_CLIENTE_2_STATUS_CODE  = this.dm.insertRow ( INGRESOS_CLIENTE_2_DSD_ID );
	        	INGRESOS_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.nextRow ( INGRESOS_CLIENTE_HIST_RW_DSD_ID );
	        }
	    	/* delete INGRESOS_CLIENTE_HIST rows for the cliente */
			INGRESOS_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.reset ( INGRESOS_CLIENTE_HIST_RW_DSD_ID );
			setFieldDouble ( INGRESOS_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
			setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, "TIPO_TRANS", "T" );
			INGRESOS_CLIENTE_HIST_RW_STATUS_CODE  = this.deleteRows( INGRESOS_CLIENTE_HIST_RW_DSD_ID );
			
			/* copiar records de RECURSOS_CLIENTE_HIST a RECURSOS_CLIENTE */
	        RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = this.dm.reset  ( RECURSOS_CLIENTE_HIST_RW_DSD_ID );
	        setFieldString ( RECURSOS_CLIENTE_HIST_RW_DSD , "TIPO_TRANS", "T" );
	        setFieldDouble ( RECURSOS_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
	        RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = getFirstRow    ( RECURSOS_CLIENTE_HIST_RW_DSD_ID );   
	        while ( Compare.equals ( RECURSOS_CLIENTE_HIST_RW_STATUS_CODE, 0 )  )
	        {
	        	setFieldDouble ( RECURSOS_CLIENTE_2_DSD, RECURSOS_CLIENTE_HIST_RW_DSD, "SEGURO_SOCIAL_CLIENTE" );
	        	setFieldString ( RECURSOS_CLIENTE_2_DSD, RECURSOS_CLIENTE_HIST_RW_DSD, "COD_TIPO_RECURSO" );
	        	setFieldDouble ( RECURSOS_CLIENTE_2_DSD, RECURSOS_CLIENTE_HIST_RW_DSD, "VLR_CANTIDAD_RECURSO" );
	        	setFieldString ( RECURSOS_CLIENTE_2_DSD, RECURSOS_CLIENTE_HIST_RW_DSD, "DSC_OBS_RECURSO" );
	        	setFieldDouble ( RECURSOS_CLIENTE_2_DSD, RECURSOS_CLIENTE_HIST_RW_DSD, "RMO_OFICINA" );
	        	RECURSOS_CLIENTE_STATUS_CODE  = this.dm.insertRow ( RECURSOS_CLIENTE_2_DSD_ID );
	        	RECURSOS_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.nextRow ( RECURSOS_CLIENTE_HIST_RW_DSD_ID );
	        }
	    	/* delete RECURSOS_CLIENTE_HIST rows for the cliente */
			RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = this.dm.reset ( RECURSOS_CLIENTE_HIST_RW_DSD_ID );
			setFieldDouble ( RECURSOS_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
			setFieldString ( RECURSOS_CLIENTE_HIST_RW_DSD, "TIPO_TRANS", "T" );
			RECURSOS_CLIENTE_HIST_RW_STATUS_CODE  = this.deleteRows( RECURSOS_CLIENTE_HIST_RW_DSD_ID );
			
			/* copiar records de DEDUCCIONES_CLIENTE_HIST a DEDUCCIONES_CLIENTE */
	        DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = this.dm.reset  ( DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID );
	        setFieldString ( DEDUCCIONES_CLIENTE_HIST_RW_DSD , "TIPO_TRANS", "T" );
	        setFieldDouble ( DEDUCCIONES_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
	        DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = getFirstRow    ( DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID );
	        while ( Compare.equals ( DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE, 0 )  )
	        {
	        	setFieldDouble ( DEDUCCIONES_CLIENTE2_DSD, DEDUCCIONES_CLIENTE_HIST_RW_DSD, "SEGURO_SOCIAL_CLIENTE" );
	        	setFieldString ( DEDUCCIONES_CLIENTE2_DSD, DEDUCCIONES_CLIENTE_HIST_RW_DSD, "COD_TIPO_DEDUCCIONE" );
	        	setFieldDouble ( DEDUCCIONES_CLIENTE2_DSD, DEDUCCIONES_CLIENTE_HIST_RW_DSD, "VLR_CANTIDAD_DEDUCCIONE" );
	        	setFieldString ( DEDUCCIONES_CLIENTE2_DSD, DEDUCCIONES_CLIENTE_HIST_RW_DSD, "DSC_OBS_DEDUCCIONE" );
	        	setFieldDouble ( DEDUCCIONES_CLIENTE2_DSD, DEDUCCIONES_CLIENTE_HIST_RW_DSD, "RMO_OFICINA" );
	        	DEDUCCIONES_CLIENTE2_STATUS_CODE  = this.dm.insertRow ( DEDUCCIONES_CLIENTE2_DSD_ID );
	        	DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.nextRow ( DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID );
	        }
	    	/* delete DEDUCCIONES_CLIENTE_HIST rows for the cliente */
			DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = this.dm.reset ( DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID );
			setFieldDouble ( DEDUCCIONES_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
			setFieldString ( DEDUCCIONES_CLIENTE_HIST_RW_DSD , "TIPO_TRANS", "T" );
			DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE  = this.deleteRows( DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID );

			/* copiar records de BILLETES_HIST a BILLETES */
	        BILLETES_HIST_RW_STATUS_CODE = this.dm.reset  ( BILLETES_HIST_RW_DSD_ID );
	        setFieldString ( BILLETES_HIST_RW_DSD , "TIPO_TRANS", "T" );
	        setFieldDouble ( BILLETES_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
	        BILLETES_HIST_RW_STATUS_CODE = getFirstRow    ( BILLETES_HIST_RW_DSD_ID );
	        while ( Compare.equals ( BILLETES_HIST_RW_STATUS_CODE, 0 )  )
	        {
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "RMO_OFICINA" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "SEGURO_SOCIAL_CLIENTE" );
	        	setFieldString ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "COD_TIPO_INGRESO" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "CANT_BILLETE_ORDINARIO" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "GANANCIA_SEMANAL_ORD" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "GANANCIA_ANUAL_ORD" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "CANT_BILLETE_EXTRA" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "GANANCIA_SEMANAL_EXTRA" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "GANANCIA_ANUAL_EXTRA" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "INGRESO_ANUAL" );
	        	setFieldDate   ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "FECHA_EFECTIVIDAD" );
	        	setFieldDouble ( BILLETES_DSD, BILLETES_HIST_RW_DSD, "INGRESO_MENSUAL" );
	        	BILLETES_STATUS_CODE  = this.dm.insertRow ( BILLETES_DSD_ID );
	        	BILLETES_HIST_RW_STATUS_CODE  = this.dm.nextRow ( BILLETES_HIST_RW_DSD_ID );
	        }
	    	/* delete BILLETES_HIST rows for the cliente */
			BILLETES_HIST_RW_STATUS_CODE = this.dm.reset ( BILLETES_HIST_RW_DSD_ID );
			setFieldDouble ( BILLETES_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
			setFieldString ( BILLETES_HIST_RW_DSD, "TIPO_TRANS", "T" );
			BILLETES_HIST_RW_STATUS_CODE  = this.deleteRows( BILLETES_HIST_RW_DSD_ID );
			
		    /* copy NUCLEO_SERVICIO from history */
		    NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = this.dm.reset  ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
		    setFieldString ( NUCLEO_SERVICIO_HIST_RW_DSD, "TIPO_TRANS", "T" );
		    setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD, "SEGURO_SOCIAL_BENEFICIARIO", CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
			setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD, "RMO_OFICINA", CLIENTES_HIST_RO_DSD, "RMO_OFICINA" );
		    NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = getFirstRow    ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
		    while ( Compare.equals ( NUCLEO_SERVICIO_HIST_RW_STATUS_CODE, 0 )  )
		    {
		    	setFieldDouble ( NUCLEO_SERVICIO_UPD_DSD, NUCLEO_SERVICIO_HIST_RW_DSD, "SEGURO_SOCIAL_JEFE_FAM" );
		    	setFieldDouble ( NUCLEO_SERVICIO_UPD_DSD, NUCLEO_SERVICIO_HIST_RW_DSD, "SEGURO_SOCIAL_JEFE_SERV" );
		    	setFieldString ( NUCLEO_SERVICIO_UPD_DSD, NUCLEO_SERVICIO_HIST_RW_DSD, "COD_SERVICIO" );
		    	setFieldDouble ( NUCLEO_SERVICIO_UPD_DSD, NUCLEO_SERVICIO_HIST_RW_DSD, "RMO_OFICINA" );
		    	setFieldDouble ( NUCLEO_SERVICIO_UPD_DSD, NUCLEO_SERVICIO_HIST_RW_DSD, "SEGURO_SOCIAL_BENEFICIARIO" );
		    	setFieldString ( NUCLEO_SERVICIO_UPD_DSD, NUCLEO_SERVICIO_HIST_RW_DSD, "COD_PARENTESCO_RELACION_SERV" );
		    	NUCLEO_SERVICIO_STATUS_CODE  = this.dm.insertRow ( NUCLEO_SERVICIO_DSD_ID );
		    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE  = this.dm.nextRow ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
		    }
		    /* delete NUCLEO_SERVICIO_HIST */
	    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = this.dm.reset  ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
	    	setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD, "SEGURO_SOCIAL_BENEFICIARIO", CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE" );
	    	setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD, "RMO_OFICINA", CLIENTES_HIST_RO_DSD, "RMO_OFICINA" );
	    	setFieldString ( NUCLEO_SERVICIO_HIST_RW_DSD , "TIPO_TRANS", "T" );
	    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE  = this.deleteRows( NUCLEO_SERVICIO_HIST_RW_DSD_ID );

	    	/* Read next HISTORY row and repeat process if there are more rows */
	        CLIENTES_HIST_RO_STATUS_CODE  = this.dm.nextRow ( CLIENTES_HIST_RO_DSD_ID );
	    }
	    
		/*---------------------------------------------------------*/
		/* Commit changes made to database                         */
		/*---------------------------------------------------------*/
	    
	    CLIENTES_HIST_RW_STATUS_CODE  = this.dm.dbCommit ( );
	    if ( ! Compare.equals ( CLIENTES_HIST_RW_STATUS_CODE, 0 ) ) 
	    {
	      CLIENTES_HIST_RW_STATUS_CODE  = this.dm.rollBack ( );
	    }
    }   
    
	/*---------------------------------------------------------*/
    /* Close Data Stores                                       */   
	/*---------------------------------------------------------*/
    
    CLIENTES2_STATUS_CODE                    = this.dm.dbClose ( CLIENTES2_DSD_ID );
    NUCLEO_SERVICIO_STATUS_CODE              = this.dm.dbClose ( NUCLEO_SERVICIO_DSD_ID );
    INGRESOS_CLIENTE_2_STATUS_CODE           = this.dm.dbClose ( INGRESOS_CLIENTE_2_DSD_ID );
    RECURSOS_CLIENTE_STATUS_CODE             = this.dm.dbClose ( RECURSOS_CLIENTE_2_DSD_ID );
    DEDUCCIONES_CLIENTE2_STATUS_CODE         = this.dm.dbClose ( DEDUCCIONES_CLIENTE2_DSD_ID );
    BILLETES_STATUS_CODE                     = this.dm.dbClose ( BILLETES_DSD_ID );
    
    CLIENTES_HIST_RO_STATUS_CODE             = this.dm.dbClose ( CLIENTES_HIST_RO_DSD_ID );
    CLIENTES_HIST_RW_STATUS_CODE             = this.dm.dbClose ( CLIENTES_HIST_RW_DSD_ID );
    NUCLEO_SERVICIO_HIST_RW_STATUS_CODE      = this.dm.dbClose ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
    INGRESOS_CLIENTE_HIST_RW_STATUS_CODE     = this.dm.dbClose ( INGRESOS_CLIENTE_HIST_RW_DSD_ID );
    RECURSOS_CLIENTE_HIST_RW_STATUS_CODE     = this.dm.dbClose ( RECURSOS_CLIENTE_HIST_RW_DSD_ID );
    DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.dbClose ( DEDUCCIONES_CLIENTES_HIST_RW_DSD_ID );
    BILLETES_HIST_RW_STATUS_CODE             = this.dm.dbClose ( BILLETES_HIST_RW_DSD_ID );

    System.out.println("DOWNLOAD_TABLES_ADL Completed");
    return;

  }
  
  private final double getFirstRow(double DSD_ID) {
	  double STATUS_CODE = 0.0;
	  STATUS_CODE  = this.dm.limitQueryFromBuffer ( DSD_ID );
      STATUS_CODE  = this.dm.retrieve ( DSD_ID );
      STATUS_CODE  = this.dm.firstRow ( DSD_ID );
      return STATUS_CODE;
  }
  private final double deleteRows(double DSD_ID) {
	// *** MODS BY JOR 2/3/2009
	// fix delete rows bug 
	double STATUS_CODE  = getFirstRow ( DSD_ID );
	while ( Compare.equals ( STATUS_CODE, 0 )  )
	{
		STATUS_CODE  = this.dm.delete ( DSD_ID );
		STATUS_CODE  = this.dm.firstRow ( DSD_ID );
	}
	this.dm.update ( DSD_ID );
	return STATUS_CODE;
  }
  

  
  
  
//  private final double deleteFirstRow(double DSD_ID) {
//	  double STATUS_CODE = getFirstRow( DSD_ID);
//	  STATUS_CODE = deleteRow(DSD_ID,STATUS_CODE);
//      return STATUS_CODE;
//  }
  
  
  
  
  /**
   * Copy the value of the specified field in the source DataStore to the corresponding field in the target DataStore. 
   * This method assumes that the value being set is of type Double. 
   * @param target
   * @param source
   * @param field 
   */

    private final double setFieldDouble(DataStore target, DataStore source, String field) {
  
    	return this.dm.setField ( target, field, this.dm.getFieldDouble ( source, field ) );
    }
  /**
   * Copy the value of the specified field in the source DataStore to the corresponding field in the target DataStore. 
   * This method assumes that the value being set is of type Date. 
   * @param target
   * @param source
   * @param field
   */
    private final double setFieldDate(DataStore target, DataStore source, String field) {
  	    return this.dm.setField ( target, field, this.dm.getFieldDate ( source, field ) );
    }
    
    /**
     * Copy the value of the specified field in the source DataStore to the corresponding field in the target DataStore. 
     * This method assumes that the value being set is of type String. 
     * @param target
     * @param source
     * @param field
     */
    private final double setFieldString(DataStore target, DataStore source, String field) {
          return this.dm.setField ( target, field, this.dm.getFieldString ( source, field ) );
    }
    
    /**
     * Copy the specified Double value to the specified field in the target DataStore.
     * @param target
     * @param field
     * @param value
     */
    private final double setFieldDouble(DataStore target, String field, Double value) {
  	    return this.dm.setField ( target, field, value );
  }

    /**
     * Copy the specified Date value to the specified field in the target DataStore.
     * @param target
     * @param field
     * @param value
     */
    private final double setFieldDate(DataStore target, String field, Date value) {
  	    return this.dm.setField ( target, field, value );
    }
    
    /**
     * Copy the specified String value to the specified field in the target DataStore.
     * @param target
     * @param field
     * @param value
     */
    private final double setFieldString(DataStore target, String field, String value) {
        return this.dm.setField ( target, field, value );
    }
    
    /**
     * Copy the value of the specified sourceField in the source DataStore to the corresponding targetField in the target DataStore. 
     * This method assumes that the value being set is of type Double.
     * @param target
     * @param source
     * @param field
     */
    private final double setFieldDouble(DataStore target, String targetField,  DataStore source, String sourceField) {
  	   return this.dm.setField ( target, targetField, this.dm.getFieldDouble ( source, sourceField ) );
    }
    
    /**
     * Copy the value of the specified sourceField in the source DataStore to the corresponding targetField in the target DataStore. 
     * This method assumes that the value being set is of type Date. 
     * @param target
     * @param source
     * @param field
     */
    
    private final double setFieldDate(DataStore target, String targetField,DataStore source, String sourceField) {
  	    return this.dm.setField ( target, targetField, this.dm.getFieldDate ( source, sourceField ) );
    }
    /**
     * Copy the value of the specified sourceField in the source DataStore to the corresponding targetField in the target DataStore. 
     * This method assumes that the value being set is of type String.
     * @param target
     * @param source
     * @param field
     */
    private final double setFieldString(DataStore target, String targetField,DataStore source, String sourceField) {
        return this.dm.setField ( target, targetField, this.dm.getFieldString ( source, sourceField ) );
    }
  
  
  
}



/* ---------------------------------------------------------------------


     
PROCEDURE DOWNLOAD_TABLES_ADL;

VAR
        OPEN_ID         : NUMBER;
        OPEN_ID2        : NUMBER;
        OPEN_ID3        : NUMBER;
        OPEN_ID4        : NUMBER;
        OPEN_ID5        : NUMBER;
        OPEN_ID6        : NUMBER;
        OPEN_ID7        : NUMBER;
        OPEN_ID8        : NUMBER;
        OPEN_ID9        : NUMBER;
        OPEN_ID10       : NUMBER;
        OPEN_ID11       : NUMBER;
        OPEN_ID12       : NUMBER;
        STATUS_CODE     : NUMBER;
        STATUS_CODE2    : NUMBER;
        STATUS_CODE3    : NUMBER;
        STATUS_CODE4    : NUMBER;
        STATUS_CODE5    : NUMBER;
        STATUS_CODE6    : NUMBER;
        STATUS_CODE7    : NUMBER;
        STATUS_CODE8    : NUMBER;
        STATUS_CODE9    : NUMBER;
        STATUS_CODE10   : NUMBER;
        STATUS_CODE11   : NUMBER;
        STATUS_CODE12   : NUMBER;

BEGIN
SET_TRACE();

        DB_OPEN(CLIENTES2_DSD,OPEN_ID,STATUS_CODE);
        if status_code <> 0
        then
                error(status_code);
        {endif}
        DB_OPEN(NUCLEO_SERVICIO_UPD_DSD,OPEN_ID2,STATUS_CODE2);
        DB_OPEN(INGRESOS_CLIENTE_2_DSD,OPEN_ID3,STATUS_CODE3);
        DB_OPEN(RECURSOS_CLIENTE_2_DSD,OPEN_ID4,STATUS_CODE4);
        DB_OPEN(DEDUCCIONES_CLIENTE2_DSD,OPEN_ID5,STATUS_CODE5);
        DB_OPEN(BILLETES_DSD,OPEN_ID11,STATUS_CODE11);

        DB_OPEN(CLIENTES_FIX_RO_DSD,OPEN_ID6,STATUS_CODE6);
        if status_code6 <> 0
        then error(status_code6);
        DB_OPEN(NUCLEO_SERVICIO_FIX_RO,OPEN_ID7,STATUS_CODE7);
        DB_OPEN(INGRESOS_CLIENTE_FIX_RO,OPEN_ID8,STATUS_CODE8);
        DB_OPEN(RECURSOS_CLIENTE_FIX_RO,OPEN_ID9,STATUS_CODE9);
        DB_OPEN(DEDUCCIONES_CLIENTE_FIX_RO,OPEN_ID10,STATUS_CODE10);
        DB_OPEN(BILLETES_FIX_RO,OPEN_ID12,STATUS_CODE12);

        DB_RESET(OPEN_ID,STATUS_CODE);
        CLIENTES2_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
                DB_RESET(OPEN_ID3,STATUS_CODE3);
                INGRESOS_CLIENTE_2_DSD.SEGURO_SOCIAL_CLIENTE:=
                        CLIENTES2_DSD.SEGURO_SOCIAL_CLIENTE;
                DB_QUERY(OPEN_ID3,STATUS_CODE3);
                DB_GET_FIRST(OPEN_ID3,STATUS_CODE3);
                WHILE STATUS_CODE3 = 0 DO
                BEGIN
                     DB_DELETE(OPEN_ID3,STATUS_CODE3);
                     DB_GET_NEXT(OPEN_ID3,STATUS_CODE3);
                END;

                DB_RESET(OPEN_ID4,STATUS_CODE4);
                RECURSOS_CLIENTE_2_DSD.SEGURO_SOCIAL_CLIENTE:=
                        CLIENTES2_DSD.SEGURO_SOCIAL_CLIENTE;
                DB_QUERY(OPEN_ID4,STATUS_CODE4);
                DB_GET_FIRST(OPEN_ID4,STATUS_CODE4);
                WHILE STATUS_CODE4 = 0 DO
                BEGIN
                     DB_DELETE(OPEN_ID4,STATUS_CODE4);
                     DB_GET_NEXT(OPEN_ID4,STATUS_CODE4);
                END;

                DB_RESET(OPEN_ID5,STATUS_CODE5);
                DEDUCCIONES_CLIENTE2_DSD.SEGURO_SOCIAL_CLIENTE:=
                        CLIENTES2_DSD.SEGURO_SOCIAL_CLIENTE;
                DB_QUERY(OPEN_ID5,STATUS_CODE5);
                DB_GET_FIRST(OPEN_ID5,STATUS_CODE5);
                WHILE STATUS_CODE5 = 0 DO
                BEGIN
                     DB_DELETE(OPEN_ID5,STATUS_CODE5);
                     DB_GET_NEXT(OPEN_ID5,STATUS_CODE5);
                END;
                

                DB_RESET(OPEN_ID11,STATUS_CODE11);
                BILLETES_DSD.SEGURO_SOCIAL_CLIENTE:=
                        CLIENTES2_DSD.SEGURO_SOCIAL_CLIENTE;
                DB_QUERY(OPEN_ID11,STATUS_CODE11);
                DB_GET_FIRST(OPEN_ID11,STATUS_CODE11);
                WHILE STATUS_CODE11 = 0 DO
                BEGIN
                     DB_DELETE(OPEN_ID11,STATUS_CODE11);
                     DB_GET_NEXT(OPEN_ID11,STATUS_CODE11);
                END;                            
                DB_DELETE(OPEN_ID,STATUS_CODE);
                DB_GET_NEXT(OPEN_ID,STATUS_CODE);
        END;

        DB_RESET(OPEN_ID6,STATUS_CODE6);
        CLIENTES_FIX_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN_ID6,STATUS_CODE6);

        DB_GET_FIRST(OPEN_ID6,STATUS_CODE6);
        if status_code6 <> 0
        then error (status_code6);
        WHILE STATUS_CODE6 = 0 DO
        BEGIN
                DB_RESET(OPEN_ID,STATUS_CODE);
                CLIENTES2_DSD.SEGURO_SOCIAL_CLIENTE :=
                        CLIENTES_FIX_RO_DSD.SEGURO_SOCIAL_CLIENTE;
                DB_QUERY(OPEN_ID,STATUS_CODE);
                DB_GET_FIRST(OPEN_ID,STATUS_CODE);
                CLIENTES2_DSD.SEGURO_SOCIAL_CLIENTE :=
                        CLIENTES_FIX_RO_DSD.SEGURO_SOCIAL_CLIENTE;
                CLIENTES2_DSD.SEGURO_SOCIAL_JEFE_FAMILIA :=
                        CLIENTES_FIX_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA;
                CLIENTES2_DSD.DSC_APELLIDO_PATERNO:=
                        CLIENTES_FIX_RO_DSD.DSC_APELLIDO_PATERNO;
                CLIENTES2_DSD.DSC_APELLIDO_MATERNO:=
                        CLIENTES_FIX_RO_DSD.DSC_APELLIDO_MATERNO;
                CLIENTES2_DSD.DSC_NOMBRE :=
                        CLIENTES_FIX_RO_DSD.DSC_NOMBRE;
                CLIENTES2_DSD.DSC_INICIAL:=
                        CLIENTES_FIX_RO_DSD.DSC_INICIAL;
                CLIENTES2_DSD.COD_PARENTESCO_FAM := 
                        CLIENTES_FIX_RO_DSD.COD_PARENTESCO_FAM;
                CLIENTES2_DSD.FCH_NACIMIENTO:=
                        CLIENTES_FIX_RO_DSD.FCH_NACIMIENTO;
                CLIENTES2_DSD.SEXO:=
                        CLIENTES_FIX_RO_DSD.SEXO;
                CLIENTES2_DSD.ID_INDICE_SOUNDEX:=
                        CLIENTES_FIX_RO_DSD.ID_INDICE_SOUNDEX;
                CLIENTES2_DSD.COD_DISPOSICION_CLIENTE:=
                        CLIENTES_FIX_RO_DSD.COD_DISPOSICION_CLIENTE;
                CLIENTES2_DSD.FCH_STATUS_DISP:=
                        CLIENTES_FIX_RO_DSD.FCH_STATUS_DISP;
                CLIENTES2_DSD.TELEFONO_HOGAR:=
                        CLIENTES_FIX_RO_DSD.TELEFONO_HOGAR;
                CLIENTES2_DSD.TELEFONO_TRABAJO:=
                        CLIENTES_FIX_RO_DSD.TELEFONO_TRABAJO;
                CLIENTES2_DSD.COD_INSTITUCION:=
                        CLIENTES_FIX_RO_DSD.COD_INSTITUCION;
                CLIENTES2_DSD.COD_INCAPACIDAD_PRIMARIA:=
                        CLIENTES_FIX_RO_DSD.COD_INCAPACIDAD_PRIMARIA;
                CLIENTES2_DSD.COD_INCAPACIDAD_SECUNDARIA:=
                        CLIENTES_FIX_RO_DSD.COD_INCAPACIDAD_SECUNDARIA;
                CLIENTES2_DSD.COD_CIUDADANIA:=
                        CLIENTES_FIX_RO_DSD.COD_CIUDADANIA;
                CLIENTES2_DSD.COD_ESCOLARIDAD:=
                        CLIENTES_FIX_RO_DSD.COD_ESCOLARIDAD;
                CLIENTES2_DSD.COD_ESTATUS_EMPLEO:=
                        CLIENTES_FIX_RO_DSD.COD_ESTATUS_EMPLEO;
                CLIENTES2_DSD.COD_ESTADO_CIVIL:=
                        CLIENTES_FIX_RO_DSD.COD_ESTADO_CIVIL;
                CLIENTES2_DSD.COD_OCUPACION:=
                        CLIENTES_FIX_RO_DSD.COD_OCUPACION;
                CLIENTES2_DSD.COD_PROBLEMA:=
                        CLIENTES_FIX_RO_DSD.COD_PROBLEMA;
                CLIENTES2_DSD.ID_NUMERO_EXTRANJERO:=
                        CLIENTES_FIX_RO_DSD.ID_NUMERO_EXTRANJERO;
                CLIENTES2_DSD.FCH_ARRIBO_EXTRANJERO:=
                        CLIENTES_FIX_RO_DSD.FCH_ARRIBO_EXTRANJERO;
                CLIENTES2_DSD.FCH_EXPIRACION_MEDICAID:=
                        CLIENTES_FIX_RO_DSD.FCH_EXPIRACION_MEDICAID;
                CLIENTES2_DSD.FCH_EXPIRACION_MEDICARE:=
                        CLIENTES_FIX_RO_DSD.FCH_EXPIRACION_MEDICARE;
                CLIENTES2_DSD.ID_NUMERO_MEDICARE:=
                        CLIENTES_FIX_RO_DSD.ID_NUMERO_MEDICARE;
                CLIENTES2_DSD.ID_NUMERO_MEDICAID:=
                        CLIENTES_FIX_RO_DSD.ID_NUMERO_MEDICAID;
                CLIENTES2_DSD.SEGURO_SOCIAL_ANTERIOR:=
                        CLIENTES_FIX_RO_DSD.SEGURO_SOCIAL_ANTERIOR;
                CLIENTES2_DSD.COD_PASOS:=
                        CLIENTES_FIX_RO_DSD.COD_PASOS;
                CLIENTES2_DSD.COD_RAZON_DESCALIFICADO_PAN:=
                        CLIENTES_FIX_RO_DSD.COD_RAZON_DESCALIFICADO_PAN;
                CLIENTES2_DSD.COD_RAZON_DESCALIFICADO_AE:=
                        CLIENTES_FIX_RO_DSD.COD_RAZON_DESCALIFICADO_AE;
                CLIENTES2_DSD.COD_ANTECEDENTES_PROGRAMA:=
                        CLIENTES_FIX_RO_DSD.COD_ANTECEDENTES_PROGRAMA;
                CLIENTES2_DSD.ANTECEDE_PROGRAMA_NUM_CASO:=
                        CLIENTES_FIX_RO_DSD.ANTECEDE_PROGRAMA_NUM_CASO;
                CLIENTES2_DSD.ANTECEDE_PROGRAMA_OFIC_LOCAL:=
                        CLIENTES_FIX_RO_DSD.ANTECEDE_PROGRAMA_OFIC_LOCAL;
                CLIENTES2_DSD.ANTECEDE_FECHAS_CIERRE:=
                        CLIENTES_FIX_RO_DSD.ANTECEDE_FECHAS_CIERRE;
                CLIENTES2_DSD.NUM_MESES_DESC_PAN:=
                        CLIENTES_FIX_RO_DSD.NUM_MESES_DESC_PAN;
                CLIENTES2_DSD.FCH_DESCALIFICADO_PAN:=
                        CLIENTES_FIX_RO_DSD.FCH_DESCALIFICADO_PAN;
                CLIENTES2_DSD.NUM_MESES_DESC_AE:=
                        CLIENTES_FIX_RO_DSD.NUM_MESES_DESC_AE;
                CLIENTES2_DSD.FCH_DESCALIFACADO_AE:=
                        CLIENTES_FIX_RO_DSD.FCH_DESCALIFACADO_AE;
                CLIENTES2_DSD.ANTECEDE_RAZON:=
                        CLIENTES_FIX_RO_DSD.ANTECEDE_RAZON;
                CLIENTES2_DSD.NUM_VECES_DESC:=
                        CLIENTES_FIX_RO_DSD.NUM_VECES_DESC;
                CLIENTES2_DSD.FLG_DESCALIFICADO:=
                        CLIENTES_FIX_RO_DSD.FLG_DESCALIFICADO;
                CLIENTES2_DSD.FLG_INCAPACIDAD_VERIFICADA:=
                        CLIENTES_FIX_RO_DSD.FLG_INCAPACIDAD_VERIFICADA;
                CLIENTES2_DSD.DSC_INSTITUCION_ESCUELA:=
                        CLIENTES_FIX_RO_DSD.DSC_INSTITUCION_ESCUELA;
                CLIENTES2_DSD.COD_PSM:=
                        CLIENTES_FIX_RO_DSD.COD_PSM;
                CLIENTES2_DSD.COD_AEC_FACTOR_ELEG:=
                        CLIENTES_FIX_RO_DSD.COD_AEC_FACTOR_ELEG;
                CLIENTES2_DSD.FLG_REHABILITACION_VOC:=
                        CLIENTES_FIX_RO_DSD.FLG_REHABILITACION_VOC;
                CLIENTES2_DSD.FACT_ELEGIBILIDAD_AEC:=
                        CLIENTES_FIX_RO_DSD.FACT_ELEGIBILIDAD_AEC;
                CLIENTES2_DSD.RMO_COD:=
                        CLIENTES_FIX_RO_DSD.RMO_COD;
                CLIENTES2_DSD.COD_STATUS:=
                        CLIENTES_FIX_RO_DSD.COD_STATUS;
                CLIENTES2_DSD.FCH_STATUS:=
                        CLIENTES_FIX_RO_DSD.FCH_STATUS;
                CLIENTES2_DSD.CESION_MEDICAID:=
                        CLIENTES_FIX_RO_DSD.CESION_MEDICAID;
                CLIENTES2_DSD.NOMBRE_PLAN_MEDICO:=
                        CLIENTES_FIX_RO_DSD.NOMBRE_PLAN_MEDICO;
                CLIENTES2_DSD.TIPO_CUBIERTA_MEDICARE:=
                        CLIENTES_FIX_RO_DSD.TIPO_CUBIERTA_MEDICARE;
                CLIENTES2_DSD.DSC_APODO:=
                        CLIENTES_FIX_RO_DSD.DSC_APODO;
                CLIENTES2_DSD.FLG_PRES:=
                        CLIENTES_FIX_RO_DSD.FLG_PRES;
                CLIENTES2_DSD.FLG_TANF:=
                        CLIENTES_FIX_RO_DSD.FLG_TANF;
                CLIENTES2_DSD.TIPO_REGISTRO:=
                        CLIENTES_FIX_RO_DSD.TIPO_REGISTRO;
                CLIENTES2_DSD.MESES_SWIP:=
                        CLIENTES_FIX_RO_DSD.MESES_SWIP;
                CLIENTES2_DSD.ESTUDIA_TIEMPO_COMPLETO:=
                        CLIENTES_FIX_RO_DSD.ESTUDIA_TIEMPO_COMPLETO;
                CLIENTES2_DSD.ASISTE_REGULARIDAD:=
                        CLIENTES_FIX_RO_DSD.ASISTE_REGULARIDAD;
                CLIENTES2_DSD.CONVICTO_SUSTANCIAS:=
                        CLIENTES_FIX_RO_DSD.CONVICTO_SUSTANCIAS;
                CLIENTES2_DSD.CONVICTO_SUSTANCIAS_F_E:=
                        CLIENTES_FIX_RO_DSD.CONVICTO_SUSTANCIAS_F_E;
                CLIENTES2_DSD.CONVICTO_DECL_FRAUD:=
                        CLIENTES_FIX_RO_DSD.CONVICTO_DECL_FRAUD;
                CLIENTES2_DSD.CONVICTO_DECL_FRAUD_F_E:=
                        CLIENTES_FIX_RO_DSD.CONVICTO_DECL_FRAUD_F_E;
                CLIENTES2_DSD.VIOLACION_PROBATORIA:=
                        CLIENTES_FIX_RO_DSD.VIOLACION_PROBATORIA;
                CLIENTES2_DSD.VIOLACION_PROBATORIA_F_E:=
                        CLIENTES_FIX_RO_DSD.VIOLACION_PROBATORIA_F_E;
                CLIENTES2_DSD.HUELGA:=
                        CLIENTES_FIX_RO_DSD.HUELGA;
                CLIENTES2_DSD.CONTEO_60_MESES_TANF:=
                        CLIENTES_FIX_RO_DSD.CONTEO_60_MESES_TANF;
                CLIENTES2_DSD.FCH_VENCIMIENTO_DESC:=
                        CLIENTES_FIX_RO_DSD.FCH_VENCIMIENTO_DESC;
                CLIENTES2_DSD.FCH_CIERRE_DESCA:=
                        CLIENTES_FIX_RO_DSD.FCH_CIERRE_DESCA;
                CLIENTES2_DSD.MOTIVOS_ELEGIBILIDAD:=
                        CLIENTES_FIX_RO_DSD.MOTIVOS_ELEGIBILIDAD;
                CLIENTES2_DSD.FCH_FIRMO_PRI:=
                        CLIENTES_FIX_RO_DSD.FCH_FIRMO_PRI;
                CLIENTES2_DSD.FCH_ENTREGA_AUTOGESTION:=
                        CLIENTES_FIX_RO_DSD.FCH_ENTREGA_AUTOGESTION;
                CLIENTES2_DSD.FCH_REFERIDO_MANEJO:=
                        CLIENTES_FIX_RO_DSD.FCH_REFERIDO_MANEJO;
                CLIENTES2_DSD.ESTATUS_PART_TRABAJO:=
                        CLIENTES_FIX_RO_DSD.ESTATUS_PART_TRABAJO;
                CLIENTES2_DSD.FCH_EFECT_DESCA:=
                        CLIENTES_FIX_RO_DSD.FCH_EFECT_DESCA;
                CLIENTES2_DSD.MESES_EXENCION_TANF:=
                        CLIENTES_FIX_RO_DSD.MESES_EXENCION_TANF;
                CLIENTES2_DSD.FLG_PTRA:=
                        CLIENTES_FIX_RO_DSD.FLG_PTRA;
                CLIENTES2_DSD.FLG_VET:=
                        CLIENTES_FIX_RO_DSD.FLG_VET;
                CLIENTES2_DSD.FLG_18ANOS:=
                        CLIENTES_FIX_RO_DSD.FLG_18ANOS;
                CLIENTES2_DSD.FLG_60ANOS:=
                        CLIENTES_FIX_RO_DSD.FLG_60ANOS;
                CLIENTES2_DSD.FLG_5MESES:=
                        CLIENTES_FIX_RO_DSD.FLG_5MESES;
                CLIENTES2_DSD.FECHA_DESDE_EXEN:=
                        CLIENTES_FIX_RO_DSD.FECHA_DESDE_EXEN;
                CLIENTES2_DSD.FECHA_HASTA_EXEN:=
                        CLIENTES_FIX_RO_DSD.FECHA_HASTA_EXEN;
                CLIENTES2_DSD.REMANENTE:=
                        CLIENTES_FIX_RO_DSD.REMANENTE;
                CLIENTES2_DSD.FECHA_REGISTRO:=
                        CLIENTES_FIX_RO_DSD.FECHA_REGISTRO;
                CLIENTES2_DSD.FCH_JUNTA_MEDICA:=
                        CLIENTES_FIX_RO_DSD.FCH_JUNTA_MEDICA;
                CLIENTES2_DSD.DSC_ASISTE_REGULARIDAD:=
                        CLIENTES_FIX_RO_DSD.DSC_ASISTE_REGULARIDAD;
                CLIENTES2_DSD.FCH_VENCIMIENTO_DESC_AE:=
                        CLIENTES_FIX_RO_DSD.FCH_VENCIMIENTO_DESC_AE;
                CLIENTES2_DSD.FCH_CIERRE_DESCA_AE:=
                        CLIENTES_FIX_RO_DSD.FCH_CIERRE_DESCA_AE;
                CLIENTES2_DSD.FCH_EFECT_DESCA_AE:=
                        CLIENTES_FIX_RO_DSD.FCH_EFECT_DESCA_AE;
                CLIENTES2_DSD.OCUPACION1 :=
                        CLIENTES_FIX_RO_DSD.OCUPACION1;
                CLIENTES2_DSD.OCUPACION2 :=
                        CLIENTES_FIX_RO_DSD.OCUPACION2;
                CLIENTES2_DSD.OCUPACION3 :=
                        CLIENTES_FIX_RO_DSD.OCUPACION3;
                CLIENTES2_DSD.ACEPTA_REGISTRO_EMPLEO :=
                        CLIENTES_FIX_RO_DSD.ACEPTA_REGISTRO_EMPLEO;
                CLIENTES2_DSD.ACTIVO_REGISTRO_EMPLEO :=
                        CLIENTES_FIX_RO_DSD.ACTIVO_REGISTRO_EMPLEO;

                DB_INSERT(OPEN_ID,STATUS_CODE);
                DB_GET_NEXT(OPEN_ID6,STATUS_CODE6);
        END;

{ UPLOAD DE INGRESOS DEL CLIENTE }

                DB_GET_FIRST(OPEN_ID8,STATUS_CODE8);
                WHILE STATUS_CODE8 = 0 DO
                BEGIN
                     INGRESOS_CLIENTE_2_DSD.SEGURO_SOCIAL_CLIENTE:=
                        INGRESOS_CLIENTE_FIX_RO.SEGURO_SOCIAL_CLIENTE;
                     INGRESOS_CLIENTE_2_DSD.COD_TIPO_INGRESO:=
                        INGRESOS_CLIENTE_FIX_RO.COD_TIPO_INGRESO;
                     INGRESOS_CLIENTE_2_DSD.VLR_CANTIDAD_INGRESO:=
                        INGRESOS_CLIENTE_FIX_RO.VLR_CANTIDAD_INGRESO;
                     INGRESOS_CLIENTE_2_DSD.DSC_OBS_INGRESO:=
                        INGRESOS_CLIENTE_FIX_RO.DSC_OBS_INGRESO;
                     INGRESOS_CLIENTE_2_DSD.DSC_NOMBRE_PATRONO:=
                        INGRESOS_CLIENTE_FIX_RO.DSC_NOMBRE_PATRONO;
                     INGRESOS_CLIENTE_2_DSD.FLG_PAN:=
                        INGRESOS_CLIENTE_FIX_RO.FLG_PAN;
                     INGRESOS_CLIENTE_2_DSD.FLG_AE:=
                        INGRESOS_CLIENTE_FIX_RO.FLG_AE;
                     INGRESOS_CLIENTE_2_DSD.VLR_CANTIDAD_REHABILITACION:=
                        INGRESOS_CLIENTE_FIX_RO.VLR_CANTIDAD_REHABILITACION;
                     INGRESOS_CLIENTE_2_DSD.FLG_FRECUENCIA:=
                        INGRESOS_CLIENTE_FIX_RO.FLG_FRECUENCIA;
                     INGRESOS_CLIENTE_2_DSD.FCH_HASTA_CANT_REHAB:=
                        INGRESOS_CLIENTE_FIX_RO.FCH_HASTA_CANT_REHAB;
                     INGRESOS_CLIENTE_2_DSD.FCH_RECIBIO_GLOB :=
                        INGRESOS_CLIENTE_FIX_RO.FCH_RECIBO_GLOB;
                     INGRESOS_CLIENTE_2_DSD.RMO_OFICINA :=
                        INGRESOS_CLIENTE_FIX_RO.RMO_OFICINA;

                DB_INSERT(OPEN_ID3,STATUS_CODE3);
                DB_GET_NEXT(OPEN_ID8,STATUS_CODE8);
                END;

{ UPLOAD DE RECURSOS DEL CLIENTE }

                DB_GET_FIRST(OPEN_ID9,STATUS_CODE9);
                WHILE STATUS_CODE9 = 0 DO
                BEGIN
                     RECURSOS_CLIENTE_2_DSD.SEGURO_SOCIAL_CLIENTE:=
                        RECURSOS_CLIENTE_FIX_RO.SEGURO_SOCIAL_CLIENTE;
                     RECURSOS_CLIENTE_2_DSD.COD_TIPO_RECURSO:=
                        RECURSOS_CLIENTE_FIX_RO.COD_TIPO_RECURSO;
                     RECURSOS_CLIENTE_2_DSD.VLR_CANTIDAD_RECURSO:=
                        RECURSOS_CLIENTE_FIX_RO.VLR_CANTIDAD_RECURSO;
                     RECURSOS_CLIENTE_2_DSD.DSC_OBS_RECURSO:=
                        RECURSOS_CLIENTE_FIX_RO.DSC_OBS_RECURSO;
                     RECURSOS_CLIENTE_2_DSD.RMO_OFICINA:=
                        RECURSOS_CLIENTE_FIX_RO.RMO_OFICINA;
                DB_INSERT(OPEN_ID4,STATUS_CODE4);
                DB_GET_NEXT(OPEN_ID9,STATUS_CODE9);
                END;

{ UPLOAD DEDUCCIONES DEL CLIENTE }

                DB_GET_FIRST(OPEN_ID10,STATUS_CODE10);
                WHILE STATUS_CODE10 = 0 DO
                BEGIN
                     DEDUCCIONES_CLIENTE2_DSD.SEGURO_SOCIAL_CLIENTE:=
                        DEDUCCIONES_CLIENTE_FIX_RO.SEGURO_SOCIAL_CLIENTE;
                     DEDUCCIONES_CLIENTE2_DSD.COD_TIPO_DEDUCCIONE:=
                        DEDUCCIONES_CLIENTE_FIX_RO.COD_TIPO_DEDUCCIONE;
                     DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE:=
                        DEDUCCIONES_CLIENTE_FIX_RO.VLR_CANTIDAD_DEDUCCIONE;
                     DEDUCCIONES_CLIENTE2_DSD.DSC_OBS_DEDUCCIONE:=
                        DEDUCCIONES_CLIENTE_FIX_RO.DSC_OBS_DEDUCC;
                     DEDUCCIONES_CLIENTE2_DSD.RMO_OFICINA :=
                        DEDUCCIONES_CLIENTE_FIX_RO.RMO_OFICINA;
                DB_INSERT(OPEN_ID5,STATUS_CODE5);
                DB_GET_NEXT(OPEN_ID10,STATUS_CODE10);
                END;

{ NUCLEO DE SERVICIOS }
                DB_RESET(OPEN_ID2,STATUS_CODE2);
                NUCLEO_SERVICIO_UPD_DSD.SEGURO_SOCIAL_JEFE_FAM:= SS_JEFE_GBL;
                NUCLEO_SERVICIO_UPD_DSD.SEGURO_SOCIAL_JEFE_SERV:= SS_SERV_GBL;
                NUCLEO_SERVICIO_UPD_DSD.COD_SERVICIO:= COD_SERV_GBL;
                DB_QUERY(OPEN_ID2,STATUS_CODE2);

                DB_GET_FIRST(OPEN_ID2,STATUS_CODE2);
                WHILE STATUS_CODE2 = 0 DO
                BEGIN
                        DB_DELETE(OPEN_ID2,STATUS_CODE2);
                        DB_GET_NEXT(OPEN_ID2,STATUS_CODE2);
                END;

                DB_GET_FIRST(OPEN_ID7,STATUS_CODE7);

                WHILE STATUS_CODE7 = 0 DO
                BEGIN
                NUCLEO_SERVICIO_UPD_DSD.SEGURO_SOCIAL_JEFE_FAM:=
                        NUCLEO_SERVICIO_FIX_RO.SEGURO_SOCIAL_JEFE_FAM;
                NUCLEO_SERVICIO_UPD_DSD.SEGURO_SOCIAL_JEFE_SERV:=
                        NUCLEO_SERVICIO_FIX_RO.SEGURO_SOCIAL_JEFE_SERV;
                NUCLEO_SERVICIO_UPD_DSD.COD_SERVICIO:=
                        NUCLEO_SERVICIO_FIX_RO.COD_SERVICIO;
                NUCLEO_SERVICIO_UPD_DSD.SEGURO_SOCIAL_BENEFICIARIO:=
                        NUCLEO_SERVICIO_FIX_RO.SEGURO_SOCIAL_BENEFICIARIO;
                NUCLEO_SERVICIO_UPD_DSD.COD_PARENTESCO_RELACION_SERV:=
                        NUCLEO_SERVICIO_FIX_RO.COD_PARENTESCO_RELACION_SERV;
                DB_INSERT(OPEN_ID2,STATUS_CODE2);
                DB_GET_NEXT(OPEN_ID7,STATUS_CODE7);
                END;

{BILLETES DE LOTERIA}
                DB_GET_FIRST(OPEN_ID12,STATUS_CODE12);
                WHILE STATUS_CODE12 = 0 DO
                BEGIN
                    BILLETES_DSD.SEGURO_SOCIAL_CLIENTE:=
                        BILLETES_FIX_RO.SEGURO_SOCIAL_CLIENTE;
                    BILLETES_DSD.COD_TIPO_INGRESO:=
                        BILLETES_FIX_RO.COD_TIPO_INGRESO;
                    BILLETES_DSD.CANT_BILLETE_ORDINARIO:=
                        BILLETES_FIX_RO.CANT_BILLETE_ORDINARIO;
                    BILLETES_DSD.GANANCIA_SEMANAL_ORD:=
                        BILLETES_FIX_RO.GANANCIA_SEMANAL_ORD;
                    BILLETES_DSD.GANANCIA_ANUAL_ORD:=
                        BILLETES_FIX_RO.GANANCIA_ANUAL_ORD;
                    BILLETES_DSD.CANT_BILLETE_EXTRA:=
                        BILLETES_FIX_RO.CANT_BILLETE_EXTRA;
                    BILLETES_DSD.GANANCIA_SEMANAL_EXTRA:=
                        BILLETES_FIX_RO.GANANCIA_SEMANAL_EXTRA;
                    BILLETES_DSD.GANANCIA_ANUAL_EXTRA:=
                        BILLETES_FIX_RO.GANANCIA_ANUAL_EXTRA;
                    BILLETES_DSD.INGRESO_ANUAL:=
                        BILLETES_FIX_RO.INGRESO_ANUAL;
                    BILLETES_DSD.FECHA_EFECTIVIDAD:=
                        BILLETES_FIX_RO.FECHA_EFECTIVIDAD;
                    BILLETES_DSD.INGRESO_MENSUAL:=
                        BILLETES_FIX_RO.INGRESO_MENSUAL;
                    DB_INSERT(OPEN_ID11,STATUS_CODE11);
                    DB_GET_NEXT(OPEN_ID12,STATUS_CODE12);
                END;
                                                
        DB_COMMIT(STATUS_CODE6);
        DB_CLOSE(OPEN_ID,STATUS_CODE);
        DB_CLOSE(OPEN_ID2,STATUS_CODE2);
        DB_CLOSE(OPEN_ID3,STATUS_CODE3);
        DB_CLOSE(OPEN_ID4,STATUS_CODE4);
        DB_CLOSE(OPEN_ID5,STATUS_CODE5);
        DB_CLOSE(OPEN_ID6,STATUS_CODE6);
        DB_CLOSE(OPEN_ID7,STATUS_CODE7);
        DB_CLOSE(OPEN_ID8,STATUS_CODE8);
        DB_CLOSE(OPEN_ID9,STATUS_CODE9);
        DB_CLOSE(OPEN_ID10,STATUS_CODE10);
        DB_CLOSE(OPEN_ID11,STATUS_CODE11);
        DB_CLOSE(OPEN_ID12,STATUS_CODE12);
SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
