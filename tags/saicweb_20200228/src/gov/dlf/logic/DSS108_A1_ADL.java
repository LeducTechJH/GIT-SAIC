package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DSS108_A1_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RID = 0;

  public double RCD = 0;

  public double NID = 0;

  public double NCD = 0;

  public double ID = 0;

  public double CD = 0;



  public String TMP = null;

  public DataStore RR_NOTI_INSERT_DSD = null;

  public DataStore BUSCAR_DIRECCION_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRID  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRCD  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RCD = value.getDouble ( );
  }  

  
  /**  */
  public static void setNID  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NID = value.getDouble ( );
  }  

  
  /**  */
  public static void setNCD  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NCD = value.getDouble ( );
  }  

  
  /**  */
  public static void setTMP  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).TMP = value.getString ( );
  }  

  
  /**  */
  public static void setID  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCD  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).CD = value.getDouble ( );
  }  
    


  /**  */
  public static String getTMP  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).TMP;
  }


  /**  */
  public static void setTMP  ( RallyApplication __app, String value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).TMP = value;
  }


  /**  */
  public static void setTMP  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).TMP = ( String ) value;
  }



  /**  */
  public static DataStore getRR_NOTI_INSERT_DSD  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RR_NOTI_INSERT_DSD;
  }


  /**  */
  public static void setRR_NOTI_INSERT_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RR_NOTI_INSERT_DSD = value;
  }


  /**  */
  public static void setRR_NOTI_INSERT_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RR_NOTI_INSERT_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getBUSCAR_DIRECCION_DSD  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).BUSCAR_DIRECCION_DSD;
  }


  /**  */
  public static void setBUSCAR_DIRECCION_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).BUSCAR_DIRECCION_DSD = value;
  }


  /**  */
  public static void setBUSCAR_DIRECCION_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).BUSCAR_DIRECCION_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRID  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RID;
  }


  /**  */
  public static Double getRIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RID );
  }


  /**  */
  public static void setRID  ( RallyApplication __app, double value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RID = value;
  }


  /**  */
  public static void setRID  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRCD  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RCD;
  }


  /**  */
  public static Double getRCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RCD );
  }


  /**  */
  public static void setRCD  ( RallyApplication __app, double value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RCD = value;
  }


  /**  */
  public static void setRCD  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).RCD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNID  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NID;
  }


  /**  */
  public static Double getNIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NID );
  }


  /**  */
  public static void setNID  ( RallyApplication __app, double value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NID = value;
  }


  /**  */
  public static void setNID  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNCD  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NCD;
  }


  /**  */
  public static Double getNCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NCD );
  }


  /**  */
  public static void setNCD  ( RallyApplication __app, double value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NCD = value;
  }


  /**  */
  public static void setNCD  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).NCD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getID  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).ID;
  }


  /**  */
  public static Double getIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).ID );
  }


  /**  */
  public static void setID  ( RallyApplication __app, double value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).ID = value;
  }


  /**  */
  public static void setID  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCD  ( RallyApplication __app )
  {
    return ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).CD;
  }


  /**  */
  public static Double getCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).CD );
  }


  /**  */
  public static void setCD  ( RallyApplication __app, double value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).CD = value;
  }


  /**  */
  public static void setCD  ( RallyApplication __app, Object value )
  {
    ( ( DSS108_A1_ADL ) __app.getADL ( DSS108_A1_ADL.class ) ).CD = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DSS108_A1_ADL get ( RallyApplication __app )
  {
    DSS108_A1_ADL adl = new DSS108_A1_ADL ( );
    __app.register ( adl, "DSS108_A1_ADL" );
    __app.setADL ( DSS108_A1_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DSS108_A1_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DSS108_A1_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DSS108_A1_ADL" );
    if ( rObj != null && rObj instanceof DSS108_A1_ADL )
    {
      this.app.setADL ( DSS108_A1_ADL.class, ( DSS108_A1_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DSS108_A1_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DSS108_A1_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    RR_NOTI_INSERT_DSD = this.dm.create ( "RR_NOTI_INSERT_DSD" );
    NID = RR_NOTI_INSERT_DSD.getId ( );
    NCD = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( NCD, 0 ) ) 
    {
      this.app.setError ( 0, NCD );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "RR_NOTI_INSERT_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "RR_NOTI_INSERT_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RR_NOTI_INSERT_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "RR_NOTI_INSERT_DSD" ), "COD_NOTIFICACION", "N108" );
    this.dm.setField ( this.dm.get ( "RR_NOTI_INSERT_DSD" ), "FCH_NOTIFICACION", this.app.SYSTEM_DATE );
    this.dm.setField ( this.dm.get ( "RR_NOTI_INSERT_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    boolean tempBool = this.dm.getLogEnabled ( );          
    this.dm.setLogEnabled ( false );
    
    NCD  = this.dm.insertRow ( NID );

    this.dm.setLogEnabled ( tempBool );
    
    if ( ! Compare.equals ( NCD, 0 ) ) 
    {
      this.app.setError ( 1, NCD );
      this.doReturn ( );
      return; 
    }

    NCD  = this.dm.dbCommit ( );
    if ( ! Compare.equals ( RCD, 0 ) ) 
    {
      this.app.setError ( 2, RCD );
      this.doReturn ( );
      return; 
    }
    NCD  = this.dm.dbClose ( NID );

    if ( ! Compare.equals ( NCD, 0 ) ) 
    {
      this.app.setError ( 3, NCD );
      this.doReturn ( );
      return; 
    }

    this.callParms.clear ( );
    this.callParms.set ( this.app.SS_JEFE_SERVICIO_GBL  );
    this.callParms.set ( this.app.form ( "DSS108_A1_FR" ).getStringItem ( "NOMB" ) );
    BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.app.SS_JEFE_SERVICIO_GBL  = this.callParms.getDouble ( );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "NOMB", this.callParms.getString ( ) );

    BUSCAR_DIRECCION_DSD = this.dm.create ( "BUSCAR_DIRECCION_DSD" );
    ID = BUSCAR_DIRECCION_DSD.getId ( );
    CD = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.app.setError ( 4, CD );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }

    CD  = this.dm.reset ( ID );

    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.app.setError ( 5, CD );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "DIRECCIONES_SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "DIRECCIONES_SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "DIRECCIONES_COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "DIRECCIONES_RMO_OFICINA", this.app.RMO_GBL );

    CD  = this.dm.limitQueryFromBuffer ( ID );
    CD  = this.dm.retrieve ( ID );

    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.app.setError ( 6, CD );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }

    CD  = this.dm.firstRow ( ID );

    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.app.setError ( 7, CD );
      this.doReturn ( );
      return; 
    }
    this.app.form ( "DSS108_A1_FR" ).setItem ( "DIR1", this.dm.getFieldString ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "DIRECCIONES_DSC_DIRECCION_1" )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "DIR2", this.dm.getFieldString ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "DIRECCIONES_DSC_DIRECCION_2" )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "CUID", this.dm.getFieldString ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "ZIP_TBL_CIUDAD" )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "ESTD", this.dm.getFieldString ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "ZIP_TBL_ESTADO" )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "ZIPC", this.dm.getFieldDouble ( this.dm.get ( "BUSCAR_DIRECCION_DSD" ), "DIRECCIONES_ZIP_CODE" )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "OREG", this.app.REG_GBL  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "CTRS", this.app.OFICINA_GBL  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "TNUM", this.app.form ( "RETRO_AUTORI2_FR" ).getDoubleItem ( "RPTS" ) );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "SSJF", this.app.SS_JEFE_FAMILIA_GBL  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "SSJS", this.app.SS_JEFE_SERVICIO_GBL  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "CSRV", this.app.COD_SERV_GBL  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "FCCO", StringService.toStringValue  ( this.app.GBL_DESDE ,"MMM-yyyy" ,StringService.Language.SPANISH )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "FCVE", StringService.toStringValue  ( this.app.GBL_HASTA ,"MMM-yyyy" ,StringService.Language.SPANISH )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "DR1G", this.app.DIR1_GBL  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "DR2G", this.app.DIR2_GBL  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "FCHS", this.app.FECHA_IDENTIFICADO_GBL  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "FCDD", RallyStringService.subString ( StringService.toStringValue  ( this.app.form ( "RETRO_AUTORI2_FR" ).getDateItem ( "FDEC" ),"dd,MMMM,yyyy" ,StringService.Language.SPANISH ), 0, 2 )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "FCMM", StringService.toStringValue  ( this.app.form ( "RETRO_AUTORI2_FR" ).getDateItem ( "FDEC" ),"MMMM" ,StringService.Language.SPANISH )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "FCYY", StringService.toStringValue  ( this.app.form ( "RETRO_AUTORI2_FR" ).getDateItem ( "FDEC" ),"yyyy" ,StringService.Language.SPANISH )  );
    this.app.form ( "DSS108_A1_FR" ).setItem ( "SDTE", this.app.SYSTEM_DATE  );
    this.app.setError ( 8, 7900 );

  }
}



/* ---------------------------------------------------------------------


     
procedure DSS108_a1_adl;

VAR     RID     :       NUMBER;
        RCD     :       NUMBER;
        NID     :       NUMBER;
        NCD     :       NUMBER;
        TMP     :       CHAR(7);
         ID      :       NUMBER;
         CD      :       NUMBER;

SET_TRACE();

BEGIN

DB_OPEN(RR_NOTI_INSERT_DSD, NID, NCD);
        IF (NCD <> 0)     THEN
                BEGIN
                        ERROR (NCD);
                        RETURN;
                END;

RR_NOTI_INSERT_DSD.SEGURO_SOCIAL_JEFE_FAM       :=      ss_jefe_familia_gbl;
RR_NOTI_INSERT_DSD.SEGURO_SOCIAL_JEFE_SERV      :=      ss_jefe_servicio_gbl;
RR_NOTI_INSERT_DSD.COD_SERVICIO                 :=      cod_serv_gbl;
RR_NOTI_INSERT_DSD.COD_NOTIFICACION             :=      'N108';
RR_NOTI_INSERT_DSD.FCH_NOTIFICACION             :=      SYSTEM_DATE;
RR_NOTI_INSERT_DSD.RMO_OFICINA                  :=      RMO_GBL;
DB_INSERT(NID,NCD);
IF (NCD <> 0) THEN
  BEGIN
        ERROR (NCD);
        RETURN;
  END;

DB_COMMIT (NCD);
IF (RCD <> 0) THEN
  BEGIN
        ERROR (RCD);
        RETURN;
  END;

DB_CLOSE (NID,NCD);
IF (NCD <> 0) THEN
  BEGIN
        ERROR (NCD);
        RETURN;
  END;

CALL BUSCAR_NOMBRE_COMPLETO_ADL(ss_jefe_servicio_gbl, dss108_a1_fr.NOMB);

DB_OPEN(BUSCAR_DIRECCION_DSD, ID, CD);
IF (CD<>0) THEN
        BEGIN
                ERROR(CD);
                SET_FAILURE();
                RETURN;
        END;
        
DB_RESET(ID,CD);
IF (CD<>0) THEN
        BEGIN
                ERROR(CD);
                RETURN;
        END;

BUSCAR_DIRECCION_DSD.DIRECCIONES_SEGURO_SOCIAL_JEFE_FAM   := ss_jefe_familia_gbl
;
BUSCAR_DIRECCION_DSD.DIRECCIONES_SEGURO_SOCIAL_JEFE_SERV  := ss_jefe_servicio_gb
l;
BUSCAR_DIRECCION_DSD.DIRECCIONES_COD_SERVICIO             := cod_serv_gbl;
BUSCAR_DIRECCION_DSD.DIRECCIONES_RMO_OFICINA := RMO_GBL;
DB_QUERY(ID,CD);
IF (CD <> 0)    THEN
        BEGIN
                ERROR(CD);
                SET_FAILURE();
                RETURN;
        END;
        
DB_GET_FIRST(ID,CD);
IF (CD <> 0)    THEN
        BEGIN
                ERROR(CD);
                RETURN;
        END;

dss108_a1_fr.DIR1       :=      BUSCAR_DIRECCION_DSD.DIRECCIONES_DSC_DIRECCION_1
;
dss108_a1_fr.DIR2       :=      BUSCAR_DIRECCION_DSD.DIRECCIONES_DSC_DIRECCION_2
;
dss108_a1_fr.CUID       :=      BUSCAR_DIRECCION_DSD.ZIP_TBL_CIUDAD;
dss108_a1_fr.ESTD       :=      BUSCAR_DIRECCION_DSD.ZIP_TBL_ESTADO;
dss108_a1_fr.ZIPC       :=      BUSCAR_DIRECCION_DSD.DIRECCIONES_ZIP_CODE;
dss108_a1_fr.OREG       :=      REG_GBL;
dss108_a1_fr.CTRS       :=      OFICINA_GBL;
dss108_a1_fr.TNUM       :=      RETRO_AUTORI2_FR.RPTS;
dss108_a1_fr.SSJF       :=      ss_jefe_familia_gbl;
dss108_a1_fr.SSJS       :=      ss_jefe_servicio_gbl;
dss108_a1_fr.CSRV       :=      COD_SERV_gbl;
dss108_a1_fr.FCCO       :=      TO_CHAR(gbl_DESDE,'Mon-YYYY');
dss108_a1_fr.FCVE       :=      TO_CHAR(gbl_HASTA,'Mon-YYYY');
dss108_a1_fr.DR1G       :=      DIR1_GBL;
dss108_a1_fr.DR2G       :=      DIR2_GBL;
dss108_a1_fr.FCHS       :=      FECHA_IDENTIFICADO_gbl;
dss108_a1_fr.FCDD       :=      SUBSTR (TO_CHAR(RETRO_autori2_fr.FDEC,'DD,Month,
YYYY'),0,2);
dss108_a1_fr.FCMM       :=      TO_CHAR(RETRO_autori2_fr.FDEC,'Month');
dss108_a1_fr.FCYY       :=      TO_CHAR(RETRO_autori2_fr.FDEC,'YYYY');
dss108_a1_fr.SDTE       :=      SYSTEM_DATE;

error(7900);

end;

SET_NOTRACE();

    



--------------------------------------------------------------------- */
