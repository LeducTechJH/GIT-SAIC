package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class REPORT_2_AVERAGE_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double CASOS = 0;

  public double TOTAL_CASOS = 0;

  public double PORCIENTO = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCASOS  ( RallyApplication __app, Parameter value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).CASOS = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOTAL_CASOS  ( RallyApplication __app, Parameter value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).TOTAL_CASOS = value.getDouble ( );
  }  

  
  /**  */
  public static void setPORCIENTO  ( RallyApplication __app, Parameter value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).PORCIENTO = value.getDouble ( );
  }  
    



  /**  */
  public static double getCASOS  ( RallyApplication __app )
  {
    return ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).CASOS;
  }


  /**  */
  public static Double getCASOSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).CASOS );
  }


  /**  */
  public static void setCASOS  ( RallyApplication __app, double value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).CASOS = value;
  }


  /**  */
  public static void setCASOS  ( RallyApplication __app, Object value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).CASOS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOTAL_CASOS  ( RallyApplication __app )
  {
    return ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).TOTAL_CASOS;
  }


  /**  */
  public static Double getTOTAL_CASOSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).TOTAL_CASOS );
  }


  /**  */
  public static void setTOTAL_CASOS  ( RallyApplication __app, double value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).TOTAL_CASOS = value;
  }


  /**  */
  public static void setTOTAL_CASOS  ( RallyApplication __app, Object value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).TOTAL_CASOS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getPORCIENTO  ( RallyApplication __app )
  {
    return ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).PORCIENTO;
  }


  /**  */
  public static Double getPORCIENTODouble ( RallyApplication __app )
  {
    return new Double ( ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).PORCIENTO );
  }


  /**  */
  public static void setPORCIENTO  ( RallyApplication __app, double value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).PORCIENTO = value;
  }


  /**  */
  public static void setPORCIENTO  ( RallyApplication __app, Object value )
  {
    ( ( REPORT_2_AVERAGE_ADL ) __app.getADL ( REPORT_2_AVERAGE_ADL.class ) ).PORCIENTO = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static REPORT_2_AVERAGE_ADL get ( RallyApplication __app )
  {
    REPORT_2_AVERAGE_ADL adl = new REPORT_2_AVERAGE_ADL ( );
    __app.register ( adl, "REPORT_2_AVERAGE_ADL" );
    __app.setADL ( REPORT_2_AVERAGE_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    REPORT_2_AVERAGE_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    REPORT_2_AVERAGE_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }


  /**
   * Populating the parameter set object with return values
   */
  protected void returnParms ( ParameterSet ps, double CASOS, double TOTAL_CASOS, double PORCIENTO )
  {
    ps.reset ( );
    ps.set ( CASOS );
    ps.set ( TOTAL_CASOS );
    ps.set ( PORCIENTO );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "REPORT_2_AVERAGE_ADL" );
    if ( rObj != null && rObj instanceof REPORT_2_AVERAGE_ADL )
    {
      this.app.setADL ( REPORT_2_AVERAGE_ADL.class, ( REPORT_2_AVERAGE_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "REPORT_2_AVERAGE_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "REPORT_2_AVERAGE_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    ps.reset ( );
    CASOS = ps.getDouble( );
    TOTAL_CASOS = ps.getDouble( );
    PORCIENTO = ps.getDouble( );

    if ( ! Compare.equals ( TOTAL_CASOS, 0 ) ) 
    {
      PORCIENTO = CASOS / TOTAL_CASOS * 100;
    }
    else
    {
      PORCIENTO = 0;
    }
    this.returnParms ( ps, CASOS, TOTAL_CASOS, PORCIENTO );

  }
}



/* ---------------------------------------------------------------------


     
procedure REPORT_2_AVERAGE_ADL( var     casos:          number;
                                var     total_casos:    number;
                                var     porciento:      number(9,2););

begin
        if total_casos <> 0 
        then
                porciento:=casos / total_casos * 100;
        else
                porciento:=0;
        {end-if}
end;

    



--------------------------------------------------------------------- */
