package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SET_VAR_GBL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SET_VAR_GBL get ( RallyApplication __app )
  {
    SET_VAR_GBL adl = new SET_VAR_GBL ( );
    __app.register ( adl, "SET_VAR_GBL" );
    __app.setADL ( SET_VAR_GBL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SET_VAR_GBL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SET_VAR_GBL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SET_VAR_GBL" );
    if ( rObj != null && rObj instanceof SET_VAR_GBL )
    {
      this.app.setADL ( SET_VAR_GBL.class, ( SET_VAR_GBL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SET_VAR_GBL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SET_VAR_GBL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.form ( "NUCLEO_REPORT_FRM" ).setItem ( "SS_JEFE", this.app.SS_JEFE_GBL  );
    this.app.form ( "NUCLEO_REPORT_FRM" ).setItem ( "SS_SERV", this.app.SS_SERV_GBL  );
    this.app.form ( "NUCLEO_REPORT_FRM" ).setItem ( "OFICINA", SET_FRM_GBL.getDESC_OFICINA ( this.app )  );
    this.app.form ( "NUCLEO_REPORT_FRM" ).setItem ( "DSC_SERV", SET_FRM_GBL.getDESC_SERVICIO ( this.app )  );
    this.app.form ( "NUCLEO_REPORT_FRM" ).setItem ( "JEFE_NOMBRE", SET_FRM_GBL.getNOMBRE_JEFE ( this.app )  );
    this.app.form ( "NUCLEO_REPORT_FRM" ).setItem ( "SERV_NOMBRE", SET_FRM_GBL.getNOMBRE_SERV ( this.app )  );
    this.app.form ( "NUCLEO_REPORT_FRM" ).setItem ( "TECNICO", this.app.ID_TECNICO_GBL  );

  }
}



/* ---------------------------------------------------------------------


     
begin
set_trace();
NUCLEO_REPORT_FRM.SS_JEFE := SS_JEFE_GBL;
NUCLEO_REPORT_FRM.SS_SERV := SS_SERV_GBL;
NUCLEO_REPORT_FRM.OFICINA := SET_FRM_GBL.DESC_OFICINA;
NUCLEO_REPORT_FRM.DSC_SERV := SET_FRM_GBL.DESC_SERVICIO;
NUCLEO_REPORT_FRM.JEFE_NOMBRE := SET_FRM_GBL.NOMBRE_JEFE;
NUCLEO_REPORT_FRM.SERV_NOMBRE := SET_FRM_GBL.NOMBRE_SERV;
NUCLEO_REPORT_FRM.TECNICO := ID_TECNICO_GBL;
set_notrace();
end;
    



--------------------------------------------------------------------- */
