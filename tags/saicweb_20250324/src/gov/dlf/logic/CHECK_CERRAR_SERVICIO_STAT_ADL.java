package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CHECK_CERRAR_SERVICIO_STAT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COUNT = 0;

  public double NCAL_FLAG = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).COUNT = value.getDouble ( );
  }  

  
  /**  */
  public static void setNCAL_FLAG  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).NCAL_FLAG = value.getDouble ( );
  }  
    



  /**  */
  public static double getCOUNT  ( RallyApplication __app )
  {
    return ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).COUNT;
  }


  /**  */
  public static Double getCOUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).COUNT );
  }


  /**  */
  public static void setCOUNT  ( RallyApplication __app, double value )
  {
    ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).COUNT = value;
  }


  /**  */
  public static void setCOUNT  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).COUNT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNCAL_FLAG  ( RallyApplication __app )
  {
    return ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).NCAL_FLAG;
  }


  /**  */
  public static Double getNCAL_FLAGDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).NCAL_FLAG );
  }


  /**  */
  public static void setNCAL_FLAG  ( RallyApplication __app, double value )
  {
    ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).NCAL_FLAG = value;
  }


  /**  */
  public static void setNCAL_FLAG  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_CERRAR_SERVICIO_STAT_ADL ) __app.getADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class ) ).NCAL_FLAG = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CHECK_CERRAR_SERVICIO_STAT_ADL get ( RallyApplication __app )
  {
    CHECK_CERRAR_SERVICIO_STAT_ADL adl = new CHECK_CERRAR_SERVICIO_STAT_ADL ( );
    __app.register ( adl, "CHECK_CERRAR_SERVICIO_STAT_ADL" );
    __app.setADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CHECK_CERRAR_SERVICIO_STAT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CHECK_CERRAR_SERVICIO_STAT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CHECK_CERRAR_SERVICIO_STAT_ADL" );
    if ( rObj != null && rObj instanceof CHECK_CERRAR_SERVICIO_STAT_ADL )
    {
      this.app.setADL ( CHECK_CERRAR_SERVICIO_STAT_ADL.class, ( CHECK_CERRAR_SERVICIO_STAT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CHECK_CERRAR_SERVICIO_STAT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CHECK_CERRAR_SERVICIO_STAT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) 
    {
      if ( ( Compare.le ( StringService.toStringValue  ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getDateItem ( "FCH_AUTORIZACION" )), "" ) ) && ( Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "CERR" ) )  ) 
      {
        this.app.setError ( 0, 7810 );
        this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
        this.app.browseToField ( "FECHAS_SERVICIO_FRM", "COD_STATUS_SERVICIO" ); 
        this.doReturn ( );
        return; 
      }
      if ( ( Compare.gt ( StringService.toStringValue  ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getDateItem ( "FCH_AUTORIZACION" )), "" ) ) && ( Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "RECH" ) )  ) 
      {
        this.app.setError ( 1, 7810 );
        this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
        this.app.browseToField ( "FECHAS_SERVICIO_FRM", "COD_STATUS_SERVICIO" ); 
        this.doReturn ( );
        return; 
      }
      if ( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), "CERRAD55" ) ) 
      {
        this.app.setError ( 2, 5560 );
        this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
        this.app.browseToField ( "FECHAS_SERVICIO_FRM", "COD_STATUS_SERVICIO" ); 
        this.doReturn ( );
        return; 
      }
    }
    //***** BEGIN MODS. BY J OLMEDA 5/18/2009 *****
    // code added:
    if ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && 
    		( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), "CERRAD14" ) )  && 
    		( ! Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_SERVICIO" ), "AE-C" ) )  ) 
    {
      this.app.setError ( 4, 4001 );
      this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
      this.app.browseToField ( "FECHAS_SERVICIO_FRM", "COD_STATUS_SERVICIO" ); 
      this.doReturn ( );
      return; 
    }
    //***** END MODS. BY J OLMEDA 5/18/2009 *****
    if ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && ( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), "ACCNEG" ) )  ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      if ( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_SERVICIO" ), "PAN" ) ) 
      {
        this.app.setError ( 3, 5560 );
        this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
        this.app.browseToField ( "FECHAS_SERVICIO_FRM", "COD_STATUS_SERVICIO" ); 
        this.doReturn ( );
        return; 
      }
      CONSISTENCIAS_STATUS_SERV_ADL.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && ( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), "ACCNEG" ) )  ) 
    {
      if ( ( Compare.equals ( NCAL_FLAG, 1 ) ) && ( Compare.equals ( COUNT, 1 ) )  ) 
      {
        this.doReturn ( );
        return;
      }
    }
    if ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && ( ! Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "CERR" ) )  && ( ! Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "RECH" ) )  && ( ! Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "ACCN" ) )  && ( ! Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "SUSP" ) )  ) 
    {
      this.app.setError ( 4, 5538 );
      this.app.errorFlag = false;
    }
    if ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && ( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), "CERRAD14" ) )  && ( ! Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_SERVICIO" ), "AE-C" ) )  ) 
    {
      this.app.setError ( 5, 5560 );
      this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
      this.app.browseToField ( "FECHAS_SERVICIO_FRM", "COD_STATUS_SERVICIO" ); 
      this.doReturn ( );
      return; 
    }
    if ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && ( Compare.ge ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getDoubleItem ( "CONTEO_60_MESES_TANF_VAR" ), 60 ) )  && ( Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "CERR" ) )  && ( ! Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), "CERRAD14" ) )  && ( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_SERVICIO" ), "AE-C" ) )  ) 
    {
      this.app.setError ( 6, 5561 );
      this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
    }
    if ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && ( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), "CERRAD14" ) )  && ( Compare.lt ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getDoubleItem ( "CONTEO_60_MESES_TANF_VAR" ), 60 ) )  && ( Compare.equals ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_SERVICIO" ), "AE-C" ) )  ) 
    {
      this.app.setError ( 7, 4012 );
      this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
    }
    if ( ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && ( Compare.equals ( RallyStringService.subString ( this.app.STATUS_SERV_GBL, 0, 4 ), "CERR" ) )  && ( Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "SUSP" ) )  ) || ( ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "CS" ) ) && ( Compare.equals ( RallyStringService.subString ( this.app.STATUS_SERV_GBL, 0, 4 ), "RECH" ) )  && ( Compare.equals ( RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "SUSP" ) )  ) ) 
    {
      this.app.setError ( 8, 4001 );
      this.app.form ( "FECHAS_SERVICIO_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.app.STATUS_SERV_GBL  );
      this.doReturn ( );
      return; 
    }
    else
    {
      this.app.STATUS_SERV_GBL = this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" );
      this.doReturn ( );
      return; 
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure check_cerrar_servicio_stat_adl;
var
  { para adl de consistencias}
        COUNT   :       NUMBER EXPORT;
        NCAL_FLAG :     NUMBER EXPORT;
begin
set_trace();

{ Esta seccion maneja consistencias para alterar un status de servicio }
{LLM 23-abr-2007 cambio para validar consitencias de status cerrados y rechazos}
 
IF MANT_ACCION_SERV_GBL='CS'
   THEN BEGIN
        IF    (TO_CHAR(FECHAS_SERVICIO_FRM.FCH_AUTORIZACION) <= '') AND
              (SUBSTR(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4) = 'CERR') 
        THEN
          BEGIN
            ERROR(7810);
           fechas_servicio_frm.cod_status_servicio := status_serv_gbl;
            set_current_field(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO);
{          SET_FAILURE();}
            RETURN;
          END;  
        IF    (TO_CHAR(FECHAS_SERVICIO_FRM.FCH_AUTORIZACION) > '') AND
              (SUBSTR(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4) = 'RECH') 
        THEN
          BEGIN
            ERROR(7810);
            fechas_servicio_frm.cod_status_servicio := status_serv_gbl;
            set_current_field(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO);
{           SET_FAILURE();}
            RETURN;
          END;          
      if (FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO = 'CERRAD55')
        then begin
                error(5560);
                fechas_servicio_frm.cod_status_servicio := status_serv_gbl;
                set_current_field(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO);
{                       set_failure();}
                RETURN;
             end;
        END;

if (mant_accion_serv_gbl = 'CS') and
   (FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO = 'ACCNEG') 
  then begin
        if (FECHAS_SERVICIO_FRM.COD_SERVICIO = 'PAN') then
          begin
                error(5560);
                fechas_servicio_frm.cod_status_servicio := status_serv_gbl;
                set_current_field(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO);
                return;
          end;
     { Cotejar unico miembro en el servicio y que este descalificado }
       call CONSISTENCIAS_STATUS_SERV_ADL;
        if (ncal_flag = 1) and (count = 1) then return;
       end;

 if (mant_accion_serv_gbl = 'CS') and 
        (substr(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4)<>'CERR') AND
        (substr(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4)<>'RECH') AND
        (substr(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4)<>'ACCN') AND
        (substr(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4)<>'SUSP')
        then begin
                error(5538);
                set_failure();
             end;

 if (mant_accion_serv_gbl = 'CS') and
    (FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO = 'CERRAD14') and 
    (FECHAS_SERVICIO_FRM.COD_SERVICIO <> 'AE-C')    

        then begin
                error(5560);
                fechas_servicio_frm.cod_status_servicio := status_serv_gbl;
                set_current_field(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO);
{                       set_failure();}
                RETURN;
             end;

{ISP 17-nov-2005 Validaci�n para que a un caso cerrad14 no le puedan cambiar
el status de cierre por otro.} 

 if (mant_accion_serv_gbl = 'CS') and
     (FECHAS_SERVICIO_FRM.CONTEO_60_MESES_TANF_VAR >= 60) and
     (substr(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4) = 'CERR') and  
     (FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO <> 'CERRAD14') and
      (FECHAS_SERVICIO_FRM.COD_SERVICIO = 'AE-C') 
          
           then begin
                  error(5561);
                  fechas_servicio_frm.cod_status_servicio := status_serv_gbl;
                             
                end;
 

{ISP 15-NOV-2005 VALIDACION PARA QUE LOS CASOS DE AE-C CON CONTEO MENORES
A 60 MESES NO PERMITA CERRAR POR CLAVE 14 }

 IF (mant_accion_serv_gbl = 'CS') and
    (FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO = 'CERRAD14') and 
    (FECHAS_SERVICIO_FRM.CONTEO_60_MESES_TANF_VAR < 60) and
     (FECHAS_SERVICIO_FRM.COD_SERVICIO = 'AE-C')

        then begin
                error(4012);
                fechas_servicio_frm.cod_status_servicio := status_serv_gbl;
                {set_failure();}
             end;
 BEGIN
                IF ((mant_accion_serv_gbl = 'CS') and
                (SUBSTR(status_serv_gbl,0,4) = 'CERR') AND
                (substr(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4) = 'SUSP'))
                OR
                ((mant_accion_serv_gbl = 'CS') and
                (substr(status_serv_gbl,0,4) = 'RECH') AND
                (substr(FECHAS_SERVICIO_FRM.COD_STATUS_SERVICIO,0,4) = 'SUSP'))
                THEN
                   BEGIN
                        ERROR(4001);
                        fechas_servicio_frm.cod_status_servicio := status_serv_g
bl;
                        return;
                   END;
                ELSE
                   begin
                      status_serv_gbl := fechas_servicio_frm.cod_status_servicio
;
                      RETURN;
                   end;
        END;
set_notrace();
end;

         
      
    



--------------------------------------------------------------------- */
