package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class PASE_DE_VARIABLES_HIST
extends ADL
{
	// -------------------------------------------------------------------
	// ----------   Class Attributes   -----------------------------------

	/**  */
	public static boolean staticCall = false;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes   --------------------------------

	/**  */
	public SAIC_DMQ_ORA_Application app;
	/**  */
	public RallyDataManager dm = null;



	// -------------------------------------------------------------------
	// ----------   Instance Condition Attributes   ----------------------



	// -------------------------------------------------------------------
	// ----------   Instance Export Attributes   -------------------------

	public double PRESUPUESTO_LOC = 0;

	public double PRESUPUESTO_LOC_STAT = 0;



	public DataStore PRESUPUESTO_LOC_HIST_DSD = null;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes' Access Methods   ----------------


	/**  */
	public static void setPRESUPUESTO_LOC  ( RallyApplication __app, Parameter value )
	{
		( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC = value.getDouble ( );
	}  


	/**  */
	public static void setPRESUPUESTO_LOC_STAT  ( RallyApplication __app, Parameter value )
	{
		( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC_STAT = value.getDouble ( );
	}  



	/**  */
	public static DataStore getPRESUPUESTO_LOC_HIST_DSD  ( RallyApplication __app )
	{
		return ( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC_HIST_DSD;
	}


	/**  */
	public static void setPRESUPUESTO_LOC_HIST_DSD  ( RallyApplication __app, DataStore value )
	{
		( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC_HIST_DSD = value;
	}


	/**  */
	public static void setPRESUPUESTO_LOC_HIST_DSD  ( RallyApplication __app, Object value )
	{
		( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC_HIST_DSD = ( DataStore ) value;
	}




	/**  */
	public static double getPRESUPUESTO_LOC  ( RallyApplication __app )
	{
		return ( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC;
	}


	/**  */
	public static Double getPRESUPUESTO_LOCDouble ( RallyApplication __app )
	{
		return new Double ( ( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC );
	}


	/**  */
	public static void setPRESUPUESTO_LOC  ( RallyApplication __app, double value )
	{
		( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC = value;
	}


	/**  */
	public static void setPRESUPUESTO_LOC  ( RallyApplication __app, Object value )
	{
		( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getPRESUPUESTO_LOC_STAT  ( RallyApplication __app )
	{
		return ( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC_STAT;
	}


	/**  */
	public static Double getPRESUPUESTO_LOC_STATDouble ( RallyApplication __app )
	{
		return new Double ( ( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC_STAT );
	}


	/**  */
	public static void setPRESUPUESTO_LOC_STAT  ( RallyApplication __app, double value )
	{
		( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC_STAT = value;
	}


	/**  */
	public static void setPRESUPUESTO_LOC_STAT  ( RallyApplication __app, Object value )
	{
		( ( PASE_DE_VARIABLES_HIST ) __app.getADL ( PASE_DE_VARIABLES_HIST.class ) ).PRESUPUESTO_LOC_STAT = ( ( Double ) value ).doubleValue ( );
	}



	// -------------------------------------------------------------------
	// ----------   Methods   --------------------------------------------

	/**
	 * 
	 * @param __app
	 * @return
	 */
	public static PASE_DE_VARIABLES_HIST get ( RallyApplication __app )
	{
		PASE_DE_VARIABLES_HIST adl = new PASE_DE_VARIABLES_HIST ( );
		__app.register ( adl, "PASE_DE_VARIABLES_HIST" );
		__app.setADL ( PASE_DE_VARIABLES_HIST.class, adl ); 
		adl.setApplication ( __app );
		return adl;
	}


	/**
	 *
	 * @param __app
	 * @param ps
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app, ParameterSet ps )
	{
		PASE_DE_VARIABLES_HIST.get ( __app ).process ( ps );
	}


	/**
	 *
	 * @param __app
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app )
	{
		ParameterSet ps = null;
		PASE_DE_VARIABLES_HIST.exec ( __app, ps );
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param __app
	 */
	public void setApplication ( RallyApplication __app )
	{
		this.app = ( SAIC_DMQ_ORA_Application ) __app;
		if ( this.app != null )
		{
			this.dm = ( RallyDataManager ) this.app.getDataManager ( );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param parms
	 */
	public void execute ( ParameterSet parms )
	{
		this.process ( parms );
	}




	/**
	 *
	 */
	protected void doReturn ( )
	{
		this.unregister ( );
	}


	/**
	 *
	 */
	public void unregister ( )
	{
		this.app.unregister ( this );
		IRegisteredObject rObj = this.app.get ( "PASE_DE_VARIABLES_HIST" );
		if ( rObj != null && rObj instanceof PASE_DE_VARIABLES_HIST )
		{
			this.app.setADL ( PASE_DE_VARIABLES_HIST.class, ( PASE_DE_VARIABLES_HIST ) rObj );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param ps
	 */
	protected void process ( ParameterSet ps )
	{
		Debug.println ( Debug.TRACE, "PASE_DE_VARIABLES_HIST Step " + this.currentStep );
		super.process ( ps );
		switch ( this.currentStep ) 
		{
		case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
		case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
		default: 
		{ 
			this.currentStep = 0;
			Debug.println ( Debug.TRACE, "PASE_DE_VARIABLES_HIST ended" );
			this.unregister ( );
			break;
		}
		}
		if ( this.currentStep > 0 ) this.app.goOn ( );
	}



	/**
	 *
	 */
	protected void step0 ( ParameterSet ps )
	{

		GET_NOMBRE_JEFE_DET_PAN_ADL.exec ( this.app );
		CHECK_ID_AUTORIZA_ADL.exec ( this.app );
		return;

	}


	/**
	 *
	 */
	protected void step1 ( ParameterSet ps )
	{
		
			PRESUPUESTO_LOC_HIST_DSD = this.dm.create ( "PRESUPUESTO_LOC_HIST_DSD" );
			PRESUPUESTO_LOC = PRESUPUESTO_LOC_HIST_DSD.getId ( );
			PRESUPUESTO_LOC_STAT = RallyDataStoreException.getDefault ( );

			PRESUPUESTO_LOC_STAT  = this.dm.reset ( PRESUPUESTO_LOC );

			this.dm.setField ( this.dm.get ( "PRESUPUESTO_LOC_HIST_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
			this.dm.setField ( this.dm.get ( "PRESUPUESTO_LOC_HIST_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", app.SS_JEFE_GBL);
			
			this.dm.setField ( this.dm.get ( "PRESUPUESTO_LOC_HIST_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
			
			this.dm.setField ( this.dm.get ( "PRESUPUESTO_LOC_HIST_DSD" ), "TIPO_TRANS", app.form ( "CASOS_HISTORICOS_RP" ).getStringItem( "TIPO_TRANS" ) );
			this.dm.setField ( this.dm.get ( "PRESUPUESTO_LOC_HIST_DSD" ), "HORA_ACTUAL", app.form ( "CASOS_HISTORICOS_RP" ).getDateItem ( "FECHA" ) );
			

			PRESUPUESTO_LOC_STAT  = this.dm.limitQueryFromBuffer ( PRESUPUESTO_LOC );
			PRESUPUESTO_LOC_STAT  = this.dm.retrieve ( PRESUPUESTO_LOC );

			PRESUPUESTO_LOC_STAT  = this.dm.firstRow ( PRESUPUESTO_LOC );

			boolean tempBool = this.dm.getLogEnabled ( );

			if ( Compare.equals ( PRESUPUESTO_LOC_STAT, 0 ) ) 
			{
//				this.dm.setField ( this.dm.get ( "PRESUPUESTO_LOC_HIST_DSD" ), "GASTOS_MEDICOS", DETERMINAR_ELEGIBILIDAD_PAN_2.getGASTOS_MEDICOS( this.app ) );

				Date fechaSolicitud = TruncService.trunc ( this.app.FCH_SOLIC_SERV_GBL, "MM" );
				double t =this.app.ID_TECNICO_AUTORIZA_GBL;
				//    if ( ! Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) ) 
				//    {
				
				//If results from DB is null/NaN normalize to zero.
				double salario = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "JRNL_SLRIO_ADIEST");
				salario = (Double.isNaN(salario)) ? 0.0 : salario;
				
				double exencion = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "EXENCION_INGRESO");
				exencion = (Double.isNaN(exencion)) ? 0.0 : exencion;
				
				double pension = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "PENSION_SS");
				pension = (Double.isNaN(pension)) ? 0.0 : pension;
				
				double retiro = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "RETIRO");
				retiro = (Double.isNaN(retiro)) ? 0.0 : retiro;
				
				double otrosIngresos = TruncService.trunc(dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "OTROS_INGR_PENS"));
				otrosIngresos = (Double.isNaN(otrosIngresos)) ? 0.0 : otrosIngresos;
				
				double deduccion60 = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "DEDUCCIONES_60");
				deduccion60 = (Double.isNaN(deduccion60)) ? 0.0 : deduccion60;
				
				double deduccionIncap = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "DEDUCCIONES_INCAP");
				deduccionIncap = (Double.isNaN(deduccionIncap)) ? 0.0 : deduccionIncap;
				
				double deduccionEst = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "DEDUCCIONES_EST");
				deduccionEst = (Double.isNaN(deduccionEst)) ? 0.0 : deduccionEst;
				
				double deduccionFija = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "DEDUCIONES_OTROS_ING");
				deduccionFija = (Double.isNaN(deduccionFija)) ? 0.0 : deduccionFija;
				
				double gastosCuidado = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "GASTOS_CUIDADO");
				gastosCuidado = (Double.isNaN(gastosCuidado)) ? 0.0 : gastosCuidado;
				
				double deduccionStand = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"),"DEDUCCION_STANDARD");
				deduccionStand = (Double.isNaN(deduccionStand)) ? 0.0 : deduccionStand;
				
				double ingresoNeto = this.dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"),"INGRESO_NETO_CPA");
				ingresoNeto = (Double.isNaN(ingresoNeto)) ? 0.0 : ingresoNeto;
			
				double sumaIngresos = salario - exencion + pension + retiro + otrosIngresos;

				//These subtractions stack on sumaIngresos calculation.
				double total60 = sumaIngresos - deduccion60;
				double totalIncap = total60 - deduccionIncap;
				double totalEst = totalIncap - deduccionEst;
				double totalFija = totalEst - deduccionFija;
				double totalMenor = totalFija - gastosCuidado;

				this.app.form("DETERMINACION_FR").setItem("NUCLEO", dm.getFieldDouble(dm.get("PRESUPUESTO_LOC_HIST_DSD"), "MIEMBROS"));
				this.app.form("DETERMINACION_FR").setItem("SAL_ADIE", salario);
				this.app.form("DETERMINACION_FR").setItem("RESTE_40", exencion);
				this.app.form("DETERMINACION_FR").setItem("SAL_NETO", salario - exencion);
				this.app.form("DETERMINACION_FR").setItem("SEG_SOC", pension + retiro);
				this.app.form("DETERMINACION_FR").setItem("OTROS", otrosIngresos);
				this.app.form("DETERMINACION_FR").setItem("SUMA_ING", sumaIngresos);
				this.app.form("DETERMINACION_FR").setItem("DEDUC_60", deduccion60);
				this.app.form("DETERMINACION_FR").setItem("TOT_60", total60);
				this.app.form("DETERMINACION_FR").setItem("DEDU_INCA", deduccionIncap);
				this.app.form("DETERMINACION_FR").setItem("TOT_INCA", totalIncap);
				this.app.form("DETERMINACION_FR").setItem("DEDU_EST", deduccionEst);
				this.app.form("DETERMINACION_FR").setItem("TOT_EST", totalEst);
				this.app.form("DETERMINACION_FR").setItem("DEDU_FIJA", deduccionFija);
				this.app.form("DETERMINACION_FR").setItem("TOT_DIJA", totalFija);
				this.app.form("DETERMINACION_FR").setItem("MENOR", gastosCuidado);
				this.app.form("DETERMINACION_FR").setItem("TOT_MENOR", totalMenor);
				this.app.form("DETERMINACION_FR").setItem ("STAND", deduccionStand);
				this.app.form("DETERMINACION_FR").setItem ("ING_NETO", ingresoNeto);
				
				/*
				this.app.form ( "DETERMINACION_FR" ).setItem ( "NUCLEO", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "MIEMBROS" ) );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "SAL_ADIE", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "JRNL_SLRIO_ADIEST" ) );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "RESTE_40", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "EXENCION_INGRESO" ) );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "SAL_NETO", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "JRNL_SLRIO_ADIEST" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "EXENCION_INGRESO" ) ); 
				this.app.form ( "DETERMINACION_FR" ).setItem ( "SEG_SOC",  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "PENSION_SS" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "RETIRO" ) );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "OTROS", TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "OTROS_INGR_PENS" ) )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "SUMA_ING", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "JRNL_SLRIO_ADIEST" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "EXENCION_INGRESO" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "PENSION_SS" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "RETIRO" )+ TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "OTROS_INGR_PENS" ) )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "DEDUC_60",this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_60" )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "TOT_60", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "JRNL_SLRIO_ADIEST" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "EXENCION_INGRESO" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "PENSION_SS" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "RETIRO" )+ TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "OTROS_INGR_PENS" ) ) - this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_60" )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "DEDU_INCA", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_INCAP" )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "TOT_INCA", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "JRNL_SLRIO_ADIEST" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "EXENCION_INGRESO" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "PENSION_SS" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "RETIRO" )+ TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "OTROS_INGR_PENS" ) ) - this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_60" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_INCAP" )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "DEDU_EST", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_EST" )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "TOT_EST", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "JRNL_SLRIO_ADIEST" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "EXENCION_INGRESO" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "PENSION_SS" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "RETIRO" )+ TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "OTROS_INGR_PENS" ) ) - this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_60" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_INCAP" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_EST" )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "DEDU_FIJA", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCIONES_OTROS_ING" )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "TOT_DIJA",this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "JRNL_SLRIO_ADIEST" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "EXENCION_INGRESO" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "PENSION_SS" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "RETIRO" )+ TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "OTROS_INGR_PENS" ) ) - this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_60" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_INCAP" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_EST" ) - this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCIONES_OTROS_ING" )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "MENOR",this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "GASTOS_CUIDADO" ) );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "TOT_MENOR",this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "JRNL_SLRIO_ADIEST" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "EXENCION_INGRESO" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "PENSION_SS" ) +  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "RETIRO" )+ TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "OTROS_INGR_PENS" ) ) - this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_60" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_INCAP" )  -  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCIONES_EST" ) - this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCIONES_OTROS_ING" ) - this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "GASTOS_CUIDADO" ) );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "STAND", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "DEDUCCION_STANDARD" ) );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "ING_NETO", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "INGRESO_NETO_CPA" ) );
		        
		        */
		        if (Compare.equals(this.app.RMO_GBL, 372601) || Compare.equals(this.app.RMO_GBL, 377701))
		        {
		        	
		        }
				this.app.form ( "DETERMINACION_FR" ).setItem ( "BENEFICIO", this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "BENEFICIO" ) );
				if  (Compare.gt (this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "BENEFICIO" ),0) )
				{
					this.app.form ( "DETERMINACION_FR" ).setItem ( "INELEGIBLE_REGU", ' '  );
					this.app.form ( "DETERMINACION_FR" ).setItem ( "ELEGIBLE_REGU", '*'  );
				}
				else
				{
					this.app.form ( "DETERMINACION_FR" ).setItem ( "INELEGIBLE_REGU", '*'  );
					this.app.form ( "DETERMINACION_FR" ).setItem ( "ELEGIBLE_REGU", ' '  );					
				}
				this.app.form ( "DETERMINACION_FR" ).setItem ( "RAZON",  this.dm.getFieldDouble ( this.dm.get ("PRESUPUESTO_LOC_HIST_DSD"  ), "COD_RAZON" )  );
			//	this.app.form ( "DETERMINACION_FR" ).setItem ( "FCH_EFECTIVIDAD", DETERMINAR_ELEGIBILIDAD_PAN_2.getFCH_EFECTIVIDAD ( this.app )  );
				this.app.form ( "DETERMINACION_FR" ).setItem ( "FCH_EFECTIVIDAD", this.app.SYSTEM_DATE);
				//this.app.form ( "DETERMINACION_FR" ).setItem ( "FCH_EFECTIVIDAD",DateUtil.addMonths ( this.app.FCH_SOLIC_SERV_GBL ));
	
			}

			if ( ! Compare.equals ( PRESUPUESTO_LOC_STAT, 0 ) ) 
			{
				this.app.setError ( 0, PRESUPUESTO_LOC_STAT );
			}



			PRESUPUESTO_LOC_STAT  = this.dm.dbClose ( PRESUPUESTO_LOC );
			if ( ! Compare.equals ( PRESUPUESTO_LOC_STAT, 0 ) ) 
			{
				this.app.setError ( 0, PRESUPUESTO_LOC_STAT );
			}


	
	}
}

