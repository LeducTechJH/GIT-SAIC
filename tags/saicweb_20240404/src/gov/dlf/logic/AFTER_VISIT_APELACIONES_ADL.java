package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AFTER_VISIT_APELACIONES_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double LASTKEY = 0;



  public Date FECHA_NULA = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setFECHA_NULA  ( RallyApplication __app, Parameter value )
  {
    ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).FECHA_NULA = value.getDate ( );
  }  

  
  /**  */
  public static void setLASTKEY  ( RallyApplication __app, Parameter value )
  {
    ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).LASTKEY = value.getDouble ( );
  }  
    


  /**  */
  public static Date getFECHA_NULA  ( RallyApplication __app )
  {
    return ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).FECHA_NULA;
  }


  /**  */
  public static void setFECHA_NULA  ( RallyApplication __app, Date value )
  {
    ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).FECHA_NULA = value;
  }


  /**  */
  public static void setFECHA_NULA  ( RallyApplication __app, Object value )
  {
    ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).FECHA_NULA = ( Date ) value;
  }




  /**  */
  public static double getLASTKEY  ( RallyApplication __app )
  {
    return ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).LASTKEY;
  }


  /**  */
  public static Double getLASTKEYDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).LASTKEY );
  }


  /**  */
  public static void setLASTKEY  ( RallyApplication __app, double value )
  {
    ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).LASTKEY = value;
  }


  /**  */
  public static void setLASTKEY  ( RallyApplication __app, Object value )
  {
    ( ( AFTER_VISIT_APELACIONES_ADL ) __app.getADL ( AFTER_VISIT_APELACIONES_ADL.class ) ).LASTKEY = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static AFTER_VISIT_APELACIONES_ADL get ( RallyApplication __app )
  {
    AFTER_VISIT_APELACIONES_ADL adl = new AFTER_VISIT_APELACIONES_ADL ( );
    __app.register ( adl, "AFTER_VISIT_APELACIONES_ADL" );
    __app.setADL ( AFTER_VISIT_APELACIONES_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    AFTER_VISIT_APELACIONES_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    AFTER_VISIT_APELACIONES_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "AFTER_VISIT_APELACIONES_ADL" );
    if ( rObj != null && rObj instanceof AFTER_VISIT_APELACIONES_ADL )
    {
      this.app.setADL ( AFTER_VISIT_APELACIONES_ADL.class, ( AFTER_VISIT_APELACIONES_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "AFTER_VISIT_APELACIONES_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "AFTER_VISIT_APELACIONES_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.COD_RAZON_GBL = this.app.form ( "APELACIONES_FR" ).getStringItem ( "COD_RAZON_APELACION" );
    this.app.FECHA_DESDE_GBL = this.app.form ( "APELACIONES_FR" ).getDateItem ( "FCH_NOTIFIC_ACCION" );
    this.app.ANS = this.app.form ( "APELACIONES_FR" ).getStringItem ( "CONTINUAR_BENEFICIOS" );
    LASTKEY = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( LASTKEY, RallyAppCommandFactory.ABORTACTION ) ) 
    {
      if ( Compare.equals ( this.app.COMP_FLAG_GBL, "Y" ) ) 
      {
        FLUJO_APELACIONES_ADL.setAPEL_COUNT ( this.app, MathService.minus ( FLUJO_APELACIONES_ADL.getAPEL_COUNT ( this.app ), 1  ) );
      }
      FLUJO_APELACIONES_ADL.setAPEL_STATUS ( this.app, "FAILURE" );
      this.app.returnTo ( "FLUJO_APELACIONES_ADL" ); if ( true ) return;
    }
    if ( Compare.equals ( LASTKEY, RallyAppCommandFactory.INSAFTER ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.executeCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( LASTKEY, RallyAppCommandFactory.INSAFTER ) ) 
    {
      return;
    }
    if ( Compare.equals ( LASTKEY, RallyAppCommandFactory.QBE ) ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      this.app.executeCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( LASTKEY, RallyAppCommandFactory.QBE ) ) 
    {
      return;
    }
    FECHA_NULA = TruncService.setNull ( FECHA_NULA  );
    if ( Compare.equals ( this.app.form ( "APELACIONES_FR" ).getDateItem ( "FCH_RADICADA" ), FECHA_NULA ) ) 
    {
      this.app.FECHA_RADICADA_GBL = FECHA_NULA;
    }
    else
    {
      this.app.FECHA_RADICADA_GBL = this.app.form ( "APELACIONES_FR" ).getDateItem ( "FCH_RADICADA" );
    }
    if ( ! Compare.equals ( this.app.form ( "APELACIONES_FR" ).getDateItem ( "FCH_RETIRO" ), FECHA_NULA ) ) 
    {
      this.app.RETIRO_APELACION_GBL = "S";
    }
    else
    {
      this.app.RETIRO_APELACION_GBL = "N";
    }
    if ( ( Compare.equals ( this.app.RECP_GBL, 1 ) ) && ( Compare.equals ( LASTKEY, RallyAppCommandFactory.EXITACTION ) )  ) 
    {
      this._condition2 = true;
    }
    else
    {
      this._condition2 = false;
    }
    if ( this._condition2 )
    {
      IMPRIMIR_APELACIONES_ADL.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    this.app.COMP_FLAG_GBL = "N";
    FLUJO_APELACIONES_ADL.setAPEL_STATUS ( this.app, "SUCCESS" );
    this.app.returnTo ( "FLUJO_APELACIONES_ADL" ); if ( true ) return;

  }
}



/* ---------------------------------------------------------------------


     
procedure after_visit_apelaciones_adl;
var
        fecha_nula : date;
        lastkey : number(9,0);

begin
set_trace();
        cod_razon_gbl := APELACIONES_FR.COD_RAZON_APELACION;
        FECHA_DESDE_GBL := APELACIONES_FR.FCH_NOTIFIC_ACCION;
        ans := APELACIONES_FR.CONTINUAR_BENEFICIOS;
        lastkey := get_cmd();
        if lastkey = abortaction
        then
           begin
                if comp_flag_gbl = 'Y'
                then
                   FLUJO_APELACIONES_ADL.APEL_COUNT := flujo_apelaciones_adl.ape
l_count - 1;
                {endif}
                flujo_apelaciones_adl.apel_status := 'FAILURE';
                return_to flujo_apelaciones_adl;
           end;
        {endif}

        if lastkey = insafter
        then
           execute_cmd(ignore);
        {endif}

        if lastkey = qbe
        then
           execute_cmd(ignore);
        {endif}

        make_null(fecha_nula);

        if apelaciones_fr.fch_radicada = fecha_nula
        then
                fecha_radicada_gbl := fecha_nula;
        else
                fecha_radicada_gbl := apelaciones_fr.fch_radicada;

        if APELACIONES_FR.FCH_RETIRO <> fecha_nula
        then
                RETIRO_APELACION_GBL := 'S';
        ELSE
                RETIRO_APELACION_GBL := 'N';
        {endif}

        if (recp_gbl = 1) and (lastkey = exitaction)
        then
           begin
                call IMPRIMIR_APELACIONES_ADL;
           end;
        {endif}

comp_flag_gbl := 'N';
flujo_apelaciones_adl.apel_status := 'SUCCESS';
return_to flujo_apelaciones_adl;
set_notrace();
end;
    



--------------------------------------------------------------------- */
