package gov.dlf.logic;


import gov.dlf.facade.*;
import java.util.*;

import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMMAND = 0;



  public Date NULL_DATE = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------


  /**  */
  public static Date getNULL_DATE  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class ) ).NULL_DATE;
  }


  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Date value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class ) ).NULL_DATE = value;
  }


  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class ) ).NULL_DATE = ( Date ) value;
  }




  /**  */
  public static double getCOMMAND  ( RallyApplication __app )
  {
    return ( ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class ) ).COMMAND;
  }


  /**  */
  public static Double getCOMMANDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class ) ).COMMAND );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, double value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class ) ).COMMAND = value;
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Object value )
  {
    ( ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ) __app.getADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL get ( RallyApplication __app )
  {
    CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL adl = new CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ( );
    __app.register ( adl, "CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL" );
    __app.setADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL" );
    if ( rObj != null && rObj instanceof CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL )
    {
      this.app.setADL ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL.class, ( CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }

      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CALENDARIO_LOCAL_FUNCTION_AFTER_INSERT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    //to eliminate form all ready unregistered
    if ( this.app.get ( "CALENDARIO_LOCAL_FUNCTION_FR" ) == null )
    {
      this.doReturn ( );
      return;
    }
    
    NULL_DATE = TruncService.setNull ( NULL_DATE  );
    if ( ! Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DHM_NUEVA" ), NULL_DATE ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      if ( Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getStringItem ( "FLG_FIRST_INSERT" ), "S" ) ) 
      {
        this.doReturn ( );
        return;
      }
      COMMAND = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
      if ( Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        this.app.callCommand ( RallyAppCommandFactory.IGNORE );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ! Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DHM_NUEVA" ), NULL_DATE ) ) 
    {
      if ( this._condition1 )    //      if ( Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) 
      {
      }
      this.app.callCommand ( RallyAppCommandFactory.INSAFTER );
      return;
    }

  }



  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ! Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DHM_NUEVA" ), NULL_DATE ) ) 
    {
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "FLG_FIRST_INSERT", "S"  );
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "ID_TECNICO", this.app.form ( "CALENDARIO_MAIN_FR" ).getDoubleItem ( "ID_TECNICO" ) );
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0", this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DHM_NUEVA" ) );
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "DURACION_HORA_MIN_CONTACTO", this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DUR_NUEVA" ) );
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "COD_SERVICIO", this.app.form ( "CALENDARIO_MAIN_FR" ).getStringItem ( "COD_SERVICIO" ) );
      this.app.COD_SERVICIO_GBL = this.app.form ( "CALENDARIO_MAIN_FR" ).getStringItem ( "COD_SERVICIO" );
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "COD_RAZON", this.app.form ( "CALENDARIO_MAIN_FR" ).getStringItem ( "COD_RAZON" ) );
      this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).setItem ( "DSC_EVENTO", this.app.form ( "CALENDARIO_MAIN_FR" ).getStringItem ( "DSC_EVENTO" ) );

      this.app.callCommand ( RallyAppCommandFactory.RPREV );
      return;
    }

  }

  /**
  *
  */
 protected void step3 ( ParameterSet ps )
 {
   if ( this._condition0 )    //    if ( ! Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DHM_NUEVA" ), NULL_DATE ) ) 
   {
     this.app.callCommand ( RallyAppCommandFactory.COMMIT );
     return;
   }

 }

  /**
   *
   */
  protected void step4 ( ParameterSet ps )

  {
    if ( this._condition0 )    //    if ( ! Compare.equals ( this.app.form ( "CALENDARIO_LOCAL_FUNCTION_FR" ).getDateItem ( "DHM_NUEVA" ), NULL_DATE ) ) 
    {
      this.app.callCommand ( RallyAppCommandFactory.EXITACTION );
      return;
    }
  }
}



/* ---------------------------------------------------------------------


     
VAR
        NULL_DATE       :       DATE;
        COMMAND         :       NUMBER(9,0);
BEGIN
SET_TRACE();
MAKE_NULL(NULL_DATE);

IF CALENDARIO_LOCAL_FUNCTION_FR.DHM_NUEVA <> NULL_DATE
THEN BEGIN
        IF CALENDARIO_LOCAL_FUNCTION_FR.FLG_FIRST_INSERT = 'S'
        THEN RETURN;

        COMMAND:=GET_CMD();
        IF COMMAND = EXITACTION
        THEN CALL_CMD('IGNORE');

        CALL_CMD('INSERT RECORD AFTER');

        CALENDARIO_LOCAL_FUNCTION_FR.FLG_FIRST_INSERT:='S';
        
        CALENDARIO_LOCAL_FUNCTION_FR.ID_TECNICO:=
        CALENDARIO_MAIN_FR.ID_TECNICO;

        CALENDARIO_LOCAL_FUNCTION_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0:=
        CALENDARIO_LOCAL_FUNCTION_FR.DHM_NUEVA;

        CALENDARIO_LOCAL_FUNCTION_FR.DURACION_HORA_MIN_CONTACTO:=
        CALENDARIO_LOCAL_FUNCTION_FR.DUR_NUEVA;

        CALENDARIO_LOCAL_FUNCTION_FR.COD_SERVICIO:=
        CALENDARIO_MAIN_FR.COD_SERVICIO;

        COD_SERVICIO_GBL:=CALENDARIO_MAIN_FR.COD_SERVICIO;

        CALENDARIO_LOCAL_FUNCTION_FR.COD_RAZON:=
        CALENDARIO_MAIN_FR.COD_RAZON;

        CALL_CMD('COMMIT');
        CALL_CMD('FINISH ACTION');

      END;
SET_NOTRACE();
END;
    



--------------------------------------------------------------------- */
