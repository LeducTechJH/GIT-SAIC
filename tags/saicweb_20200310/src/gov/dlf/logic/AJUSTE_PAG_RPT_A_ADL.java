package gov.dlf.logic;


import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AJUSTE_PAG_RPT_A_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMM = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMM  ( RallyApplication __app, Parameter value )
  {
    ( ( AJUSTE_PAG_RPT_A_ADL ) __app.getADL ( AJUSTE_PAG_RPT_A_ADL.class ) ).COMM = value.getDouble ( );
  }  
    



  /**  */
  public static double getCOMM  ( RallyApplication __app )
  {
    return ( ( AJUSTE_PAG_RPT_A_ADL ) __app.getADL ( AJUSTE_PAG_RPT_A_ADL.class ) ).COMM;
  }


  /**  */
  public static Double getCOMMDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AJUSTE_PAG_RPT_A_ADL ) __app.getADL ( AJUSTE_PAG_RPT_A_ADL.class ) ).COMM );
  }


  /**  */
  public static void setCOMM  ( RallyApplication __app, double value )
  {
    ( ( AJUSTE_PAG_RPT_A_ADL ) __app.getADL ( AJUSTE_PAG_RPT_A_ADL.class ) ).COMM = value;
  }


  /**  */
  public static void setCOMM  ( RallyApplication __app, Object value )
  {
    ( ( AJUSTE_PAG_RPT_A_ADL ) __app.getADL ( AJUSTE_PAG_RPT_A_ADL.class ) ).COMM = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static AJUSTE_PAG_RPT_A_ADL get ( RallyApplication __app )
  {
    AJUSTE_PAG_RPT_A_ADL adl = new AJUSTE_PAG_RPT_A_ADL ( );
    __app.register ( adl, "AJUSTE_PAG_RPT_A_ADL" );
    __app.setADL ( AJUSTE_PAG_RPT_A_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    AJUSTE_PAG_RPT_A_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    AJUSTE_PAG_RPT_A_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "AJUSTE_PAG_RPT_A_ADL" );
    if ( rObj != null && rObj instanceof AJUSTE_PAG_RPT_A_ADL )
    {
      this.app.setADL ( AJUSTE_PAG_RPT_A_ADL.class, ( AJUSTE_PAG_RPT_A_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "AJUSTE_PAG_RPT_A_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "AJUSTE_PAG_RPT_A_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    COMM = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( COMM, RallyAppCommandFactory.FPREV ) ) 
    {
      this.doReturn ( );
      return;
    }
    this.app.SDATE = this.app.form ( "AJUSTE_PAG_RPT_A_FR" ).getDateItem ( "AJUSTE_DESDE" );
    this.app.EDATE = MathService.plus ( this.app.form ( "AJUSTE_PAG_RPT_A_FR" ).getDateItem ( "AJUSTE_HASTA" ), 1  );
    AJUSTE_PAG_RPT_B_PKT.exec ( this.app );
    return;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE AJUSTE_PAG_RPT_A_ADL;

VAR     COMM    :       NUMBER;

SET_TRACE();

BEGIN

COMM := GET_CMD();

IF COMM = FPREV
THEN
RETURN;

SDATE := AJUSTE_PAG_RPT_A_FR.AJUSTE_DESDE;
EDATE := AJUSTE_PAG_RPT_A_FR.AJUSTE_HASTA+1;

CALL AJUSTE_PAG_RPT_B_PKT;

END;
    



--------------------------------------------------------------------- */
