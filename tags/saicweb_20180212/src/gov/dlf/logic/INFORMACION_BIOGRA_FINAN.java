package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class INFORMACION_BIOGRA_FINAN
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;
 
  public boolean _condition4 = false;
 
  public boolean _condition5 = false;
 
  public boolean _condition6 = false;
 
  public boolean _condition7 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double PHASE_COUNT = 0;

  public double SAVE_PHASE_COUNT = 0;



  public String COMPLETION_STATUS = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMPLETION_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).COMPLETION_STATUS = value.getString ( );
  }  

  
  /**  */
  public static void setPHASE_COUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).PHASE_COUNT = value.getDouble ( );
  }  

  
  /**  */
  public static void setSAVE_PHASE_COUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).SAVE_PHASE_COUNT = value.getDouble ( );
  }  
    


  /**  */
  public static String getCOMPLETION_STATUS  ( RallyApplication __app )
  {
    return ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).COMPLETION_STATUS;
  }


  /**  */
  public static void setCOMPLETION_STATUS  ( RallyApplication __app, String value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).COMPLETION_STATUS = value;
  }


  /**  */
  public static void setCOMPLETION_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).COMPLETION_STATUS = ( String ) value;
  }




  /**  */
  public static double getPHASE_COUNT  ( RallyApplication __app )
  {
    return ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).PHASE_COUNT;
  }


  /**  */
  public static Double getPHASE_COUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).PHASE_COUNT );
  }


  /**  */
  public static void setPHASE_COUNT  ( RallyApplication __app, double value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).PHASE_COUNT = value;
  }


  /**  */
  public static void setPHASE_COUNT  ( RallyApplication __app, Object value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).PHASE_COUNT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSAVE_PHASE_COUNT  ( RallyApplication __app )
  {
    return ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).SAVE_PHASE_COUNT;
  }


  /**  */
  public static Double getSAVE_PHASE_COUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).SAVE_PHASE_COUNT );
  }


  /**  */
  public static void setSAVE_PHASE_COUNT  ( RallyApplication __app, double value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).SAVE_PHASE_COUNT = value;
  }


  /**  */
  public static void setSAVE_PHASE_COUNT  ( RallyApplication __app, Object value )
  {
    ( ( INFORMACION_BIOGRA_FINAN ) __app.getADL ( INFORMACION_BIOGRA_FINAN.class ) ).SAVE_PHASE_COUNT = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static INFORMACION_BIOGRA_FINAN get ( RallyApplication __app )
  {
    INFORMACION_BIOGRA_FINAN adl = new INFORMACION_BIOGRA_FINAN ( );
    __app.register ( adl, "INFORMACION_BIOGRA_FINAN" );
    __app.setADL ( INFORMACION_BIOGRA_FINAN.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    INFORMACION_BIOGRA_FINAN.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    INFORMACION_BIOGRA_FINAN.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "INFORMACION_BIOGRA_FINAN" );
    if ( rObj != null && rObj instanceof INFORMACION_BIOGRA_FINAN )
    {
      this.app.setADL ( INFORMACION_BIOGRA_FINAN.class, ( INFORMACION_BIOGRA_FINAN ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "INFORMACION_BIOGRA_FINAN Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
      case 7:  { this.currentStep ++; this.step7 ( this.keyParms ); break; }
      case 8:  { this.currentStep ++; this.step8 ( this.keyParms ); break; }
      case 9:  { this.currentStep ++; this.step9 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "INFORMACION_BIOGRA_FINAN ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    PHASE_COUNT = 1;
    this.process ( ps );

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    if ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 7 ) )   )
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      COMPLETION_STATUS = "SUCCESS";
      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        INFOR_BIO_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 7 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
        this._condition2 = true;
      }
      else
      {
        this._condition2 = false;
      }
      if ( this._condition2 )
      {
        DESCALIFICADOS_CLIENTES_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 7 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition2 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
        this._condition3 = true;
      }
      else
      {
        this._condition3 = false;
      }
      if ( this._condition3 )
      {
        RECURSOS_CLIENTES_FR_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 7 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition2 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 4 )  )
      {
        this._condition4 = true;
      }
      else
      {
        this._condition4 = false;
      }
      if ( this._condition4 )
      {
        INGRESOS_CLIENTES_FR_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 7 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition2 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
      }
      else if ( this._condition4 )    //      else if ( Compare.equals ( PHASE_COUNT, 4 )  )
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 5 )  )
      {
        this._condition5 = true;
      }
      else
      {
        this._condition5 = false;
      }
      if ( this._condition5 )
      {
        GASTOS_CLIENTES_FR_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step6 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 7 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition2 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
      }
      else if ( this._condition4 )    //      else if ( Compare.equals ( PHASE_COUNT, 4 )  )
      {
      }
      else if ( this._condition5 )    //      else if ( Compare.equals ( PHASE_COUNT, 5 )  )
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 6 )  )
      {
        this._condition6 = true;
      }
      else
      {
        this._condition6 = false;
      }
      if ( this._condition6 )
      {
        ANTECEDENTE_CLIENTE_UPDATE_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step7 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 7 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition2 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
      }
      else if ( this._condition4 )    //      else if ( Compare.equals ( PHASE_COUNT, 4 )  )
      {
      }
      else if ( this._condition5 )    //      else if ( Compare.equals ( PHASE_COUNT, 5 )  )
      {
      }
      else if ( this._condition6 )    //      else if ( Compare.equals ( PHASE_COUNT, 6 )  )
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 7 )  )
      {
        this._condition7 = true;
      }
      else
      {
        this._condition7 = false;
      }
      if ( this._condition7 )
      {
        AGENCIAS_CLIENTES_FR_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step8 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 7 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition2 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
      }
      else if ( this._condition4 )    //      else if ( Compare.equals ( PHASE_COUNT, 4 )  )
      {
      }
      else if ( this._condition5 )    //      else if ( Compare.equals ( PHASE_COUNT, 5 )  )
      {
      }
      else if ( this._condition6 )    //      else if ( Compare.equals ( PHASE_COUNT, 6 )  )
      {
      }
      else if ( this._condition7 )    //      else if ( Compare.equals ( PHASE_COUNT, 7 )  )
      {
      }
      if ( Compare.equals ( COMPLETION_STATUS, "FAILURE" ) ) 
      {
        SAVE_PHASE_COUNT = PHASE_COUNT;
        PHASE_COUNT = MathService.minus ( PHASE_COUNT, 1  );
      }
      else
      {
        PHASE_COUNT = MathService.plus ( PHASE_COUNT, 1  );
        if ( Compare.equals ( PHASE_COUNT, SAVE_PHASE_COUNT ) ) 
        {
          SAVE_PHASE_COUNT = 0;
        }
      }
      this.currentStep = 1;
      return;
    }

  }


  /**
   *
   */
  protected void step9 ( ParameterSet ps )
  {
    this.doReturn ( );
    return; 

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE INFORMACION_BIOGRA_FINAN;

VAR
        COMPLETION_STATUS       : CHAR(7) EXPORT;
        PHASE_COUNT             : NUMBER(2,0);
        SAVE_PHASE_COUNT        : NUMBER(2,0);

BEGIN
set_trace();
        PHASE_COUNT := 1;
        WHILE (PHASE_COUNT >= 1) AND (PHASE_COUNT <= 7)
        DO BEGIN
                COMPLETION_STATUS := 'SUCCESS';
                IF PHASE_COUNT=1
                THEN
                   CALL INFOR_BIO_PKT;
                ELSE
                    IF PHASE_COUNT=2
                    THEN
                        CALL DESCALIFICADOS_CLIENTES_PKT;
                    ELSE
                      IF PHASE_COUNT=3
                      THEN
                          CALL RECURSOS_CLIENTES_FR_PKT;
                      ELSE
                        IF PHASE_COUNT=4
                        THEN
                           CALL INGRESOS_CLIENTES_FR_PKT;
                        ELSE
                           IF PHASE_COUNT=5
                           THEN
                                CALL GASTOS_CLIENTES_FR_PKT;
                           ELSE
                                IF PHASE_COUNT=6
                                THEN
                                    CALL ANTECEDENTE_CLIENTE_UPDATE_PKT;
                                ELSE
                                    IF PHASE_COUNT=7
                                    THEN
                                        CALL AGENCIAS_CLIENTES_FR_PKT;

        IF COMPLETION_STATUS='FAILURE'
        THEN
           BEGIN
                SAVE_PHASE_COUNT:=PHASE_COUNT;
                PHASE_COUNT:=PHASE_COUNT-1;
           END;
        ELSE
           BEGIN
             PHASE_COUNT:=PHASE_COUNT+1;
             IF PHASE_COUNT=SAVE_PHASE_COUNT
             THEN BEGIN
                   SAVE_PHASE_COUNT:=0;
                  END;
            END;
       END;

RETURN;
set_notrace();
END;
    



--------------------------------------------------------------------- */
