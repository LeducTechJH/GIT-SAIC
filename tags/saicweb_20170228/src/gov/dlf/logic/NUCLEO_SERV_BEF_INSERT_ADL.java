package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class NUCLEO_SERV_BEF_INSERT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;
 
  public boolean _condition4 = false;
 
  public boolean _condition5 = false;
 
  public boolean _condition6 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_CODE = 0;

  public double OPEN5_ID = 0;

  public double STATUS5_ID = 0;



  public String PREFIJO_SERVICIO = null;

  public String NUL_VAL = null;

  public Date NULL_DATE = null;

  public DataStore DESCALIFICADOS_READ_LOC_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setPREFIJO_SERVICIO  ( RallyApplication __app, Parameter value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).PREFIJO_SERVICIO = value.getString ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN5_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS5_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS5_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUL_VAL  ( RallyApplication __app, Parameter value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).NUL_VAL = value.getString ( );
  }  

  
  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Parameter value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).NULL_DATE = value.getDate ( );
  }  
    


  /**  */
  public static String getPREFIJO_SERVICIO  ( RallyApplication __app )
  {
    return ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).PREFIJO_SERVICIO;
  }


  /**  */
  public static void setPREFIJO_SERVICIO  ( RallyApplication __app, String value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).PREFIJO_SERVICIO = value;
  }


  /**  */
  public static void setPREFIJO_SERVICIO  ( RallyApplication __app, Object value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).PREFIJO_SERVICIO = ( String ) value;
  }



  /**  */
  public static String getNUL_VAL  ( RallyApplication __app )
  {
    return ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).NUL_VAL;
  }


  /**  */
  public static void setNUL_VAL  ( RallyApplication __app, String value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).NUL_VAL = value;
  }


  /**  */
  public static void setNUL_VAL  ( RallyApplication __app, Object value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).NUL_VAL = ( String ) value;
  }



  /**  */
  public static Date getNULL_DATE  ( RallyApplication __app )
  {
    return ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).NULL_DATE;
  }


  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Date value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).NULL_DATE = value;
  }


  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Object value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).NULL_DATE = ( Date ) value;
  }



  /**  */
  public static DataStore getDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD;
  }


  /**  */
  public static void setDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD = value;
  }


  /**  */
  public static void setDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN5_ID  ( RallyApplication __app )
  {
    return ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN5_ID;
  }


  /**  */
  public static Double getOPEN5_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN5_ID );
  }


  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, double value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN5_ID = value;
  }


  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, Object value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).OPEN5_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS5_ID  ( RallyApplication __app )
  {
    return ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS5_ID;
  }


  /**  */
  public static Double getSTATUS5_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS5_ID );
  }


  /**  */
  public static void setSTATUS5_ID  ( RallyApplication __app, double value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS5_ID = value;
  }


  /**  */
  public static void setSTATUS5_ID  ( RallyApplication __app, Object value )
  {
    ( ( NUCLEO_SERV_BEF_INSERT_ADL ) __app.getADL ( NUCLEO_SERV_BEF_INSERT_ADL.class ) ).STATUS5_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static NUCLEO_SERV_BEF_INSERT_ADL get ( RallyApplication __app )
  {
    NUCLEO_SERV_BEF_INSERT_ADL adl = new NUCLEO_SERV_BEF_INSERT_ADL ( );
    __app.register ( adl, "NUCLEO_SERV_BEF_INSERT_ADL" );
    __app.setADL ( NUCLEO_SERV_BEF_INSERT_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    NUCLEO_SERV_BEF_INSERT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    NUCLEO_SERV_BEF_INSERT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "NUCLEO_SERV_BEF_INSERT_ADL" );
    if ( rObj != null && rObj instanceof NUCLEO_SERV_BEF_INSERT_ADL )
    {
      this.app.setADL ( NUCLEO_SERV_BEF_INSERT_ADL.class, ( NUCLEO_SERV_BEF_INSERT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "NUCLEO_SERV_BEF_INSERT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "NUCLEO_SERV_BEF_INSERT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NUL_VAL = TruncService.setNull ( NUL_VAL  );
    NULL_DATE = TruncService.setNull ( NULL_DATE  );
    if ( Compare.equals ( this.app.NUCLEO_BEF_INSERT_GBL, "FAIL" ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.callCommand ( RallyAppCommandFactory.ABORTACTION );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "NA" ) ) 
    {
    }
    PREFIJO_SERVICIO = ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ) + RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 3, 1 ) );
    if ( ( Compare.equals ( PREFIJO_SERVICIO, "AEA" ) ) || ( Compare.equals ( PREFIJO_SERVICIO, "AED" ) ) ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      if ( ( Compare.gt ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "COUNT_NUCLEO_AGGREGATE" ), 2 ) ) || ( ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) && ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "NA" ) )  && ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) )  ) ) 
      {
        this._condition2 = true;
      }
      else
      {
        this._condition2 = false;
      }
      if ( this._condition2 )
      {
        this.app.setError ( 0, 4008 );
        this.app.NUCLEO_BEF_INSERT_GBL = "FAIL";
        this.app.executeCommand ( RallyAppCommandFactory.RGPREV );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( ( Compare.equals ( PREFIJO_SERVICIO, "AEA" ) ) || ( Compare.equals ( PREFIJO_SERVICIO, "AED" ) ) ) 
    {
      if ( this._condition2 )    //      if ( ( Compare.gt ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "COUNT_NUCLEO_AGGREGATE" ), 2 ) ) || ( ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) && ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "NA" ) )  && ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) )  ) ) 
      {
        return; 
      }
    }
    else if ( ( Compare.equals ( PREFIJO_SERVICIO, "AEB" ) ) || ( Compare.equals ( PREFIJO_SERVICIO, "AEG" ) )  )
    {
      this._condition3 = true;
    }
    else
    {
      this._condition3 = false;
    }
    if ( this._condition3 )
    {
      if ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) 
      {
        this._condition4 = true;
      }
      else
      {
        this._condition4 = false;
      }
      if ( this._condition4 )
      {
        this.app.setError ( 1, 4008 );
        this.app.NUCLEO_BEF_INSERT_GBL = "FAIL";
        this.app.executeCommand ( RallyAppCommandFactory.RGPREV );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( ( Compare.equals ( PREFIJO_SERVICIO, "AEA" ) ) || ( Compare.equals ( PREFIJO_SERVICIO, "AED" ) ) ) 
    {
    }
    else if ( this._condition3 )    //    else if ( ( Compare.equals ( PREFIJO_SERVICIO, "AEB" ) ) || ( Compare.equals ( PREFIJO_SERVICIO, "AEG" ) )  )
    {
      if ( this._condition4 )    //      if ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) 
      {
        return; 
      }
    }
    //st 17.8.08 fix a bug in rally ( field to be compare should be SEGURO_SOCIAL_JEFE_SERV
    //if ( ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) && ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_BENEFICIARIO" ), this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV0" )) )  ) 
    if ( ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) && ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_BENEFICIARIO" ), this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )  ) 
    {
      this._condition5 = true;
    }
    else
    {
      this._condition5 = false;
    }
    if ( this._condition5 )
    {
      this.app.setError ( 2, 4007 );
      this.app.NUCLEO_BEF_INSERT_GBL = "FAIL";
     // this.app.executeCommand ( RallyAppCommandFactory.RGPREV );    
      this.app.form ( "SERV_NUCLEO_SERV_FRM" ).removeInstance ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getCurrentInstance ( ) );
      app.requireRefresh = true;
      return;
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) && ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_BENEFICIARIO" ), this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )  ) 
    {
      return; 
    }
    DESCALIFICADOS_READ_LOC_DSD = this.dm.create ( "DESCALIFICADOS_READ_LOC_DSD" );
    OPEN5_ID = DESCALIFICADOS_READ_LOC_DSD.getId ( );
    STATUS5_ID = RallyDataStoreException.getDefault ( );
    if ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) ) 
    {
      STATUS5_ID  = this.dm.reset ( OPEN5_ID );

      this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_BENEFICIARIO" ));
      this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "COD_SERVICIO", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ));
      this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS5_ID  = this.dm.limitQueryFromBuffer ( OPEN5_ID );
      STATUS5_ID  = this.dm.retrieve ( OPEN5_ID );

      STATUS5_ID  = this.dm.firstRow ( OPEN5_ID );

      if ( ( ! Compare.equals ( STATUS5_ID, 0 ) ) || ( ( Compare.equals ( STATUS5_ID, 0 ) ) && ( ( Compare.lt ( this.dm.getFieldDate ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "FCH_VENCIMIENTO" ), this.app.SYSTEM_DATE ) ) )  ) ) 
      {
        this.app.setError ( 3, 2764 );
        this.app.NUCLEO_BEF_INSERT_GBL = "OK";
      }
    }
    else
    {
      STATUS5_ID  = this.dm.reset ( OPEN5_ID );

      this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_BENEFICIARIO" ));
      this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "COD_SERVICIO", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ));
      this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS5_ID  = this.dm.limitQueryFromBuffer ( OPEN5_ID );
      STATUS5_ID  = this.dm.retrieve ( OPEN5_ID );

      STATUS5_ID  = this.dm.firstRow ( OPEN5_ID );

      if ( ( Compare.equals ( STATUS5_ID, 0 ) ) && ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "FCH_VENCIMIENTO" ), this.app.SYSTEM_DATE ) ) )  ) 
      {
        this._condition6 = true;
      }
      else
      {
        this._condition6 = false;
      }
      if ( this._condition6 )
      {
        this.app.setError ( 4, 2765 );
        this.app.NUCLEO_BEF_INSERT_GBL = "FAIL";
        this.app.executeCommand ( RallyAppCommandFactory.RGPREV );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) ) 
    {
    }
    else
    {
      if ( this._condition6 )    //      if ( ( Compare.equals ( STATUS5_ID, 0 ) ) && ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "FCH_VENCIMIENTO" ), this.app.SYSTEM_DATE ) ) )  ) 
      {
        return; 
      }
    }
    STATUS5_ID  = this.dm.dbClose ( OPEN5_ID );

    CHECK_EXISTS_NUCLEO_COPY_ADL.exec ( this.app );
    return;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE NUCLEO_SERV_BEF_INSERT_ADL;
var 
prefijo_servicio : char(3);
OPEN_ID : NUMBER;
STATUS_CODE : NUMBER;
OPEN5_ID : NUMBER;
STATUS5_ID : NUMBER;
NUL_VAL : CHAR(4);
NULL_DATE : DATE;

BEGIN
SET_TRACE();
MAKE_NULL(NUL_VAL);
MAKE_NULL(NULL_DATE);

IF (NUCLEO_BEF_INSERT_GBL = 'FAIL') THEN
         BEGIN
         CALL_CMD('QUIT ACTION');
         END;

{validaciones sobre ciudadania (americana,indocumentados}
if (SERV_NUCLEO_SERV_FRM.COD_PARENTESCO_RELACION_SERV <> 'NA')
{AND
   (SUBSTR(SERV_FAM_FRM.COD_SERVICIO,0,4) <> 'AE-T') AND
   (SUBSTR(SERV_FAM_FRM.COD_SERVICIO,0,4) <> 'AE-C')}
   then begin
       {  CALL CHECK_EXISTS_NUCLEO_SERV_ADL;}
        end;


{Validaciones para la categoria AEA durante proceso de insert record}
prefijo_servicio := (SUBSTR(SERV_NUCLEO_SERV_FRM.COD_SERVICIO,0,2)||       
             SUBSTR(SERV_NUCLEO_SERV_FRM.COD_SERVICIO,3,1));
  IF (prefijo_servicio ='AEA') OR (prefijo_servicio ='AED')
  then
  BEGIN
     IF (SERV_NUCLEO_SERV_FRM.COUNT_NUCLEO_AGGREGATE >2) OR
        ((SERV_NUCLEO_SERV_FRM.COD_PARENTESCO_RELACION_SERV <>
           'BNPR') AND (SERV_NUCLEO_SERV_FRM.COD_PARENTESCO_RELACION_SERV <>
           'NA') AND (SERV_NUCLEO_SERV_FRM.COD_PARENTESCO_RELACION_SERV <>
           'NCAL'))             
     THEN  BEGIN
            ERROR(4008);  
            NUCLEO_BEF_INSERT_GBL := 'FAIL';
            EXECUTE_CMD('PREVIOUS GROUP');
           END;
  END;
  ELSE
     IF (prefijo_servicio ='AEB') OR (prefijo_servicio ='AEG')
     then
     IF (SERV_NUCLEO_SERV_FRM.COD_PARENTESCO_RELACION_SERV = 'BNSC')
     THEN  BEGIN
            ERROR(4008);  
            NUCLEO_BEF_INSERT_GBL := 'FAIL';
            EXECUTE_CMD('PREVIOUS GROUP');
           END;
  
 IF (SERV_NUCLEO_SERV_FRM.COD_PARENTESCO_RELACION_SERV = 'BNPR')
          AND
          (SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_BENEFICIARIO <> 
           SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_SERV0)
              THEN  BEGIN
                    ERROR(4007);  
                    NUCLEO_BEF_INSERT_GBL := 'FAIL';
                    EXECUTE_CMD('PREVIOUS GROUP');
                    END;
{fin de las validaciones para la categoria AEA}


{ VERIFICAR SI ESTA DESCALIFICADO EL CLIENTE }

DB_OPEN(DESCALIFICADOS_READ_LOC_DSD,OPEN5_ID,STATUS5_ID);       
        IF SERV_NUCLEO_SERV_FRM.COD_PARENTESCO_RELACION_SERV = 'NCAL'
        THEN
        BEGIN
                DB_RESET(OPEN5_ID,STATUS5_ID);
                 DESCALIFICADOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE :=
                 SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_BENEFICIARIO;
                 DESCALIFICADOS_READ_LOC_DSD.COD_SERVICIO:=
                 SERV_NUCLEO_SERV_FRM.COD_SERVICIO;
                DESCALIFICADOS_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY(OPEN5_ID,STATUS5_ID);
                DB_GET_FIRST(OPEN5_ID,STATUS5_ID);
                IF (STATUS5_ID <> 0)  OR
                   ((STATUS5_ID = 0)  AND
                   ((DESCALIFICADOS_READ_LOC_DSD.FCH_VENCIMIENTO < SYSTEM_DATE))
)
                   THEN
                      BEGIN
                        ERROR(2764);
                        NUCLEO_BEF_INSERT_GBL := 'OK';
                        {EXECUTE_CMD('PREVIOUS GROUP');}
                      END;
        END;
        ELSE
        BEGIN
                DB_RESET(OPEN5_ID,STATUS5_ID);
                 DESCALIFICADOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE :=
                 SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_BENEFICIARIO;
                 DESCALIFICADOS_READ_LOC_DSD.COD_SERVICIO:=
                 SERV_NUCLEO_SERV_FRM.COD_SERVICIO;
                DESCALIFICADOS_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY(OPEN5_ID,STATUS5_ID);
                DB_GET_FIRST(OPEN5_ID,STATUS5_ID);
                IF (STATUS5_ID =0 )  AND
                   ((DESCALIFICADOS_READ_LOC_DSD.FCH_VENCIMIENTO >= SYSTEM_DATE)
)
                   THEN
                      BEGIN
                        ERROR(2765);
                        NUCLEO_BEF_INSERT_GBL := 'FAIL';
                        EXECUTE_CMD('PREVIOUS GROUP');
                      END;      
        END;
DB_CLOSE(OPEN5_ID,STATUS5_ID);  


CALL CHECK_EXISTS_NUCLEO_COPY_ADL; 
SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
