package gov.dlf.external;


import gov.dlf.facade.SAIC_DMQ_ORA_Application;

import net.maintrend.appmanager.Application;
import net.maintrend.interfaces.IRegisteredObject;
import net.maintrend.interlink.OracleRdbClient;
import net.maintrend.interlink.ParameterSet;
import net.maintrend.rallyengine.RallyApplication;
import net.maintrend.rallyengine.RallyDataManager;
import net.maintrend.util.Debug;



/**
 * 
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class READ_MAIL
     extends OracleRdbClient 
  implements IRegisteredObject 
{
  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app = null;



  // -------------------------------------------------------------------
  // ----------   Constructors and Supporting Methods   ----------------

  /**
   *
   */
  public READ_MAIL ( )
  {
    super ( );
    this.setProcedureName ( "READ_MAIL" );
    this.exceptionTitle = "OracleRdbClient_READ_MAIL.process ( ) - ";
    this.parmCount = 1;
  }



  // -------------------------------------------------------------------
  // ----------   Constructors and Supporting Methods   ----------------

  /**
   *
   */
  public static READ_MAIL exec ( SAIC_DMQ_ORA_Application __app, ParameterSet ps )
  {
    READ_MAIL link = new READ_MAIL ( );
    link.setApplication ( __app );
    link.execute ( ps );
    return link;
  }


  /**
   *
   */
  public static READ_MAIL exec ( SAIC_DMQ_ORA_Application __app )
  {
    return READ_MAIL.exec ( __app, null );
  }



  // -------------------------------------------------------------------
  // ----------   IRegisteredObject Implementation   -------------------

  /**
   * 
   * @param rApp
   */
  public void setApplication ( RallyApplication rApp )
  {
    if ( rApp != null ) this.app = ( SAIC_DMQ_ORA_Application ) rApp;
    if ( this.app != null )
    {
      this.setDataManager ( ( RallyDataManager ) this.app.getDataManager ( ) );
    }
  }


  /**
   * 
   * @param application
   */
  public void setApplication ( Application application )
  {
    this.setApplication ( ( RallyApplication ) application ); 
  }


  /**
   * 
   * @return
   */
  public boolean isSelfClosing ( )
  {
    return true;
  }


  /**
   *
   */
  public void halt ( )
  {
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   */
  protected void createParameters ( ParameterSet ps )
  {
    this.parameters = ps;
  }


  /**
   *
   */
  protected void createParameters ( )
  {
    this.createParameters ( new ParameterSet ( ) );
  }


  /**
   *
   */
  public ParameterSet run ( )
  {
    this.process ( );
    return this.getParameters ( );
  }


  /**
   * To be populated from the Cobol script
   */
  public void process (  )
  {
  }
  


  /**
   * IRegisteredObject implementation
   */
  public void execute ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "READ_MAIL" );
    this.process ( );
  }
}


/* ---------------------------------------------------------------------

identification division.
program-id. MAIL_READ.
environment division.
input-output section.
file-control.
                select  input_file      assign to 'MAIL_FILE.MAIL'.
                select  output_file     assign to 'MAIL_FILE.OUT'.

data division.

file section.
fd input_file.
01 text_line            pic x(512).

fd output_file.
01 output_record        pic x(80).

working-storage section.
01 work-area.
   02 text_index        pic 9999        comp    value 0.
   02 output_index      pic 9999        comp    value 0.
   02 character_status  pic 9           value 0.
      88 move_character                 value 1.
      88 no_character                   value 0.
   02 file_status       pic 9           value 0.
      88 end-of-file                    value 1.
   02 remote_node       pic x(8)        value spaces.

   02 dcl_command               pic x(80).

procedure division.
begin.
        open    input   input_file
                output  output_file.
        move spaces to output_record.
        perform
                until end-of-file
                read input-file
                at end
                        if output_index > 0
                        then
                                move '  ' to output_record(1:2)
                                write output_record
                        end-if
                        close input-file
                                output_file
                        move    'mail_file.mail;*' to dcl_command
                        call    'lib$delete_file'
                                using   by descriptor dcl_command
                                        omitted
                                        omitted
                                        omitted
                                        omitted
                                        omitted
                                        omitted
                                        omitted
                                        omitted

                        move    'MAIL/SUB="TRANSFERENCIAS COMPLETADAS" '
                                to dcl_command
                        move    'mail_file.out ' to dcl_command(39:13)
                        move    remote_node to dcl_command(53:8)
                        move    'APOYO' to dcl_command(61:5)
                        call    'lib$do_command' using
                                        by descriptor   dcl_command
                        stop run
                not at end
                        inspect text_line converting '' to ' '
                        perform
                                varying text_index from 1 by 1
                                until text_index > 512
                                if text_line(text_index:2) = '#%'
                                then
                                        if output_index > 0
                                        then
                                                if remote_node = spaces
                                                then
                                                        move output_record(3:6)
                                                        to remote_node
                                                        move '::' to remote_node(7:2)
                                                else
                                                        move '  ' to output_record(1:2)
                                                        write output_record
                                                end-if
                                                move spaces to output_record
                                                move 0 to output_index
                                        end-if
                                        set move_character to true
                                end-if
                                if move_character
                                then
                                        if output_index < 79
                                        then
                                                add 1 to output-index
                                                move text_line(text_index:1)
                                                to output_record(output_index:1)
                                        else
                                                set no_character to true
                                        end-if
                                end-if
                        end-perform
                end-read
        end-perform.
$


--------------------------------------------------------------------- */