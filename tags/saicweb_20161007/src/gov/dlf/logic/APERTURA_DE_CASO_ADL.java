package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class APERTURA_DE_CASO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;
 
  public boolean _condition4 = false;
 
  public boolean _condition5 = false;
 
  public boolean _condition6 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double PHASE_COUNT = 0;

  public double SAVE_PHASE_COUNT = 0;

  public double SAVE_SSN = 0;



  public String COMPLETION_STATUS = null;

  public String SAVE_SOLICITUD_TYPE = null;

  public String FCH_TEMP = null;

  public String VISITAS_STATUS = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMPLETION_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).COMPLETION_STATUS = value.getString ( );
  }  

  
  /**  */
  public static void setPHASE_COUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).PHASE_COUNT = value.getDouble ( );
  }  

  
  /**  */
  public static void setSAVE_PHASE_COUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_PHASE_COUNT = value.getDouble ( );
  }  

  
  /**  */
  public static void setSAVE_SOLICITUD_TYPE  ( RallyApplication __app, Parameter value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SOLICITUD_TYPE = value.getString ( );
  }  

  
  /**  */
  public static void setFCH_TEMP  ( RallyApplication __app, Parameter value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).FCH_TEMP = value.getString ( );
  }  

  
  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, Parameter value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SSN = value.getDouble ( );
  }  

  
  /**  */
  public static void setVISITAS_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).VISITAS_STATUS = value.getString ( );
  }  
    


  /**  */
  public static String getCOMPLETION_STATUS  ( RallyApplication __app )
  {
    return ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).COMPLETION_STATUS;
  }


  /**  */
  public static void setCOMPLETION_STATUS  ( RallyApplication __app, String value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).COMPLETION_STATUS = value;
  }


  /**  */
  public static void setCOMPLETION_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).COMPLETION_STATUS = ( String ) value;
  }



  /**  */
  public static String getSAVE_SOLICITUD_TYPE  ( RallyApplication __app )
  {
    return ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SOLICITUD_TYPE;
  }


  /**  */
  public static void setSAVE_SOLICITUD_TYPE  ( RallyApplication __app, String value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SOLICITUD_TYPE = value;
  }


  /**  */
  public static void setSAVE_SOLICITUD_TYPE  ( RallyApplication __app, Object value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SOLICITUD_TYPE = ( String ) value;
  }



  /**  */
  public static String getFCH_TEMP  ( RallyApplication __app )
  {
    return ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).FCH_TEMP;
  }


  /**  */
  public static void setFCH_TEMP  ( RallyApplication __app, String value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).FCH_TEMP = value;
  }


  /**  */
  public static void setFCH_TEMP  ( RallyApplication __app, Object value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).FCH_TEMP = ( String ) value;
  }



  /**  */
  public static String getVISITAS_STATUS  ( RallyApplication __app )
  {
    return ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).VISITAS_STATUS;
  }


  /**  */
  public static void setVISITAS_STATUS  ( RallyApplication __app, String value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).VISITAS_STATUS = value;
  }


  /**  */
  public static void setVISITAS_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).VISITAS_STATUS = ( String ) value;
  }




  /**  */
  public static double getPHASE_COUNT  ( RallyApplication __app )
  {
    return ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).PHASE_COUNT;
  }


  /**  */
  public static Double getPHASE_COUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).PHASE_COUNT );
  }


  /**  */
  public static void setPHASE_COUNT  ( RallyApplication __app, double value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).PHASE_COUNT = value;
  }


  /**  */
  public static void setPHASE_COUNT  ( RallyApplication __app, Object value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).PHASE_COUNT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSAVE_PHASE_COUNT  ( RallyApplication __app )
  {
    return ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_PHASE_COUNT;
  }


  /**  */
  public static Double getSAVE_PHASE_COUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_PHASE_COUNT );
  }


  /**  */
  public static void setSAVE_PHASE_COUNT  ( RallyApplication __app, double value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_PHASE_COUNT = value;
  }


  /**  */
  public static void setSAVE_PHASE_COUNT  ( RallyApplication __app, Object value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_PHASE_COUNT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSAVE_SSN  ( RallyApplication __app )
  {
    return ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SSN;
  }


  /**  */
  public static Double getSAVE_SSNDouble ( RallyApplication __app )
  {
    return new Double ( ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SSN );
  }


  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, double value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SSN = value;
  }


  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, Object value )
  {
    ( ( APERTURA_DE_CASO_ADL ) __app.getADL ( APERTURA_DE_CASO_ADL.class ) ).SAVE_SSN = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static APERTURA_DE_CASO_ADL get ( RallyApplication __app )
  {
    APERTURA_DE_CASO_ADL adl = new APERTURA_DE_CASO_ADL ( );
    __app.register ( adl, "APERTURA_DE_CASO_ADL" );
    __app.setADL ( APERTURA_DE_CASO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    APERTURA_DE_CASO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    APERTURA_DE_CASO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "APERTURA_DE_CASO_ADL" );
    if ( rObj != null && rObj instanceof APERTURA_DE_CASO_ADL )
    {
      this.app.setADL ( APERTURA_DE_CASO_ADL.class, ( APERTURA_DE_CASO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "APERTURA_DE_CASO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
      case 7:  { this.currentStep ++; this.step7 ( this.keyParms ); break; }
      case 8:  { this.currentStep ++; this.step8 ( this.keyParms ); break; }
      case 9:  { this.currentStep ++; this.step9 ( this.keyParms ); break; }
      case 10:  { this.currentStep ++; this.step10 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "APERTURA_DE_CASO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.ACCESS_STATUS_GBL = "";
    this.app.COD_ACCESS_GBL = "SOLI";
    SECURITY_ADL.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    if ( Compare.equals ( this.app.ACCESS_STATUS_GBL, "FAILURE" ) ) 
    {
      this.doReturn ( );
      return;
    }
    this.app.RUTINA_GBL = "AC";
    PHASE_COUNT = 1;
    this.process ( ps );

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {

    if ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 4 ) )   )
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      COMPLETION_STATUS = "SUCCESS";
      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        FCH_TEMP = RallyStringService.subString ( StringService.toStringValue  ( TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  ), 0, 11 );
        FCH_TEMP = FCH_TEMP + " " + "00:00";
        this.app.FCH_ACTIV_TECN_DISP_GBL = RallySpanishDatesParser.parseDateString ( FCH_TEMP, "DD-Mon-YYYY HH24:MI" );
        FCH_TEMP = RallyStringService.subString ( StringService.toStringValue  ( TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  ), 0, 11 );
        FCH_TEMP = FCH_TEMP + " " + "23:59";
        this.app.FCH_ACTIV_HASTA_GBL = RallySpanishDatesParser.parseDateString ( FCH_TEMP, "DD-Mon-YYYY HH24:MI" );
        VISITAS_STATUS = "SUCCESS";
        this.process ( ps );
      }
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 4 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
        if ( Compare.equals ( VISITAS_STATUS, "SUCCESS" )  )
        {
          this._condition2 = true;
        }
        else
        {
          this._condition2 = false;
        }
        if ( this._condition2 )
        {
          this.app.ANSWER_GBL = "";
          SOLIC_SERV_VISITAS_PARA_HOY_RO_PKT.exec ( this.app );
          return;
        }
      }
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 4 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
        if ( this._condition2 )    //        while ( Compare.equals ( VISITAS_STATUS, "SUCCESS" )  )
        {
          if ( Compare.equals ( this.app.ANSWER_GBL, "Y" ) ) 
          {
            VISITAS_STATUS = "FAILURE";
          }
          this.currentStep = 3;
          return;
        }
      }
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 4 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
        this._condition3 = true;
      }
      else
      {
        this._condition3 = false;
      }
      if ( this._condition3 )
      {
        this.app.SOLICITUD_TYPE_GBL = "U";
        SAVE_SSN = this.app.SSN_GBL;
        SOLIC_SERV_CLIENT_INFO_UPD_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step6 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 4 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
        this.app.SSN_GBL = SAVE_SSN;
      }
      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
        this._condition4 = true;
      }
      else
      {
        this._condition4 = false;
      }
      if ( this._condition4 )
      {
        SOLIC_SERV_PROG_POTENCIAL_UPD_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step7 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 4 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( this._condition4 )    //      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 4 )  )
      {
        this._condition5 = true;
      }
      else
      {
        this._condition5 = false;
      }
      if ( this._condition5 )
      {
        COMPLETION_STATUS = "FAILURE";
        MANTENIMIENTO_MAIN_MENU.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step8 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 4 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( this._condition4 )    //      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
      }
      else if ( this._condition5 )    //      else if ( Compare.equals ( PHASE_COUNT, 4 )  )
      {
      }
      else if ( Compare.equals ( PHASE_COUNT, 5 )  )
      {
        this._condition6 = true;
      }
      else
      {
        this._condition6 = false;
      }
      if ( this._condition6 )
      {
        SOLIC_SERV_COMP_FAM_PROB_FAM_UPD_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step9 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( ( Compare.ge ( PHASE_COUNT, 1 ) ) && ( Compare.le ( PHASE_COUNT, 4 ) )   )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( PHASE_COUNT, 1 ) ) 
      {
      }
      else if ( this._condition3 )    //      else if ( Compare.equals ( PHASE_COUNT, 2 )  )
      {
      }
      else if ( this._condition4 )    //      else if ( Compare.equals ( PHASE_COUNT, 3 )  )
      {
      }
      else if ( this._condition5 )    //      else if ( Compare.equals ( PHASE_COUNT, 4 )  )
      {
      }
      else if ( this._condition6 )    //      else if ( Compare.equals ( PHASE_COUNT, 5 )  )
      {
      }
      if ( Compare.equals ( COMPLETION_STATUS, "FAILURE" ) ) 
      {
        PHASE_COUNT = MathService.minus ( PHASE_COUNT, 1  );
      }
      else
      {
        PHASE_COUNT = MathService.plus ( PHASE_COUNT, 1  );
      }
      this.currentStep = 2;
      return;
    }

  }


  /**
   *
   */
  protected void step10 ( ParameterSet ps )
  {
    this.app.RUTINA_GBL = "";
    this.doReturn ( );
    return; 

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE APERTURA_DE_CASO_ADL;

VAR

        COMPLETION_STATUS:      CHAR(7) EXPORT;
        PHASE_COUNT:            NUMBER(2,0) EXPORT;
        SAVE_PHASE_COUNT:       NUMBER(2,0);
        SAVE_SOLICITUD_TYPE:    CHAR(1);
        FCH_TEMP        :       CHAR(17);
        SAVE_SSN        :       NUMBER(9,0);
        VISITAS_STATUS  :       CHAR(7) EXPORT;

BEGIN

SET_TRACE();
ACCESS_STATUS_GBL:='';
COD_ACCESS_GBL:='SOLI';

CALL SECURITY_ADL;
IF ACCESS_STATUS_GBL='FAILURE'
   THEN RETURN;

RUTINA_GBL:='AC';
PHASE_COUNT:=1;
WHILE (PHASE_COUNT >= 1) AND (PHASE_COUNT <= 4)
  DO BEGIN
     COMPLETION_STATUS:='SUCCESS';
     IF PHASE_COUNT=1
     THEN BEGIN
             FCH_TEMP:=SUBSTR(TO_CHAR(TRUNC(SYSTEM_DATE,'DDD')),0,11);
             FCH_TEMP:=FCH_TEMP||' '||'00:00';
             FCH_ACTIV_TECN_DISP_GBL:=TO_DATE(FCH_TEMP,'DD-Mon-YYYY HH24:MI');
             FCH_TEMP:=SUBSTR(TO_CHAR(TRUNC(SYSTEM_DATE,'DDD')),0,11);
             FCH_TEMP:=FCH_TEMP||' '||'23:59';
             FCH_ACTIV_HASTA_GBL:=TO_DATE(FCH_TEMP,'DD-Mon-YYYY HH24:MI');
          VISITAS_STATUS:='SUCCESS';
          WHILE VISITAS_STATUS='SUCCESS' DO
            BEGIN
             ANSWER_GBL:='';
             CALL SOLIC_SERV_VISITAS_PARA_HOY_RO_PKT;
             IF ANSWER_GBL='Y' THEN VISITAS_STATUS:='FAILURE';
            END;
          END;
     ELSE IF PHASE_COUNT=2
          THEN BEGIN
               SOLICITUD_TYPE_GBL:='U';
               SAVE_SSN:=SSN_GBL;
               CALL SOLIC_SERV_CLIENT_INFO_UPD_PKT;
               SSN_GBL:=SAVE_SSN;
               END;
          ELSE IF PHASE_COUNT=3
               THEN BEGIN
                    CALL SOLIC_SERV_PROG_POTENCIAL_UPD_PKT;
                    END;
               ELSE IF PHASE_COUNT=4
                    THEN BEGIN
                         COMPLETION_STATUS:='FAILURE';
                         CALL MANTENIMIENTO_MAIN_MENU;
                         END;
                    ELSE IF PHASE_COUNT=5
                         THEN BEGIN
                               CALL SOLIC_SERV_COMP_FAM_PROB_FAM_UPD_PKT;
                              END;
     IF COMPLETION_STATUS='FAILURE'
     THEN BEGIN
          PHASE_COUNT:=PHASE_COUNT - 1;
          END;
     ELSE BEGIN
          PHASE_COUNT:=PHASE_COUNT+1;
          END;
     END;
RUTINA_GBL:='';
RETURN;
SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
