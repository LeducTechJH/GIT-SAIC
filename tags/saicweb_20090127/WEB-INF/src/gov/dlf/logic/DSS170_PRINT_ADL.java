package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DSS170_PRINT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------



  public String OLD_COMMAND = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOLD_COMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_PRINT_ADL ) __app.getADL ( DSS170_PRINT_ADL.class ) ).OLD_COMMAND = value.getString ( );
  }  
    


  /**  */
  public static String getOLD_COMMAND  ( RallyApplication __app )
  {
    return ( ( DSS170_PRINT_ADL ) __app.getADL ( DSS170_PRINT_ADL.class ) ).OLD_COMMAND;
  }


  /**  */
  public static void setOLD_COMMAND  ( RallyApplication __app, String value )
  {
    ( ( DSS170_PRINT_ADL ) __app.getADL ( DSS170_PRINT_ADL.class ) ).OLD_COMMAND = value;
  }


  /**  */
  public static void setOLD_COMMAND  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_PRINT_ADL ) __app.getADL ( DSS170_PRINT_ADL.class ) ).OLD_COMMAND = ( String ) value;
  }





  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DSS170_PRINT_ADL get ( RallyApplication __app )
  {
    DSS170_PRINT_ADL adl = new DSS170_PRINT_ADL ( );
    __app.register ( adl, "DSS170_PRINT_ADL" );
    __app.setADL ( DSS170_PRINT_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DSS170_PRINT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DSS170_PRINT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DSS170_PRINT_ADL" );
    if ( rObj != null && rObj instanceof DSS170_PRINT_ADL )
    {
      this.app.setADL ( DSS170_PRINT_ADL.class, ( DSS170_PRINT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DSS170_PRINT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DSS170_PRINT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    OLD_COMMAND = this.app.COMANDO_DCL_GBL;
    this.app.COMANDO_DCL_GBL = "@SAIC$APPL_COM:PRINT_132.COM";

    this.callParms.clear ( );
    ( ( DSS170_ALIST ) this.app.getNewInstance ( "DSS170_ALIST" ) ).execute ( this.callParms );

    this.app.COMANDO_DCL_GBL = OLD_COMMAND;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE DSS170_PRINT_ADL;

VAR     OLD_COMMAND     :       CHAR;

SET_TRACE();

BEGIN

        OLD_COMMAND     :=      COMANDO_DCL_GBL;
        DEBUG_LOG('COMANDO ' || OLD_COMMAND);
        COMANDO_DCL_GBL :=      '@SAIC$APPL_COM:PRINT_132.COM';
        CALL DSS170_ALIST;
        COMANDO_DCL_GBL :=      OLD_COMMAND;

END;

SET_NOTRACE();
    



--------------------------------------------------------------------- */
