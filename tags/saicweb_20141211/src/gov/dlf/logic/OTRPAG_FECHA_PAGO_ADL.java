package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class OTRPAG_FECHA_PAGO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double ID = 0;

  public double CD = 0;

  public double MN = 0;



  public Date MD = null;

  public DataStore AD220A_BG2_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setID  ( RallyApplication __app, Parameter value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCD  ( RallyApplication __app, Parameter value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).CD = value.getDouble ( );
  }  

  
  /**  */
  public static void setMD  ( RallyApplication __app, Parameter value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MD = value.getDate ( );
  }  

  
  /**  */
  public static void setMN  ( RallyApplication __app, Parameter value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MN = value.getDouble ( );
  }  
    


  /**  */
  public static Date getMD  ( RallyApplication __app )
  {
    return ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MD;
  }


  /**  */
  public static void setMD  ( RallyApplication __app, Date value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MD = value;
  }


  /**  */
  public static void setMD  ( RallyApplication __app, Object value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MD = ( Date ) value;
  }



  /**  */
  public static DataStore getAD220A_BG2_RO_DSD  ( RallyApplication __app )
  {
    return ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).AD220A_BG2_RO_DSD;
  }


  /**  */
  public static void setAD220A_BG2_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).AD220A_BG2_RO_DSD = value;
  }


  /**  */
  public static void setAD220A_BG2_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).AD220A_BG2_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getID  ( RallyApplication __app )
  {
    return ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).ID;
  }


  /**  */
  public static Double getIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).ID );
  }


  /**  */
  public static void setID  ( RallyApplication __app, double value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).ID = value;
  }


  /**  */
  public static void setID  ( RallyApplication __app, Object value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCD  ( RallyApplication __app )
  {
    return ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).CD;
  }


  /**  */
  public static Double getCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).CD );
  }


  /**  */
  public static void setCD  ( RallyApplication __app, double value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).CD = value;
  }


  /**  */
  public static void setCD  ( RallyApplication __app, Object value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).CD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getMN  ( RallyApplication __app )
  {
    return ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MN;
  }


  /**  */
  public static Double getMNDouble ( RallyApplication __app )
  {
    return new Double ( ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MN );
  }


  /**  */
  public static void setMN  ( RallyApplication __app, double value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MN = value;
  }


  /**  */
  public static void setMN  ( RallyApplication __app, Object value )
  {
    ( ( OTRPAG_FECHA_PAGO_ADL ) __app.getADL ( OTRPAG_FECHA_PAGO_ADL.class ) ).MN = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static OTRPAG_FECHA_PAGO_ADL get ( RallyApplication __app )
  {
    OTRPAG_FECHA_PAGO_ADL adl = new OTRPAG_FECHA_PAGO_ADL ( );
    __app.register ( adl, "OTRPAG_FECHA_PAGO_ADL" );
    __app.setADL ( OTRPAG_FECHA_PAGO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    OTRPAG_FECHA_PAGO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    OTRPAG_FECHA_PAGO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "OTRPAG_FECHA_PAGO_ADL" );
    if ( rObj != null && rObj instanceof OTRPAG_FECHA_PAGO_ADL )
    {
      this.app.setADL ( OTRPAG_FECHA_PAGO_ADL.class, ( OTRPAG_FECHA_PAGO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "OTRPAG_FECHA_PAGO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "OTRPAG_FECHA_PAGO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    MD = TruncService.setNull ( MD  );
    MN = TruncService.setNull ( MN  );
    this.app.CHEQ = "";
    AD220A_BG2_RO_DSD = this.dm.create ( "AD220A_BG2_RO_DSD" );
    ID = AD220A_BG2_RO_DSD.getId ( );
    CD = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.app.setError ( 0, CD );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }

    CD  = this.dm.reset ( ID );

    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.app.setError ( 1, CD );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "OTRPAG_A3_FR" ).getDoubleItem ( "SSJF" ));
    this.dm.setField ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "OTRPAG_A3_FR" ).getDoubleItem ( "SSJS" ));
    this.dm.setField ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "COD_SERVICIO", this.app.form ( "OTRPAG_A3_FR" ).getStringItem ( "SERV" ));
    this.dm.setField ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "FECHA_IDENTIFICADO", OTRPAG_A_STATUS_ADL.getFCID ( this.app ) );
    this.dm.setField ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "FCH_PAGO", this.app.form ( "OTRPAG_A3_FR" ).getDateItem ( "FECH" ));
    this.dm.setField ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    CD  = this.dm.limitQueryFromBuffer ( ID );
    CD  = this.dm.retrieve ( ID );

    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.app.setError ( 2, CD );
      this.doReturn ( );
      return; 
    }

    CD  = this.dm.firstRow ( ID );

    if ( Compare.gt ( this.app.form ( "OTRPAG_A3_FR" ).getDateItem ( "FECH" ), this.app.SYSTEM_DATE ) ) 
    {
      this.app.setError ( 3, 7201 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.setError ( 4, 7200 );
      this.app.CHEQ = "IN";
      this.doReturn ( );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.doReturn ( );
      return; 
    }
    if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "RECIBIDO_EN" ), "CORR" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "RECIBIDO_EN" ), "OFLO" ) )  ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      if ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "RECAU_AUTO" ), "S" ) ) 
      {
        this.app.CHEQ = "UP";
      }
      OTRPAG_A3_SUB_PKT.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "RECIBIDO_EN" ), "CORR" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "AD220A_BG2_RO_DSD" ), "RECIBIDO_EN" ), "OFLO" ) )  ) 
    {
      this.doReturn ( );
      return; 
    }
    else
    {
      this.app.setError ( 5, 7291 );
      this.app.errorFlag = false;
      this.doReturn ( );
      if ( true ) return; 
    }
    CD  = this.dm.dbClose ( ID );

    if ( ! Compare.equals ( CD, 0 ) ) 
    {
      this.app.setError ( 6, CD );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE OTRPAG_FECHA_PAGO_ADL;

VAR     ID      :       NUMBER;
        CD      :       NUMBER;
        MD      :       DATE;  
        MN      :       NUMBER;

SET_TRACE();

MAKE_NULL(MD);
MAKE_NULL(MN);
CHEQ := '';

DB_OPEN(AD220A_BG2_RO_DSD, ID, CD);
IF (CD<>0) THEN
        BEGIN
                ERROR(CD);
                SET_FAILURE();
                RETURN;
        END;

DB_RESET(ID,CD);
IF (CD<>0) THEN
        BEGIN
                ERROR(CD);
                RETURN;
        END;

AD220A_BG2_RO_DSD.SEGURO_SOCIAL_JEFE_FAM        :=      OTRPAG_A3_FR.SSJF;
AD220A_BG2_RO_DSD.SEGURO_SOCIAL_JEFE_SERV       :=      OTRPAG_A3_FR.SSJS;
AD220A_BG2_RO_DSD.COD_SERVICIO          :=      OTRPAG_A3_FR.SERV;
AD220A_BG2_RO_DSD.FECHA_IDENTIFICADO    :=      OTRPAG_A_STATUS_ADL.FCID;
AD220A_BG2_RO_DSD.FCH_PAGO                      :=      OTRPAG_A3_FR.FECH;
AD220A_BG2_RO_DSD.RMO_OFICINA           :=      RMO_GBL;
DB_QUERY(ID,CD);
IF (CD <> 0)    THEN
        BEGIN
                ERROR(CD);
                RETURN;
        END;

DB_GET_FIRST(ID,CD);
 IF  (OTRPAG_A3_FR.FECH > SYSTEM_DATE) THEN
       begin
        error(7201);
        SET_FAILURE();
        RETURN;
       end;


IF (CD <> 0)    THEN
        BEGIN
                ERROR(7200);
CHEQ                    :=      'IN'; {INSERT}
        call OTRPAG_A3_SUB_INS_PKT;
        RETURN;   
        END;
IF (AD220A_BG2_RO_DSD.RECIBIDO_EN <> 'CORR') AND (AD220A_BG2_RO_DSD.RECIBIDO_EN 
<> 'OFLO') 
THEN
BEGIN
   IF AD220A_BG2_RO_DSD.RECAU_AUTO <> 'S' THEN
        CHEQ                    :=      'UP'; {UPDATE}
        call OTRPAG_A3_SUB_PKT;
        return;
END;
ELSE
BEGIN
        ERROR(7291);
        SET_FAILURE();
        RETURN;
END;
DB_CLOSE(ID,CD);
IF (CD<>0) THEN
        BEGIN
                ERROR(CD);
                SET_FAILURE();
                RETURN;
        END;

SET_NOTRACE();
    



--------------------------------------------------------------------- */
