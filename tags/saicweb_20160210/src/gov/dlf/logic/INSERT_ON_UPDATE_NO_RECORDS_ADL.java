package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class INSERT_ON_UPDATE_NO_RECORDS_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;
 
  public boolean _condition4 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------



  public Date FIND_DATE = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setFIND_DATE  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_ON_UPDATE_NO_RECORDS_ADL ) __app.getADL ( INSERT_ON_UPDATE_NO_RECORDS_ADL.class ) ).FIND_DATE = value.getDate ( );
  }  
    


  /**  */
  public static Date getFIND_DATE  ( RallyApplication __app )
  {
    return ( ( INSERT_ON_UPDATE_NO_RECORDS_ADL ) __app.getADL ( INSERT_ON_UPDATE_NO_RECORDS_ADL.class ) ).FIND_DATE;
  }


  /**  */
  public static void setFIND_DATE  ( RallyApplication __app, Date value )
  {
    ( ( INSERT_ON_UPDATE_NO_RECORDS_ADL ) __app.getADL ( INSERT_ON_UPDATE_NO_RECORDS_ADL.class ) ).FIND_DATE = value;
  }


  /**  */
  public static void setFIND_DATE  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_ON_UPDATE_NO_RECORDS_ADL ) __app.getADL ( INSERT_ON_UPDATE_NO_RECORDS_ADL.class ) ).FIND_DATE = ( Date ) value;
  }





  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static INSERT_ON_UPDATE_NO_RECORDS_ADL get ( RallyApplication __app )
  {
    INSERT_ON_UPDATE_NO_RECORDS_ADL adl = new INSERT_ON_UPDATE_NO_RECORDS_ADL ( );
    __app.register ( adl, "INSERT_ON_UPDATE_NO_RECORDS_ADL" );
    __app.setADL ( INSERT_ON_UPDATE_NO_RECORDS_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    INSERT_ON_UPDATE_NO_RECORDS_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    INSERT_ON_UPDATE_NO_RECORDS_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "INSERT_ON_UPDATE_NO_RECORDS_ADL" );
    if ( rObj != null && rObj instanceof INSERT_ON_UPDATE_NO_RECORDS_ADL )
    {
      this.app.setADL ( INSERT_ON_UPDATE_NO_RECORDS_ADL.class, ( INSERT_ON_UPDATE_NO_RECORDS_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "INSERT_ON_UPDATE_NO_RECORDS_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "INSERT_ON_UPDATE_NO_RECORDS_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.callCommand ( "set word_wrap" );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    FIND_DATE = this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).getDateItem ( "FCH_VISITA" );
    if ( Compare.equals ( INFORMACION_REFERIMIENTO_ADL.getCOMPLETION_STATUS ( this.app ), "SUCCESS" ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      if ( Compare.equals ( this.app.SOLIC_PROGRAMA_FLG_GBL, 0 ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        if ( ( Compare.equals ( this.app.RUTINA_GBL, "IR" ) ) && ( Compare.gt ( this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).getDoubleItem ( "RECORDS_READ_COUNT" ), 0 ) )  ) 
        {
          this._condition2 = true;
        }
        else
        {
          this._condition2 = false;
        }
        if ( this._condition2 )
        {
          if ( Compare.lt ( TruncService.trunc ( FIND_DATE, "DDD" ) , TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  ) ) 
          {
            this._condition3 = true;
          }
          else
          {
            this._condition3 = false;
          }
          if ( this._condition3 )
          {
            this.app.callCommand ( RallyAppCommandFactory.FINSNEXT );
            return;
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( INFORMACION_REFERIMIENTO_ADL.getCOMPLETION_STATUS ( this.app ), "SUCCESS" ) ) 
    {
      if ( this._condition1 )    //      if ( Compare.equals ( this.app.SOLIC_PROGRAMA_FLG_GBL, 0 ) ) 
      {
        if ( this._condition2 )    //        if ( ( Compare.equals ( this.app.RUTINA_GBL, "IR" ) ) && ( Compare.gt ( this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).getDoubleItem ( "RECORDS_READ_COUNT" ), 0 ) )  ) 
        {
          if ( this._condition3 )    //          if ( Compare.lt ( TruncService.trunc ( FIND_DATE, "DDD" ) , TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  ) ) 
          {
            this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).setItem ( "RMO_OFICINA", this.app.RMO_GBL  );
          }
          else
          {
            this.doReturn ( );
            return;
          }
        }
        else
        {
          this.app.callCommand ( RallyAppCommandFactory.FINSNEXT );
          return;
        }
      }
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( INFORMACION_REFERIMIENTO_ADL.getCOMPLETION_STATUS ( this.app ), "SUCCESS" ) ) 
    {
      if ( this._condition1 )    //      if ( Compare.equals ( this.app.SOLIC_PROGRAMA_FLG_GBL, 0 ) ) 
      {
        if ( this._condition2 )    //        if ( ( Compare.equals ( this.app.RUTINA_GBL, "IR" ) ) && ( Compare.gt ( this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).getDoubleItem ( "RECORDS_READ_COUNT" ), 0 ) )  ) 
        {
        }
        else
        {
          this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).setItem ( "RMO_OFICINA", this.app.RMO_GBL  );
        }
        this.doReturn ( );
        return; 
      }
      else
      {
        this.doReturn ( );
        return;
      }
    }
    if ( Compare.equals ( this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).getDoubleItem ( "RECORDS_READ_COUNT" ), 0 ) ) 
    {
      this._condition4 = true;
    }
    else
    {
      this._condition4 = false;
    }
    if ( this._condition4 )
    {
      this.app.callCommand ( RallyAppCommandFactory.FINSNEXT );
      return;
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition4 )    //    if ( Compare.equals ( this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).getDoubleItem ( "RECORDS_READ_COUNT" ), 0 ) ) 
    {
      this.app.form ( "SOLIC_PROGRAMA_POTENCIAL_FR" ).setItem ( "RMO_OFICINA", this.app.RMO_GBL  );
    }
    SET_FECHA_VISITA_ADL.exec ( this.app );
    return;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE INSERT_ON_UPDATE_NO_RECORDS_ADL;
VAR
        FIND_DATE:      DATE;

BEGIN
SET_TRACE();
call_cmd('set word_wrap');
debug_log(to_char(SOLIC_PROGRAMA_POTENCIAL_FR.FCH_VISITA));
FIND_DATE:=SOLIC_PROGRAMA_POTENCIAL_FR.FCH_VISITA;
IF INFORMACION_REFERIMIENTO_ADL.COMPLETION_STATUS='SUCCESS'
   THEN IF SOLIC_PROGRAMA_FLG_GBL=0
        THEN BEGIN
             IF (RUTINA_GBL= 'IR') AND 
                (SOLIC_PROGRAMA_POTENCIAL_FR.RECORDS_READ_COUNT > 0)
                THEN  BEGIN
                      IF TRUNC(FIND_DATE,'DDD') < TRUNC(SYSTEM_DATE,'DDD')      
        
                         THEN BEGIN
                                CALL_CMD('Insert record next_group');
                                SOLIC_PROGRAMA_POTENCIAL_FR.RMO_OFICINA:=RMO_GBL
;
                              END;
                         ELSE RETURN;
                      END;
                ELSE BEGIN
                         CALL_CMD('Insert record next_group');
                         SOLIC_PROGRAMA_POTENCIAL_FR.RMO_OFICINA:=RMO_GBL;
                     END;
             RETURN;
             END;
        ELSE RETURN;

IF SOLIC_PROGRAMA_POTENCIAL_FR.RECORDS_READ_COUNT=0
   THEN BEGIN
          CALL_CMD('Insert record next_group');
          SOLIC_PROGRAMA_POTENCIAL_FR.RMO_OFICINA:=RMO_GBL;
        END;

CALL SET_FECHA_VISITA_ADL;
SET_NOTRACE();
END;
    



--------------------------------------------------------------------- */
