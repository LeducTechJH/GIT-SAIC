package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class ANO_ECONOMICO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double YR = 0;



  public Date IN_DATE = null;

  public String A_ECON = null;

  public String MT = null;

  public String YE = null;

  public String TD = null;

  public String AE1 = null;

  public String AE2 = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setIN_DATE  ( RallyApplication __app, Parameter value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).IN_DATE = value.getDate ( );
  }  

  
  /**  */
  public static void setA_ECON  ( RallyApplication __app, Parameter value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).A_ECON = value.getString ( );
  }  

  
  /**  */
  public static void setYR  ( RallyApplication __app, Parameter value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YR = value.getDouble ( );
  }  

  
  /**  */
  public static void setMT  ( RallyApplication __app, Parameter value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).MT = value.getString ( );
  }  

  
  /**  */
  public static void setYE  ( RallyApplication __app, Parameter value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YE = value.getString ( );
  }  

  
  /**  */
  public static void setTD  ( RallyApplication __app, Parameter value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).TD = value.getString ( );
  }  

  
  /**  */
  public static void setAE1  ( RallyApplication __app, Parameter value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).AE1 = value.getString ( );
  }  

  
  /**  */
  public static void setAE2  ( RallyApplication __app, Parameter value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).AE2 = value.getString ( );
  }  
    


  /**  */
  public static Date getIN_DATE  ( RallyApplication __app )
  {
    return ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).IN_DATE;
  }


  /**  */
  public static void setIN_DATE  ( RallyApplication __app, Date value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).IN_DATE = value;
  }


  /**  */
  public static void setIN_DATE  ( RallyApplication __app, Object value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).IN_DATE = ( Date ) value;
  }



  /**  */
  public static String getA_ECON  ( RallyApplication __app )
  {
    return ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).A_ECON;
  }


  /**  */
  public static void setA_ECON  ( RallyApplication __app, String value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).A_ECON = value;
  }


  /**  */
  public static void setA_ECON  ( RallyApplication __app, Object value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).A_ECON = ( String ) value;
  }



  /**  */
  public static String getMT  ( RallyApplication __app )
  {
    return ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).MT;
  }


  /**  */
  public static void setMT  ( RallyApplication __app, String value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).MT = value;
  }


  /**  */
  public static void setMT  ( RallyApplication __app, Object value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).MT = ( String ) value;
  }



  /**  */
  public static String getYE  ( RallyApplication __app )
  {
    return ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YE;
  }


  /**  */
  public static void setYE  ( RallyApplication __app, String value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YE = value;
  }


  /**  */
  public static void setYE  ( RallyApplication __app, Object value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YE = ( String ) value;
  }



  /**  */
  public static String getTD  ( RallyApplication __app )
  {
    return ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).TD;
  }


  /**  */
  public static void setTD  ( RallyApplication __app, String value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).TD = value;
  }


  /**  */
  public static void setTD  ( RallyApplication __app, Object value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).TD = ( String ) value;
  }



  /**  */
  public static String getAE1  ( RallyApplication __app )
  {
    return ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).AE1;
  }


  /**  */
  public static void setAE1  ( RallyApplication __app, String value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).AE1 = value;
  }


  /**  */
  public static void setAE1  ( RallyApplication __app, Object value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).AE1 = ( String ) value;
  }



  /**  */
  public static String getAE2  ( RallyApplication __app )
  {
    return ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).AE2;
  }


  /**  */
  public static void setAE2  ( RallyApplication __app, String value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).AE2 = value;
  }


  /**  */
  public static void setAE2  ( RallyApplication __app, Object value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).AE2 = ( String ) value;
  }




  /**  */
  public static double getYR  ( RallyApplication __app )
  {
    return ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YR;
  }


  /**  */
  public static Double getYRDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YR );
  }


  /**  */
  public static void setYR  ( RallyApplication __app, double value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YR = value;
  }


  /**  */
  public static void setYR  ( RallyApplication __app, Object value )
  {
    ( ( ANO_ECONOMICO_ADL ) __app.getADL ( ANO_ECONOMICO_ADL.class ) ).YR = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static ANO_ECONOMICO_ADL get ( RallyApplication __app )
  {
    ANO_ECONOMICO_ADL adl = new ANO_ECONOMICO_ADL ( );
    __app.register ( adl, "ANO_ECONOMICO_ADL" );
    __app.setADL ( ANO_ECONOMICO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    ANO_ECONOMICO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    ANO_ECONOMICO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }


  /**
   * Populating the parameter set object with return values
   */
  protected void returnParms ( ParameterSet ps, Date IN_DATE, String A_ECON )
  {
    ps.reset ( );
    ps.set ( IN_DATE );
    ps.set ( A_ECON );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "ANO_ECONOMICO_ADL" );
    if ( rObj != null && rObj instanceof ANO_ECONOMICO_ADL )
    {
      this.app.setADL ( ANO_ECONOMICO_ADL.class, ( ANO_ECONOMICO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "ANO_ECONOMICO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "ANO_ECONOMICO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    ps.reset ( );
    IN_DATE = ps.getDate( );
    A_ECON = ps.getString( );

    TD = StringService.toStringValue  ( IN_DATE ,"dd-MMM-yyyy" ,StringService.Language.SPANISH );
    MT = StringService.toStringValue  ( IN_DATE ,"MM" ,StringService.Language.SPANISH );
    YE = StringService.toStringValue  ( IN_DATE ,"yyyy" ,StringService.Language.SPANISH );
    YR = FormattingFactory.parseStringToDouble ( YE );
    if ( ( Compare.equals ( MT, "01" ) ) || ( Compare.equals ( MT, "02" ) ) || ( Compare.equals ( MT, "03" ) ) || ( Compare.equals ( MT, "04" ) ) || ( Compare.equals ( MT, "05" ) ) || ( Compare.equals ( MT, "06" ) ) ) 
    {
      AE1 = StringService.toStringValue  ( MathService.minus ( YR, 1  ) );
      AE2 = StringService.toStringValue  ( YR );
    }
    else if ( ( Compare.equals ( MT, "07" ) ) || ( Compare.equals ( MT, "08" ) ) || ( Compare.equals ( MT, "09" ) ) || ( Compare.equals ( MT, "10" ) ) || ( Compare.equals ( MT, "11" ) ) || ( Compare.equals ( MT, "12" ) )  )
    {
      AE1 = StringService.toStringValue  ( YR );
      AE2 = StringService.toStringValue  ( MathService.plus ( YR, 1  ) );
    }
    A_ECON = ( AE1 + "-" + AE2 );
    this.returnParms ( ps, IN_DATE, A_ECON );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE ANO_ECONOMICO_ADL(VAR IN_DATE: DATE; VAR A_ECON: CHAR(10););

VAR     YR      :       NUMBER(4,0);
        MT      :       CHAR(2);
        YE      :       CHAR(4);
        TD      :       CHAR;
        AE1     :       CHAR(4);
        AE2     :       CHAR(4);

SET_TRACE();

TD      :=      TO_CHAR(IN_DATE, 'DD-MON-YYYY');

MT      :=      TO_CHAR(IN_DATE, 'MM');
YE      :=      TO_CHAR(IN_DATE, 'YYYY');

YR      :=      TO_NUMBER(YE);

IF      (MT     =       '01') OR
        (MT     =       '02') OR
        (MT     =       '03') OR
        (MT     =       '04') OR
        (MT     =       '05') OR
        (MT     =       '06') THEN 
BEGIN
AE1     :=      TO_CHAR(YR-1); 
AE2     :=      TO_CHAR(YR);
END;
ELSE
IF      (MT     =       '07') OR
        (MT     =       '08') OR
        (MT     =       '09') OR
        (MT     =       '10') OR
        (MT     =       '11') OR
        (MT     =       '12') THEN
BEGIN
AE1     :=      TO_CHAR(YR); 
AE2     :=      TO_CHAR(YR+1);
END;

A_ECON := (AE1 || '-' || AE2);

DEBUG_LOG ('DATE IS '|| TD );
DEBUG_LOG ('MONTH IS ' || MT );
DEBUG_LOG ('YEAR IS ' || YE);

SET_NOTRACE();
    



--------------------------------------------------------------------- */
