package gov.dlf.presentation;


import gov.dlf.facade.*;
import gov.dlf.external.*;
import gov.dlf.logic.*;

import java.util.Date;



import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.jdatapanel.*;
import net.maintrend.jdatapanel.edit.*;
import net.maintrend.jdatapanel.commands.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SERV_SOST2_FRM
     extends Form
{
  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;



  // -------------------------------------------------------------------
  // ----------   Constructors and supporting methods   ----------------

  /**
   *
   */
  public SERV_SOST2_FRM ( )
  {
    super ( );
    this.setName ( "SERV_SOST2_FRM" );

    Debug.println ( Debug.TRACE, "SERV_SOST2_FRM - constructor" );

    this.setDefinitionPath ( "gov/dlf/presentation/SERV_SOST2_FRM.jdp" );
    String definition = ResourceUtil.getResourceText ( this.definitionPath );
    this.setDefinition     ( definition );

    this.setHighLightSelected   ( false );
    this.compressFieldLocations ( false, true );  // Compresses only Y-locations
  }


  /**
   * Overrides ancestor's script
   *
   * @param __app
   */
  public void setApplication ( Application __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.setDataManager ( this.app.getDataManager ( ) );
    }

    ICalculator           calculator;
    IBooleanValueProvider txtVisible;
    IBooleanValueProvider groupVisible;
    IObjectValueProvider  valueProvider;
    JDataPanelField       field;
    JDataPanelTextGroup   txtGroup;
    JDataPanelGroup       visGroup;

    this.setArguments ( "SERV_JEFE_GP", new SERV_SOST2_FRM_GP_Arguments ( this ) );
    this.setArguments ( "SERV_GP", new LISTADO_SOST2_FRM_GP_Arguments ( this ) );

    this.setObjectEvents ( );

  }


  /**
   * Overrides ancestor's method
   *
   * @return
   */
  public RallyApplication getApplication ( )
  {
    return this.app;
  }



  // -------------------------------------------------------------------
  // ----------   Action Sites   ---------------------------------------

  /**
   *
   */
  public void setObjectEvents ( )
  {	    
	    this.registerListener ( "SEGURO_SOCIAL_CLIENTE", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
	    {
	      public boolean eventFired ( String eventName )
	      {
	        app.errorFlag = true; SOSTENEDOR2_LIST_CHECK_NUM_SERVICIOS_ADL.exec ( app ); return app.errorFlag;
	      }
	    } );
	    this.registerListener ( "SEGURO_SOCIAL_CLIENTE", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
	    {
	      public boolean eventFired ( String eventName )
	      {
	        app.errorFlag = true; SOSTENEDOR2_LIST_CHECK_NUM_SERVICIOS_AF_ADL.exec ( app ); return app.errorFlag;
	      }
	    } );
	    this.registerListener ( "TIPO_TRANS", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.form("SERV_SOST_FRM").setItem("COD_SERVICIO", "TANFE");
				app.errorFlag = true; 
				return app.errorFlag;
			}
		} );
		this.registerListener ( "FCH_TERMINA", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				Date termina = __form.getDateItem( "FCH_TERMINA" );
				Date comienzo = __form.getDateItem( "FCH_COMIENZO" );
				String actividad = __form.getStringItem("ID_ACTIVIDAD" );
				
				if(Compare.lt(termina, comienzo))
				{
					app.setError ("0", "La fecha termina no puede ser menor que fecha comienzo.");
					app.errorFlag = false; 
				}
				switch ( actividad )
				{
				case "I":  
					{ 
						if (Compare.gt(DateUtil.monthsBetween (comienzo,termina),3))
						{
							app.setError ("0", "La duracion de la actividad Aprestamiento y Busqueda de Empleo no puede sobrepasar 3 meses.");
							app.errorFlag = false; 
						}
						break; 
					}	
				case "D":  
				{ 
					if (Compare.gt(DateUtil.monthsBetween (comienzo,termina),18))
					{
						app.setError ("0", "La duracion de la actividad Servicio Comunitario no puede sobrepasar 18 meses.");
						app.errorFlag = false; 
					}
					break; 
				}
				case "C":  
				{ 
					if (Compare.gt(DateUtil.monthsBetween (comienzo,termina),18))
					{
						app.setError ("0", "La duracion de la actividad Experiencia de Trabajo no puede sobrepasar 18 meses.");
						app.errorFlag = false; 
					}
					break; 
				}	
				default:
					{
						if (Compare.gt(DateUtil.monthsBetween (comienzo,termina),12))
						{
							app.setError ("0", "La duracion de la actividad no puede sobrepasar 12 meses.");
							app.errorFlag = false; 
						}
						break;
					}
				}
				
				
				return app.errorFlag;
			}
		} );
  }
  }






/**
 *
 */
class SERV_SOST2_FRM_GP_Arguments extends JDataPanelGroupArguments
{
  /**  */
  protected Form model;
  /**  */
  protected SAIC_DMQ_ORA_Application app = null;

  /**  */
  public SERV_SOST2_FRM_GP_Arguments ( Form form )
  {
    this.model = form;

    this.setArgName ( "SSN_PAR" );
  }

  /**  */
  public Object getArgValue ( String argName )
  {
    if ( this.app == null ) this.app = ( SAIC_DMQ_ORA_Application ) this.model.getApplication ( );
    if ( argName == null )
    {
      return null;
    }
    else if ( argName.equals ( "SSN_PAR" ) )
    {
    	return this.app.form("SERV_FAM_FRM").getDoubleItem( "SEGURO_SOCIAL_JEFE_SERV" );
    }
    return null;
  }
}


class LISTADO_SOST2_FRM_GP_Arguments extends JDataPanelGroupArguments
{
  /**  */
  protected Form model;
  /**  */
  protected SAIC_DMQ_ORA_Application app = null;

  /**  */
  public LISTADO_SOST2_FRM_GP_Arguments ( Form form )
  {
    this.model = form;

    this.setArgName ( "SSN_PAR" );
  }

  /**  */
  public Object getArgValue ( String argName )
  {
    if ( this.app == null ) this.app = ( SAIC_DMQ_ORA_Application ) this.model.getApplication ( );
    if ( argName == null )
    {
      return null;
    }
    else if ( argName.equals ( "SSN_PAR" ) )
    {
    	 return this.app.form("SERV_SOST2_FRM").getDoubleItem( "SEGURO_SOCIAL_CLIENTE" );
    }
    return null;
  }
}










