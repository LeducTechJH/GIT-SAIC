package gov.dlf.presentation;


import gov.dlf.facade.*;
import gov.dlf.external.*;
import gov.dlf.logic.*;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.jdatapanel.*;
import net.maintrend.jdatapanel.edit.*;
import net.maintrend.jdatapanel.commands.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class EMISIONES_BENEFICIOS_SUB_FRM
     extends Form
{
  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;



  // -------------------------------------------------------------------
  // ----------   Constructors and supporting methods   ----------------

  /**
   *
   */
  public EMISIONES_BENEFICIOS_SUB_FRM ( )
  {
    super ( );
    this.setName ( "EMISIONES_BENEFICIOS_SUB_FRM" );

    Debug.println ( Debug.TRACE, "EMISIONES_BENEFICIOS_SUB_FRM - constructor" );

    this.setDefinitionPath ( "gov/dlf/presentation/EMISIONES_BENEFICIOS_SUB_FRM.jdp" );
    String definition = ResourceUtil.getResourceText ( this.definitionPath );
    this.setDefinition     ( definition );

    this.setHighLightSelected   ( false );
    this.compressFieldLocations ( false, true );  // Compresses only Y-locations
  }
  
  
  /**
   * Overrides ancestor's script
   *
   * @param __app
   */
  public void setApplication ( Application __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.setDataManager ( this.app.getDataManager ( ) );
    }
    ICalculator           calculator;
    IBooleanValueProvider txtVisible;
    IBooleanValueProvider groupVisible;
    IObjectValueProvider  valueProvider;
    JDataPanelField       field;
    JDataPanelTextGroup   txtGroup;
    JDataPanelGroup       visGroup;
    this.setArguments ( "EMISIONES_BENEFICIOS_SUB_GP", new EMISIONES_BENEFICIOS_SU_GP_Arguments ( this ) );
    this.setObjectEvents ( );
  }
  /**
   * Overrides ancestor's method
   * 
   * @return
   */
  public RallyApplication getApplication ( )
  {
    return this.app;
  }



  // -------------------------------------------------------------------
  // ----------   Action Sites   ---------------------------------------

  /**
   *
   */
  public void setObjectEvents ( )
  {

  }
}

class EMISIONES_BENEFICIOS_SU_GP_Arguments extends JDataPanelGroupArguments
{
  /**  */
  protected Form model;
  /**  */
  protected SAIC_DMQ_ORA_Application app = null;

  /**  */
  public EMISIONES_BENEFICIOS_SU_GP_Arguments ( Form form )
  {
    this.model = form;

    this.setArgName ( "COD_SERV" );
    this.setArgName ( "SSJS" );
    this.setArgName ( "FCH_EMISION" );
    this.setArgName ( "DIA_EMISION" );
    this.setArgName ( "TIPO_EMISION" );
    this.setArgName ( "PROG" );
    this.setArgName ( "SSJF" );
  }

  /**  */
  public Object getArgValue ( String argName )
  {
    if ( this.app == null ) this.app = ( SAIC_DMQ_ORA_Application ) this.model.getApplication ( );
    if ( argName == null )
    {
      return null;
    }
    else if ( argName.equals ( "COD_SERV" ) )
    {
    	return this.app.form("EMISIONES_BENEFICIOS_FRM").getStringItem("COD_SERVICIO");
    }
    else if ( argName.equals ( "SSJS" ) )
    {
    	return this.app.form("EMISIONES_BENEFICIOS_FRM").getDoubleItem("SEGURO_SOCIAL_JEFE_SERV");
    }
    else if ( argName.equals ( "SSJF" ) )
    {
    	return this.app.form("EMISIONES_BENEFICIOS_FRM").getDoubleItem("SEGURO_SOCIAL_JEFE_FAM");
    }
    else if ( argName.equals ( "FCH_EMISION" ) )
    {
		DateFormat formatter;
		String fchemipar;
    	Date fechaemision =  this.app.form("EMISIONES_BENEFICIOS_FRM").getDateItem( "FCH_EMISION" );;
		formatter = new SimpleDateFormat("yyyyMM");
		fchemipar = formatter.format(fechaemision);
    	return fchemipar;
    }
    else if ( argName.equals ( "DIA_EMISION" ) )
    {
    	return this.app.form("EMISIONES_BENEFICIOS_FRM").getDoubleItem( "DIA_EMISION_PARAM" );
    }
    else if ( argName.equals ( "TIPO_EMISION" ) )
    {
    	return this.app.form("EMISIONES_BENEFICIOS_FRM").getStringItem( "TIPO_EMISION_PARAM" );
    }
    else if ( argName.equals ( "PROG" ) )
    {
    	return this.app.form("EMISIONES_BENEFICIOS_FRM").getStringItem( "PROGRAMA_PARAM" );
    }
    return null;
  }
}






