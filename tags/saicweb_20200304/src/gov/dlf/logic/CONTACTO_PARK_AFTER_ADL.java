package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CONTACTO_PARK_AFTER_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMANDO = 0;



  public String NULL_CHAR = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMANDO  ( RallyApplication __app, Parameter value )
  {
    ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).COMANDO = value.getDouble ( );
  }  

  
  /**  */
  public static void setNULL_CHAR  ( RallyApplication __app, Parameter value )
  {
    ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).NULL_CHAR = value.getString ( );
  }  
    


  /**  */
  public static String getNULL_CHAR  ( RallyApplication __app )
  {
    return ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).NULL_CHAR;
  }


  /**  */
  public static void setNULL_CHAR  ( RallyApplication __app, String value )
  {
    ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).NULL_CHAR = value;
  }


  /**  */
  public static void setNULL_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).NULL_CHAR = ( String ) value;
  }




  /**  */
  public static double getCOMANDO  ( RallyApplication __app )
  {
    return ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).COMANDO;
  }


  /**  */
  public static Double getCOMANDODouble ( RallyApplication __app )
  {
    return new Double ( ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).COMANDO );
  }


  /**  */
  public static void setCOMANDO  ( RallyApplication __app, double value )
  {
    ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).COMANDO = value;
  }


  /**  */
  public static void setCOMANDO  ( RallyApplication __app, Object value )
  {
    ( ( CONTACTO_PARK_AFTER_ADL ) __app.getADL ( CONTACTO_PARK_AFTER_ADL.class ) ).COMANDO = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CONTACTO_PARK_AFTER_ADL get ( RallyApplication __app )
  {
    CONTACTO_PARK_AFTER_ADL adl = new CONTACTO_PARK_AFTER_ADL ( );
    __app.register ( adl, "CONTACTO_PARK_AFTER_ADL" );
    __app.setADL ( CONTACTO_PARK_AFTER_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CONTACTO_PARK_AFTER_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CONTACTO_PARK_AFTER_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CONTACTO_PARK_AFTER_ADL" );
    if ( rObj != null && rObj instanceof CONTACTO_PARK_AFTER_ADL )
    {
      this.app.setADL ( CONTACTO_PARK_AFTER_ADL.class, ( CONTACTO_PARK_AFTER_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CONTACTO_PARK_AFTER_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CONTACTO_PARK_AFTER_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    COMANDO = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    NULL_CHAR = TruncService.setNull ( NULL_CHAR  );
    if ( ( Compare.equals ( COMANDO, RallyAppCommandFactory.RNEXT ) ) || ( Compare.equals ( COMANDO, RallyAppCommandFactory.RPREV ) ) && ( Compare.le ( this.app.form ( "CONTACTO_FRM" ).getDoubleItem ( "AGGY" ), 1 ) )  ) 
    {
      this.app.setError ( 0, 2766 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    if ( ! Compare.equals ( this.app.form ( "CALENDARIO_MAIN_FR" ).getStringItem ( "STS_ACTIVIDAD" ), NULL_CHAR ) ) 
    {
      if ( ( ! Compare.equals ( COMANDO, RallyAppCommandFactory.FNEXT ) ) && ( ! Compare.equals ( COMANDO, RallyAppCommandFactory.RNEXT ) )  && ( ! Compare.equals ( COMANDO, RallyAppCommandFactory.RPREV ) )  && ( ! Compare.equals ( COMANDO, RallyAppCommandFactory.RHOME ) )  && ( ! Compare.equals ( COMANDO, RallyAppCommandFactory.RLAST ) )  && ( ! Compare.equals ( COMANDO, RallyAppCommandFactory.PRNEXT ) )  && ( ! Compare.equals ( COMANDO, RallyAppCommandFactory.PRPREV ) )  && ( ! Compare.equals ( COMANDO, RallyAppCommandFactory.EXITACTION ) )  ) 
      {
        this.app.setError ( 1, 5515 );
        this.app.errorFlag = false;
        this.doReturn ( );
        return; 
      }
    }
    if ( ( Compare.equals ( COMANDO, RallyAppCommandFactory.FNEXT ) ) || ( Compare.equals ( COMANDO, RallyAppCommandFactory.EXITACTION ) ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      if ( Compare.gt ( this.app.form ( "CONTACTO_FRM" ).getDoubleItem ( "CONT_TOT" ), this.app.form ( "CONTACTO_FRM" ).getDoubleItem ( "CONT_RA" )) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        this.app.callCommand ( RallyAppCommandFactory.RLAST );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( Compare.equals ( COMANDO, RallyAppCommandFactory.FNEXT ) ) || ( Compare.equals ( COMANDO, RallyAppCommandFactory.EXITACTION ) ) ) 
    {
      if ( this._condition1 )    //      if ( Compare.gt ( this.app.form ( "CONTACTO_FRM" ).getDoubleItem ( "CONT_TOT" ), this.app.form ( "CONTACTO_FRM" ).getDoubleItem ( "CONT_RA" )) ) 
      {
      }
      this.app.callCommand ( RallyAppCommandFactory.FNEXT );
      return;
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE  CONTACTO_PARK_AFTER_ADL;

VAR
        COMANDO         :       NUMBER;
        NULL_CHAR       :       CHAR(1);

BEGIN
        COMANDO := GET_CMD();
        MAKE_NULL (NULL_CHAR);

                IF (COMANDO = RNEXT) OR (COMANDO = RPREV)
                   AND
                    (CONTACTO_FRM.AGGY <=1) THEN BEGIN
                               ERROR(2766);
                               SET_FAILURE();
                               RETURN;
                               END;

        IF (CALENDARIO_MAIN_FR.STS_ACTIVIDAD <> NULL_CHAR) THEN
        BEGIN

                IF (COMANDO <> FNEXT) AND (COMANDO <> RNEXT) AND
                   (COMANDO <> RPREV) AND (COMANDO <> RHOME) AND
                   (COMANDO <> RLAST) AND (COMANDO <> PRNEXT) AND
                   (COMANDO <> PRPREV) AND (COMANDO <> EXITACTION) THEN
                BEGIN
                        ERROR (5515);
                        SET_FAILURE();
                        RETURN;
                END;
        END;

        IF (COMANDO = FNEXT) OR (COMANDO = EXITACTION) THEN
        BEGIN
                IF (CONTACTO_FRM.CONT_TOT > CONTACTO_FRM.CONT_RA) THEN
                        CALL_CMD (RLAST);
                CALL_CMD (FNEXT);
        END;
END; 

    



--------------------------------------------------------------------- */
