package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class RESUMEN_FULL_VAR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static RESUMEN_FULL_VAR_ADL get ( RallyApplication __app )
  {
    RESUMEN_FULL_VAR_ADL adl = new RESUMEN_FULL_VAR_ADL ( );
    __app.register ( adl, "RESUMEN_FULL_VAR_ADL" );
    __app.setADL ( RESUMEN_FULL_VAR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    RESUMEN_FULL_VAR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    RESUMEN_FULL_VAR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "RESUMEN_FULL_VAR_ADL" );
    if ( rObj != null && rObj instanceof RESUMEN_FULL_VAR_ADL )
    {
      this.app.setADL ( RESUMEN_FULL_VAR_ADL.class, ( RESUMEN_FULL_VAR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "RESUMEN_FULL_VAR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "RESUMEN_FULL_VAR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "SS_JEFE", this.app.SS_JEFE_GBL  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "SS_SERV", this.app.SS_SERV_GBL  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "OFICINA", RESUMEN_FULL_ADL.getDESC_OFICINA ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "DSC_SERV", RESUMEN_FULL_ADL.getDESC_SERVICIO ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "JEFE_NOMBRE", RESUMEN_FULL_ADL.getNOMBRE_JEFE ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "SERV_NOMBRE", RESUMEN_FULL_ADL.getNOMBRE_SERV ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "FCH_DESDE", RESUMEN_FULL_ADL.getDESDE ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "FCH_HASTA", RESUMEN_FULL_ADL.getHASTA ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "TOT_MESES", RESUMEN_FULL_ADL.getMESES ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "TOT_ING", RESUMEN_FULL_ADL.getING_TOTAL ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "TOT_REC", RESUMEN_FULL_ADL.getREC_TOTAL ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "TOT_GAS", RESUMEN_FULL_ADL.getGASTOS_TOT ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "TECNICO", RESUMEN_FULL_ADL.getTECNICO ( this.app )  );
    this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "FCH_CIERRE", RESUMEN_FULL_ADL.getFCH_CIERRE ( this.app )  );
    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) ) 
    {
      this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "EMER_REG", RESUMEN_FULL_ADL.getBENE ( this.app )  );
    }
    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" )  )
    {
      this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "AE", RESUMEN_FULL_ADL.getBENE ( this.app )  );
    }
    else
    {
      this.app.form ( "NUCLEO_FULL_REPORT_FRM" ).setItem ( "BENE_REG", RESUMEN_FULL_ADL.getBENE ( this.app )  );
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE RESUMEN_FULL_VAR_ADL;

BEGIN
SET_TRACE();

NUCLEO_FULL_REPORT_FRM.SS_JEFE := SS_JEFE_GBL;
NUCLEO_FULL_REPORT_FRM.SS_SERV := SS_SERV_GBL;
NUCLEO_FULL_REPORT_FRM.OFICINA := RESUMEN_FULL_ADL.DESC_OFICINA;
NUCLEO_FULL_REPORT_FRM.DSC_SERV := RESUMEN_FULL_ADL.DESC_SERVICIO;
NUCLEO_FULL_REPORT_FRM.JEFE_NOMBRE := RESUMEN_FULL_ADL.NOMBRE_JEFE;
NUCLEO_FULL_REPORT_FRM.SERV_NOMBRE := RESUMEN_FULL_ADL.NOMBRE_SERV;
NUCLEO_FULL_REPORT_FRM.FCH_DESDE := RESUMEN_FULL_ADL.DESDE;
NUCLEO_FULL_REPORT_FRM.FCH_HASTA := RESUMEN_FULL_ADL.HASTA;
NUCLEO_FULL_REPORT_FRM.TOT_MESES := RESUMEN_FULL_ADL.MESES;
NUCLEO_FULL_REPORT_FRM.TOT_ING := RESUMEN_FULL_ADL.ING_TOTAL;
NUCLEO_FULL_REPORT_FRM.TOT_REC := RESUMEN_FULL_ADL.REC_TOTAL;
NUCLEO_FULL_REPORT_FRM.TOT_GAS := RESUMEN_FULL_ADL.GASTOS_TOT;
NUCLEO_FULL_REPORT_FRM.TECNICO := RESUMEN_FULL_ADL.TECNICO;
NUCLEO_FULL_REPORT_FRM.FCH_CIERRE := RESUMEN_FULL_ADL.FCH_CIERRE;
IF SUBSTR(COD_SERV_GBL,0,4) = 'PANE'
THEN
        NUCLEO_FULL_REPORT_FRM.EMER_REG := RESUMEN_FULL_ADL.BENE;
ELSE
   IF SUBSTR(COD_SERV_GBL,0,2) = 'AE'
   THEN
        NUCLEO_FULL_REPORT_FRM.AE := RESUMEN_FULL_ADL.BENE;
   ELSE
        NUCLEO_FULL_REPORT_FRM.BENE_REG := RESUMEN_FULL_ADL.BENE;

SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
