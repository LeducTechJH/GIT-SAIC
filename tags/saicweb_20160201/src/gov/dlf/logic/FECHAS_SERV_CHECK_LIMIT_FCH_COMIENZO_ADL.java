package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------



  public Date FECHA_AUX = null;

  public String CHAR_AUX_3 = null;

  public String CHAR_AUX_2 = null;

  public Date NULL_DATA = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setFECHA_AUX  ( RallyApplication __app, Parameter value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).FECHA_AUX = value.getDate ( );
  }  

  
  /**  */
  public static void setCHAR_AUX_3  ( RallyApplication __app, Parameter value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).CHAR_AUX_3 = value.getString ( );
  }  

  
  /**  */
  public static void setCHAR_AUX_2  ( RallyApplication __app, Parameter value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).CHAR_AUX_2 = value.getString ( );
  }  

  
  /**  */
  public static void setNULL_DATA  ( RallyApplication __app, Parameter value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).NULL_DATA = value.getDate ( );
  }  
    


  /**  */
  public static Date getFECHA_AUX  ( RallyApplication __app )
  {
    return ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).FECHA_AUX;
  }


  /**  */
  public static void setFECHA_AUX  ( RallyApplication __app, Date value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).FECHA_AUX = value;
  }


  /**  */
  public static void setFECHA_AUX  ( RallyApplication __app, Object value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).FECHA_AUX = ( Date ) value;
  }



  /**  */
  public static String getCHAR_AUX_3  ( RallyApplication __app )
  {
    return ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).CHAR_AUX_3;
  }


  /**  */
  public static void setCHAR_AUX_3  ( RallyApplication __app, String value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).CHAR_AUX_3 = value;
  }


  /**  */
  public static void setCHAR_AUX_3  ( RallyApplication __app, Object value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).CHAR_AUX_3 = ( String ) value;
  }



  /**  */
  public static String getCHAR_AUX_2  ( RallyApplication __app )
  {
    return ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).CHAR_AUX_2;
  }


  /**  */
  public static void setCHAR_AUX_2  ( RallyApplication __app, String value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).CHAR_AUX_2 = value;
  }


  /**  */
  public static void setCHAR_AUX_2  ( RallyApplication __app, Object value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).CHAR_AUX_2 = ( String ) value;
  }



  /**  */
  public static Date getNULL_DATA  ( RallyApplication __app )
  {
    return ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).NULL_DATA;
  }


  /**  */
  public static void setNULL_DATA  ( RallyApplication __app, Date value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).NULL_DATA = value;
  }


  /**  */
  public static void setNULL_DATA  ( RallyApplication __app, Object value )
  {
    ( ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) __app.getADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class ) ).NULL_DATA = ( Date ) value;
  }





  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL get ( RallyApplication __app )
  {
    FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL adl = new FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ( );
    __app.register ( adl, "FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL" );
    __app.setADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL" );
    if ( rObj != null && rObj instanceof FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL )
    {
      this.app.setADL ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL.class, ( FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( Compare.equals ( this.app.MANT_ACCION_SERV_GBL, "IS" ) ) 
    {
      this.doReturn ( );
      return;
    }
    CHAR_AUX_3 = RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 3 );
    CHAR_AUX_2 = RallyStringService.subString ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 );
    NULL_DATA = TruncService.setNull ( NULL_DATA );
    if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERVICIO_GBL, 0, 3 ), "PAN" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERVICIO_GBL, 0, 2 ), "AE" ) ) ) 
    {
      if ( Compare.lt ( TruncService.trunc ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getDateItem ( "FCH_COMIENZO" ), "MM" ) , TruncService.trunc ( this.app.form ( "FECHAS_SERVICIO_FRM" ).getDateItem ( "FCH_SOLICITUD" ), "MM" )  ) ) 
      {
        this.app.errorFlag = false;
        this.app.setError ( 0, 4002 );
        this.doReturn ( );
        return; 
      }
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE FECHAS_SERV_CHECK_LIMIT_FCH_COMIENZO_ADL;

VAR
        FECHA_AUX       :       DATE;
        CHAR_AUX_3      :       CHAR (3);
        CHAR_AUX_2      :       CHAR (2);
        NULL_DATA       :       DATE;

BEGIN
SET_TRACE();

IF MANT_ACCION_SERV_GBL='IS'
   THEN RETURN;

{ EL RETURN ANTERIOR FUE ANADIDO PARA EVITAR LA EJECUCION
  DE ESTE ADL SIN TENER QUE ELIMINARLO DEL VALIDATION DEL CAMPO
  POR SI EN EL FUTURO SE NECESITA.

  SE ELIMINA ESTE ADL PORQUE LA REGLA CAMBIA A QUE EXISTEN
  SITUACIONES EN DONDE LA FECHA DE COMIENZO PUEDE SER MENOR
  QUE LA FECHA }


CHAR_AUX_3 := SUBSTR (FECHAS_SERVICIO_FRM.COD_SERVICIO,0,3);
CHAR_AUX_2 := SUBSTR (FECHAS_SERVICIO_FRM.COD_SERVICIO,0,2);
MAKE_NULL (NULL_DATA);

{
IF (CHAR_AUX_3 = 'PAN') OR
   (CHAR_AUX_2 = 'AE' ) THEN
        FECHA_AUX := FECHAS_SERVICIO_FRM.FCH_DECISION;
ELSE
BEGIN
        IF (FECHAS_SERVICIO_FRM.FCH_REVICION <> NULL_DATA) THEN
                FECHA_AUX := FECHAS_SERVICIO_FRM.FCH_REVICION;
        ELSE
                FECHA_AUX := FECHAS_SERVICIO_FRM.FCH_SOLICITUD;
END;
IF (SUBSTR(COD_SERVICIO_GBL,0,4) = 'PANE') OR 
       (SUBSTR(COD_SERVICIO_GBL,0,3) = 'AEE')
   THEN BEGIN
        IF TRUNC(FECHAS_SERVICIO_FRM.FCH_COMIENZO,'MM')<>
            TRUNC(FECHA_AUX,'MM')
              THEN BEGIN
                   SET_FAILURE();
                   ERROR(4002);
                   RETURN;
                   END;
         END;
}

IF (SUBSTR(COD_SERVICIO_GBL,0,3) = 'PAN') OR 
       (SUBSTR(COD_SERVICIO_GBL,0,2) = 'AE')
   THEN BEGIN
        IF TRUNC(FECHAS_SERVICIO_FRM.FCH_COMIENZO,'MM')<
           TRUNC(FECHAS_SERVICIO_FRM.FCH_SOLICITUD,'MM')
                 THEN BEGIN
                      SET_FAILURE();
                      ERROR(4002);
                      RETURN;
                 END;
    END;
SET_NOTRACE();
END;
    



--------------------------------------------------------------------- */
