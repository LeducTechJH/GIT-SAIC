package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CHECK_ESFUERZO_PARK_CMD_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMMAND = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_ESFUERZO_PARK_CMD_ADL ) __app.getADL ( CHECK_ESFUERZO_PARK_CMD_ADL.class ) ).COMMAND = value.getDouble ( );
  }  
    



  /**  */
  public static double getCOMMAND  ( RallyApplication __app )
  {
    return ( ( CHECK_ESFUERZO_PARK_CMD_ADL ) __app.getADL ( CHECK_ESFUERZO_PARK_CMD_ADL.class ) ).COMMAND;
  }


  /**  */
  public static Double getCOMMANDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_ESFUERZO_PARK_CMD_ADL ) __app.getADL ( CHECK_ESFUERZO_PARK_CMD_ADL.class ) ).COMMAND );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, double value )
  {
    ( ( CHECK_ESFUERZO_PARK_CMD_ADL ) __app.getADL ( CHECK_ESFUERZO_PARK_CMD_ADL.class ) ).COMMAND = value;
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_ESFUERZO_PARK_CMD_ADL ) __app.getADL ( CHECK_ESFUERZO_PARK_CMD_ADL.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CHECK_ESFUERZO_PARK_CMD_ADL get ( RallyApplication __app )
  {
    CHECK_ESFUERZO_PARK_CMD_ADL adl = new CHECK_ESFUERZO_PARK_CMD_ADL ( );
    __app.register ( adl, "CHECK_ESFUERZO_PARK_CMD_ADL" );
    __app.setADL ( CHECK_ESFUERZO_PARK_CMD_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CHECK_ESFUERZO_PARK_CMD_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CHECK_ESFUERZO_PARK_CMD_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CHECK_ESFUERZO_PARK_CMD_ADL" );
    if ( rObj != null && rObj instanceof CHECK_ESFUERZO_PARK_CMD_ADL )
    {
      this.app.setADL ( CHECK_ESFUERZO_PARK_CMD_ADL.class, ( CHECK_ESFUERZO_PARK_CMD_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CHECK_ESFUERZO_PARK_CMD_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CHECK_ESFUERZO_PARK_CMD_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    COMMAND = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.ABORTACTION ) ) 
    {
      FLUJO_ESFUERZO_ADL.setESFU_COUNT ( this.app, 4 );
      FLUJO_ESFUERZO_ADL.setESFU_STATUS ( this.app, "SUCCESS" );
      ( ( FLUJO_ESFUERZO_ADL ) app.get ( "FLUJO_ESFUERZO_ADL" ) ).currentStep = 2; 
      this.app.returnTo ( "FLUJO_ESFUERZO_ADL" ); if ( true ) return;
    }
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.INSAFTER ) ) 
    {
      if ( Compare.equals ( FLUJO_ESFUERZO_ADL.getUPDATE_CONFIRM ( this.app ), 0 ) ) 
      {
        this.app.setError ( 0, 5542 );
        FLUJO_ESFUERZO_ADL.setESFU_COUNT ( this.app, 0 );
        FLUJO_ESFUERZO_ADL.setESFU_STATUS ( this.app, "SUCCESS" );
        this.app.returnTo ( "FLUJO_ESFUERZO_ADL" ); if ( true ) return;
      }
      this.app.SSN_GBL = this.app.form ( "LISTA_ESFUERZO_FR" ).getDoubleItem ( "CLIENTES_SEGURO_SOCIAL_CLIENTE" );
      this.app.SS_JEFE_FAMILIA_GBL = this.app.form ( "LISTA_ESFUERZO_FR" ).getDoubleItem ( "CLIENTES_SEGURO_SOCIAL_JEFE_FAMILIA" );
      this.app.COD_SERVICIO_GBL = "";
      this.app.COMP_FLAG_GBL = "Y";
      FLUJO_ESFUERZO_ADL.setESFU_STATUS ( this.app, "SUCCESS" );
      this.app.returnTo ( "FLUJO_ESFUERZO_ADL" ); if ( true ) return;
    }
    if ( ( Compare.equals ( COMMAND, RallyAppCommandFactory.FPREV ) ) || ( ( Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) && ( ! Compare.equals ( this.app.SUPV_GBL, 1 ) )  ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.callCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( Compare.equals ( COMMAND, RallyAppCommandFactory.FPREV ) ) || ( ( Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) && ( ! Compare.equals ( this.app.SUPV_GBL, 1 ) )  ) ) 
    {
    }
    else
    {
      this.app.form ( "LISTA_ESFUERZO_FR" ).setItem ( "PARK_ESFUERZO", "   "  );
    }
    if ( ( Compare.equals ( this.app.RUTINA_GBL, "ES" ) ) && ( Compare.equals ( COMMAND, RallyAppCommandFactory.ABORTACTION ) )  ) 
    {
      MANTENIMIENTO_DE_ESFUERZO_ADL.setCOMPLETION_STATUS ( this.app, "FAILURE" );
    }
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) 
    {
      FLUJO_ESFUERZO_ADL.setESFU_COUNT ( this.app, 0 );
      FLUJO_ESFUERZO_ADL.setESFU_STATUS ( this.app, "SUCCESS" );
      this.app.returnTo ( "FLUJO_ESFUERZO_ADL" ); if ( true ) return;
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure check_ESFUERZO_park_cmd_adl;
var
        command : number(9,0);
begin
set_trace();
command := get_cmd();

if command = abortaction
then
   begin
        flujo_esfuerzo_adl.esfu_count := 4;
        flujo_esfuerzo_adl.esfu_status := 'SUCCESS';
        return_to flujo_esfuerzo_adl;
   end;
{endif}

if command=insafter
   then
        begin 
           if flujo_esfuerzo_adl.update_confirm = 0
           then begin
                error(5542);
                flujo_esfuerzo_adl.esfu_count := 0;
                flujo_esfuerzo_adl.esfu_status := 'SUCCESS';
                return_to flujo_esfuerzo_adl;
                end;
           ssn_gbl := LISTA_ESFUERZO_FR.CLIENTES_SEGURO_SOCIAL_CLIENTE;
           ss_jefe_familia_gbl := LISTA_ESFUERZO_FR.CLIENTES_SEGURO_SOCIAL_JEFE_
FAMILIA;
           cod_servicio_gbl := '';
           COMP_FLAG_GBL:='Y';
           flujo_esfuerzo_adl.esfu_status := 'SUCCESS';
           RETURN_to flujo_esfuerzo_adl;
{          call sel_servicio_esfuerzo_pkt;
           call_cmd(qbe);
           call_cmd(query);}
        end;
{endif}

if (command = fprev) or  ((command = delrec) AND (SUPV_GBL <> 1))
   then
        call_cmd(ignore);
   else
        LISTA_ESFUERZO_FR.park_esfuerzo := '   ';
{endif}
        
if (rutina_gbl = 'ES') and (command=abortaction)
then
        mantenimiento_de_esfuerzo_adl.completion_status:='FAILURE';
{endif}

if command = exitaction
then
        begin
           flujo_esfuerzo_adl.esfu_count := 0;
           flujo_esfuerzo_adl.esfu_status := 'SUCCESS';
           RETURN_to flujo_esfuerzo_adl;
        end;
{endif}

set_notrace();
end;
    



--------------------------------------------------------------------- */
