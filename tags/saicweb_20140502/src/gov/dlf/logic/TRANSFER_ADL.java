package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class TRANSFER_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;
 
  public boolean _condition4 = false;
 
  public boolean _condition5 = false;
 
  public boolean _condition6 = false;
 
  public boolean _condition7 = false;
 
  public boolean _condition8 = false;
 
  public boolean _condition9 = false;
 
  public boolean _condition10 = false;
 
  public boolean _condition11 = false;
 
  public boolean _condition12 = false;
 
  public boolean _condition13 = false;
 
  public boolean _condition14 = false;
 
  public boolean _condition15 = false;
  
  //***** Start mods. by J. Olmeda 3/23/2010 *****
  public boolean _condition25 = false;
  //***** End mods. by J. Olmeda 3/23/2010 *****

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double TRANSFER = 0;

  public double TRANSFER_STAT = 0;

  public double TRANSFER_READ = 0;

  public double TRANSFER_READ_STAT = 0;

  public double FAMILIA_LOC = 0;

  public double FAMILIA_LOC_STAT = 0;

  public double SERVICIOS_LOC = 0;

  public double SERVICIOS_LOC_STAT = 0;

  public double SERVICIOS_READ_LOC = 0;

  public double SERVICIOS_READ_LOC_STAT = 0;

  public double NUCLEO_LOC = 0;

  public double NUCLEO_LOC_STAT = 0;

  public double NUCLEO_READ_LOC = 0;

  public double NUCLEO_READ_LOC_STAT = 0;

  public double NUCLEO_SERV_READ_LOC = 0;

  public double NUCLEO_SERV_READ_LOC_STAT = 0;

  public double CLIENTES_LOC = 0;

  public double CLIENTES_LOC_STAT = 0;

  public double CLIENTES_READ_LOC = 0;

  public double CLIENTES_READ_LOC_STAT = 0;

  public double RECLARETRO_LOC = 0;

  public double RECLARETRO_LOC_STAT = 0;

  public double RMO = 0;

  public double RMO_FROM = 0;

  public double RMO_TO = 0;

  public double RMO_READ_STAT = 0;

  public double JEFE_FAMILIA_SUST = 0;

  public double EXISTE_EN_NUCLEO = 0;

  public double EXT_EN_OTRO_NUCLEO = 0;

  public double JEFE_SERVICIO = 0;

  public double NUEVO_JEFE_SELECT = 0;

  public double FLAG_RECLARETRO = 0;



  public DataStore TRANSFER_CREATE_DSD = null;

  public DataStore NUCLEO_CLIENTE_DSD = null;

  public DataStore NUCLEO_LOC_DSD = null;

  public DataStore NUCLEO_READ_LOC_DSD = null;

  public DataStore SERVICIOS_READ_LOC_DSD = null;

  public DataStore FAMILIA_READ_LOC_DSD = null;

  public DataStore RECLA_RETRO_TBL_NOPAR_RO_DSD = null;

  public DataStore CLIENTES_READ_LOC_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setTRANSFER  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER = value.getDouble ( );
  }  

  
  /**  */
  public static void setTRANSFER_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setTRANSFER_READ  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ = value.getDouble ( );
  }  

  
  /**  */
  public static void setTRANSFER_READ_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setFAMILIA_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setFAMILIA_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERVICIOS_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERVICIOS_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERVICIOS_READ_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERVICIOS_READ_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUCLEO_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUCLEO_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUCLEO_READ_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUCLEO_READ_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUCLEO_SERV_READ_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUCLEO_SERV_READ_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setCLIENTES_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setCLIENTES_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setCLIENTES_READ_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setCLIENTES_READ_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLARETRO_LOC  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLARETRO_LOC_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setRMO  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO = value.getDouble ( );
  }  

  /**  */
  public static void setRMO_FROM  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_FROM = value.getDouble ( );
  }  
  
  /**  */
  public static void setRMO_READ_STAT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_READ_STAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setJEFE_FAMILIA_SUST  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_FAMILIA_SUST = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXISTE_EN_NUCLEO  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXISTE_EN_NUCLEO = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXT_EN_OTRO_NUCLEO  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXT_EN_OTRO_NUCLEO = value.getDouble ( );
  }  

  
  /**  */
  public static void setJEFE_SERVICIO  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_SERVICIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUEVO_JEFE_SELECT  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUEVO_JEFE_SELECT = value.getDouble ( );
  }  

  
  /**  */
  public static void setFLAG_RECLARETRO  ( RallyApplication __app, Parameter value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FLAG_RECLARETRO = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getTRANSFER_CREATE_DSD  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_CREATE_DSD;
  }


  /**  */
  public static void setTRANSFER_CREATE_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_CREATE_DSD = value;
  }


  /**  */
  public static void setTRANSFER_CREATE_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_CREATE_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_CLIENTE_DSD  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_CLIENTE_DSD;
  }


  /**  */
  public static void setNUCLEO_CLIENTE_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_CLIENTE_DSD = value;
  }


  /**  */
  public static void setNUCLEO_CLIENTE_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_CLIENTE_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC_DSD;
  }


  /**  */
  public static void setNUCLEO_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC_DSD = value;
  }


  /**  */
  public static void setNUCLEO_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC_DSD;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC_DSD = value;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getSERVICIOS_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC_DSD;
  }


  /**  */
  public static void setSERVICIOS_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC_DSD = value;
  }


  /**  */
  public static void setSERVICIOS_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getFAMILIA_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_READ_LOC_DSD;
  }


  /**  */
  public static void setFAMILIA_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_READ_LOC_DSD = value;
  }


  /**  */
  public static void setFAMILIA_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECLA_RETRO_TBL_NOPAR_RO_DSD  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLA_RETRO_TBL_NOPAR_RO_DSD;
  }


  /**  */
  public static void setRECLA_RETRO_TBL_NOPAR_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLA_RETRO_TBL_NOPAR_RO_DSD = value;
  }


  /**  */
  public static void setRECLA_RETRO_TBL_NOPAR_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLA_RETRO_TBL_NOPAR_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getCLIENTES_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC_DSD;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC_DSD = value;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getTRANSFER  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER;
  }


  /**  */
  public static Double getTRANSFERDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER );
  }


  /**  */
  public static void setTRANSFER  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER = value;
  }


  /**  */
  public static void setTRANSFER  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTRANSFER_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_STAT;
  }


  /**  */
  public static Double getTRANSFER_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_STAT );
  }


  /**  */
  public static void setTRANSFER_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_STAT = value;
  }


  /**  */
  public static void setTRANSFER_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTRANSFER_READ  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ;
  }


  /**  */
  public static Double getTRANSFER_READDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ );
  }


  /**  */
  public static void setTRANSFER_READ  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ = value;
  }


  /**  */
  public static void setTRANSFER_READ  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTRANSFER_READ_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ_STAT;
  }


  /**  */
  public static Double getTRANSFER_READ_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ_STAT );
  }


  /**  */
  public static void setTRANSFER_READ_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ_STAT = value;
  }


  /**  */
  public static void setTRANSFER_READ_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).TRANSFER_READ_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getFAMILIA_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC;
  }


  /**  */
  public static Double getFAMILIA_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC );
  }


  /**  */
  public static void setFAMILIA_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC = value;
  }


  /**  */
  public static void setFAMILIA_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getFAMILIA_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC_STAT;
  }


  /**  */
  public static Double getFAMILIA_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC_STAT );
  }


  /**  */
  public static void setFAMILIA_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC_STAT = value;
  }


  /**  */
  public static void setFAMILIA_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FAMILIA_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERVICIOS_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC;
  }


  /**  */
  public static Double getSERVICIOS_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC );
  }


  /**  */
  public static void setSERVICIOS_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC = value;
  }


  /**  */
  public static void setSERVICIOS_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERVICIOS_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC_STAT;
  }


  /**  */
  public static Double getSERVICIOS_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC_STAT );
  }


  /**  */
  public static void setSERVICIOS_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC_STAT = value;
  }


  /**  */
  public static void setSERVICIOS_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERVICIOS_READ_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC;
  }


  /**  */
  public static Double getSERVICIOS_READ_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC );
  }


  /**  */
  public static void setSERVICIOS_READ_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC = value;
  }


  /**  */
  public static void setSERVICIOS_READ_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERVICIOS_READ_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC_STAT;
  }


  /**  */
  public static Double getSERVICIOS_READ_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC_STAT );
  }


  /**  */
  public static void setSERVICIOS_READ_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC_STAT = value;
  }


  /**  */
  public static void setSERVICIOS_READ_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).SERVICIOS_READ_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUCLEO_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC;
  }


  /**  */
  public static Double getNUCLEO_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC );
  }


  /**  */
  public static void setNUCLEO_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC = value;
  }


  /**  */
  public static void setNUCLEO_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUCLEO_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC_STAT;
  }


  /**  */
  public static Double getNUCLEO_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC_STAT );
  }


  /**  */
  public static void setNUCLEO_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC_STAT = value;
  }


  /**  */
  public static void setNUCLEO_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUCLEO_READ_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC;
  }


  /**  */
  public static Double getNUCLEO_READ_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC );
  }


  /**  */
  public static void setNUCLEO_READ_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC = value;
  }


  /**  */
  public static void setNUCLEO_READ_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUCLEO_READ_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC_STAT;
  }


  /**  */
  public static Double getNUCLEO_READ_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC_STAT );
  }


  /**  */
  public static void setNUCLEO_READ_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC_STAT = value;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_READ_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUCLEO_SERV_READ_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC;
  }


  /**  */
  public static Double getNUCLEO_SERV_READ_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC );
  }


  /**  */
  public static void setNUCLEO_SERV_READ_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC = value;
  }


  /**  */
  public static void setNUCLEO_SERV_READ_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUCLEO_SERV_READ_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC_STAT;
  }


  /**  */
  public static Double getNUCLEO_SERV_READ_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC_STAT );
  }


  /**  */
  public static void setNUCLEO_SERV_READ_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC_STAT = value;
  }


  /**  */
  public static void setNUCLEO_SERV_READ_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUCLEO_SERV_READ_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCLIENTES_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC;
  }


  /**  */
  public static Double getCLIENTES_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC );
  }


  /**  */
  public static void setCLIENTES_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC = value;
  }


  /**  */
  public static void setCLIENTES_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCLIENTES_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC_STAT;
  }


  /**  */
  public static Double getCLIENTES_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC_STAT );
  }


  /**  */
  public static void setCLIENTES_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC_STAT = value;
  }


  /**  */
  public static void setCLIENTES_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCLIENTES_READ_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC;
  }


  /**  */
  public static Double getCLIENTES_READ_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC );
  }


  /**  */
  public static void setCLIENTES_READ_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC = value;
  }


  /**  */
  public static void setCLIENTES_READ_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCLIENTES_READ_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC_STAT;
  }


  /**  */
  public static Double getCLIENTES_READ_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC_STAT );
  }


  /**  */
  public static void setCLIENTES_READ_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC_STAT = value;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).CLIENTES_READ_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLARETRO_LOC  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC;
  }


  /**  */
  public static Double getRECLARETRO_LOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC );
  }


  /**  */
  public static void setRECLARETRO_LOC  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC = value;
  }


  /**  */
  public static void setRECLARETRO_LOC  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLARETRO_LOC_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC_STAT;
  }


  /**  */
  public static Double getRECLARETRO_LOC_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC_STAT );
  }


  /**  */
  public static void setRECLARETRO_LOC_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC_STAT = value;
  }


  /**  */
  public static void setRECLARETRO_LOC_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RECLARETRO_LOC_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRMO  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO;
  }


  /**  */
  public static Double getRMODouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO );
  }


  /**  */
  public static void setRMO  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO = value;
  }


  /**  */
  public static void setRMO  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO = ( ( Double ) value ).doubleValue ( );
  }

  /**  */
  public static double getRMO_FROM  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_FROM;
  }


  /**  */
  public static Double getRMO_FROMDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_FROM );
  }


  /**  */
  public static void setRMO_FROM  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_FROM = value;
  }


  /**  */
  public static void setRMO_FROM  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_FROM = ( ( Double ) value ).doubleValue ( );
  }

  /**  */
  public static double getRMO_READ_STAT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_READ_STAT;
  }


  /**  */
  public static Double getRMO_READ_STATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_READ_STAT );
  }


  /**  */
  public static void setRMO_READ_STAT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_READ_STAT = value;
  }


  /**  */
  public static void setRMO_READ_STAT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).RMO_READ_STAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getJEFE_FAMILIA_SUST  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_FAMILIA_SUST;
  }


  /**  */
  public static Double getJEFE_FAMILIA_SUSTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_FAMILIA_SUST );
  }


  /**  */
  public static void setJEFE_FAMILIA_SUST  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_FAMILIA_SUST = value;
  }


  /**  */
  public static void setJEFE_FAMILIA_SUST  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_FAMILIA_SUST = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXISTE_EN_NUCLEO  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXISTE_EN_NUCLEO;
  }


  /**  */
  public static Double getEXISTE_EN_NUCLEODouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXISTE_EN_NUCLEO );
  }


  /**  */
  public static void setEXISTE_EN_NUCLEO  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXISTE_EN_NUCLEO = value;
  }


  /**  */
  public static void setEXISTE_EN_NUCLEO  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXISTE_EN_NUCLEO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXT_EN_OTRO_NUCLEO  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXT_EN_OTRO_NUCLEO;
  }


  /**  */
  public static Double getEXT_EN_OTRO_NUCLEODouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXT_EN_OTRO_NUCLEO );
  }


  /**  */
  public static void setEXT_EN_OTRO_NUCLEO  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXT_EN_OTRO_NUCLEO = value;
  }


  /**  */
  public static void setEXT_EN_OTRO_NUCLEO  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).EXT_EN_OTRO_NUCLEO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getJEFE_SERVICIO  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_SERVICIO;
  }


  /**  */
  public static Double getJEFE_SERVICIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_SERVICIO );
  }


  /**  */
  public static void setJEFE_SERVICIO  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_SERVICIO = value;
  }


  /**  */
  public static void setJEFE_SERVICIO  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).JEFE_SERVICIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUEVO_JEFE_SELECT  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUEVO_JEFE_SELECT;
  }


  /**  */
  public static Double getNUEVO_JEFE_SELECTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUEVO_JEFE_SELECT );
  }


  /**  */
  public static void setNUEVO_JEFE_SELECT  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUEVO_JEFE_SELECT = value;
  }


  /**  */
  public static void setNUEVO_JEFE_SELECT  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).NUEVO_JEFE_SELECT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getFLAG_RECLARETRO  ( RallyApplication __app )
  {
    return ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FLAG_RECLARETRO;
  }


  /**  */
  public static Double getFLAG_RECLARETRODouble ( RallyApplication __app )
  {
    return new Double ( ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FLAG_RECLARETRO );
  }


  /**  */
  public static void setFLAG_RECLARETRO  ( RallyApplication __app, double value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FLAG_RECLARETRO = value;
  }


  /**  */
  public static void setFLAG_RECLARETRO  ( RallyApplication __app, Object value )
  {
    ( ( TRANSFER_ADL ) __app.getADL ( TRANSFER_ADL.class ) ).FLAG_RECLARETRO = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static TRANSFER_ADL get ( RallyApplication __app )
  {
    TRANSFER_ADL adl = new TRANSFER_ADL ( );
    __app.register ( adl, "TRANSFER_ADL" );
    __app.setADL ( TRANSFER_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    TRANSFER_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    TRANSFER_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "TRANSFER_ADL" );
    if ( rObj != null && rObj instanceof TRANSFER_ADL )
    {
      this.app.setADL ( TRANSFER_ADL.class, ( TRANSFER_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "TRANSFER_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
      case 7:  { this.currentStep ++; this.step7 ( this.keyParms ); break; }
      case 8:  { this.currentStep ++; this.step8 ( this.keyParms ); break; }
      case 9:  { this.currentStep ++; this.step9 ( this.keyParms ); break; }
      case 10:  { this.currentStep ++; this.step10 ( this.keyParms ); break; }
      case 11:  { this.currentStep ++; this.step11 ( this.keyParms ); break; }
      case 12:  { this.currentStep ++; this.step12 ( this.keyParms ); break; }
      case 13:  { this.currentStep ++; this.step13 ( this.keyParms ); break; }
      case 14:  { this.currentStep ++; this.step14 ( this.keyParms ); break; }
      case 15:  { this.currentStep ++; this.step15 ( this.keyParms ); break; }
      case 16:  { this.currentStep ++; this.step16 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "TRANSFER_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( ( ! Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) && ( ! Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "F" ) )  ) 
    {
      this.app.errorFlag = false;
      this.app.setError ( 0, 13 );
      this.doReturn ( );
      return; 
    }
    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      this.app.form ( "TRANSFER_FR" ).setItem ( "CODIGO_SERVICIO", this.app.COD_SERV_GBL  );
    }
    else
    {
      this.app.form ( "TRANSFER_FR" ).setItem ( "CODIGO_SERVICIO", " "  );
    }
	JEFE_FAMILIA_SUST = 0;
    EXISTE_EN_NUCLEO = 0;
    EXT_EN_OTRO_NUCLEO = 0;
    FLAG_RECLARETRO = 0;
    TRANSFER_CREATE_DSD = this.dm.create ( "TRANSFER_CREATE_DSD" );
    TRANSFER = TRANSFER_CREATE_DSD.getId ( );
    TRANSFER_STAT = RallyDataStoreException.getDefault ( );
    NUCLEO_CLIENTE_DSD = this.dm.create ( "NUCLEO_CLIENTE_DSD" );
    NUCLEO_READ_LOC = NUCLEO_CLIENTE_DSD.getId ( );
    NUCLEO_READ_LOC_STAT = RallyDataStoreException.getDefault ( );
    NUCLEO_LOC_DSD = this.dm.create ( "NUCLEO_LOC_DSD" );
    NUCLEO_LOC = NUCLEO_LOC_DSD.getId ( );
    NUCLEO_LOC_STAT = RallyDataStoreException.getDefault ( );
    NUCLEO_READ_LOC_DSD = this.dm.create ( "NUCLEO_READ_LOC_DSD" );
    NUCLEO_SERV_READ_LOC = NUCLEO_READ_LOC_DSD.getId ( );
    NUCLEO_SERV_READ_LOC_STAT = RallyDataStoreException.getDefault ( );
    SERVICIOS_READ_LOC_DSD = this.dm.create ( "SERVICIOS_READ_LOC_DSD" );
    SERVICIOS_READ_LOC = SERVICIOS_READ_LOC_DSD.getId ( );
    SERVICIOS_READ_LOC_STAT = RallyDataStoreException.getDefault ( );
    FAMILIA_READ_LOC_DSD = this.dm.create ( "FAMILIA_READ_LOC_DSD" );
    FAMILIA_LOC = FAMILIA_READ_LOC_DSD.getId ( );
    FAMILIA_LOC_STAT = RallyDataStoreException.getDefault ( );
    RECLA_RETRO_TBL_NOPAR_RO_DSD = this.dm.create ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" );
    RECLARETRO_LOC = RECLA_RETRO_TBL_NOPAR_RO_DSD.getId ( );
    RECLARETRO_LOC_STAT = RallyDataStoreException.getDefault ( );
    CLIENTES_READ_LOC_DSD = this.dm.create ( "CLIENTES_READ_LOC_DSD" );
    CLIENTES_READ_LOC = CLIENTES_READ_LOC_DSD.getId ( );
    CLIENTES_READ_LOC_STAT = RallyDataStoreException.getDefault ( );

    CLIENTES_READ_LOC_STAT  = this.dm.reset ( CLIENTES_READ_LOC );

    this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" ));
    //this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
    this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "RMO_OFICINA", GetRMO() );

    CLIENTES_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( CLIENTES_READ_LOC );
    CLIENTES_READ_LOC_STAT  = this.dm.retrieve ( CLIENTES_READ_LOC );

    CLIENTES_READ_LOC_STAT  = this.dm.firstRow ( CLIENTES_READ_LOC );

    if ( Compare.equals ( CLIENTES_READ_LOC_STAT, 0 ) ) 
    {
      this.app.form ( "TRANSFER_FR" ).setItem ( "NOMBRE", this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_NOMBRE" ) + " " + this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_INICIAL" ) + " " + this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_APELLIDO_PATERNO" ) + " " + this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_APELLIDO_MATERNO" )  );
    }
    else
    {
      this.app.form ( "TRANSFER_FR" ).setItem ( "NOMBRE", " "  );
    }

    SERVICIOS_READ_LOC_STAT  = this.dm.reset ( SERVICIOS_READ_LOC );

    this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" ));
    this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ));
    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_SERVICIO", this.app.form ( "TRANSFER_FR" ).getStringItem ( "CODIGO_SERVICIO" ));
    }
    //this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
    this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "RMO_OFICINA", GetRMO() );

    SERVICIOS_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( SERVICIOS_READ_LOC );
    SERVICIOS_READ_LOC_STAT  = this.dm.retrieve ( SERVICIOS_READ_LOC );

    SERVICIOS_READ_LOC_STAT  = this.dm.firstRow ( SERVICIOS_READ_LOC );

    this.process ( ps );

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    if ( Compare.equals ( SERVICIOS_READ_LOC_STAT, 0 )  )
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        if ( ( Compare.equals ( ( MathService.minus ( FormattingFactory.parseStringToDouble ( StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "FCH_TERMINACION" ) ,"MM" ,StringService.Language.SPANISH ) ), FormattingFactory.parseStringToDouble ( StringService.toStringValue  ( this.app.SYSTEM_DATE ,"MM" ,StringService.Language.SPANISH ) )  ) ), 0 ) ) && ( ( Compare.equals ( FormattingFactory.parseStringToDouble ( StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "FCH_TERMINACION" ) ,"yyyy" ,StringService.Language.SPANISH ) ), ( FormattingFactory.parseStringToDouble ( StringService.toStringValue  ( this.app.SYSTEM_DATE ,"yyyy" ,StringService.Language.SPANISH ) ) ) ) ) )  ) 
        {
          this._condition2 = true;
        }
        else
        {
          this._condition2 = false;
        }
        if ( this._condition2 )
        {
          this.app.setError ( 1, 4533 );
          this.app.errorFlag = false;
          this.app.callCommand ( RallyAppCommandFactory.IGNORE );
          return;
        }
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( Compare.equals ( SERVICIOS_READ_LOC_STAT, 0 )  )
    {
      if ( this._condition1 )    //      if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) 
      {
        if ( this._condition2 )    //        if ( ( Compare.equals ( ( MathService.minus ( FormattingFactory.parseStringToDouble ( StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "FCH_TERMINACION" ) ,"MM" ,StringService.Language.SPANISH ) ), FormattingFactory.parseStringToDouble ( StringService.toStringValue  ( this.app.SYSTEM_DATE ,"MM" ,StringService.Language.SPANISH ) )  ) ), 0 ) ) && ( ( Compare.equals ( FormattingFactory.parseStringToDouble ( StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "FCH_TERMINACION" ) ,"yyyy" ,StringService.Language.SPANISH ) ), ( FormattingFactory.parseStringToDouble ( StringService.toStringValue  ( this.app.SYSTEM_DATE ,"yyyy" ,StringService.Language.SPANISH ) ) ) ) ) )  ) 
        {
          this.doReturn ( );
          return; 
        }
      }
      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) ) 
      {
        this._condition3 = true;
      }
      else
      {
        this._condition3 = false;
      }
      if ( this._condition3 )
      {
        this.app.setError ( 2, 4001 );
        this.app.errorFlag = false;
        this.app.callCommand ( RallyAppCommandFactory.IGNORE );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( Compare.equals ( SERVICIOS_READ_LOC_STAT, 0 )  )
    {
      if ( this._condition3 )    //      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) ) 
      {
        this.doReturn ( );
        return; 
      }

      SERVICIOS_READ_LOC_STAT  = this.dm.nextRow ( SERVICIOS_READ_LOC );

      this.currentStep = 1;
      return;
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    RECLARETRO_LOC_STAT  = this.dm.reset ( RECLARETRO_LOC );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ));
    //this.dm.setField ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "RMO_OFICINA", GetRMO() );

    RECLARETRO_LOC_STAT  = this.dm.limitQueryFromBuffer ( RECLARETRO_LOC );
    RECLARETRO_LOC_STAT  = this.dm.retrieve ( RECLARETRO_LOC );

    RECLARETRO_LOC_STAT  = this.dm.firstRow ( RECLARETRO_LOC );

    while ( ( Compare.equals ( RECLARETRO_LOC_STAT, 0 ) ) && ( ! Compare.equals ( RECLARETRO_LOC_STAT, RallyDataStoreExceptionType.EOS ) )   )
    {
      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "ACCION" ), "RECL" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "ACCION" ), "RETR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "ACCION" ), "RREC" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "ACCION" ), "RRET" ) ) ) 
      {
        if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "STATUS" ), "PAGADO" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_RO_DSD" ), "STATUS" ), "SALDAD" ) )  ) 
        {
          FLAG_RECLARETRO = 1;
        }
      }

      RECLARETRO_LOC_STAT  = this.dm.nextRow ( RECLARETRO_LOC );

    }
    if ( Compare.equals ( FLAG_RECLARETRO, 1 ) ) 
    {
      this.app.setError ( 3, 6015 );
    }
    else if ( Compare.equals ( FLAG_RECLARETRO, 2 )  )
    {
      this._condition4 = true;
    }
    else
    {
      this._condition4 = false;
    }
    if ( this._condition4 )
    {
      this.app.setError ( 4, 6015 );
      this.app.errorFlag = false;
      this.app.callCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( Compare.equals ( FLAG_RECLARETRO, 1 ) ) 
    {
    }
    else if ( this._condition4 )    //    else if ( Compare.equals ( FLAG_RECLARETRO, 2 )  )
    {
      this.doReturn ( );
      return; 
    }
    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      this._condition5 = true;
    }
    else
    {
      this._condition5 = false;
    }
    if ( this._condition5 )
    {
      this.app.form ( "TRANSFER_FR" ).setItem ( "SEGURO_SOCIAL_FAMILIA_NEW", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" ) );

      NUCLEO_READ_LOC_STAT  = this.dm.reset ( NUCLEO_READ_LOC );

      this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_FAM", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ));
      this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_SERV", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" ));
      //this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RMO_OFICINA", GetRMO() );

      NUCLEO_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( NUCLEO_READ_LOC );
      NUCLEO_READ_LOC_STAT  = this.dm.retrieve ( NUCLEO_READ_LOC );

      NUCLEO_READ_LOC_STAT  = this.dm.firstRow ( NUCLEO_READ_LOC );

      this.process ( ps );
    }

  }


  /**
   *
   */
  protected void step6 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      if ( ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) )   )
      {
        this._condition6 = true;
      }
      else
      {
        this._condition6 = false;
      }
      if ( this._condition6 )
      {
        NUCLEO_LOC_STAT  = this.dm.reset ( NUCLEO_LOC );

        this.dm.setField ( this.dm.get ( "NUCLEO_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_FAM" ) );
        this.dm.setField ( this.dm.get ( "NUCLEO_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_CLIENTE" ) );
        //this.dm.setField ( this.dm.get ( "NUCLEO_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_LOC_DSD" ), "RMO_OFICINA", GetRMO() );

        NUCLEO_LOC_STAT  = this.dm.limitQueryFromBuffer ( NUCLEO_LOC );
        NUCLEO_LOC_STAT  = this.dm.retrieve ( NUCLEO_LOC );

        NUCLEO_LOC_STAT  = this.dm.firstRow ( NUCLEO_LOC );

        NUCLEO_SERV_READ_LOC_STAT  = this.dm.reset ( NUCLEO_SERV_READ_LOC );

        this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_FAM" ) );
        this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_CLIENTE" ) );
        //this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", GetRMO() );

        NUCLEO_SERV_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( NUCLEO_SERV_READ_LOC );
        NUCLEO_SERV_READ_LOC_STAT  = this.dm.retrieve ( NUCLEO_SERV_READ_LOC );

        NUCLEO_SERV_READ_LOC_STAT  = this.dm.firstRow ( NUCLEO_SERV_READ_LOC );

        this.process ( ps );
      }
    }

  }


  /**
   *
   */
  protected void step7 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      if ( this._condition6 )    //      while ( ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) )   )
      {
        if ( ( Compare.equals ( NUCLEO_SERV_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( NUCLEO_LOC_STAT, 0 ) )   )
        {
          this._condition7 = true;
        }
        else
        {
          this._condition7 = false;
        }
        if ( this._condition7 )
        {
          if ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_SERV" ) ) ) && ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ), this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) ) )  ) 
          {
            this._condition8 = true;
          }
          else
          {
            this._condition8 = false;
          }
          if ( this._condition8 )
          {
            if ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) ) 
            {
              this._condition9 = true;
            }
            else
            {
              this._condition9 = false;
            }
            if ( this._condition9 )
            {
              if ( ( ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "CERRAD" ) ) && ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "RECHAZ" ) )  ) || ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" )) ) ) 
              {
                this._condition10 = true;
              }
              else
              {
                this._condition10 = false;
              }
              if ( this._condition10 )
              {
                this.app.setError ( 5, 4531 );
                EXT_EN_OTRO_NUCLEO = 1;
                this.app.callCommand ( RallyAppCommandFactory.IGNORE );
                return;
              }
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step8 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      if ( this._condition6 )    //      while ( ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) )   )
      {
        if ( this._condition7 )    //        while ( ( Compare.equals ( NUCLEO_SERV_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( NUCLEO_LOC_STAT, 0 ) )   )
        {
          if ( this._condition8 )    //          if ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_SERV" ) ) ) && ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ), this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) ) )  ) 
          {
            if ( this._condition9 )    //            if ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) ) 
            {
              if ( this._condition10 )    //              if ( ( ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "CERRAD" ) ) && ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "RECHAZ" ) )  ) || ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" )) ) ) 
              {
                this.app.errorFlag = false;
                //***** Start mods. by J Olmeda 3/22/2010 *****
                //this.doReturn ( );
            	closeDBTables();
                MANT_SERV_MENU.exec ( this.app );
                this.app.executeCommand ( RallyAppCommandFactory.ABORTACTION );
                //***** End mods. by J Olmeda 3/22/2010 *****
                return; 
              }
              else
              {
                this.app.ANSWER_GBL = "N";
                DESEA_BORRAR_BENE_MENU.exec ( this.app );
                return;
              }
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step9 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      if ( this._condition6 )    //      while ( ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) )   )
      {
        if ( this._condition7 )    //        while ( ( Compare.equals ( NUCLEO_SERV_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( NUCLEO_LOC_STAT, 0 ) )   )
        {
          if ( this._condition8 )    //          if ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_SERV" ) ) ) && ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ), this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) ) )  ) 
          {
            if ( this._condition9 )    //            if ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) ) 
            {
              if ( this._condition10 )    //              if ( ( ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "CERRAD" ) ) && ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "RECHAZ" ) )  ) || ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" )) ) ) 
              {
              }
              else
              {
                if ( Compare.equals ( this.app.ANSWER_GBL, "N" ) ) 
                {
                  this._condition11 = true;
                }
                else
                {
                  this._condition11 = false;
                }
                if ( this._condition11 )
                {
                  this.app.setError ( 6, 4531 );
                  EXT_EN_OTRO_NUCLEO = 1;
                  this.app.callCommand ( RallyAppCommandFactory.IGNORE );
                  return;
                }
              }
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step10 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      if ( this._condition6 )    //      while ( ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) )   )
      {
        if ( this._condition7 )    //        while ( ( Compare.equals ( NUCLEO_SERV_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( NUCLEO_LOC_STAT, 0 ) )   )
        {
          if ( this._condition8 )    //          if ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_SERV" ) ) ) && ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ), this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) ) )  ) 
          {
            if ( this._condition9 )    //            if ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) ) 
            {
              if ( this._condition10 )    //              if ( ( ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "CERRAD" ) ) && ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "RECHAZ" ) )  ) || ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" )) ) ) 
              {
              }
              else
              {
                if ( this._condition11 )    //                if ( Compare.equals ( this.app.ANSWER_GBL, "N" ) ) 
                {
                  this.app.errorFlag = false;
                  //***** Start mods. by J Olmeda 3/22/2010 *****
                  //this.doReturn ( );
              	  closeDBTables();
                  MANT_SERV_MENU.exec ( this.app );
                  this.app.executeCommand ( RallyAppCommandFactory.ABORTACTION );
                  //***** End mods. by J Olmeda 3/22/2010 *****
                  return; 
                }
                else
                {
                  NUCLEO_LOC_STAT  = this.dm.delete ( NUCLEO_LOC );
                  this.dm.update ( NUCLEO_LOC );
                  NUCLEO_LOC_STAT  = this.dm.dbCommit ( );
                }
                this.app.ANSWER_GBL = "N";
              }
            }
          }

          NUCLEO_SERV_READ_LOC_STAT  = this.dm.nextRow ( NUCLEO_SERV_READ_LOC );

          NUCLEO_LOC_STAT  = this.dm.nextRow ( NUCLEO_LOC );

          this.currentStep = 7;
          return;
        }
      }
    }

  }


  /**
   *
   */
  protected void step11 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      if ( this._condition6 )    //      while ( ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( Compare.equals ( EXT_EN_OTRO_NUCLEO, 0 ) )   )
      {
        NUCLEO_READ_LOC_STAT  = this.dm.nextRow ( NUCLEO_READ_LOC );

        this.currentStep = 6;
        return;
      }
    }

  }


  /**
   *
   */
  protected void step12 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      SERVICIOS_READ_LOC_STAT  = this.dm.reset ( SERVICIOS_READ_LOC );

      this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ));
      //this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
      this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "RMO_OFICINA", GetRMO() );

      SERVICIOS_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( SERVICIOS_READ_LOC );
      SERVICIOS_READ_LOC_STAT  = this.dm.retrieve ( SERVICIOS_READ_LOC );

      SERVICIOS_READ_LOC_STAT  = this.dm.firstRow ( SERVICIOS_READ_LOC );

      // Start mods. by J. Olmeda 3/23/2010 *****
      //this._condition25 = false;
      // End mods. by J. Olmeda 3/23/2010 *****
      if ( ! Compare.equals ( SERVICIOS_READ_LOC_STAT, 0 ) ) 
      {
        // Start mods. by J. Olmeda 3/23/2010 *****
        this._condition25 = true;
        // End mods. by J. Olmeda 3/23/2010 *****
        this.app.errorFlag = false;
        this.app.setError ( 7, 4520 );
        // Start mods. by J. Olmeda 3/23/2010 *****
        //this.doReturn ( );
        // End mods. by J. Olmeda 3/23/2010 *****
        return; 
      }
      this.process ( ps );
    }

  }


  /**
   *
   */
  protected void step13 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      //***** Start mods. by J Olmeda 3/23/2010 *****
      if ( this._condition25 )
      {
      	closeDBTables();
        MANT_SERV_MENU.exec ( this.app );
        this.app.executeCommand ( RallyAppCommandFactory.ABORTACTION );
        return; 
      }
      //***** End mods. by J Olmeda 3/23/2010 *****
      if ( ! Compare.equals ( SERVICIOS_READ_LOC_STAT, RallyDataStoreExceptionType.EOS )  )
      {
        this._condition12 = true;
      }
      else
      {
        this._condition12 = false;
      }
      if ( this._condition12 )
      {
        EXISTE_EN_NUCLEO = 0;
        if ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" )) ) && ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" )) )  ) 
        {
          this._condition13 = true;
        }
        else
        {
          this._condition13 = false;
        }
        if ( this._condition13 )
        {
          NUCLEO_SERV_READ_LOC_STAT  = this.dm.reset ( NUCLEO_SERV_READ_LOC );

          this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ));
          this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) );
          //this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
          this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", GetRMO() );

          NUCLEO_SERV_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( NUCLEO_SERV_READ_LOC );
          NUCLEO_SERV_READ_LOC_STAT  = this.dm.retrieve ( NUCLEO_SERV_READ_LOC );

          NUCLEO_SERV_READ_LOC_STAT  = this.dm.firstRow ( NUCLEO_SERV_READ_LOC );

          if ( ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "CERRAD" ) )  && ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "RECHAZ" ) )  ) 
          {
            EXISTE_EN_NUCLEO = 1;
          }
          else if ( Compare.equals ( JEFE_FAMILIA_SUST, 0 ) ) 
          {
            this._condition14 = true;
          }
          else
          {
            this._condition14 = false;
          }
          if ( this._condition14 )
          {
            NUEVO_JEFE_SELECT = 0;
            if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" )) ) 
            {
              this._condition15 = true;
            }
            else
            {
              this._condition15 = false;
            }
            if ( this._condition15 )
            {
              NUEVO_JEFE_FAMILIA_PKT.exec ( this.app );
              return;
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step14 ( ParameterSet ps )
  { 
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      if ( this._condition12 )    //      while ( ! Compare.equals ( SERVICIOS_READ_LOC_STAT, RallyDataStoreExceptionType.EOS )  )
      {
        if ( this._condition13 )    //        if ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" )) ) && ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" )) )  ) 
        {
          if ( ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "CERRAD" ) )  && ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_STATUS_SERVICIO" ), 0, 6 ), "RECHAZ" ) )  ) 
          {
          }
          else if ( this._condition14 )    //          else if ( Compare.equals ( JEFE_FAMILIA_SUST, 0 ) ) 
          {
            if ( this._condition15 )    //            if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_SERVICIO" )) ) 
            {
            }
            if ( Compare.equals ( NUEVO_JEFE_SELECT, 1 ) ) 
            {
              FAMILIA_LOC_STAT  = this.dm.rollBack ( );
              FAMILIA_LOC_STAT  = this.dm.dbClose ( FAMILIA_LOC );

              this.app.errorFlag = false;
              this.doReturn ( );
              return; 
            }
          }
        }
        if ( ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA_NEW" )) ) || ( Compare.equals ( EXISTE_EN_NUCLEO, 1 ) ) ) 
        {
          EXISTE_EN_NUCLEO = 0;

          NUCLEO_READ_LOC_STAT  = this.dm.reset ( NUCLEO_READ_LOC );

          this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_FAM", this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM" ) );
          this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_SERV", this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) );
          this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "COD_SERV", this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_SERVICIO" ) );
          //this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
          this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RMO_OFICINA", GetRMO() );

          NUCLEO_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( NUCLEO_READ_LOC );
          NUCLEO_READ_LOC_STAT  = this.dm.retrieve ( NUCLEO_READ_LOC );

          NUCLEO_READ_LOC_STAT  = this.dm.firstRow ( NUCLEO_READ_LOC );

          // Start mods. by J. Olmeda 3/23/2010 *****
          //this._condition25 = false;
          // End mods. by J. Olmeda 3/23/2010 *****
          if ( ! Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) 
          {
            // Start mods. by J. Olmeda 3/23/2010 *****
            this._condition25 = true;
            // End mods. by J. Olmeda 3/23/2010 *****
            this.app.errorFlag = false;
            this.app.setError ( 8, 4520 );
            // Start mods. by J. Olmeda 3/23/2010 *****
            //this.doReturn ( );
            // End mods. by J. Olmeda 3/23/2010 *****
            return; 
          }
          this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SERVICIO", "X" );
          while ( ! Compare.equals ( NUCLEO_READ_LOC_STAT, RallyDataStoreExceptionType.EOS ) ) 
          {
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_CLIENTE" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "NOMBRE_CLIENTE", this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "NOMBRE" ) + " " + this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "INICIAL" ) + " " + this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "PATERNO" ) + " " + this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "MATERNO" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "RELACION_FAMILIA", this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RELACION_FAMILIA" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "RELACION_SERVICIO", this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RELACION_SERVICIO" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "COD_SERV", this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "COD_SERV" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_SERVICIO", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_SERV" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_FAMILIA", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_FAM" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "NUCLEO", "X" );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "FLG", " " );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "COD_SERV", this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "COD_SERV" ) );
        
            boolean tempBool1 = this.dm.getLogEnabled ( ); 
            this.dm.setLogEnabled ( false );
            TRANSFER_STAT  = this.dm.insertRow ( TRANSFER );
            this.dm.setLogEnabled ( tempBool1 );
            
            if ( ! Compare.equals ( TRANSFER_STAT, 0 ) ) 
            {
              this.app.setError ( 9, TRANSFER_STAT );
            }
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SERVICIO", " " );

            NUCLEO_READ_LOC_STAT  = this.dm.nextRow ( NUCLEO_READ_LOC );

            if ( ( ! Compare.equals ( NUCLEO_READ_LOC_STAT, 0 ) ) && ( ! Compare.equals ( NUCLEO_READ_LOC_STAT, RallyDataStoreExceptionType.EOS ) )  ) 
            {
              this.app.setError ( 10, NUCLEO_READ_LOC_STAT );
            }
          }
        }

        SERVICIOS_READ_LOC_STAT  = this.dm.nextRow ( SERVICIOS_READ_LOC );

        if ( ( ! Compare.equals ( SERVICIOS_READ_LOC_STAT, 0 ) ) && ( ! Compare.equals ( SERVICIOS_READ_LOC_STAT, RallyDataStoreExceptionType.EOS ) )  ) 
        {
          this.app.setError ( 11, SERVICIOS_READ_LOC_STAT );
        }
        this.currentStep = 13;
        return;
      }
    }

  }


  /**
   *
   */
  protected void step15 ( ParameterSet ps )
  {
    if ( this._condition5 )    //    if ( Compare.equals ( this.app.form ( "TRANSFER_FR" ).getStringItem ( "TIPO" ), "S" ) ) 
    {
      //***** Start mods. by J Olmeda 3/23/2010 *****
      if ( this._condition25 )
      {
    	closeDBTables();
        MANT_SERV_MENU.exec ( this.app );
        this.app.executeCommand ( RallyAppCommandFactory.ABORTACTION );
        return; 
      }
      //***** End mods. by J Olmeda 3/23/2010 *****
    }
    else
    {
      CLIENTES_READ_LOC_STAT  = this.dm.reset ( CLIENTES_READ_LOC );

      this.app.form ( "TRANSFER_FR" ).setItem ( "SEGURO_SOCIAL_FAMILIA_NEW", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ) );

      CLIENTES_READ_LOC_STAT  = this.dm.reset ( CLIENTES_READ_LOC );

      this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ));
      //this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
      this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "RMO_OFICINA", GetRMO() );

      CLIENTES_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( CLIENTES_READ_LOC );
      CLIENTES_READ_LOC_STAT  = this.dm.retrieve ( CLIENTES_READ_LOC );

      CLIENTES_READ_LOC_STAT  = this.dm.firstRow ( CLIENTES_READ_LOC );

      while ( ! Compare.equals ( CLIENTES_READ_LOC_STAT, RallyDataStoreExceptionType.EOS )  )
      {
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "NOMBRE_CLIENTE", this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_NOMBRE" ) + " " + this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_INICIAL" ) + " " + this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_APELLIDO_PATERNO" ) + " " + this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_APELLIDO_MATERNO" ) );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "RELACION_FAMILIA", this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "COD_PARENTESCO_FAM" ) );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "RELACION_SERVICIO", "NA  " );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "FLG", " " );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "COD_SERV", " " );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_SERVICIO", 0 );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_FAMILIA", 0 );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SERVICIO", " " );
        this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "NUCLEO", " " );

        SERVICIOS_READ_LOC_STAT  = this.dm.reset ( SERVICIOS_READ_LOC );

        this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ));
        this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );
        //this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
        this.dm.setField ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "RMO_OFICINA", GetRMO() );

        SERVICIOS_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( SERVICIOS_READ_LOC );
        SERVICIOS_READ_LOC_STAT  = this.dm.retrieve ( SERVICIOS_READ_LOC );

        SERVICIOS_READ_LOC_STAT  = this.dm.firstRow ( SERVICIOS_READ_LOC );

        if ( Compare.equals ( SERVICIOS_READ_LOC_STAT, 0 ) ) 
        {
          while ( ! Compare.equals ( SERVICIOS_READ_LOC_STAT, RallyDataStoreExceptionType.EOS )  )
          {
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_FAMILIA", this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_SERVICIO", this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "COD_SERV", this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_SERVICIO" ) );
            this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SERVICIO", "X" );

            NUCLEO_READ_LOC_STAT  = this.dm.reset ( NUCLEO_READ_LOC );

            this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_FAM", this.app.form ( "TRANSFER_FR" ).getDoubleItem ( "SEGURO_SOCIAL_FAMILIA" ));
            this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_JEFE_SERV", this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) );
            this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "COD_SERV", this.dm.getFieldString ( this.dm.get ( "SERVICIOS_READ_LOC_DSD" ), "COD_SERVICIO" ) );
            //this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
            this.dm.setField ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RMO_OFICINA", GetRMO() );

            NUCLEO_READ_LOC_STAT  = this.dm.limitQueryFromBuffer ( NUCLEO_READ_LOC );
            NUCLEO_READ_LOC_STAT  = this.dm.retrieve ( NUCLEO_READ_LOC );

            NUCLEO_READ_LOC_STAT  = this.dm.firstRow ( NUCLEO_READ_LOC );

            while ( Compare.equals ( NUCLEO_READ_LOC_STAT, 0 )  )
            {
              this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "RELACION_SERVICIO", this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RELACION_SERVICIO" ) );
              this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "RELACION_FAMILIA", this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "RELACION_FAMILIA" ) );
              this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "NUCLEO", "X" );
              this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "SSN_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "SSN_CLIENTE" ) );
              this.dm.setField ( this.dm.get ( "TRANSFER_CREATE_DSD" ), "NOMBRE_CLIENTE", this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "NOMBRE" ) + " " + this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "INICIAL" ) + " " + this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "PATERNO" ) + " " + this.dm.getFieldString ( this.dm.get ( "NUCLEO_CLIENTE_DSD" ), "MATERNO" ) );

              boolean tempBool1 = this.dm.getLogEnabled ( ); 
              this.dm.setLogEnabled ( false );
              TRANSFER_STAT  = this.dm.insertRow ( TRANSFER );
              this.dm.setLogEnabled ( tempBool1 );
              
              NUCLEO_READ_LOC_STAT  = this.dm.nextRow ( NUCLEO_READ_LOC );

            }

            SERVICIOS_READ_LOC_STAT  = this.dm.nextRow ( SERVICIOS_READ_LOC );

          }
        }

        CLIENTES_READ_LOC_STAT  = this.dm.nextRow ( CLIENTES_READ_LOC );

      }
    }
    this.app.callCommand ( RallyAppCommandFactory.FNEXT );
    return;

  }


  /**
   *
   */
  protected void step16 ( ParameterSet ps )
  {

    TRANSFER_STAT  = this.dm.dbCommit ( );
    SERVICIOS_READ_LOC_STAT  = this.dm.dbClose ( SERVICIOS_READ_LOC );

    CLIENTES_READ_LOC_STAT  = this.dm.dbClose ( CLIENTES_READ_LOC );

    NUCLEO_READ_LOC_STAT  = this.dm.dbClose ( NUCLEO_READ_LOC );

    NUCLEO_SERV_READ_LOC_STAT  = this.dm.dbClose ( NUCLEO_SERV_READ_LOC );

    NUCLEO_LOC_STAT  = this.dm.dbClose ( NUCLEO_LOC );

    FAMILIA_LOC_STAT  = this.dm.dbClose ( FAMILIA_LOC );

    TRANSFER_STAT  = this.dm.dbClose ( TRANSFER );

    RECLARETRO_LOC_STAT  = this.dm.dbClose ( RECLARETRO_LOC );

    this.app.form ( "TRANSFER_FR" ).setItem ( "JEFE_FAMILIA_SUST", JEFE_FAMILIA_SUST  );

  }
  
  //***** START MODS BY J. Olmeda -- KPG, Inc. 8/21/2009 *****
  private final double GetRMO()
  {
	//if ( Compare.equals ( this.app.SUPV_GBL, 1 ) || Compare.equals ( this.app.TECN_GBL, 1 ) ) 
    if ( Compare.equals ( this.app.TRANSFER_IR_GBL, 1 ) ) 
	{
	  return this.app.TRANSFER_RMO_GBL;
	}
	else
	{
	  return this.app.RMO_GBL;
	}
  }
  //***** END MODS BY J. Olmeda -- KPG, Inc. 8/21/2009 *****
  
  //***** START MODS BY J. Olmeda -- KPG, Inc. 3/24/2009 *****
  private final void closeDBTables()
  {
	SERVICIOS_READ_LOC_STAT  = this.dm.dbClose ( SERVICIOS_READ_LOC );

	CLIENTES_READ_LOC_STAT  = this.dm.dbClose ( CLIENTES_READ_LOC );

	NUCLEO_READ_LOC_STAT  = this.dm.dbClose ( NUCLEO_READ_LOC );

	NUCLEO_SERV_READ_LOC_STAT  = this.dm.dbClose ( NUCLEO_SERV_READ_LOC );

	NUCLEO_LOC_STAT  = this.dm.dbClose ( NUCLEO_LOC );

	FAMILIA_LOC_STAT  = this.dm.dbClose ( FAMILIA_LOC );

	TRANSFER_STAT  = this.dm.dbClose ( TRANSFER );

	RECLARETRO_LOC_STAT  = this.dm.dbClose ( RECLARETRO_LOC );
  }
  //***** END MODS BY J. Olmeda -- KPG, Inc. 3/24/2009 *****

}



/* ---------------------------------------------------------------------


     
procedure transfer_adl;

var     transfer:               number(9,0);
        transfer_stat:          number(9,0);
        transfer_read:          number(9,0);
        transfer_read_stat:     number(9,0);


        familia_loc:            number(9,0);
        familia_loc_stat:       number(9,0);
        servicios_loc:          number(9,0);
        servicios_loc_stat:     number(9,0);
        servicios_read_loc:     number(9,0);
        servicios_read_loc_stat:        number(9,0);

        nucleo_loc:             number(9,0);
        nucleo_loc_stat:        number(9,0);
        nucleo_read_loc:        number(9,0);
        nucleo_read_loc_stat:   number(9,0);
        nucleo_serv_read_loc:   number(9,0);
        nucleo_serv_read_loc_stat:      number(9,0);

        clientes_loc:           number(9,0);
        clientes_loc_stat:      number(9,0);
        clientes_read_loc:      number(9,0);
        clientes_read_loc_stat: number(9,0);

        reclaretro_loc:         number(9,0);
        reclaretro_loc_stat:    number(9,0);
        rmo:                    number(9,0);
        rmo_read_stat:          number(9,0);

        jefe_familia_sust:      number(9,0) export;
        existe_en_nucleo:       number(9,0);
        ext_en_otro_nucleo:     number(9,0);
        jefe_servicio:          number(3,0);
        nuevo_jefe_select:      number EXPORT;
        FLAG_RECLARETRO:        NUMBER(1);

begin
        set_trace();

        if (TRANSFER_FR.TIPO <> 'S')
        and (TRANSFER_FR.tipo <> 'F')
        then begin
                set_failure();
                error(13);
                RETURN;
             end;
        {end-if}
        if transfer_fr.tipo='S'
        then begin
               transfer_fr.codigo_servicio:=cod_serv_gbl;
             end;
        ELSE
             begin
               transfer_fr.codigo_servicio:=' ';
             end;
        {end_if}

        jefe_familia_sust:=0;
        existe_en_nucleo:=0;
        ext_en_otro_nucleo:= 0;
        flag_reclaretro := 0;

        db_open(transfer_create_dsd,transfer,transfer_stat);
        db_open(NUCLEO_CLIENTE_DSD,nucleo_read_loc,nucleo_read_loc_stat);
        db_open(NUCLEO_LOC_DSD,nucleo_loc,nucleo_loc_stat);
        db_open(NUCLEO_READ_LOC_DSD,nucleo_serv_read_loc,nucleo_serv_read_loc_st
at);
        db_open(servicios_read_loc_dsd,servicios_read_loc,servicios_read_loc_sta
t);
        db_open(FAMILIA_READ_LOC_DSD,familia_loc,familia_loc_stat);
        DB_OPEN( RECLA_RETRO_TBL_NOPAR_RO_dsd,reclaretro_loc,reclaretro_loc_stat
);
        db_open(clientes_read_loc_dsd,clientes_read_loc,clientes_read_loc_stat);

                 db_reset(clientes_read_loc,clientes_read_loc_stat);
                 clientes_read_loc_dsd.seguro_social_cliente:=
                         transfer_fr.seguro_social_servicio;
                 clientes_read_loc_dsd.rmo_oficina := rmo_gbl;
                 db_query(clientes_read_loc,clientes_read_loc_stat);
                 db_get_first(clientes_read_loc,clientes_read_loc_stat);
                 if  clientes_read_loc_stat = 0  then 
                 begin
                      transfer_fr.nombre:=
                            clientes_read_loc_dsd.dsc_nombre || ' ' ||
                            clientes_read_loc_dsd.dsc_inicial || ' ' ||
                            clientes_read_loc_dsd.dsc_apellido_paterno || ' ' ||
                            clientes_read_loc_dsd.dsc_apellido_materno;
                 end;
                 else
                      transfer_fr.nombre:= ' ';
                 
{Verificar si el servicio tiene dos meses o menos}

                 db_reset(servicios_read_loc,servicios_read_loc_stat);
                 servicios_read_loc_dsd.seguro_social_jefe_serv
                                   :=transfer_fr.seguro_social_servicio;
                 servicios_read_loc_dsd.seguro_social_jefe_fam
                                   :=transfer_fr.seguro_social_familia;
                 if transfer_fr.tipo = 'S'
                 then
                    servicios_read_loc_dsd.cod_servicio
                                   :=transfer_fr.codigo_servicio;
                    servicios_read_loc_dsd.rmo_oficina :=rmo_gbl; 
                db_query(servicios_read_loc,servicios_read_loc_stat);
                 db_get_first(servicios_read_loc,servicios_read_loc_stat);
                 while servicios_read_loc_stat = 0 do
                    begin
                        IF (SERVICIOS_READ_LOC_DSD.COD_STATUS_SERVICIO = 'ACTIVO
')
                        THEN
                        BEGIN
                        if ((TO_NUMBER(TO_CHAR(SERVICIOS_READ_LOC_DSD.FCH_TERMIN
ACION,'MM')) - TO_NUMBER(TO_CHAR(SYSTEM_DATE,'MM'))) = 0) AND
                           ((TO_NUMBER(TO_CHAR(SERVICIOS_READ_LOC_DSD.FCH_TERMIN
ACION,'YYYY')) = (TO_NUMBER(TO_CHAR(SYSTEM_DATE,'YYYY')))))
                        THEN
                           BEGIN
                                error(4533);
                                set_failure();
                                CALL_CMD('ignore');
                                RETURN;
                           END;
                        END;
                        IF (SERVICIOS_READ_LOC_DSD.COD_STATUS_SERVICIO = 'ACCNEG
')
                        OR (SERVICIOS_READ_LOC_DSD.COD_STATUS_SERVICIO = 'PENDRE
VI')
                        THEN
                           BEGIN
                                error(4001);
                                set_failure();
                                CALL_CMD('ignore');
                                RETURN;
                           END;
                    db_get_next(servicios_read_loc,servicios_read_loc_stat);
                    end;

        DB_RESET(reclaretro_loc,reclaretro_loc_stat);
        RECLA_RETRO_TBL_NOPAR_RO_DSD.SEGURO_SOCIAL_JEFE_FAM:=TRANSFER_FR.SEGURO_
SOCIAL_FAMILIA;
        RECLA_RETRO_TBL_NOPAR_RO_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(reclaretro_loc,reclaretro_loc_stat);
        DB_GET_FIRST(reclaretro_loc,reclaretro_loc_stat);
        WHILE  (reclaretro_loc_stat = 0)
         AND (reclaretro_loc_stat <> DB_EOS) DO
        BEGIN
          IF (RECLA_RETRO_TBL_NOPAR_RO_DSD.ACCION = 'RECL') OR
              (RECLA_RETRO_TBL_NOPAR_RO_DSD.ACCION ='RETR') OR
              (RECLA_RETRO_TBL_NOPAR_RO_DSD.ACCION = 'RREC') OR
              (RECLA_RETRO_TBL_NOPAR_RO_DSD.ACCION = 'RRET')
           THEN
             begin
                if (RECLA_RETRO_TBL_NOPAR_RO_DSD.STATUS <> 'PAGADO') and
                   (RECLA_RETRO_TBL_NOPAR_RO_DSD.STATUS <> 'SALDAD') THEN
                        flag_reclaretro := 1;
             end;
        
                DB_GET_NEXT(reclaretro_loc,reclaretro_loc_stat);
        END;

         IF flag_reclaretro = 1 THEN
                error(6015);
         ELSE
             IF flag_reclaretro = 2 THEN
                BEGIN
                  error(6015);
                  set_failure();
                  CALL_CMD('ignore');
                  RETURN;
                END;

if transfer_fr.tipo = 'S'
        then
            begin
                 transfer_fr.seguro_social_familia_new:=
                                transfer_fr.seguro_social_servicio;
{&&&&&}
                 db_reset(nucleo_read_loc,nucleo_read_loc_stat);
                 nucleo_cliente_dsd.ssn_jefe_fam
                      :=transfer_fr.seguro_social_familia;
               nucleo_cliente_dsd.ssn_jefe_serv
                      :=transfer_fr.seguro_social_servicio;
                  NUCLEO_CLIENTE_DSD.RMO_OFICINA := RMO_GBL;
                 db_query(nucleo_read_loc,nucleo_read_loc_stat);
                 db_get_first(nucleo_read_loc,nucleo_read_loc_stat);
                 while (nucleo_read_loc_stat = 0) and (ext_en_otro_nucleo = 0) d
o
                 begin
                      db_reset(nucleo_loc,nucleo_loc_stat);
                      nucleo_loc_dsd.seguro_social_jefe_fam
                           :=nucleo_cliente_dsd.ssn_jefe_fam;
                      nucleo_loc_dsd.seguro_social_beneficiario
                           :=nucleo_cliente_dsd.ssn_cliente;
                      nucleo_loc_dsd.rmo_oficina := rmo_gbl;
                      db_query(nucleo_loc,nucleo_loc_stat);
                      db_get_first(nucleo_loc,nucleo_loc_stat);

                      db_reset(nucleo_serv_read_loc,nucleo_serv_read_loc_stat);
                      nucleo_read_loc_dsd.seguro_social_jefe_fam
                           :=nucleo_cliente_dsd.ssn_jefe_fam;
                      nucleo_read_loc_dsd.seguro_social_beneficiario
                           :=nucleo_cliente_dsd.ssn_cliente;
                      nucleo_read_loc_dsd.rmo_oficina := rmo_gbl;
                      db_query(nucleo_serv_read_loc,nucleo_serv_read_loc_stat);
                      db_get_first(nucleo_serv_read_loc,nucleo_serv_read_loc_sta
t);                
                
                      while (nucleo_serv_read_loc_stat = 0) and (nucleo_loc_stat
 = 0) do
                      begin
                           if (nucleo_read_loc_dsd.seguro_social_jefe_serv <> 
                              nucleo_cliente_dsd.ssn_jefe_serv)
                           and (nucleo_read_loc_dsd.seguro_social_beneficiario <
>
                              nucleo_read_loc_dsd.seguro_social_jefe_serv)
                           then begin
                                     if (ext_en_otro_nucleo = 0) 
                                     then
                                        begin  
                                          if ((substr(nucleo_read_loc_dsd.cod_st
atus_servicio,0,6) <>'CERRAD')
                                             AND (substr(nucleo_read_loc_dsd.cod
_status_servicio,0,6) <> 'RECHAZ'))
                                             or (nucleo_read_loc_dsd.seguro_soci
al_jefe_serv = TRANSFER_FR.SEGURO_SOCIAL_SERVICIO)
                                             then
                                               begin            
                                                  error(4531);
                                                  ext_en_otro_nucleo:=1;
                                                  call_cmd('ignore');
                                                  set_failure();
                                                  RETURN;
                                                end;
                                              else
                                                begin
                                                  ANSWER_GBL := 'N';
                                                  call DESEA_BORRAR_BENE_MENU;
                                                  IF ANSWER_GBL = 'N' THEN
                                                    begin
                                                         error(4531);
                                                          ext_en_otro_nucleo:=1;
                                                          call_cmd('ignore');
                                                          set_failure();
                                                          RETURN;               
                         
                                                    end;
                                                  else
                                                    begin
                                                     db_delete(nucleo_loc,nucleo
_loc_stat);
                                                     db_commit(nucleo_loc_stat);
                                                    end;                        
                
                                                  ANSWER_GBL := 'N';
                                                end;
                                        end;
                                     {endif}
                                end;
                           {endif}
                           db_get_next(nucleo_serv_read_loc,nucleo_serv_read_loc
_stat);
                           db_get_next(nucleo_loc,nucleo_loc_stat);
                      end;
                      db_get_next(nucleo_read_loc,nucleo_read_loc_stat);
                 end;
{&&&&}
{Comentado para verificar efecto. Autorizado Por J.Rodriguez Jun-23-1998}

{                 db_reset(familia_xfr,familia_xfr_stat);
                 familia_xfr_dsd.seguro_social_jefe_fam
                      :=transfer_fr.seguro_social_familia;
                 db_query(familia_xfr,familia_xfr_stat);
                 db_get_first(familia_xfr,familia_xfr_stat);
                 if familia_xfr_stat = 0
                 then begin
                          db_reset(clientes_xfr,clientes_xfr_stat);
                          clientes_xfr_dsd.seguro_social_jefe_familia:=
                                   transfer_fr.seguro_social_familia;
                          db_query(clientes_xfr,clientes_xfr_stat);
                          db_get_first(clientes_xfr,clientes_xfr_stat);}
                         {if (clientes_xfr_dsd.rmo_cod <> transfer_fr.rmo)
                          then begin
                                    set_failure();
                                    error(4521);
                                    return;
                               end;}
                          {end-if}
{                      end;                  }
                 {end-if}


{Servicios}
                 db_reset(servicios_read_loc,servicios_read_loc_stat);
                 {servicios_read_loc_dsd.seguro_social_jefe_serv
                                   :=transfer_fr.seguro_social_servicio;}
                 servicios_read_loc_dsd.seguro_social_jefe_fam
                                   :=transfer_fr.seguro_social_familia;
                 servicios_read_loc_dsd.rmo_oficina := rmo_gbl;
                 db_query(servicios_read_loc,servicios_read_loc_stat);
                 db_get_first(servicios_read_loc,servicios_read_loc_stat);
                 if servicios_read_loc_stat <> 0
                 then begin
                           set_failure();
                           error(4520);
                           return;
                      end;
                 {end-if}
                 while servicios_read_loc_stat <> db_eos do
                 begin
                      existe_en_nucleo:=0;
                   {   if  (transfer_fr.seguro_social_familia
                           = transfer_fr.seguro_social_familia_new)
                      and}


                 IF (servicios_read_loc_dsd.seguro_social_jefe_serv
                            <> transfer_fr.seguro_social_familia) and
                 (servicios_read_loc_dsd.seguro_social_jefe_serv
                            <> transfer_fr.seguro_social_servicio)
                      then 
                          begin

                      db_reset(nucleo_serv_read_loc,nucleo_serv_read_loc_stat);
                      nucleo_read_loc_dsd.seguro_social_jefe_fam
                           :=transfer_fr.seguro_social_familia;
                      nucleo_read_loc_dsd.seguro_social_beneficiario
                           :=servicios_read_loc_dsd.seguro_social_jefe_serv;
                      nucleo_read_loc_dsd.rmo_oficina := rmo_gbl;
                      db_query(nucleo_serv_read_loc,nucleo_serv_read_loc_stat);
                      db_get_first(nucleo_serv_read_loc,nucleo_serv_read_loc_sta
t);                

                              if (nucleo_read_loc_stat = 0) and 
                                (substr(nucleo_read_loc_dsd.cod_status_servicio,
0,6) <>'CERRAD')
                            AND (substr(nucleo_read_loc_dsd.cod_status_servicio,
0,6) <> 'RECHAZ')                  
                              then
                                  existe_en_nucleo:=1;
                              else
                                  if (jefe_familia_sust = 0)
                                  then
                                     begin
                                        nuevo_jefe_select := 0;
                                         if (transfer_fr.seguro_social_familia =
                                             TRANSFER_FR.SEGURO_SOCIAL_SERVICIO)
  THEN
                                                call NUEVO_JEFE_FAMILIA_PKT;
                                        if nuevo_jefe_select = 1
                                        then
                                        begin
                                           db_rollback(familia_loc_stat);
                                           db_close(familia_loc,familia_loc_stat
);
                                           set_failure();
                                           return;
                                        end;
                                     end;
                                  {endif}
                              {endif}
                          end;
                      {endif}

                      if (servicios_read_loc_dsd.seguro_social_jefe_serv
                         = transfer_fr.seguro_social_familia_new)
                      or  (existe_en_nucleo = 1)
                      then begin
                             existe_en_nucleo:=0;
                             db_reset(nucleo_read_loc,nucleo_read_loc_stat);
                             NUCLEO_CLIENTE_DSD.ssn_jefe_fam
                                :=SERVICIOS_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM;
                             NUCLEO_CLIENTE_DSD.ssn_jefe_serv
                                :=SERVICIOS_READ_LOC_DSD.seguro_social_jefe_serv
;
                             NUCLEO_CLIENTE_DSD.cod_serv
                                :=SERVICIOS_READ_LOC_DSD.cod_servicio;
                             nucleo_cliente_dsd.rmo_oficina := rmo_gbl;
                             db_query(nucleo_read_loc,nucleo_read_loc_stat);
                             db_get_first(nucleo_read_loc,nucleo_read_loc_stat);
                             if nucleo_read_loc_stat <> 0
                             then begin
                                  set_failure();
                                  error(4520);
                                  return;
                                  end;
                             {end-if}
                             transfer_create_dsd.servicio:='X';
                             while (nucleo_read_loc_stat <> db_eos) do
                                begin
                                  transfer_create_dsd.ssn_cliente:=NUCLEO_CLIENT
E_DSD.ssn_cliente;
                                  transfer_create_dsd.nombre_cliente:=
                                  NUCLEO_CLIENTE_DSD.nombre || ' ' ||
                                  NUCLEO_CLIENTE_DSD.inicial || ' ' ||
                                  NUCLEO_CLIENTE_DSD.paterno || ' ' ||
                                  NUCLEO_CLIENTE_DSD.materno;
                                  transfer_create_dsd.relacion_familia:=NUCLEO_C
LIENTE_DSD.relacion_familia;
                                  transfer_create_dsd.relacion_servicio:=NUCLEO_
CLIENTE_DSD.relacion_servicio;
                                  transfer_create_dsd.cod_serv:=NUCLEO_CLIENTE_D
SD.cod_serv;
                                  transfer_create_dsd.ssn_servicio:=NUCLEO_CLIEN
TE_DSD.ssn_jefe_serv;
                                  transfer_create_dsd.ssn_familia:=NUCLEO_CLIENT
E_DSD.ssn_jefe_fam;
                                  transfer_create_dsd.nucleo:='X';
                                  transfer_create_dsd.flg:=' ';
                                  transfer_create_dsd.cod_serv:=NUCLEO_CLIENTE_D
SD.cod_serv;
                                  db_insert(transfer,transfer_stat);
                                  if transfer_stat <> 0 then error(transfer_stat
);
                                  transfer_create_dsd.servicio:=' ';
                                  db_get_next(nucleo_read_loc,nucleo_read_loc_st
at);
                                  if (nucleo_read_loc_stat <> 0)
                                  and (nucleo_read_loc_stat <> db_eos)
                                    then error(nucleo_read_loc_stat);
                                end;
                           end;
                      {endif}
                       db_get_next(servicios_read_loc,servicios_read_loc_stat);
                       if (servicios_read_loc_stat <> 0)
                       and (servicios_read_loc_stat <> db_eos)
                       then error(servicios_read_loc_stat);
                 end;

{ end servicio}
            end;
        else
            begin
                 db_reset(clientes_read_loc,clientes_read_loc_stat);
                 transfer_fr.seguro_social_familia_new:=
                                transfer_fr.seguro_social_familia;              
   db_reset(clientes_read_loc,clientes_read_loc_stat);
                 clientes_read_loc_dsd.seguro_social_jefe_familia:=
                         transfer_fr.seguro_social_familia;
                 clientes_read_loc_dsd.rmo_oficina := rmo_gbl;    
                 db_query(clientes_read_loc,clientes_read_loc_stat);
                 db_get_first(clientes_read_loc,clientes_read_loc_stat);
                 while clientes_read_loc_stat <> db_eos do
                 begin
                      transfer_create_dsd.ssn_cliente:=clientes_read_loc_dsd.seg
uro_social_cliente;
                      transfer_create_dsd.nombre_cliente:=
                            clientes_read_loc_dsd.dsc_nombre || ' ' ||
                            clientes_read_loc_dsd.dsc_inicial || ' ' ||
                            clientes_read_loc_dsd.dsc_apellido_paterno || ' ' ||
                            clientes_read_loc_dsd.dsc_apellido_materno;
                      transfer_create_dsd.relacion_familia:=clientes_read_loc_ds
d.cod_parentesco_fam;
                      transfer_create_dsd.relacion_servicio:= 'NA  ';
                      transfer_create_dsd.FLG:=' ';
                      transfer_create_dsd.cod_serv:=' ';
                      transfer_create_dsd.ssn_servicio:=0;
                      transfer_create_dsd.ssn_familia:=0;
                      transfer_create_dsd.servicio:=' ';
                      transfer_create_dsd.nucleo:=' ';
                      db_reset(servicios_read_loc,servicios_read_loc_stat);
                      servicios_read_loc_dsd.seguro_social_jefe_fam:=transfer_fr
.seguro_social_familia;
                      servicios_read_loc_dsd.seguro_social_jefe_serv:=
                            clientes_read_loc_dsd.seguro_social_cliente;
                      servicios_read_loc_dsd.rmo_oficina := rmo_gbl;
                      db_query(servicios_read_loc,servicios_read_loc_stat);
                      db_get_first(servicios_read_loc,servicios_read_loc_stat);
                      if servicios_read_loc_stat = 0 
                      then
                      begin
                      while servicios_read_loc_stat  <> db_eos do
                           begin
                               transfer_create_dsd.ssn_familia:=servicios_read_l
oc_dsd.seguro_social_jefe_fam;
                               transfer_create_dsd.ssn_servicio:=
                                       servicios_read_loc_dsd.seguro_social_jefe
_serv;
                               transfer_create_dsd.cod_serv:=servicios_read_loc_
dsd.cod_servicio;
                               transfer_create_dsd.servicio:='X';
                               db_reset(nucleo_read_loc,nucleo_read_loc_stat);
                               NUCLEO_CLIENTE_DSD.ssn_jefe_fam:=TRANSFER_FR.SEGU
RO_SOCIAL_FAMILIA;
                               NUCLEO_CLIENTE_DSD.ssn_jefe_serv:=servicios_read_
loc_dsd.seguro_social_jefe_serv;
                              { NUCLEO_CLIENTE_DSD.ssn_cliente:=clientes_read_lo
c_DSD.SEGURO_SOCIAL_CLIENTE;}
                               NUCLEO_CLIENTE_DSD.cod_serv:=servicios_read_loc_d
sd.cod_servicio;
                                nucleo_cliente_dsd.rmo_oficina := rmo_gbl;
                               db_query(nucleo_read_loc,nucleo_read_loc_stat);
                               db_get_first(nucleo_read_loc,nucleo_read_loc_stat
);
                               WHILE nucleo_read_loc_stat = 0 DO
                                   begin
                                       TRANSFER_CREATE_DSD.relacion_servicio:=
                                              NUCLEO_CLIENTE_DSD.relacion_servic
io;
                                        transfer_create_dsd.relacion_familia:=
                                        NUCLEO_CLIENTE_DSD.relacion_familia;
                                       TRANSFER_CREATE_DSD.nucleo:='X';
                                        transfer_create_dsd.ssn_cliente:=
                                        NUCLEO_CLIENTE_DSD.ssn_cliente;
                                          transfer_create_dsd.nombre_cliente:=
                                          NUCLEO_CLIENTE_DSD.nombre || ' ' ||
                                          NUCLEO_CLIENTE_DSD.inicial || ' ' ||
                                          NUCLEO_CLIENTE_DSD.paterno || ' ' ||
                                          NUCLEO_CLIENTE_DSD.materno;
                                       db_insert(transfer,transfer_stat);
                                      db_get_next(NUCLEO_read_loc,NUCLEO_read_lo
c_stat);
                                   end;
                               {end-if}
                               {transfer_create_dsd.ssn_cliente:=0;
                                transfer_create_dsd.nombre_cliente:=' ';
                                transfer_create_dsd.relacion_familia:=' ';}
                               db_get_next(servicios_read_loc,servicios_read_loc
_stat);
                           end;
                      end;
                      {end-if}
                      db_get_next(clientes_read_loc,clientes_read_loc_stat);
                 end;
            end;
        {end-if}
        call_cmd('Next Field');

        db_commit(transfer_stat);

        db_close(servicios_read_loc,servicios_read_loc_stat);
        db_close(clientes_read_loc,clientes_read_loc_stat);
        db_close(nucleo_read_loc,nucleo_read_loc_stat);
        db_close(nucleo_serv_read_loc,nucleo_serv_read_loc_stat);
        db_close(nucleo_loc,nucleo_loc_stat);
        db_close(familia_loc,familia_loc_stat);
        db_close(transfer,transfer_stat);
        DB_close(reclaretro_loc,reclaretro_loc_stat);
        TRANSFER_FR.JEFE_FAMILIA_SUST:=jefe_familia_sust;

       set_notrace();
end;

    



--------------------------------------------------------------------- */
