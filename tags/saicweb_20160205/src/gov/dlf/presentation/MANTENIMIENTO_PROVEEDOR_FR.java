package gov.dlf.presentation;


import gov.dlf.facade.*;
import gov.dlf.external.*;
import gov.dlf.logic.*;

import java.util.Date;


import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.jdatapanel.*;
import net.maintrend.jdatapanel.edit.*;
import net.maintrend.jdatapanel.commands.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class MANTENIMIENTO_PROVEEDOR_FR
     extends Form
{
  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;



  // -------------------------------------------------------------------
  // ----------   Constructors and supporting methods   ----------------

  /**
   *
   */
  public MANTENIMIENTO_PROVEEDOR_FR ( )
  {
    super ( );
    this.setName ( "MANTENIMIENTO_PROVEEDOR_FR" );

    Debug.println ( Debug.TRACE, "MANTENIMIENTO_PROVEEDOR_FR - constructor" );

    this.setDefinitionPath ( "gov/dlf/presentation/MANTENIMIENTO_PROVEEDOR_FR.jdp" );
    String definition = ResourceUtil.getResourceText ( this.definitionPath );
    this.setDefinition     ( definition );

    this.setHighLightSelected   ( false );
    this.compressFieldLocations ( false, true );  // Compresses only Y-locations
  }
  
  
  /**
   * Overrides ancestor's script
   *
   * @param __app
   */
  public void setApplication ( Application __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.setDataManager ( this.app.getDataManager ( ) );
    }

    ICalculator           calculator;
    IBooleanValueProvider txtVisible;
    IBooleanValueProvider groupVisible;
    IObjectValueProvider  valueProvider;
    JDataPanelTextGroup   txtGroup;
    JDataPanelGroup       visGroup;

    JDataPanelField       field;

    this.setArguments ( "VIGENCIAS_GP", new MANTENIMIENTO_PROVEEDOR_FR_VIGENCIAS_GP_Arguments ( this ) );


    this.setObjectEvents ( );



  }


  /**
   * Overrides ancestor's method
   * 
   * @return
   */
  public RallyApplication getApplication ( )
  {
    return this.app;
  }



  // -------------------------------------------------------------------
  // ----------   Action Sites   ---------------------------------------

  /**
   *
   */
  public void setObjectEvents ( )
  {
	    this.registerListener ( "PROV_PARK", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
	    {
	      public boolean eventFired ( String eventName )
	      {
	        app.errorFlag = true; PROV_CHECK_NUM_SERVICIOS_ADL.exec ( app ); return app.errorFlag;
	      }
	    } );
	    this.registerListener ( "PROV_PARK", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
	    {
	      public boolean eventFired ( String eventName )
	      {
	        app.errorFlag = true; PROV_CHECK_NUM_SERVICIOS_AF_ADL.exec ( app ); return app.errorFlag;
	      }
	    } );
	  this.registerListener ( "NOM_PROVEEDOR", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
	  {
		  public boolean eventFired ( String eventName )
		  {
			  String nomSup =  app.form("MANTENIMIENTO_PROVEEDOR_FR").getStringItem( "NOM_PROVEEDOR" );  
			  if (Compare.equals(nomSup, null) || Compare.equals(nomSup, ""))
			  {
				  app.setError ("0", "El nombre del proveedor es requerido.");
				  app.errorFlag = false;
				  return app.errorFlag;
			  }
			  else
				  app.errorFlag = true;
			  return app.errorFlag;
		  } 
	  });
	 
	  this.registerListener ( "TIPO_CUENTA_BANCO", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
	  {
		  public boolean eventFired ( String eventName )
		  {
			  String tipoCta =  app.form("MANTENIMIENTO_PROVEEDOR_FR").getStringItem( "TIPO_CUENTA_BANCO" );  
			  if ( ( ! Compare.equals ( tipoCta, "C" ) ) && ( ! Compare.equals ( tipoCta, "A" ) )  && ( ! Compare.equals ( tipoCta, "" ) )  )
    		  {
    			  app.setError ("0", "Debe ingresar 'C' para cuenta de cheque o 'A' para cuenta de ahorro.");
    			  app.errorFlag = false;
    			  return app.errorFlag;
    		  }
			  else
				  app.errorFlag = true;
			  return app.errorFlag;
		  } 
	  });
  }
  class MANTENIMIENTO_PROVEEDOR_FR_VIGENCIAS_GP_Arguments extends JDataPanelGroupArguments
  {
    /**  */
    protected Form model;
    /**  */
    protected SAIC_DMQ_ORA_Application app = null;

    /**  */
    public MANTENIMIENTO_PROVEEDOR_FR_VIGENCIAS_GP_Arguments ( Form form )
    {
      this.model = form;

      this.setArgName ( "PROVEEDOR_ID" );
    }

    /**  */
    public Object getArgValue ( String argName )
    {
      if ( this.app == null ) this.app = ( SAIC_DMQ_ORA_Application ) this.model.getApplication ( );
      if ( argName == null )
      {
        return null;
      }
      else if ( argName.equals ( "PROVEEDOR_ID" ) )
      {
        return this.app.form("MANTENIMIENTO_PROVEEDOR_FR").getDoubleItem( "ID_PROVEEDOR" );
      }
      return null;
    }
  }
  
}









