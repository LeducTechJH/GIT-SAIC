package gov.dlf.external;


import gov.dlf.logic.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;



import net.maintrend.appmanager.Application;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * 
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SET_PRINTER_FILE_EPL
     extends OracleRdbClient 
  implements IRegisteredObject 
{
  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app = null;



  // -------------------------------------------------------------------
  // ----------   Constructors and Supporting Methods   ----------------

  /**
   *
   */
  public SET_PRINTER_FILE_EPL ( )
  {
    super ( );
    this.setProcedureName ( "CALL_SET_PRINTER_FILE_EPL" );
    this.exceptionTitle = "OracleRdbClient_SET_PRINTER_FILE_EPL.process ( ) - ";
    this.parmCount = 13;
  }



  // -------------------------------------------------------------------
  // ----------   Constructors and Supporting Methods   ----------------

  /**
   *
   */
  public static SET_PRINTER_FILE_EPL exec ( SAIC_DMQ_ORA_Application __app, ParameterSet ps )
  {
    SET_PRINTER_FILE_EPL link = new SET_PRINTER_FILE_EPL ( );
    link.setApplication ( __app );
    link.execute ( ps );
    return link;
  }


  /**
   *
   */
  public static SET_PRINTER_FILE_EPL exec ( SAIC_DMQ_ORA_Application __app )
  {
    return SET_PRINTER_FILE_EPL.exec ( __app, null );
  }



  // -------------------------------------------------------------------
  // ----------   IRegisteredObject Implementation   -------------------

  /**
   * 
   * @param rApp
   */
  public void setApplication ( RallyApplication rApp )
  {
    if ( rApp != null ) this.app = ( SAIC_DMQ_ORA_Application ) rApp;
    if ( this.app != null )
    {
      this.setDataManager ( ( RallyDataManager ) this.app.getDataManager ( ) );
    }
  }


  /**
   * 
   * @param application
   */
  public void setApplication ( Application application )
  {
    this.setApplication ( ( RallyApplication ) application ); 
  }


  /**
   * 
   * @return
   */
  public boolean isSelfClosing ( )
  {
    return true;
  }


  /**
   *
   */
  public void halt ( )
  {
    // Empty
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   *
   */
  protected void createParameters ( ParameterSet ps )
  {
    Parameter parm;
    this.parameters = ps;
    parm = this.parameters.add ( "0", Parameter.WRITEONLY, Parameter.STRING );
    parm.set ( this.app.getCOMANDO_DCL_GBL ( ) );
    parm = this.parameters.add ( "1", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "2", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "3", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "4", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "5", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "6", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "7", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "8", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "9", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "10", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "11", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
    parm = this.parameters.add ( "12", Parameter.WRITEONLY, Parameter.DOUBLE );
    parm.set ( this.app.getNULL_ARGUMENT_GBL ( ) );
  }


  /**
   *
   */
  protected void createParameters ( )
  {
    this.createParameters ( new ParameterSet ( ) );
  }


  /**
   *
   */
  public ParameterSet run ( )
  {
    this.process ( );
    return this.getParameters ( );
  }


  /**
   * IRegisteredObject implementation
   */
  public void execute ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SET_PRINTER_FILE_EPL" );

    if ( ps != null && ps.size ( ) > 0 )
    {
      this.createParameters ( ps );
    }
    else
    {
      this.createParameters ( );
    }
    this.parameters.setParameter ( 0, Parameter.WRITEONLY, Parameter.STRING );
    this.parameters.setParameter ( 1, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 2, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 3, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 4, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 5, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 6, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 7, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 8, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 9, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 10, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 11, Parameter.WRITEONLY, Parameter.DOUBLE );
    this.parameters.setParameter ( 12, Parameter.WRITEONLY, Parameter.DOUBLE );


//System.out.println ( "\r\nBefore SET_PRINTER_FILE_EPL:\r\n" + this.parameters.getXml ( ) );
//    this.process ( );
//System.out.println ( "\r\nAfter  SET_PRINTER_FILE_EPL:\r\n" + this.parameters.getXml ( ) );
    this.parameters.copy ( ps );
  }
}
