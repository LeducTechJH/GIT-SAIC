package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DETER_FINAL_S_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;
 
  public boolean _condition4 = false;
 
  public boolean _condition5 = false;
 
  public boolean _condition6 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DETER_FINAL_S_ADL get ( RallyApplication __app )
  {
    DETER_FINAL_S_ADL adl = new DETER_FINAL_S_ADL ( );
    __app.register ( adl, "DETER_FINAL_S_ADL" );
    __app.setADL ( DETER_FINAL_S_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DETER_FINAL_S_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DETER_FINAL_S_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DETER_FINAL_S_ADL" );
    if ( rObj != null && rObj instanceof DETER_FINAL_S_ADL )
    {
      this.app.setADL ( DETER_FINAL_S_ADL.class, ( DETER_FINAL_S_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DETER_FINAL_S_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
      case 7:  { this.currentStep ++; this.step7 ( this.keyParms ); break; }
      case 8:  { this.currentStep ++; this.step8 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DETER_FINAL_S_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.DETERMINACION_FINAL_GBL = "S";
    this.app.FLAG_UPD_GBL = "S";
    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANB" ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      DETERMINACION_PANB_PRINT_PKT.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANB" ) ) 
    {
      this.app.returnTo ( "DETERMINAR_ELEGIBILIDAD_PANB" ); if ( true ) return;
    }
    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) )  )
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      DETERMINACION_PRINT_PKT.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANB" ) ) 
    {
    }
    else if ( this._condition1 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) )  )
    {
      this.app.returnTo ( "DETERMINAR_ELEGIBILIDAD_PAN_2" ); if ( true ) return;
    }
    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" )  )
    {
      this._condition2 = true;
    }
    else
    {
      this._condition2 = false;
    }
    if ( this._condition2 )
    {
      DETERMINAR_PRINT_AEA.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANB" ) ) 
    {
    }
    else if ( this._condition1 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) )  )
    {
    }
    else if ( this._condition2 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" )  )
    {
      this.app.returnTo ( "DETERMINAR_ELEGIBILIDAD_AE_C1_ADL" ); if ( true ) return;
    }
    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-T" )  )
    {
      this._condition3 = true;
    }
    else
    {
      this._condition3 = false;
    }
    if ( this._condition3 )
    {
      DETERMINAR_PRINT_AEA.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANB" ) ) 
    {
    }
    else if ( this._condition1 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) )  )
    {
    }
    else if ( this._condition2 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" )  )
    {
    }
    else if ( this._condition3 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-T" )  )
    {
      this.app.returnTo ( "DETERMINAR_ELEGIBILIDAD_AE_T_ADL" ); if ( true ) return;
    }
    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-A" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-D" ) )  )
    {
      this._condition4 = true;
    }
    else
    {
      this._condition4 = false;
    }
    if ( this._condition4 )
    {
      if ( Compare.equals ( this.app.AEA_NPRO_GBL, "X" ) ) 
      {
        this._condition5 = true;
      }
      else
      {
        this._condition5 = false;
      }
      if ( this._condition5 )
      {
        DETERMINAR_PRINT_AEA.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANB" ) ) 
    {
    }
    else if ( this._condition1 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) )  )
    {
    }
    else if ( this._condition2 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" )  )
    {
    }
    else if ( this._condition3 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-T" )  )
    {
    }
    else if ( this._condition4 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-A" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-D" ) )  )
    {
      if ( this._condition5 )    //      if ( Compare.equals ( this.app.AEA_NPRO_GBL, "X" ) ) 
      {
    	// *** BEGIN MODS JOR 12/8/2008 ***
        //this.app.returnTo ( "DETERMINAR_ELEGIBILIDAD_AE_A_ADL" ); if ( true ) return;
        this.app.returnTo ( "DETERMINAR_AEA_NPRO_ADL" ); if ( true ) return;
    	// *** END MODS JOR 12/8/2008 ***
      }
      else
      {
        DETERMINAR_PRINT_AEA.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step6 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANB" ) ) 
    {
    }
    else if ( this._condition1 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) )  )
    {
    }
    else if ( this._condition2 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" )  )
    {
    }
    else if ( this._condition3 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-T" )  )
    {
    }
    else if ( this._condition4 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-A" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-D" ) )  )
    {
      if ( this._condition5 )    //      if ( Compare.equals ( this.app.AEA_NPRO_GBL, "X" ) ) 
      {
      }
      else
      {
        this.app.returnTo ( "DETERMINAR_ELEGIBILIDAD_AE_A_ADL" ); if ( true ) return;
      }
    }
    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-B" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-G" ) )  )
    {
      this._condition6 = true;
    }
    else
    {
      this._condition6 = false;
    }
    if ( this._condition6 )
    {
      DETERMINAR_PRINT_AEA.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step7 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANB" ) ) 
    {
    }
    else if ( this._condition1 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "PANE" ) )  )
    {
    }
    else if ( this._condition2 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" )  )
    {
    }
    else if ( this._condition3 )    //    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-T" )  )
    {
    }
    else if ( this._condition4 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-A" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-D" ) )  )
    {
    }
    else if ( this._condition6 )    //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-B" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-G" ) )  )
    {
      this.app.returnTo ( "DETERMINAR_ELEGIBILIDAD_AE_B_ADL" ); if ( true ) return;
    }

  }
  protected void step8 ( ParameterSet ps )
  {
  if ( Compare.equals ( this.app.COD_SERV_GBL, "LISE" ) || Compare.equals ( this.app.COD_SERV_GBL, "LICR" ) )     //    else if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-B" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-G" ) )  )
    {
      this.app.returnTo ( "DETERMINAR_ELEGIBILIDAD_LIHEAP" ); if ( true ) return;
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure deter_final_s_adl;

begin
set_trace();
DETERMINACION_FINAL_GBL := 'S';
flag_upd_gbl := 'S';
IF  (SUBSTR(COD_SERV_GBL,0,4) = 'PANB')
THEN BEGIN 
       CALL DETERMINACION_PANB_PRINT_PKT;
       RETURN_TO DETERMINAR_ELEGIBILIDAD_PANB;
     END;
ELSE
  IF (SUBSTR(COD_SERV_GBL,0,3) = 'PAN') or
   (SUBSTR(COD_SERV_GBL,0,4) = 'PANE')
  THEN BEGIN 
        CALL DETERMINACION_PRINT_PKT;
        RETURN_TO DETERMINAR_ELEGIBILIDAD_PAN_2;
       END;

  ELSE
    IF SUBSTR(COD_SERV_GBL,0,4) = 'AE-C'
    THEN BEGIN
           CALL DETERMINAR_PRINT_AEA;
           RETURN_TO DETERMINAR_ELEGIBILIDAD_AE_C1_ADL;
         END;
    ELSE
        IF SUBSTR(COD_SERV_GBL,0,4) = 'AE-T'
        THEN BEGIN
              CALL DETERMINAR_PRINT_AEA;
              RETURN_TO DETERMINAR_ELEGIBILIDAD_AE_T_ADL;
             END;
        ELSE
            IF (SUBSTR(COD_SERV_GBL,0,4) = 'AE-A') OR
               (SUBSTR(COD_SERV_GBL,0,4) = 'AE-D')
            THEN BEGIN
                  IF AEA_NPRO_GBL = 'X' THEN
                    BEGIN
                      CALL DETERMINAR_PRINT_AEA;
                      RETURN_TO DETERMINAR_ELEGIBILIDAD_AE_A_ADL;
                    END;
                  ELSE
                    BEGIN
                      CALL DETERMINAR_PRINT_AEA;
                      RETURN_TO DETERMINAR_ELEGIBILIDAD_AE_A_ADL;
                    END; 
                 END;
            ELSE
                IF (SUBSTR(COD_SERV_GBL,0,4) = 'AE-B') OR
                   (SUBSTR(COD_SERV_GBL,0,4) = 'AE-G')
                THEN BEGIN
                      CALL DETERMINAR_PRINT_AEA;
                      RETURN_TO DETERMINAR_ELEGIBILIDAD_AE_B_ADL;
                     END;
set_notrace();
end;

    



--------------------------------------------------------------------- */
