package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AUTORIZAR_PAGO_PROYECCION_ADL
extends ADL
{
	// -------------------------------------------------------------------
	// ----------   Class Attributes   -----------------------------------

	/**  */
	public static boolean staticCall = true;


	// -------------------------------------------------------------------
	// ----------   Instance Attributes   --------------------------------

	/**  */
	public SAIC_DMQ_ORA_Application app;
	/**  */
	public RallyDataManager dm = null;



	// -------------------------------------------------------------------
	// ----------   Instance Condition Attributes   ----------------------



	// -------------------------------------------------------------------
	// ----------   Instance Export Attributes   -------------------------





	// -------------------------------------------------------------------
	// ----------   Instance Attributes' Access Methods   ----------------





	// -------------------------------------------------------------------
	// ----------   Methods   --------------------------------------------

	/**
	 * 
	 * @param __app
	 * @return
	 */
	public static AUTORIZAR_PAGO_PROYECCION_ADL get ( RallyApplication __app )
	{
		AUTORIZAR_PAGO_PROYECCION_ADL adl = new AUTORIZAR_PAGO_PROYECCION_ADL ( );
		__app.register ( adl, "AUTORIZAR_PAGO_PROYECCION_ADL" );
		__app.setADL ( AUTORIZAR_PAGO_PROYECCION_ADL.class, adl ); 
		adl.setApplication ( __app );
		return adl;
	}


	/**
	 *
	 * @param __app
	 * @param ps
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app, ParameterSet ps )
	{
		AUTORIZAR_PAGO_PROYECCION_ADL.get ( __app ).process ( ps );
	}


	/**
	 *
	 * @param __app
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app )
	{
		ParameterSet ps = null;
		AUTORIZAR_PAGO_PROYECCION_ADL.exec ( __app, ps );
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param __app
	 */
	public void setApplication ( RallyApplication __app )
	{
		this.app = ( SAIC_DMQ_ORA_Application ) __app;
		if ( this.app != null )
		{
			this.dm = ( RallyDataManager ) this.app.getDataManager ( );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param parms
	 */
	public void execute ( ParameterSet parms )
	{
		this.process ( parms );
	}




	/**
	 *
	 */
	protected void doReturn ( )
	{
		this.unregister ( );
	}


	/**
	 *
	 */
	public void unregister ( )
	{
		this.app.unregister ( this );
		IRegisteredObject rObj = this.app.get ( "AUTORIZAR_PAGO_PROYECCION_ADL" );
		if ( rObj != null && rObj instanceof AUTORIZAR_PAGO_PROYECCION_ADL )
		{
			this.app.setADL ( AUTORIZAR_PAGO_PROYECCION_ADL.class, ( AUTORIZAR_PAGO_PROYECCION_ADL ) rObj );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param ps
	 */
	protected void process ( ParameterSet ps )
	{
		Debug.println ( Debug.TRACE, "AUTORIZAR_PAGO_PROYECCION_ADL Step " + this.currentStep );
		super.process ( ps );
		switch ( this.currentStep ) 
		{
		case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
		case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
		default: 
		{ 
			this.currentStep = 0;
			Debug.println ( Debug.TRACE, "AUTORIZAR_PAGO_PROYECCION_ADL ended" );
			this.unregister ( );
			break;
		}
		}
		if ( this.currentStep > 0 ) this.app.goOn ( );
	}

	protected void step0 ( ParameterSet ps )
	{
	    this.app.ACCESS_STATUS_GBL = "";
	    this.app.COD_ACCESS_GBL = "CUID";
	    SECURITY_CUIDO_ADL.exec ( this.app );
	    return;
	}
	protected void step1 ( ParameterSet ps )
	{
		if ( ! Compare.equals(this.app.COD_ACCESS_GBL, "NOPE"))
		{
			this.app.form ( "CONTRATO_PROYECCION_FR" ).setItem ( "FCH_AUTORIZACION", this.app.SYSTEM_DATE);
		}
		else
		{
			this.app.form ( "CONTRATO_PROYECCION_FR" ).setItem ( "FCH_AUTORIZACION", null);
			this.app.form ( "CONTRATO_PROYECCION_FR" ).setItem ( "AUT", "");
		}
	}
}
