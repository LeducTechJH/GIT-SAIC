package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AFTER_VISIT_COD_SERV_FRAUDE_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double LAST_KEY = 0;

  public double RECLA_ID = 0;

  public double RECLA_STATUS = 0;



  public DataStore RECLA_RETRO_TABLE_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setLAST_KEY  ( RallyApplication __app, Parameter value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).LAST_KEY = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_STATUS = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getRECLA_RETRO_TABLE_DSD  ( RallyApplication __app )
  {
    return ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_RETRO_TABLE_DSD;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_RETRO_TABLE_DSD = value;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_RETRO_TABLE_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getLAST_KEY  ( RallyApplication __app )
  {
    return ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).LAST_KEY;
  }


  /**  */
  public static Double getLAST_KEYDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).LAST_KEY );
  }


  /**  */
  public static void setLAST_KEY  ( RallyApplication __app, double value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).LAST_KEY = value;
  }


  /**  */
  public static void setLAST_KEY  ( RallyApplication __app, Object value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).LAST_KEY = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLA_ID  ( RallyApplication __app )
  {
    return ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_ID;
  }


  /**  */
  public static Double getRECLA_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_ID );
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, double value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_ID = value;
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Object value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLA_STATUS  ( RallyApplication __app )
  {
    return ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_STATUS;
  }


  /**  */
  public static Double getRECLA_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_STATUS );
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, double value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_STATUS = value;
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) __app.getADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class ) ).RECLA_STATUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static AFTER_VISIT_COD_SERV_FRAUDE_ADL get ( RallyApplication __app )
  {
    AFTER_VISIT_COD_SERV_FRAUDE_ADL adl = new AFTER_VISIT_COD_SERV_FRAUDE_ADL ( );
    __app.register ( adl, "AFTER_VISIT_COD_SERV_FRAUDE_ADL" );
    __app.setADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    AFTER_VISIT_COD_SERV_FRAUDE_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    AFTER_VISIT_COD_SERV_FRAUDE_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "AFTER_VISIT_COD_SERV_FRAUDE_ADL" );
    if ( rObj != null && rObj instanceof AFTER_VISIT_COD_SERV_FRAUDE_ADL )
    {
      this.app.setADL ( AFTER_VISIT_COD_SERV_FRAUDE_ADL.class, ( AFTER_VISIT_COD_SERV_FRAUDE_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "AFTER_VISIT_COD_SERV_FRAUDE_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "AFTER_VISIT_COD_SERV_FRAUDE_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    LAST_KEY = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( ( Compare.equals ( LAST_KEY, RallyAppCommandFactory.FNEXT ) ) || ( Compare.equals ( LAST_KEY, RallyAppCommandFactory.EXITACTION ) ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.callCommand ( RallyAppCommandFactory.QUERY );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( Compare.equals ( LAST_KEY, RallyAppCommandFactory.FNEXT ) ) || ( Compare.equals ( LAST_KEY, RallyAppCommandFactory.EXITACTION ) ) ) 
    {
      RECLA_RETRO_TABLE_DSD = this.dm.create ( "RECLA_RETRO_TABLE_DSD" );
      RECLA_ID = RECLA_RETRO_TABLE_DSD.getId ( );
      RECLA_STATUS = RallyDataStoreException.getDefault ( );

      RECLA_STATUS  = this.dm.reset ( RECLA_ID );

      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "ACCION_TOMADA_FRAUDE_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAM" ));
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "ACCION_TOMADA_FRAUDE_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", this.app.form ( "ACCION_TOMADA_FRAUDE_FR" ).getStringItem ( "COD_SERVICIO" ));
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
      RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

      RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

      this.app.form ( "ACCION_TOMADA_FRAUDE_FR" ).setItem ( "JEFE_RECLAMACION", this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SS_DUENO" )  );
      RECLA_STATUS  = this.dm.dbClose ( RECLA_ID );

      this.callParms.clear ( );
      this.callParms.set ( this.app.form ( "ACCION_TOMADA_FRAUDE_FR" ).getDoubleItem ( "JEFE_RECLAMACION" ) );
      this.callParms.set ( this.app.form ( "ACCION_TOMADA_FRAUDE_FR" ).getStringItem ( "NOMBRE_JEFE_RECLA" ) );
      BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( Compare.equals ( LAST_KEY, RallyAppCommandFactory.FNEXT ) ) || ( Compare.equals ( LAST_KEY, RallyAppCommandFactory.EXITACTION ) ) ) 
    {
      this.callParms.reset ( );
      this.app.form ( "ACCION_TOMADA_FRAUDE_FR" ).setItem ( "JEFE_RECLAMACION", this.callParms.getDouble ( ) );
      this.app.form ( "ACCION_TOMADA_FRAUDE_FR" ).setItem ( "NOMBRE_JEFE_RECLA", this.callParms.getString ( ) );

    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE AFTER_VISIT_COD_SERV_FRAUDE_ADL;

VAR
        LAST_KEY : NUMBER;
        RECLA_ID : NUMBER(9,0);
        RECLA_STATUS : NUMBER(9,0);

BEGIN
SET_TRACE();
LAST_KEY := GET_CMD();
IF (LAST_KEY = FNEXT) OR (LAST_KEY = EXITACTION)
THEN
    BEGIN
        CALL_CMD(QUERY);
        DB_OPEN(RECLA_RETRO_TABLE_DSD,RECLA_ID,RECLA_STATUS);
        DB_RESET(RECLA_ID,RECLA_STATUS);
        RECLA_RETRO_TABLE_DSD.SEGURO_SOCIAL_JEFE_FAM := ACCION_TOMADA_FRAUDE_FR.
SEGURO_SOCIAL_JEFE_FAM;
        RECLA_RETRO_TABLE_DSD.SEGURO_SOCIAL_JEFE_SERV := ACCION_TOMADA_FRAUDE_FR
.SEGURO_SOCIAL_JEFE_SERV;
        RECLA_RETRO_TABLE_DSD.COD_SERVICIO := ACCION_TOMADA_FRAUDE_FR.COD_SERVIC
IO;
        RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
        RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(RECLA_ID,RECLA_STATUS);
        DB_GET_FIRST(RECLA_ID,RECLA_STATUS);    
        ACCION_TOMADA_FRAUDE_FR.JEFE_RECLAMACION := RECLA_RETRO_TABLE_DSD.SS_DUE
NO;
        DB_CLOSE(RECLA_ID,RECLA_STATUS);        
        CALL BUSCAR_NOMBRE_COMPLETO_ADL(ACCION_TOMADA_FRAUDE_FR.JEFE_RECLAMACION
,ACCION_TOMADA_FRAUDE_FR.NOMBRE_JEFE_RECLA);
    END;
SET_NOTRACE();
END;
    



--------------------------------------------------------------------- */
