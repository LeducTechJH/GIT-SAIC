package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SOLIC_SERV_COMP_TRANS_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMMAND = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( SOLIC_SERV_COMP_TRANS_ADL ) __app.getADL ( SOLIC_SERV_COMP_TRANS_ADL.class ) ).COMMAND = value.getDouble ( );
  }  
    



  /**  */
  public static double getCOMMAND  ( RallyApplication __app )
  {
    return ( ( SOLIC_SERV_COMP_TRANS_ADL ) __app.getADL ( SOLIC_SERV_COMP_TRANS_ADL.class ) ).COMMAND;
  }


  /**  */
  public static Double getCOMMANDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SOLIC_SERV_COMP_TRANS_ADL ) __app.getADL ( SOLIC_SERV_COMP_TRANS_ADL.class ) ).COMMAND );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, double value )
  {
    ( ( SOLIC_SERV_COMP_TRANS_ADL ) __app.getADL ( SOLIC_SERV_COMP_TRANS_ADL.class ) ).COMMAND = value;
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Object value )
  {
    ( ( SOLIC_SERV_COMP_TRANS_ADL ) __app.getADL ( SOLIC_SERV_COMP_TRANS_ADL.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SOLIC_SERV_COMP_TRANS_ADL get ( RallyApplication __app )
  {
    SOLIC_SERV_COMP_TRANS_ADL adl = new SOLIC_SERV_COMP_TRANS_ADL ( );
    __app.register ( adl, "SOLIC_SERV_COMP_TRANS_ADL" );
    __app.setADL ( SOLIC_SERV_COMP_TRANS_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SOLIC_SERV_COMP_TRANS_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SOLIC_SERV_COMP_TRANS_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SOLIC_SERV_COMP_TRANS_ADL" );
    if ( rObj != null && rObj instanceof SOLIC_SERV_COMP_TRANS_ADL )
    {
      this.app.setADL ( SOLIC_SERV_COMP_TRANS_ADL.class, ( SOLIC_SERV_COMP_TRANS_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SOLIC_SERV_COMP_TRANS_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SOLIC_SERV_COMP_TRANS_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    COMMAND = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( ( Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) && ( Compare.equals ( this.app.SOLICITUD_TYPE_GBL, "I" ) )  && ( Compare.equals ( this.app.POST_FLAG_GBL, " " ) )  ) 
    {
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    if ( ( Compare.equals ( this.app.RESI_FLAG_GBL, "*" ) ) && ( Compare.equals ( this.app.POST_FLAG_GBL, " " ) )  ) 
    {
      this.doReturn ( );
      return; 
    }
    if ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) 
    {
      this.doReturn ( );
      return;
    }
    this.app.ANSWER_GBL = " ";
    this.app.RETURN_TO_FLAG_GBL = 21;
    COMPLETAR_TRANSACCION_MENU.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( Compare.equals ( this.app.ANSWER_GBL, "Y" ) ) 
    {
      this.app.PATERNO_GBL = this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DSC_APELLIDO_PATERNO" );
      this.app.MATERNO_GBL = this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DSC_APELLIDO_MATERNO" );
      this.app.NOMBRE_GBL = this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DSC_NOMBRE" );
      this.app.INICIAL_GBL = this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DSC_INICIAL" );
      Form form = this.app.getLastForm ( "SOLICITUD_SERVICIO_FR" );
      if ( form != null ) form.update ( );
      this.app.returnTo ( "APERTURA_DE_CASO_ADL" ); if ( true ) return;
    }
    else
    {
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.FPREV ) ) 
    {
      this.doReturn ( );
      return;
    }
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) 
    {
      if ( ( Compare.equals ( this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "COD_TIPO_DIRECCION" ), "RESI" ) ) && ( Compare.equals ( this.app.SOLICITUD_TYPE_GBL, "I" ) )  ) 
      {
        this.app.errorFlag = false;
        this.doReturn ( );
        return; 
      }
    }
    if ( ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) && ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.FNEXT ) )  && ( Compare.equals ( this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "COD_TIPO_DIRECCION" ), "RESI" ) )  ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.callCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) && ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.FNEXT ) )  && ( Compare.equals ( this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "COD_TIPO_DIRECCION" ), "RESI" ) )  ) 
    {
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.FNEXT ) ) 
    {
      this.doReturn ( );
      return;
    }
    this.app.ANSWER_GBL = " ";
    this.app.RETURN_TO_FLAG_GBL = 21;
    COMPLETAR_TRANSACCION_MENU.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( Compare.equals ( this.app.ANSWER_GBL, "Y" ) ) 
    {
      this.app.PATERNO_GBL = this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DSC_APELLIDO_PATERNO" );
      this.app.MATERNO_GBL = this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DSC_APELLIDO_MATERNO" );
      this.app.NOMBRE_GBL = this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DSC_NOMBRE" );
      this.app.INICIAL_GBL = this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DSC_INICIAL" );
      this.doReturn ( );
      return; 
    }
    else
    {
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SOLIC_SERV_COMP_TRANS_ADL;

VAR
        COMMAND :       NUMBER(9,0);

BEGIN
SET_TRACE();
COMMAND:=GET_CMD();

IF (COMMAND=EXITACTION) AND (SOLICITUD_TYPE_GBL='I') AND 
     (POST_FLAG_GBL=' ')
        THEN BEGIN
               SET_FAILURE();
               RETURN;
             END;

{IF (COMMAND=FNEXT) OR (COMMAND=FPREV)
    THEN RETURN;}

IF (RESI_FLAG_GBL='*') AND (POST_FLAG_GBL=' ')
   THEN BEGIN
          RETURN;
        END;

IF COMMAND<>EXITACTION
        THEN RETURN;

        ANSWER_GBL:=' ';
        RETURN_TO_FLAG_GBL:=21;
        CALL COMPLETAR_TRANSACCION_MENU;
        IF ANSWER_GBL='Y'
           THEN BEGIN
                      PATERNO_GBL:=SOLICITUD_SERVICIO_FR.DSC_APELLIDO_PATERNO;
                      MATERNO_GBL:=SOLICITUD_SERVICIO_FR.DSC_APELLIDO_MATERNO;
                      NOMBRE_GBL:=SOLICITUD_SERVICIO_FR.DSC_NOMBRE;
                      INICIAL_GBL:=SOLICITUD_SERVICIO_FR.DSC_INICIAL;
                      RETURN_TO APERTURA_DE_CASO_ADL;
                 END;
           ELSE BEGIN
                      SET_FAILURE();
                      RETURN;
                END;


IF COMMAND = FPREV THEN RETURN;

IF (COMMAND = EXITACTION)
{ OR (COMMAND=FNEXT)}
   THEN  IF (SOLICITUD_SERVICIO_FR.COD_TIPO_DIRECCION='RESI') AND
              (SOLICITUD_TYPE_GBL='I')
            THEN BEGIN
                   SET_FAILURE();
                   RETURN;
                 END;


IF (COMMAND<>EXITACTION) AND (COMMAND<>FNEXT) AND 
         (SOLICITUD_SERVICIO_FR.COD_TIPO_DIRECCION='RESI')
   THEN BEGIN
          CALL_CMD('Ignore');
          SET_FAILURE();
          RETURN;
        END;

IF COMMAND = FNEXT THEN RETURN;


        ANSWER_GBL:=' ';
        RETURN_TO_FLAG_GBL:=21;
        CALL COMPLETAR_TRANSACCION_MENU;
        IF ANSWER_GBL='Y'
           THEN BEGIN
                 PATERNO_GBL:=SOLICITUD_SERVICIO_FR.DSC_APELLIDO_PATERNO;
                 MATERNO_GBL:=SOLICITUD_SERVICIO_FR.DSC_APELLIDO_MATERNO;
                 NOMBRE_GBL:=SOLICITUD_SERVICIO_FR.DSC_NOMBRE;
                 INICIAL_GBL:=SOLICITUD_SERVICIO_FR.DSC_INICIAL;
                 RETURN;
                END;
           ELSE
             BEGIN
               SET_FAILURE();
               RETURN;
             END;
SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
