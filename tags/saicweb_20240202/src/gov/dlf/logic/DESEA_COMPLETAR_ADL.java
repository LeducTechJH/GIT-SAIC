package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DESEA_COMPLETAR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double CALENDARIO = 0;

  public double STATUS_CODE = 0;



  public DataStore CALENDARIO2_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCALENDARIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).CALENDARIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getCALENDARIO2_DSD  ( RallyApplication __app )
  {
    return ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).CALENDARIO2_DSD;
  }


  /**  */
  public static void setCALENDARIO2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).CALENDARIO2_DSD = value;
  }


  /**  */
  public static void setCALENDARIO2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).CALENDARIO2_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getCALENDARIO  ( RallyApplication __app )
  {
    return ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).CALENDARIO;
  }


  /**  */
  public static Double getCALENDARIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).CALENDARIO );
  }


  /**  */
  public static void setCALENDARIO  ( RallyApplication __app, double value )
  {
    ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).CALENDARIO = value;
  }


  /**  */
  public static void setCALENDARIO  ( RallyApplication __app, Object value )
  {
    ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).CALENDARIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DESEA_COMPLETAR_ADL ) __app.getADL ( DESEA_COMPLETAR_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DESEA_COMPLETAR_ADL get ( RallyApplication __app )
  {
    DESEA_COMPLETAR_ADL adl = new DESEA_COMPLETAR_ADL ( );
    __app.register ( adl, "DESEA_COMPLETAR_ADL" );
    __app.setADL ( DESEA_COMPLETAR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DESEA_COMPLETAR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DESEA_COMPLETAR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DESEA_COMPLETAR_ADL" );
    if ( rObj != null && rObj instanceof DESEA_COMPLETAR_ADL )
    {
      this.app.setADL ( DESEA_COMPLETAR_ADL.class, ( DESEA_COMPLETAR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DESEA_COMPLETAR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DESEA_COMPLETAR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    INVOCAR_CALENDARIO_ADL.setLOCAL_FUNCTION_REPUESTA ( this.app,  " " );
    DESEA_COMPLETAR_MENU.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( Compare.equals ( INVOCAR_CALENDARIO_ADL.getLOCAL_FUNCTION_REPUESTA ( this.app ), "C" ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.CERRA_GBL = "F";
      this.app.form ( "CALENDARIO_MAIN_FR" ).setItem ( "STS_ACTIVIDAD", ""  );
      this.app.CONTACTO_FCH_HR_MIN_CONT_GBL = this.app.form ( "CALENDARIO_LF_FR" ).getDateItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" );
      this.app.CONTACTO_COD_SERV_GBL = this.app.form ( "CALENDARIO_LF_FR" ).getStringItem ( "COD_SERVICIO" );
      this.app.CONTACTO_DURACION_GBL = this.app.form ( "CALENDARIO_LF_FR" ).getDateItem ( "DURACION_HORA_MIN_CONTACTO" );
      this.app.CONTACTO_COD_RAZON_GBL = this.app.form ( "CALENDARIO_LF_FR" ).getStringItem ( "COD_RAZON" );
      this.app.CONTACTO_SSJF_GBL = this.app.form ( "CALENDARIO_LF_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAM" );
      this.app.CONTACTO_SSJS_GBL = this.app.form ( "CALENDARIO_LF_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" );
      this.app.CONTACTO_ID_TECN_GBL = this.app.form ( "CALENDARIO_MAIN_FR" ).getDoubleItem ( "ID_TECNICO" );
      CONTACTO_UPD_PKT.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( INVOCAR_CALENDARIO_ADL.getLOCAL_FUNCTION_REPUESTA ( this.app ), "C" ) ) 
    {
      if ( Compare.equals ( this.app.CERRA_GBL, "T" ) ) 
      {
        CALENDARIO2_DSD = this.dm.create ( "CALENDARIO2_DSD" );
        CALENDARIO = CALENDARIO2_DSD.getId ( );
        STATUS_CODE = RallyDataStoreException.getDefault ( );
        if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
        {
          this.app.setError ( 0, STATUS_CODE );
          STATUS_CODE  = this.dm.dbClose ( CALENDARIO );

          this.doReturn ( );
          return; 
        }

        STATUS_CODE  = this.dm.reset ( CALENDARIO );

        this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "ID_TECNICO", this.app.form ( "CALENDARIO_LF_FR" ).getDoubleItem ( "ID_TECNICO" ));
        this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "COD_SERVICIO", this.app.form ( "CALENDARIO_LF_FR" ).getStringItem ( "COD_SERVICIO" ));
        this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0", this.app.form ( "CALENDARIO_LF_FR" ).getDateItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" ));
        this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "DURACION_HORA_MIN_CONTACTO", this.app.form ( "CALENDARIO_LF_FR" ).getDateItem ( "DURACION_HORA_MIN_CONTACTO" ));
        this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "COD_RAZON", this.app.form ( "CALENDARIO_LF_FR" ).getStringItem ( "COD_RAZON" ));

        STATUS_CODE  = this.dm.limitQueryFromBuffer ( CALENDARIO );
        STATUS_CODE  = this.dm.retrieve ( CALENDARIO );

        STATUS_CODE  = this.dm.firstRow ( CALENDARIO );

        if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
        {
          this.app.setError ( 1, STATUS_CODE );
          STATUS_CODE  = this.dm.dbClose ( CALENDARIO );

          this.doReturn ( );
          return; 
        }
        this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "STS_ACTIVIDAD", "C" );

        STATUS_CODE  = this.dm.update ( CALENDARIO );

        if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
        {
          this.app.setError ( 2, STATUS_CODE );
          STATUS_CODE  = this.dm.dbClose ( CALENDARIO );

          this.doReturn ( );
          return; 
        }

        STATUS_CODE  = this.dm.dbCommit ( );
        STATUS_CODE  = this.dm.dbClose ( CALENDARIO );

        if ( Compare.le ( this.app.form ( "CALENDARIO_LF_FR" ).getDoubleItem ( "AGGY" ), 1 ) ) 
        {
          this.app.returnTo ( "FECHA_COPY_ADL" ); if ( true ) return;
        }
      }
      this.app.callCommand ( RallyAppCommandFactory.QBE );
      return;
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( INVOCAR_CALENDARIO_ADL.getLOCAL_FUNCTION_REPUESTA ( this.app ), "C" ) ) 
    {
      this.app.callCommand ( RallyAppCommandFactory.QUERY );
      return;
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE DESEA_COMPLETAR_ADL;
VAR  LOCAL_FUNCTION_RESPUESTA:CHAR(1) import 
         INVOCAR_CALENDARIO_ADL.LOCAL_FUNCTION_REPUESTA;
     CALENDARIO : NUMBER(9,0);
     STATUS_CODE : NUMBER(9,0);
BEGIN
SET_TRACE();
LOCAL_FUNCTION_RESPUESTA := ' ';
CALL DESEA_COMPLETAR_MENU;

IF LOCAL_FUNCTION_RESPUESTA = 'C' THEN
BEGIN

        CERRA_GBL := 'F';
       CALENDARIO_MAIN_FR.STS_ACTIVIDAD := ''; 
            CONTACTO_FCH_HR_MIN_CONT_GBL :=
          CALENDARIO_LF_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0;
            CONTACTO_COD_SERV_GBL :=
            CALENDARIO_LF_FR.COD_SERVICIO;
        CONTACTO_DURACION_GBL:=
                    CALENDARIO_LF_FR.DURACION_HORA_MIN_CONTACTO;
             CONTACTO_COD_RAZON_GBL :=
                    CALENDARIO_LF_FR.COD_RAZON;
             CONTACTO_SSJF_GBL :=
CALENDARIO_LF_FR.SEGURO_SOCIAL_JEFE_FAM;
             CONTACTO_SSJS_GBL :=
CALENDARIO_LF_FR.SEGURO_SOCIAL_JEFE_SERV;
              CONTACTO_ID_TECN_GBL :=
CALENDARIO_MAIN_FR.ID_TECNICO;
        CALL  CONTACTO_UPD_PKT;
        IF (CERRA_GBL = 'T') THEN
        BEGIN
           DB_OPEN(CALENDARIO2_DSD,CALENDARIO,STATUS_CODE);
           IF (STATUS_CODE <> 0) THEN BEGIN
                                 ERROR(STATUS_CODE);
                                 DB_CLOSE(CALENDARIO,STATUS_CODE);
                                 RETURN;
                                 END;
      
           DB_RESET(CALENDARIO,STATUS_CODE);
           CALENDARIO2_DSD.ID_TECNICO :=
              CALENDARIO_LF_FR.ID_TECNICO;
           CALENDARIO2_DSD.COD_SERVICIO :=
              CALENDARIO_LF_FR.COD_SERVICIO;
           CALENDARIO2_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0  :=
              CALENDARIO_LF_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0;
           CALENDARIO2_DSD.DURACION_HORA_MIN_CONTACTO := 
              CALENDARIO_LF_FR.DURACION_HORA_MIN_CONTACTO;
           CALENDARIO2_DSD.COD_RAZON :=
              CALENDARIO_LF_FR.COD_RAZON;
           DB_QUERY(CALENDARIO,STATUS_CODE);
           DB_GET_FIRST(CALENDARIO,STATUS_CODE);
             IF (STATUS_CODE <> 0) THEN BEGIN
                                   ERROR(STATUS_CODE);
                                   DB_CLOSE(CALENDARIO,STATUS_CODE);
                                   RETURN;
                                   END;

           CALENDARIO2_DSD.STS_ACTIVIDAD := 'C';
           DB_UPDATE(CALENDARIO,STATUS_CODE);
             IF (STATUS_CODE <> 0) THEN BEGIN
                                   ERROR(STATUS_CODE);
                                   DB_CLOSE(CALENDARIO,STATUS_CODE);
                                   RETURN;
                                   END;
           DB_COMMIT(STATUS_CODE);
           DB_CLOSE(CALENDARIO,STATUS_CODE);
           DEBUG_LOG(TO_CHAR(CALENDARIO_LF_FR.AGGY));
           IF (CALENDARIO_LF_FR.AGGY <= 1) THEN RETURN_TO FECHA_COPY_ADL;
        END;
           CALL_CMD(QBE);
           CALL_CMD(QUERY);
END;                                                                 
SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
