package gov.dlf.logic;


import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AD220B_A_STATUS_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_CODE = 0;



  public String PLNPGO = null;

  public Date FCID = null;

  public DataStore RECLA_RETRO_TBL_NOPAR_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setPLNPGO  ( RallyApplication __app, Parameter value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).PLNPGO = value.getString ( );
  }  

  
  /**  */
  public static void setFCID  ( RallyApplication __app, Parameter value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).FCID = value.getDate ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }  
    


  /**  */
  public static String getPLNPGO  ( RallyApplication __app )
  {
    return ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).PLNPGO;
  }


  /**  */
  public static void setPLNPGO  ( RallyApplication __app, String value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).PLNPGO = value;
  }


  /**  */
  public static void setPLNPGO  ( RallyApplication __app, Object value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).PLNPGO = ( String ) value;
  }



  /**  */
  public static Date getFCID  ( RallyApplication __app )
  {
    return ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).FCID;
  }


  /**  */
  public static void setFCID  ( RallyApplication __app, Date value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).FCID = value;
  }


  /**  */
  public static void setFCID  ( RallyApplication __app, Object value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).FCID = ( Date ) value;
  }



  /**  */
  public static DataStore getRECLA_RETRO_TBL_NOPAR_DSD  ( RallyApplication __app )
  {
    return ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).RECLA_RETRO_TBL_NOPAR_DSD;
  }


  /**  */
  public static void setRECLA_RETRO_TBL_NOPAR_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).RECLA_RETRO_TBL_NOPAR_DSD = value;
  }


  /**  */
  public static void setRECLA_RETRO_TBL_NOPAR_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).RECLA_RETRO_TBL_NOPAR_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( AD220B_A_STATUS_ADL ) __app.getADL ( AD220B_A_STATUS_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static AD220B_A_STATUS_ADL get ( RallyApplication __app )
  {
    AD220B_A_STATUS_ADL adl = new AD220B_A_STATUS_ADL ( );
    __app.register ( adl, "AD220B_A_STATUS_ADL" );
    __app.setADL ( AD220B_A_STATUS_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    AD220B_A_STATUS_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    AD220B_A_STATUS_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "AD220B_A_STATUS_ADL" );
    if ( rObj != null && rObj instanceof AD220B_A_STATUS_ADL )
    {
      this.app.setADL ( AD220B_A_STATUS_ADL.class, ( AD220B_A_STATUS_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "AD220B_A_STATUS_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "AD220B_A_STATUS_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    FCID = this.app.form ( "AD220B_A2_FR" ).getDateItem ( "FECHA_IDENTIFICADO" );
    PLNPGO = ( ( this.app.form ( "AD220B_A2_FR" ).getStringItem ( "STATUS" )) ).toUpperCase ( );
    if ( ( Compare.equals ( PLNPGO, "FACTURA1" ) ) || ( Compare.equals ( PLNPGO, "FACTURA2" ) ) || ( Compare.equals ( PLNPGO, "REFJUS" ) ) || ( Compare.equals ( PLNPGO, "NOCOMPAG" ) ) || ( Compare.equals ( PLNPGO, "INCOBRA" ) ) || ( Compare.equals ( PLNPGO, "REFFRA" ) ) || ( Compare.equals ( PLNPGO, "SUSPDESP" ) ) || ( Compare.equals ( PLNPGO, "REFHAC" ) ) ) 
    {
      RECLA_RETRO_TBL_NOPAR_DSD = this.dm.create ( "RECLA_RETRO_TBL_NOPAR_DSD" );
      OPEN_ID = RECLA_RETRO_TBL_NOPAR_DSD.getId ( );
      STATUS_CODE = RallyDataStoreException.getDefault ( );
      if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        this.app.setError ( 0, STATUS_CODE );
      }

      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "AD220B_A2_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAM" ));
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "AD220B_A2_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "COD_SERVICIO", this.app.form ( "AD220B_A2_FR" ).getStringItem ( "COD_SERVICIO" ));
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        this.app.setError ( 1, STATUS_CODE );
      }

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      while ( Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        if ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "STATUS" ), "PLANPAGO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "STATUS" ), "PAGOGLOB" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "STATUS" ), "REDUBENE" ) ) ) && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "ACCION" ), "RECL" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TBL_NOPAR_DSD" ), "ACCION" ), "RREC" ) ) )  ) 
        {
          this.app.setError ( 2, 7000 );
          this.app.errorFlag = false;
          this.doReturn ( );
          return; 
        }

        STATUS_CODE  = this.dm.nextRow ( OPEN_ID );

      }
      STATUS_CODE  = this.dm.dbClose ( OPEN_ID );

    }
    if ( ( ! Compare.equals ( PLNPGO, "PLANPAGO" ) ) && ( ! Compare.equals ( PLNPGO, "PAGOGLOB" ) )  && ( ! Compare.equals ( PLNPGO, "REDUBENE" ) )  && ( ! Compare.equals ( PLNPGO, "FACTURA1" ) )  && ( ! Compare.equals ( PLNPGO, "FACTURA2" ) )  && ( ! Compare.equals ( PLNPGO, "REFJUS" ) )  && ( ! Compare.equals ( PLNPGO, "NOCOMPAG" ) )  && ( ! Compare.equals ( PLNPGO, "INCOBRA" ) )  && ( ! Compare.equals ( PLNPGO, "REFFRA" ) )  && ( ! Compare.equals ( PLNPGO, "SUSPDESP" ) )  && ( ! Compare.equals ( PLNPGO, "REFHAC" ) )  ) 
    {
      this.app.errorFlag = false;
      this.app.setError ( 3, 7000 );
      this.doReturn ( );
      return; 
    }
    else
    {
      AD220B_A3_PKT.exec ( this.app );
      return;
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE AD220B_A_STATUS_ADL;

VAR     PLNPGO  :       CHAR(10);
        FCID    :       DATE EXPORT;
        OPEN_ID : NUMBER;
        STATUS_CODE : NUMBER;

SET_TRACE();

FCID    :=      AD220B_A2_FR.FECHA_IDENTIFICADO;
PLNPGO  :=      UPCASE (AD220B_A2_FR.STATUS);
IF (PLNPGO = 'FACTURA1') OR
   (PLNPGO = 'FACTURA2')  OR
   (PLNPGO = 'REFJUS') OR
   (PLNPGO = 'NOCOMPAG') OR
   (PLNPGO = 'INCOBRA')  OR
   (PLNPGO = 'REFFRA') OR
   (PLNPGO = 'SUSPDESP') OR
   (PLNPGO = 'REFHAC')
THEN
   BEGIN
        DB_OPEN( RECLA_RETRO_TBL_NOPAR_DSD,OPEN_ID,STATUS_CODE);
        if (status_code <> 0) then
            error(status_code);
        DB_RESET(OPEN_ID,STATUS_CODE);

        RECLA_RETRO_TBL_NOPAR_DSD.SEGURO_SOCIAL_JEFE_FAM := AD220B_A2_FR.SEGURO_
SOCIAL_JEFE_FAM;
        RECLA_RETRO_TBL_NOPAR_DSD.SEGURO_SOCIAL_JEFE_SERV := AD220B_A2_FR.SEGURO
_SOCIAL_JEFE_SERV;
        RECLA_RETRO_TBL_NOPAR_DSD.COD_SERVICIO := AD220B_A2_FR.COD_SERVICIO;
        RECLA_RETRO_TBL_NOPAR_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN_ID,STATUS_CODE);
        if (status_code <> 0) then
            error(status_code);
        DB_GET_FIRST(OPEN_ID,STATUS_CODE);
        WHILE (status_code = 0) DO
           BEGIN
                IF ((RECLA_RETRO_TBL_NOPAR_DSD.STATUS = 'PLANPAGO') OR
                   (RECLA_RETRO_TBL_NOPAR_DSD.STATUS = 'PAGOGLOB') OR
                   (RECLA_RETRO_TBL_NOPAR_DSD.STATUS = 'REDUBENE')) AND
                   ((RECLA_RETRO_TBL_NOPAR_DSD.ACCION = 'RECL') OR
                    (RECLA_RETRO_TBL_NOPAR_DSD.ACCION = 'RREC')) THEN
                BEGIN
                        ERROR(7000);
                        SET_FAILURE();
                        RETURN;
                END;
                DB_GET_NEXT(OPEN_ID,STATUS_CODE);
           END;
           DB_CLOSE(OPEN_ID,STATUS_CODE);
   END; 

IF (PLNPGO <> 'PLANPAGO') AND
   (PLNPGO <> 'PAGOGLOB') AND
   (PLNPGO <> 'REDUBENE') AND
   (PLNPGO <> 'FACTURA1') AND
   (PLNPGO <> 'FACTURA2')  AND
   (PLNPGO <> 'REFJUS') AND
   (PLNPGO <> 'NOCOMPAG') AND
   (PLNPGO <> 'INCOBRA')  AND
   (PLNPGO <> 'REFFRA') AND
   (PLNPGO <> 'SUSPDESP') AND
   (PLNPGO <> 'REFHAC') THEN
        BEGIN
                SET_FAILURE();
                ERROR (7000);
                RETURN;
        END;
ELSE
        CALL AD220B_A3_PKT; 

SET_NOTRACE();
    



--------------------------------------------------------------------- */
