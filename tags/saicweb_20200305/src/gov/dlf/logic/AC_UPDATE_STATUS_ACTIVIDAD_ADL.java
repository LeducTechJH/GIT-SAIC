package gov.dlf.logic;

import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AC_UPDATE_STATUS_ACTIVIDAD_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STAT_ID = 0;



  public DataStore CALENDARIO2_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTAT_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).STAT_ID = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getCALENDARIO2_DSD  ( RallyApplication __app )
  {
    return ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).CALENDARIO2_DSD;
  }


  /**  */
  public static void setCALENDARIO2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).CALENDARIO2_DSD = value;
  }


  /**  */
  public static void setCALENDARIO2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).CALENDARIO2_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTAT_ID  ( RallyApplication __app )
  {
    return ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).STAT_ID;
  }


  /**  */
  public static Double getSTAT_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).STAT_ID );
  }


  /**  */
  public static void setSTAT_ID  ( RallyApplication __app, double value )
  {
    ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).STAT_ID = value;
  }


  /**  */
  public static void setSTAT_ID  ( RallyApplication __app, Object value )
  {
    ( ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) __app.getADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class ) ).STAT_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static AC_UPDATE_STATUS_ACTIVIDAD_ADL get ( RallyApplication __app )
  {
    AC_UPDATE_STATUS_ACTIVIDAD_ADL adl = new AC_UPDATE_STATUS_ACTIVIDAD_ADL ( );
    __app.register ( adl, "AC_UPDATE_STATUS_ACTIVIDAD_ADL" );
    __app.setADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    AC_UPDATE_STATUS_ACTIVIDAD_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    AC_UPDATE_STATUS_ACTIVIDAD_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "AC_UPDATE_STATUS_ACTIVIDAD_ADL" );
    if ( rObj != null && rObj instanceof AC_UPDATE_STATUS_ACTIVIDAD_ADL )
    {
      this.app.setADL ( AC_UPDATE_STATUS_ACTIVIDAD_ADL.class, ( AC_UPDATE_STATUS_ACTIVIDAD_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "AC_UPDATE_STATUS_ACTIVIDAD_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "AC_UPDATE_STATUS_ACTIVIDAD_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( ( Compare.equals ( this.app.ANSWER_GBL, "Y" ) ) && ( Compare.equals ( this.app.RUTINA_GBL, "AC" ) )  ) 
    {
      CALENDARIO2_DSD = this.dm.create ( "CALENDARIO2_DSD" );
      OPEN_ID = CALENDARIO2_DSD.getId ( );
      STAT_ID = RallyDataStoreException.getDefault ( );

      STAT_ID  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "ID_TECNICO", this.app.ID_TECNICO_GBL );
      this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SSN_GBL );
      this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0", this.app.AC_FCH_ACTIVIDAD_GBL );
      this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "DURACION_HORA_MIN_CONTACTO", this.app.AC_DURACION_HORA_GBL );
      this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STAT_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STAT_ID  = this.dm.retrieve ( OPEN_ID );

      if ( Compare.equals ( STAT_ID, 0 ) ) 
      {
        STAT_ID  = this.dm.firstRow ( OPEN_ID );

        this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "STS_ACTIVIDAD", "C" );

        STAT_ID  = this.dm.update ( OPEN_ID );

        this.app.setError ( 0, STAT_ID );

        STAT_ID  = this.dm.dbCommit ( );
        STAT_ID  = this.dm.dbClose ( OPEN_ID );

      }
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure AC_UPDATE_STATUS_ACTIVIDAD_ADL;
VAR
        OPEN_ID:        NUMBER(9,0);
        STAT_ID:        NUMBER(9,0);

BEGIN

SET_TRACE();
if (answer_gbl = 'Y') and ( RUTINA_GBL = 'AC') then begin

DB_OPEN(CALENDARIO2_DSD,OPEN_ID,STAT_ID);
DB_RESET(OPEN_ID,STAT_ID);
CALENDARIO2_DSD.ID_TECNICO := ID_TECNICO_GBL;
CALENDARIO2_DSD.SEGURO_SOCIAL_JEFE_SERV := ssn_gbl;
CALENDARIO2_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0 := AC_FCH_ACTIVIDAD_GBL;
CALENDARIO2_DSD.DURACION_HORA_MIN_CONTACTO := AC_DURACION_HORA_GBL;
CALENDARIO2_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(OPEN_ID,STAT_ID);
if (stat_id = 0) then begin
DB_GET_FIRST(OPEN_ID,STAT_ID);
CALENDARIO2_DSD.STS_ACTIVIDAD := 'C';
db_update(OPEN_ID,STAT_ID);
error(stat_id);
db_commit(STAT_ID);
DB_CLOSE(OPEN_ID,STAT_ID);
end;
end;
set_notrace();
end;

    



--------------------------------------------------------------------- */
