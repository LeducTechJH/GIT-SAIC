package gov.dlf.logic;


import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class INFOR_CITAS_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------



  public Date DUMMY = null;

  public Date DUMMY2 = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setDUMMY  ( RallyApplication __app, Parameter value )
  {
    ( ( INFOR_CITAS_ADL ) __app.getADL ( INFOR_CITAS_ADL.class ) ).DUMMY = value.getDate ( );
  }  

  
  /**  */
  public static void setDUMMY2  ( RallyApplication __app, Parameter value )
  {
    ( ( INFOR_CITAS_ADL ) __app.getADL ( INFOR_CITAS_ADL.class ) ).DUMMY2 = value.getDate ( );
  }  
    


  /**  */
  public static Date getDUMMY  ( RallyApplication __app )
  {
    return ( ( INFOR_CITAS_ADL ) __app.getADL ( INFOR_CITAS_ADL.class ) ).DUMMY;
  }


  /**  */
  public static void setDUMMY  ( RallyApplication __app, Date value )
  {
    ( ( INFOR_CITAS_ADL ) __app.getADL ( INFOR_CITAS_ADL.class ) ).DUMMY = value;
  }


  /**  */
  public static void setDUMMY  ( RallyApplication __app, Object value )
  {
    ( ( INFOR_CITAS_ADL ) __app.getADL ( INFOR_CITAS_ADL.class ) ).DUMMY = ( Date ) value;
  }



  /**  */
  public static Date getDUMMY2  ( RallyApplication __app )
  {
    return ( ( INFOR_CITAS_ADL ) __app.getADL ( INFOR_CITAS_ADL.class ) ).DUMMY2;
  }


  /**  */
  public static void setDUMMY2  ( RallyApplication __app, Date value )
  {
    ( ( INFOR_CITAS_ADL ) __app.getADL ( INFOR_CITAS_ADL.class ) ).DUMMY2 = value;
  }


  /**  */
  public static void setDUMMY2  ( RallyApplication __app, Object value )
  {
    ( ( INFOR_CITAS_ADL ) __app.getADL ( INFOR_CITAS_ADL.class ) ).DUMMY2 = ( Date ) value;
  }





  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static INFOR_CITAS_ADL get ( RallyApplication __app )
  {
    INFOR_CITAS_ADL adl = new INFOR_CITAS_ADL ( );
    __app.register ( adl, "INFOR_CITAS_ADL" );
    __app.setADL ( INFOR_CITAS_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    INFOR_CITAS_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    INFOR_CITAS_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "INFOR_CITAS_ADL" );
    if ( rObj != null && rObj instanceof INFOR_CITAS_ADL )
    {
      this.app.setADL ( INFOR_CITAS_ADL.class, ( INFOR_CITAS_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "INFOR_CITAS_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "INFOR_CITAS_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.IR_CALEND_SELECT_FECHA_GBL = this.app.form ( "INFOR_CITAS_FR" ).getDateItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" );
    this.app.IR_CALEND_SELECT_DURACION_GBL = this.app.form ( "INFOR_CITAS_FR" ).getDateItem ( "DURACION_HORA_MIN_CONTACTO" );
    INFOR_CITAS_PPKT.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    INFORMACION_REFER_PRINT_PKT.exec ( this.app );
    return;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE INFOR_CITAS_ADL;
var 
   dummy : date export;
   dummy2: date export;

   

BEGIN
SET_TRACE();
IR_CALEND_SELECT_FECHA_GBL := INFOR_CITAS_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0;
IR_CALEND_SELECT_DURACION_GBL :=INFOR_CITAS_FR.DURACION_HORA_MIN_CONTACTO;
call INFOR_CITAS_PPKT;
{IR_CALEND_SELECT_HASTA_GBL se resuelve en hasta_adl}

call INFORMACION_REFER_PRINT_PKT;

SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
