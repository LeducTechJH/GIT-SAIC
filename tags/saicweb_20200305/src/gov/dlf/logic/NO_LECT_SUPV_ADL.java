package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class NO_LECT_SUPV_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RECLA_ID = 0;

  public double RECLA_STATUS = 0;



  public DataStore RECLA_RETRO_TABLE_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_STATUS = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getRECLA_RETRO_TABLE_DSD  ( RallyApplication __app )
  {
    return ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_RETRO_TABLE_DSD;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_RETRO_TABLE_DSD = value;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, Object value )
  {
    ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_RETRO_TABLE_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRECLA_ID  ( RallyApplication __app )
  {
    return ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_ID;
  }


  /**  */
  public static Double getRECLA_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_ID );
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, double value )
  {
    ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_ID = value;
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Object value )
  {
    ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLA_STATUS  ( RallyApplication __app )
  {
    return ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_STATUS;
  }


  /**  */
  public static Double getRECLA_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_STATUS );
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, double value )
  {
    ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_STATUS = value;
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( NO_LECT_SUPV_ADL ) __app.getADL ( NO_LECT_SUPV_ADL.class ) ).RECLA_STATUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static NO_LECT_SUPV_ADL get ( RallyApplication __app )
  {
    NO_LECT_SUPV_ADL adl = new NO_LECT_SUPV_ADL ( );
    __app.register ( adl, "NO_LECT_SUPV_ADL" );
    __app.setADL ( NO_LECT_SUPV_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    NO_LECT_SUPV_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    NO_LECT_SUPV_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "NO_LECT_SUPV_ADL" );
    if ( rObj != null && rObj instanceof NO_LECT_SUPV_ADL )
    {
      this.app.setADL ( NO_LECT_SUPV_ADL.class, ( NO_LECT_SUPV_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "NO_LECT_SUPV_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "NO_LECT_SUPV_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    RECLA_RETRO_TABLE_DSD = this.dm.create ( "RECLA_RETRO_TABLE_DSD" );
    RECLA_ID = RECLA_RETRO_TABLE_DSD.getId ( );
    RECLA_STATUS = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      this.app.setError ( 0, RECLA_STATUS );
      this.doReturn ( );
      return; 
    }

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      this.app.setError ( 1, RECLA_STATUS );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_IDENTIFICADO", this.app.FECHA_IDENTIFICADO_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", this.app.ACCION_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      this.app.setError ( 2, RECLA_STATUS );
      this.doReturn ( );
      return; 
    }

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      this.app.setError ( 3, RECLA_STATUS );
      this.doReturn ( );
      return; 
    }
    if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "NOPROC10" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "NOPRODT" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "COMPRECL" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "SALDRETR" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "NOGESCOB" ) )  ) 
    {
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS", "PENDDETE" );
    }

    RECLA_STATUS  = this.dm.update ( RECLA_ID );

    if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      this.app.setError ( 4, RECLA_STATUS );
      this.doReturn ( );
      return; 
    }

    RECLA_ID  = this.dm.dbCommit ( );
    if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      this.app.setError ( 5, RECLA_STATUS );
      this.doReturn ( );
      return; 
    }
    RECLA_STATUS  = this.dm.dbClose ( RECLA_ID );

  }
}



/* ---------------------------------------------------------------------


     
procedure no_lect_supv_adl;
var
        recla_id        : number(9,0);
        recla_status    : number(9,0);


begin
set_trace();
        db_open(RECLA_RETRO_TABLE_DSD,recla_id,recla_status);
        if recla_status <> 0
        then
           begin
                error(recla_status);
                return;
           end;
        {endif}
        
        db_reset(recla_id,recla_status);
        if recla_status <> 0
        then
           begin
                error(recla_status);
                return;
           end;
        {endif}

        RECLA_RETRO_TABLE_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
        RECLA_RETRO_TABLE_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
        RECLA_RETRO_TABLE_DSD.FECHA_IDENTIFICADO := fecha_identificado_gbl;
        RECLA_RETRO_TABLE_DSD.COD_SERVICIO := cod_serv_gbl;
        RECLA_RETRO_TABLE_DSD.ACCION := accion_gbl;
        RECLA_RETRO_TABLE_DSD.RMO_OFICINA:=RMO_GBL;
        db_query(recla_id,recla_status);
        if recla_status <> 0 
        then
           begin
                error(recla_status);
                return;
           end;
        {endif}

        db_get_first(recla_id,recla_status);
        if recla_status <> 0 
        then
           begin
                error(recla_status);
                return;
           end;
        {endif}

        IF (RECLA_RETRO_TABLE_DSD.STATUS <> 'NOPROC10') 
           AND (RECLA_RETRO_TABLE_DSD.STATUS <> 'NOPRODT')
           AND (RECLA_RETRO_TABLE_DSD.STATUS <> 'COMPRECL')
           AND (RECLA_RETRO_TABLE_DSD.STATUS <> 'SALDRETR')
           AND (RECLA_RETRO_TABLE_DSD.STATUS <> 'NOGESCOB')
        then
                RECLA_RETRO_TABLE_DSD.STATUS := 'PENDDETE';
        {endif}

        db_update(recla_id,recla_status);
        if recla_status <> 0 
        then
           begin
                error(recla_status);
                return;
           end;
        {endif}
        
        db_commit(recla_id);
        if recla_status <> 0 
        then
           begin
                error(recla_status);
                return;
           end;
        {endif}
        

        db_close(recla_id,recla_status);

set_notrace();
end;
    



--------------------------------------------------------------------- */
