package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class LLENAR_IEVS_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RECLA_ID = 0;

  public double RECLA_STATUS = 0;

  public double COUNT = 0;

  public double COUNT_BALANCE = 0;



  public DataStore RECLA_RETRO_TABLE_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setCOUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT = value.getDouble ( );
  }  

  
  /**  */
  public static void setCOUNT_BALANCE  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT_BALANCE = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getRECLA_RETRO_TABLE_DSD  ( RallyApplication __app )
  {
    return ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_RETRO_TABLE_DSD;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_RETRO_TABLE_DSD = value;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_RETRO_TABLE_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRECLA_ID  ( RallyApplication __app )
  {
    return ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_ID;
  }


  /**  */
  public static Double getRECLA_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_ID );
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_ID = value;
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLA_STATUS  ( RallyApplication __app )
  {
    return ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_STATUS;
  }


  /**  */
  public static Double getRECLA_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_STATUS );
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_STATUS = value;
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).RECLA_STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCOUNT  ( RallyApplication __app )
  {
    return ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT;
  }


  /**  */
  public static Double getCOUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT );
  }


  /**  */
  public static void setCOUNT  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT = value;
  }


  /**  */
  public static void setCOUNT  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCOUNT_BALANCE  ( RallyApplication __app )
  {
    return ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT_BALANCE;
  }


  /**  */
  public static Double getCOUNT_BALANCEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT_BALANCE );
  }


  /**  */
  public static void setCOUNT_BALANCE  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT_BALANCE = value;
  }


  /**  */
  public static void setCOUNT_BALANCE  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_IEVS_ADL ) __app.getADL ( LLENAR_IEVS_ADL.class ) ).COUNT_BALANCE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static LLENAR_IEVS_ADL get ( RallyApplication __app )
  {
    LLENAR_IEVS_ADL adl = new LLENAR_IEVS_ADL ( );
    __app.register ( adl, "LLENAR_IEVS_ADL" );
    __app.setADL ( LLENAR_IEVS_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    LLENAR_IEVS_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    LLENAR_IEVS_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "LLENAR_IEVS_ADL" );
    if ( rObj != null && rObj instanceof LLENAR_IEVS_ADL )
    {
      this.app.setADL ( LLENAR_IEVS_ADL.class, ( LLENAR_IEVS_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "LLENAR_IEVS_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "LLENAR_IEVS_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    COUNT = 0;
    COUNT_BALANCE = 0;
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "DESDE", this.app.FCH_INICIO_GBL  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "HASTA", this.app.FCH_FINAL_GBL  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "FECHA", this.app.SYSTEM_DATE  );
    RECLA_RETRO_TABLE_DSD = this.dm.create ( "RECLA_RETRO_TABLE_DSD" );
    RECLA_ID = RECLA_RETRO_TABLE_DSD.getId ( );
    RECLA_STATUS = RallyDataStoreException.getDefault ( );

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "PAN" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "BNDX" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBREPAN", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBVALPAN", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "AE-C" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "BNDX" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBREAEC", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBVALAEC", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "BNDX" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-A" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-B" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-D" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-G" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-T" ) ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBREAE", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBVALAE", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "PAN" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "SABE" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSREPAN", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSVALPAN", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "AE-C" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "SABE" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSREAEC", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSVALAEC", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "SABE" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-A" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-B" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-D" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-G" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-T" ) ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSREAE", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSVALAE", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "PAN" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "IRS" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIREPAN", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIVALPAN", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "AE-C" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "IRS" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIREAEC", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIVALAEC", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RECL" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "IRS" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-A" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-B" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-D" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-G" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-T" ) ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIREAE", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIVALAE", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "PAN" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "BNDX" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBBRPAN", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBRVALPAN", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "AE-C" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "BNDX" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBBRAEC", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBRVALAEC", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "BNDX" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-A" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-B" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-D" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-G" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-T" ) ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBBRAE", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LBRVALAE", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "PAN" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "SABE" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSBRPAN", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSRVALPAN", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "AE-C" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "SABE" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSBRAEC", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSRVALAEC", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "SABE" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-A" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-B" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-D" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-G" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-T" ) ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSBRAE", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LSRVALAE", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "PAN" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "IRS" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIBRPAN", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIRVALPAN", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", "AE-C" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "IRS" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIBRAEC", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIRVALAEC", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SIST_VERIFICACION", "IRS" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    while ( Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      if ( ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_INICIO_GBL ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO" ), this.app.FCH_FINAL_GBL ) )  && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-A" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-B" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-D" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-G" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO" ), "AE-T" ) ) )  ) 
      {
        COUNT = MathService.plus ( COUNT, 1  );
        COUNT_BALANCE = MathService.plus ( COUNT_BALANCE, this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      }

      RECLA_STATUS  = this.dm.nextRow ( RECLA_ID );

    }
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIBRAE", COUNT  );
    this.app.form ( "INFORME_RECLA_IEVS_FR" ).setItem ( "LIRVALAE", COUNT_BALANCE  );
    COUNT = 0;
    COUNT_BALANCE = 0;
    RECLA_STATUS  = this.dm.dbClose ( RECLA_ID );

  }
}



/* ---------------------------------------------------------------------


     
procedure llenar_ievs_adl;
var
        recla_id        : number(9,0);
        recla_status    : number(9,0);

        COUNT           : number(9,0);
        COUNT_BALANCE   : number(9,0);

begin
set_trace();
      count := 0;
      count_balance := 0;
      INFORME_RECLA_IEVS_FR.desde := fch_inicio_gbl;
      informe_recla_ievs_fr.hasta := fch_final_gbl;
      informe_recla_ievs_fr.fecha := system_date;

db_open(recla_retro_table_dsd,recla_id,recla_status);

{@@@@@@@@@@@@@@@@@@@@@ R E C L A M A C I O N E S @@@@@@@@@@@@@@@@@@@@@@@@}
{ ****** CONTAR RECLA LISTADO BENDEX PAN ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'PAN';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'BNDX';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LBREPAN := COUNT;
      INFORME_RECLA_IEVS_FR.LBVALPAN := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO BENDEX AE-C ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'AE-C';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'BNDX';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LBREAEC := COUNT;
      INFORME_RECLA_IEVS_FR.LBVALAEC := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO BENDEX AE ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'BNDX';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
           AND ((RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-A') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-B') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-D') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-G') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-T'))
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LBREAE := COUNT;
      INFORME_RECLA_IEVS_FR.LBVALAE := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO SALARIO Y BENE PAN ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'PAN';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'SABE';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LSREPAN := COUNT;
      INFORME_RECLA_IEVS_FR.LSVALPAN := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO SALARIO Y BENE AE-C ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'AE-C';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'SABE';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LSREAEC := COUNT;
      INFORME_RECLA_IEVS_FR.LSVALAEC := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO SALARIO Y BENE AE ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'SABE';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
           AND ((RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-A') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-B') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-D') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-G') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-T'))
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LSREAE := COUNT;
      INFORME_RECLA_IEVS_FR.LSVALAE := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }


{ ****** CONTAR RECLA LISTADO IRS PAN ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'PAN';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'IRS';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LIREPAN := COUNT;
      INFORME_RECLA_IEVS_FR.LIVALPAN := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO IRS AE-C ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'AE-C';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'IRS';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LIREAEC := COUNT;
      INFORME_RECLA_IEVS_FR.LIVALAEC := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO IRS AE ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RECL';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'IRS';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
           AND ((RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-A') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-B') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-D') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-G') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-T'))
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LIREAE := COUNT;
      INFORME_RECLA_IEVS_FR.LIVALAE := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }


{@@@@@@@@@@@@@@@@@@@@@@ R E T R O A C T I V O S @@@@@@@@@@@@@@@@@@@@@@@@}

{ ****** CONTAR RECLA LISTADO BENDEX PAN ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'PAN';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'BNDX';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LBBRPAN := COUNT;
      INFORME_RECLA_IEVS_FR.LBRVALPAN := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO BENDEX AE-C ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'AE-C';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'BNDX';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LBBRAEC := COUNT;
      INFORME_RECLA_IEVS_FR.LBRVALAEC := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO BENDEX AE ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'BNDX';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
           AND ((RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-A') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-B') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-D') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-G') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-T'))
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LBBRAE := COUNT;
      INFORME_RECLA_IEVS_FR.LBRVALAE := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO SALARIO Y BENE PAN ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'PAN';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'SABE';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}    

      INFORME_RECLA_IEVS_FR.LSBRPAN := COUNT;
      INFORME_RECLA_IEVS_FR.LSRVALPAN := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO SALARIO Y BENE AE-C ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'AE-C';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'SABE';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LSBRAEC := COUNT;
      INFORME_RECLA_IEVS_FR.LSRVALAEC := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO SALARIO Y BENE AE ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'SABE';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
           AND ((RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-A') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-B') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-D') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-G') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-T'))
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LSBRAE := COUNT;
      INFORME_RECLA_IEVS_FR.LSRVALAE := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }


{ ****** CONTAR RECLA LISTADO IRS PAN ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'PAN';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'IRS';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LIBRPAN := COUNT;
      INFORME_RECLA_IEVS_FR.LIRVALPAN := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO IRS AE-C ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.COD_SERVICIO := 'AE-C';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'IRS';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LIBRAEC := COUNT;
      INFORME_RECLA_IEVS_FR.LIRVALAEC := COUNT_BALANCE;
      count := 0;
      count_balance := 0;

{ ********************************************* }

{ ****** CONTAR RECLA LISTADO IRS AE ****** }
db_reset(recla_id,recla_status);
RECLA_RETRO_TABLE_DSD.ACCION := 'RETR';
RECLA_RETRO_TABLE_DSD.SIST_VERIFICACION := 'IRS';
RECLA_RETRO_TABLE_DSD.STATUS_AUTORIZACION := 'AUTO';
RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(RECLA_ID,RECLA_STATUS);
DB_GET_FIRST(RECLA_ID,RECLA_STATUS);
WHILE (RECLA_STATUS = 0) DO
      BEGIN
        IF (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO >= FCH_INICIO_GBL)
           AND (RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO <= FCH_FINAL_GBL)
           AND ((RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-A') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-B') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-D') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-G') OR
                (RECLA_RETRO_TABLE_DSD.COD_SERVICIO = 'AE-T'))
        THEN
           BEGIN
                 COUNT := COUNT + 1;
                 COUNT_BALANCE := COUNT_BALANCE + RECLA_RETRO_TABLE_DSD.CANTIDAD
_RECLA_RETRO;
           END;
        {ENDIF}
        DB_GET_NEXT(RECLA_ID,RECLA_STATUS);
      END;
{END-WHILE}

      INFORME_RECLA_IEVS_FR.LIBRAE := COUNT;
      INFORME_RECLA_IEVS_FR.LIRVALAE := COUNT_BALANCE;
      count := 0;
      count_balance := 0;
{ ********************************************* }
db_close(recla_id,recla_statuS);
set_notrace();
end;
    



--------------------------------------------------------------------- */
