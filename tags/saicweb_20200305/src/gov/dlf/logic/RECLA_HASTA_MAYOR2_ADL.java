package gov.dlf.logic;


import gov.dlf.facade.*;
import java.util.*;

import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class RECLA_HASTA_MAYOR2_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMM = 0;

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;



  public Date DATE1 = null;

  public Date DATE2 = null;

  public Date PCHA = null;

  public Date FCH_EMISION = null;

  public DataStore GENERAL_TBL_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setDATE1  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).DATE1 = value.getDate ( );
  }  

  
  /**  */
  public static void setDATE2  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).DATE2 = value.getDate ( );
  }  

  
  /**  */
  public static void setCOMM  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).COMM = value.getDouble ( );
  }  

  
  /**  */
  public static void setPCHA  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).PCHA = value.getDate ( );
  }  

  
  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).FCH_EMISION = value.getDate ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  
    


  /**  */
  public static Date getDATE1  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).DATE1;
  }


  /**  */
  public static void setDATE1  ( RallyApplication __app, Date value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).DATE1 = value;
  }


  /**  */
  public static void setDATE1  ( RallyApplication __app, Object value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).DATE1 = ( Date ) value;
  }



  /**  */
  public static Date getDATE2  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).DATE2;
  }


  /**  */
  public static void setDATE2  ( RallyApplication __app, Date value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).DATE2 = value;
  }


  /**  */
  public static void setDATE2  ( RallyApplication __app, Object value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).DATE2 = ( Date ) value;
  }



  /**  */
  public static Date getPCHA  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).PCHA;
  }


  /**  */
  public static void setPCHA  ( RallyApplication __app, Date value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).PCHA = value;
  }


  /**  */
  public static void setPCHA  ( RallyApplication __app, Object value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).PCHA = ( Date ) value;
  }



  /**  */
  public static Date getFCH_EMISION  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).FCH_EMISION;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Date value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).FCH_EMISION = value;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Object value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).FCH_EMISION = ( Date ) value;
  }



  /**  */
  public static DataStore getGENERAL_TBL_DSD  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).GENERAL_TBL_DSD;
  }


  /**  */
  public static void setGENERAL_TBL_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).GENERAL_TBL_DSD = value;
  }


  /**  */
  public static void setGENERAL_TBL_DSD  ( RallyApplication __app, Object value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).GENERAL_TBL_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getCOMM  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).COMM;
  }


  /**  */
  public static Double getCOMMDouble ( RallyApplication __app )
  {
    return new Double ( ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).COMM );
  }


  /**  */
  public static void setCOMM  ( RallyApplication __app, double value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).COMM = value;
  }


  /**  */
  public static void setCOMM  ( RallyApplication __app, Object value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).COMM = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( RECLA_HASTA_MAYOR2_ADL ) __app.getADL ( RECLA_HASTA_MAYOR2_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static RECLA_HASTA_MAYOR2_ADL get ( RallyApplication __app )
  {
    RECLA_HASTA_MAYOR2_ADL adl = new RECLA_HASTA_MAYOR2_ADL ( );
    __app.register ( adl, "RECLA_HASTA_MAYOR2_ADL" );
    __app.setADL ( RECLA_HASTA_MAYOR2_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    RECLA_HASTA_MAYOR2_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    RECLA_HASTA_MAYOR2_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "RECLA_HASTA_MAYOR2_ADL" );
    if ( rObj != null && rObj instanceof RECLA_HASTA_MAYOR2_ADL )
    {
      this.app.setADL ( RECLA_HASTA_MAYOR2_ADL.class, ( RECLA_HASTA_MAYOR2_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "RECLA_HASTA_MAYOR2_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "RECLA_HASTA_MAYOR2_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    GENERAL_TBL_DSD = this.dm.create ( "GENERAL_TBL_DSD" );
    OPEN_ID = GENERAL_TBL_DSD.getId ( );
    STATUS_ID = RallyDataStoreException.getDefault ( );
    COMM = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( COMM, RallyAppCommandFactory.FPREV ) ) 
    {
      this.doReturn ( );
      return; 
    }

    STATUS_ID  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_GENERAL", "DATE" );
    if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "ACTUALIZAR_RECLA_FR" ).getStringItem ( "COD_SERVICIO" ), 0, 3 ), "PAN" ) ) 
    {
      this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_ID", "EPAN" );
    }
    else if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "ACTUALIZAR_RECLA_FR" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" )  )
    {
      this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_ID", "EAE" );
    }

    STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_ID  = this.dm.retrieve ( OPEN_ID );

    STATUS_ID  = this.dm.firstRow ( OPEN_ID );

    if ( Compare.equals ( STATUS_ID, 0 ) ) 
    {
      FCH_EMISION = RallySpanishDatesParser.parseDateString ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 0, 2 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 2, 3 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 5, 4 ) );
    }
    else
    {
      FCH_EMISION = this.app.SYSTEM_DATE;
    }
    if ( Compare.lt ( FCH_EMISION, this.app.form ( "ACTUALIZAR_RECLA_FR" ).getDateItem ( "HASTA" )) ) 
    {
      this.app.setError ( 0, 7575 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    STATUS_ID  = this.dm.dbClose ( OPEN_ID );

    if ( Compare.gt ( this.app.form ( "ACTUALIZAR_RECLA_FR" ).getDateItem ( "DESDE" ), this.app.form ( "ACTUALIZAR_RECLA_FR" ).getDateItem ( "HASTA" )) ) 
    {
      this.app.setError ( 1, 7585 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE Recla_hasta_MAYOR2_ADL;

VAR     DATE1   :       DATE;
        DATE2   :       DATE;
        COMM    :       NUMBER;
        PCHA    :       DATE;
        fch_emision:    date;
        open_id :       number;
        status_id:      number;

SET_TRACE();

BEGIN

DB_OPEN(GENERAL_TBL_DSD,OPEN_ID, STATUS_ID);

COMM := GET_CMD();

IF COMM=FPREV
THEN
BEGIN
RETURN;
END;

DB_RESET(OPEN_ID, STATUS_ID);
GENERAL_TBL_DSD.COD_GENERAL := 'DATE';
IF SUBSTR(ACTUALIZAR_RECLA_FR.COD_SERVICIO,0,3) = 'PAN' THEN
        GENERAL_TBL_DSD.COD_ID := 'EPAN';
ELSE
        IF SUBSTR(ACTUALIZAR_RECLA_FR.COD_SERVICIO,0,2) = 'AE' THEN
                GENERAL_TBL_DSD.COD_ID := 'EAE';
DB_QUERY(OPEN_ID, STATUS_ID);
DB_GET_FIRST(OPEN_ID, STATUS_ID);
IF STATUS_ID = 0 THEN
        FCH_EMISION := TO_DATE(SUBSTR(GENERAL_TBL_DSD.DSC_CORTA,0,2) || '-' ||
                                SUBSTR(GENERAL_TBL_DSD.DSC_CORTA,2,3) || '-'||
                                SUBSTR(GENERAL_TBL_DSD.DSC_CORTA,5,4));
ELSE
        FCH_EMISION :=  SYSTEM_DATE;

if  FCH_EMISION  < ACTUALIZAR_RECLA_FR.HASTA
then
begin
error(7575);
set_failure();
return;
end;

DB_close(OPEN_ID, STATUS_ID);


IF ACTUALIZAR_RECLA_FR.DESDE > ACTUALIZAR_RECLA_FR.HASTA
THEN
BEGIN
ERROR(7585);
SET_FAILURE();
RETURN;
END;


END;

SET_NOTRACE();
    



--------------------------------------------------------------------- */
