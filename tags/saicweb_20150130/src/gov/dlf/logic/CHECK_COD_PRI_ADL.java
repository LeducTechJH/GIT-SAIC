package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CHECK_COD_PRI_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COUNTER = 0;

  public double NULL_VAL = 0;

  public double COMMAND = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COUNTER = value.getDouble ( );
  }  

  
  /**  */
  public static void setNULL_VAL  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).NULL_VAL = value.getDouble ( );
  }  

  
  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COMMAND = value.getDouble ( );
  }  
    



  /**  */
  public static double getCOUNTER  ( RallyApplication __app )
  {
    return ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COUNTER;
  }


  /**  */
  public static Double getCOUNTERDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COUNTER );
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, double value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COUNTER = value;
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COUNTER = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNULL_VAL  ( RallyApplication __app )
  {
    return ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).NULL_VAL;
  }


  /**  */
  public static Double getNULL_VALDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).NULL_VAL );
  }


  /**  */
  public static void setNULL_VAL  ( RallyApplication __app, double value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).NULL_VAL = value;
  }


  /**  */
  public static void setNULL_VAL  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).NULL_VAL = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCOMMAND  ( RallyApplication __app )
  {
    return ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COMMAND;
  }


  /**  */
  public static Double getCOMMANDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COMMAND );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, double value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COMMAND = value;
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_COD_PRI_ADL ) __app.getADL ( CHECK_COD_PRI_ADL.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CHECK_COD_PRI_ADL get ( RallyApplication __app )
  {
    CHECK_COD_PRI_ADL adl = new CHECK_COD_PRI_ADL ( );
    __app.register ( adl, "CHECK_COD_PRI_ADL" );
    __app.setADL ( CHECK_COD_PRI_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CHECK_COD_PRI_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CHECK_COD_PRI_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CHECK_COD_PRI_ADL" );
    if ( rObj != null && rObj instanceof CHECK_COD_PRI_ADL )
    {
      this.app.setADL ( CHECK_COD_PRI_ADL.class, ( CHECK_COD_PRI_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CHECK_COD_PRI_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CHECK_COD_PRI_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NULL_VAL = TruncService.setNull ( NULL_VAL  );
    COMMAND = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) ) 
    {
      this.doReturn ( );
      return;
    }
    if ( ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "NOAC" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "NOEL" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "NA" ) ) ) 
    {
      if ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "NOAC" ) ) 
      {
        this.app.setError ( 0, 6050 );
      }
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "FCH_FIRMO_PRI", RallySpanishDatesParser.parseDateString ( "" )  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "FCH_ENTREGA_AUTOGES", RallySpanishDatesParser.parseDateString ( "" )  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "FCH_REFERIDO_MANEJO", RallySpanishDatesParser.parseDateString ( "" )  );
    }
    if ( Compare.equals ( StringService.toStringValue  ( this.app.form ( "INFOR_BIO_FRM" ).getDateItem ( "FCH_REFERIDO_MANEJO" )), "" ) ) 
    {
      if ( ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "ACEP" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "JC1V" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "JC2V" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "JC3V" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "JC4V" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "JC5V" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" ), "JC6V" ) ) ) 
      {
      }
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure check_cod_pri_adl;
var
   counter :  number;
   null_val : number;
   command  : number;

begin
set_trace();
 MAKE_NULL(NULL_VAL);
 command := get_cmd();
 if (command = exitaction) then return;

 If (infor_bio_frm.cod_pasos = 'NOAC') or (infor_bio_frm.cod_pasos = 'NOEL') 
 or  (infor_bio_frm.cod_pasos = 'NA')
 THEN 
   begin
        If (infor_bio_frm.cod_pasos = 'NOAC') then
            ERROR(6050);
        INFOR_BIO_FRM.FCH_FIRMO_PRI  := to_date('');
        INFOR_BIO_FRM.FCH_ENTREGA_AUTOGES := to_date('');
        INFOR_BIO_FRM.FCH_REFERIDO_MANEJO := to_date('');
        end;
        IF TO_CHAR(infor_bio_frm.fch_referido_manejo) =  '' then
          begin 
           if (infor_bio_frm.cod_pasos = 'ACEP') or (infor_bio_frm.cod_pasos = '
JC1V') or 
              (infor_bio_frm.cod_pasos = 'JC2V') or (infor_bio_frm.cod_pasos = '
JC3V') or 
              (infor_bio_frm.cod_pasos = 'JC4V') or (infor_bio_frm.cod_pasos = '
JC5V') or 
              (infor_bio_frm.cod_pasos = 'JC6V')  then
              begin
          {      infor_bio_frm.fch_referido_manejo := system_date; }
              end;  
         end;

 set_notrace();
 end;
    



--------------------------------------------------------------------- */
