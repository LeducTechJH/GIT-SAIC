package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class BEFORE_QUIT_COMPENSACION_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RECLA_ID = 0;

  public double RECLA_STATUS = 0;

  public double RETRO_ID = 0;

  public double RETRO_STATUS = 0;

  public double CANT_NULA = 0;



  public DataStore RECLA_RETRO_TABLE_DSD = null;

  public DataStore RETROACTIVO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setRETRO_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRETRO_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setCANT_NULA  ( RallyApplication __app, Parameter value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).CANT_NULA = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getRECLA_RETRO_TABLE_DSD  ( RallyApplication __app )
  {
    return ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_RETRO_TABLE_DSD;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_RETRO_TABLE_DSD = value;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, Object value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_RETRO_TABLE_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRETROACTIVO_DSD  ( RallyApplication __app )
  {
    return ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETROACTIVO_DSD;
  }


  /**  */
  public static void setRETROACTIVO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETROACTIVO_DSD = value;
  }


  /**  */
  public static void setRETROACTIVO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETROACTIVO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRECLA_ID  ( RallyApplication __app )
  {
    return ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_ID;
  }


  /**  */
  public static Double getRECLA_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_ID );
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, double value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_ID = value;
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Object value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLA_STATUS  ( RallyApplication __app )
  {
    return ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_STATUS;
  }


  /**  */
  public static Double getRECLA_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_STATUS );
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, double value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_STATUS = value;
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RECLA_STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRETRO_ID  ( RallyApplication __app )
  {
    return ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_ID;
  }


  /**  */
  public static Double getRETRO_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_ID );
  }


  /**  */
  public static void setRETRO_ID  ( RallyApplication __app, double value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_ID = value;
  }


  /**  */
  public static void setRETRO_ID  ( RallyApplication __app, Object value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRETRO_STATUS  ( RallyApplication __app )
  {
    return ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_STATUS;
  }


  /**  */
  public static Double getRETRO_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_STATUS );
  }


  /**  */
  public static void setRETRO_STATUS  ( RallyApplication __app, double value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_STATUS = value;
  }


  /**  */
  public static void setRETRO_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).RETRO_STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCANT_NULA  ( RallyApplication __app )
  {
    return ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).CANT_NULA;
  }


  /**  */
  public static Double getCANT_NULADouble ( RallyApplication __app )
  {
    return new Double ( ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).CANT_NULA );
  }


  /**  */
  public static void setCANT_NULA  ( RallyApplication __app, double value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).CANT_NULA = value;
  }


  /**  */
  public static void setCANT_NULA  ( RallyApplication __app, Object value )
  {
    ( ( BEFORE_QUIT_COMPENSACION_ADL ) __app.getADL ( BEFORE_QUIT_COMPENSACION_ADL.class ) ).CANT_NULA = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static BEFORE_QUIT_COMPENSACION_ADL get ( RallyApplication __app )
  {
    BEFORE_QUIT_COMPENSACION_ADL adl = new BEFORE_QUIT_COMPENSACION_ADL ( );
    __app.register ( adl, "BEFORE_QUIT_COMPENSACION_ADL" );
    __app.setADL ( BEFORE_QUIT_COMPENSACION_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    BEFORE_QUIT_COMPENSACION_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    BEFORE_QUIT_COMPENSACION_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "BEFORE_QUIT_COMPENSACION_ADL" );
    if ( rObj != null && rObj instanceof BEFORE_QUIT_COMPENSACION_ADL )
    {
      this.app.setADL ( BEFORE_QUIT_COMPENSACION_ADL.class, ( BEFORE_QUIT_COMPENSACION_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "BEFORE_QUIT_COMPENSACION_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "BEFORE_QUIT_COMPENSACION_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    CANT_NULA = TruncService.setNull ( CANT_NULA  );
    RECLA_RETRO_TABLE_DSD = this.dm.create ( "RECLA_RETRO_TABLE_DSD" );
    RECLA_ID = RECLA_RETRO_TABLE_DSD.getId ( );
    RECLA_STATUS = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      this.app.setError ( 0, RECLA_STATUS );
      this.doReturn ( );
      return; 
    }

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
    {
      this.app.setError ( 1, RECLA_STATUS );
      this.doReturn ( );
      return; 
    }
    RETROACTIVO_DSD = this.dm.create ( "RETROACTIVO_DSD" );
    RETRO_ID = RETROACTIVO_DSD.getId ( );
    RETRO_STATUS = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( RETRO_STATUS, 0 ) ) 
    {
      this.app.setError ( 2, RETRO_STATUS );
      this.doReturn ( );
      return; 
    }

    RETRO_STATUS  = this.dm.reset ( RETRO_ID );

    if ( ! Compare.equals ( RETRO_STATUS, 0 ) ) 
    {
      this.app.setError ( 3, RETRO_STATUS );
      this.doReturn ( );
      return; 
    }
    if ( ( Compare.equals ( this.app.ACCION_GBL, "RETR" ) ) || ( Compare.equals ( this.app.ACCION_GBL, "RRET" ) ) ) 
    {
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_IDENTIFICADO", COMPENSACION_BENE_RETROACTIVO_ADL.getFECHA_RECLA ( this.app ) );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", COMPENSACION_BENE_RETROACTIVO_ADL.getRR_ACCION ( this.app ) );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
      RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

      if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
      {
        this.app.setError ( 4, RECLA_STATUS );
        this.doReturn ( );
        return; 
      }

      RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

      if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
      {
        this.doReturn ( );
        return; 
      }
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "FECHA_IDENTIFICADO", COMPENSACION_BENE_RETROACTIVO_ADL.getFECHA_RETRO ( this.app ) );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "ACCION", this.app.ACCION_GBL );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      RETRO_STATUS  = this.dm.limitQueryFromBuffer ( RETRO_ID );
      RETRO_STATUS  = this.dm.retrieve ( RETRO_ID );

      if ( ! Compare.equals ( RETRO_STATUS, 0 ) ) 
      {
        this.doReturn ( );
        return; 
      }

      RETRO_STATUS  = this.dm.firstRow ( RETRO_ID );

      if ( ! Compare.equals ( RETRO_STATUS, 0 ) ) 
      {
        this.app.setError ( 5, RECLA_STATUS );
        this.doReturn ( );
        return; 
      }
    }
    else
    {
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_IDENTIFICADO", COMPENSACION_BENE_RETROACTIVO_ADL.getFECHA_RECLA ( this.app ) );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", this.app.ACCION_GBL );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
      RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

      if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
      {
        this.app.setError ( 6, RECLA_STATUS );
        this.doReturn ( );
        return; 
      }

      RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

      if ( ! Compare.equals ( RECLA_STATUS, 0 ) ) 
      {
        this.doReturn ( );
        return; 
      }
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "FECHA_IDENTIFICADO", COMPENSACION_BENE_RETROACTIVO_ADL.getFECHA_RETRO ( this.app ) );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "ACCION", COMPENSACION_BENE_RETROACTIVO_ADL.getRR_ACCION ( this.app ) );
      this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      RETRO_STATUS  = this.dm.limitQueryFromBuffer ( RETRO_ID );
      RETRO_STATUS  = this.dm.retrieve ( RETRO_ID );

      if ( ! Compare.equals ( RETRO_STATUS, 0 ) ) 
      {
        this.doReturn ( );
        return; 
      }

      RETRO_STATUS  = this.dm.firstRow ( RETRO_ID );

      if ( ! Compare.equals ( RETRO_STATUS, 0 ) ) 
      {
        this.app.setError ( 7, RECLA_STATUS );
        this.doReturn ( );
        return; 
      }
    }
    if ( ! Compare.equals ( this.app.form ( "COMPENSACION_RECLA_FR" ).getDoubleItem ( "RETRO_OTORGAR" ), CANT_NULA ) ) 
    {
      if ( Compare.equals ( this.app.ACCION_GBL, "RECL" ) ) 
      {
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS", "SALDRETR" );
      }
      if ( Compare.equals ( this.app.ACCION_GBL, "RETR" ) ) 
      {
        this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "STATUS", "COMPRECL" );
      }
      this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "TOTAL_RETROACTIVO", this.app.form ( "COMPENSACION_RECLA_FR" ).getDoubleItem ( "RETRO_OTORGAR" ) );
      this.app.setError ( 8, 1040 );
    }
    else
    {
      if ( Compare.equals ( this.app.form ( "COMPENSACION_RECLA_FR" ).getDoubleItem ( "BALANCE_RECLAMAR" ), 0 ) ) 
      {
        this.app.setError ( 9, 1036 );
        if ( Compare.equals ( this.app.ACCION_GBL, "RECL" ) ) 
        {
          this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS", "SALDRETR" );
          this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "TOTAL_RECLAMACION", 0  );
        }
        if ( Compare.equals ( this.app.ACCION_GBL, "RETR" ) ) 
        {
          this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "STATUS", "COMPRECL" );
          this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "TOTAL_RETROACTIVO", 0  );
          this.app.setError ( 10, 1037 );
        }
      }
      else
      {
        if ( ( Compare.gt ( this.app.form ( "COMPENSACION_RECLA_FR" ).getDoubleItem ( "BALANCE_RECLAMAR" ), 0 ) ) && ( ! Compare.equals ( this.app.form ( "COMPENSACION_RECLA_FR" ).getDoubleItem ( "BALANCE_RECLAMAR" ), CANT_NULA ) )  ) 
        {
          this.app.setError ( 11, 1038 );
          if ( Compare.equals ( this.app.ACCION_GBL, "RECL" ) ) 
          {
            this.app.setError ( 12, 1039 );
          }
          if ( Compare.equals ( this.app.ACCION_GBL, "RETR" ) ) 
          {
            this.dm.setField ( this.dm.get ( "RETROACTIVO_DSD" ), "STATUS", "COMPRECL" );
            this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "TOTAL_RETROACTIVO", 0  );
          }
        }
      }
    }

    RECLA_STATUS  = this.dm.update ( RECLA_ID );

    RETRO_STATUS  = this.dm.update ( RETRO_ID );

    RECLA_ID  = this.dm.dbCommit ( );
    RETRO_STATUS  = this.dm.dbClose ( RETRO_ID );

    RECLA_STATUS  = this.dm.dbClose ( RECLA_ID );

  }
}



/* ---------------------------------------------------------------------


     
procedure before_quit_compensacion_adl;
var
        recla_id        : number(9,0);
        recla_status    : number(9,0);

        retro_id        : number(9,0);
        retro_status    : number(9,0);
        
        cant_nula       : number(9,2);

begin
set_trace();
make_null(cant_nula);
   db_open(recla_retro_table_dsd,recla_id,recla_status);
   if recla_status <> 0
   then
        begin
           error(recla_status);
           return;
        end;
   {endif}

   db_reset(recla_id,recla_status);
   if recla_status <> 0
   then
        begin
           error(recla_status);
           return;
        end;
   {endif}


   db_open(retroactivo_dsd,retro_id,retro_status);
   if retro_status <> 0
   then
        begin
           error(retro_status);
           return;
        end;
   {endif} 
  
   db_reset(retro_id,retro_status);
   if retro_status <> 0
   then
        begin
           error(retro_status);
           return;
        end;
   {endif} 

if (Accion_gbl = 'RETR') OR
   (Accion_gbl = 'RRET') THEN
BEGIN
   RECLA_RETRO_TABLE_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
   RECLA_RETRO_TABLE_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
   RECLA_RETRO_TABLE_DSD.COD_SERVICIO := cod_serv_gbl;
   RECLA_RETRO_TABLE_DSD.FECHA_IDENTIFICADO := COMPENSACION_BENE_RETROACTIVO_ADL
.FECHA_RECLA;
   RECLA_RETRO_TABLE_DSD.ACCION :=  COMPENSACION_BENE_RETROACTIVO_ADL.RR_ACCION;
   RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
   db_query(recla_id,recla_status);
   if recla_status <> 0
   then
        begin
           error(recla_status);
           return;
        end;
   {endif}

   db_get_first(recla_id,recla_status);
   if recla_status <> 0
   then
        begin
           return;
        end;
   {endif}

   RETROACTIVO_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
   RETROACTIVO_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
   RETROACTIVO_DSD.COD_SERVICIO := cod_serv_gbl;
   RETROACTIVO_DSD.FECHA_IDENTIFICADO := COMPENSACION_BENE_RETROACTIVO_ADL.FECHA
_RETRO;
   RETROACTIVO_DSD.ACCION := ACCION_GBL;  
   RETROACTIVO_DSD.RMO_OFICINA := RMO_GBL;
   db_query(retro_id,retro_status);
   if retro_status <> 0  
   then
        begin
           return;
        end;
   {endif}

   db_get_first(retro_id,retro_status);
   if retro_status <> 0  
   then
        begin
           error(recla_status);
           return;
        end;
   {endif}
END;
ELSE
BEGIN
   RECLA_RETRO_TABLE_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
   RECLA_RETRO_TABLE_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
   RECLA_RETRO_TABLE_DSD.COD_SERVICIO := cod_serv_gbl;
   RECLA_RETRO_TABLE_DSD.FECHA_IDENTIFICADO := COMPENSACION_BENE_RETROactivo_ADL
.FECHA_RECLA;
   RECLA_RETRO_TABLE_DSD.ACCION := ACCION_GBL;
   RECLA_RETRO_TABLE_DSD.RMO_OFICINA := RMO_GBL;
   db_query(recla_id,recla_status);
   if recla_status <> 0
   then
        begin
           error(recla_status);
           return;
        end;
   {endif}

   db_get_first(recla_id,recla_status);
   if recla_status <> 0
   then
        begin
           return;
        end;
   {endif}

   RETROACTIVO_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
   RETROACTIVO_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
   RETROACTIVO_DSD.COD_SERVICIO := cod_serv_gbl;
   RETROACTIVO_DSD.FECHA_IDENTIFICADO := COMPENSACION_BENE_RETROACTIVO_ADL.FECHA
_RETRO;
   RETROACTIVO_DSD.ACCION := COMPENSACION_BENE_RETROACTIVO_ADL.RR_ACCION;  
   RETROACTIVO_DSD.RMO_OFICINA := RMO_GBL;
   db_query(retro_id,retro_status);
   if retro_status <> 0  
   then
        begin
           return;
        end;
   {endif}

   db_get_first(retro_id,retro_status);
   if retro_status <> 0  
   then
        begin
           error(recla_status);
           return;
        end;
   {endif}
END;

   if COMPENSACION_RECLA_FR.RETRO_OTORGAR <> cant_nula
   then
        begin

          if accion_gbl = 'RECL'
          then
             begin
                RECLA_RETRO_TABLE_DSD.STATUS := 'SALDRETR';
             end;
          {endif}
 
          if accion_gbl = 'RETR'
          then
             begin
                RETROACTIVO_DSD.STATUS := 'COMPRECL';
             end;
          {endif}
           DETERMINAR_RECLAMACION_FR.TOTAL_RETROACTIVO := COMPENSACION_RECLA_FR.
RETRO_OTORGAR;
           error(1040);
        end;

   ELSE
        begin
           if (COMPENSACION_RECLA_FR.BALANCE_RECLAMAR = 0)
           then
                begin
                    error(1036);
                    if accion_gbl = 'RECL'
                    then
                        begin
                                RECLA_RETRO_TABLE_DSD.STATUS := 'SALDRETR';
                                DETERMINAR_RECLAMACION_FR.TOTAL_RECLAMACION := 0
;
                        end;
                    {endif}

                    if accion_gbl = 'RETR'
                    then
                        begin
                                RETROACTIVO_DSD.STATUS := 'COMPRECL';
                                DETERMINAR_RECLAMACION_FR.TOTAL_RETROACTIVO := 0
;
                                ERROR(1037);
                        end;
                    {endif}
                end;
           else
                begin   
                    if (COMPENSACION_RECLA_FR.BALANCE_RECLAMAR > 0) AND
                        (COMPENSACION_RECLA_FR.BALANCE_RECLAMAR <> CANT_NULA) 
                    then
                        begin
                            ERROR(1038);

                            if accion_gbl = 'RECL'
                            then
                                begin
                                {       DETERMINAR_RECLAMACION_FR.TOTAL_RECLAMAC
ION := COMPENSACION_RECLA_FR.BALANCE_RECLAMAR;}
                                        ERROR(1039);
                                end;
                            {endif accion_gbl = 'RECL'}

                            if accion_gbl = 'RETR'
                            then
                                begin
                                        RETROACTIVO_DSD.STATUS := 'COMPRECL';
                                        DETERMINAR_RECLAMACION_FR.TOTAL_RETROACT
IVO := 0;
                                end;
                            {endif accion_gbl = 'RETR'}
                        end;
                    {endif}
                end;
      end;

   db_update(recla_id,recla_status);
   db_update(retro_id,retro_status);
   db_commit(recla_id);
   db_close(retro_id,retro_status);
   db_close(recla_id,recla_status);

set_notrace();
end;
    



--------------------------------------------------------------------- */
