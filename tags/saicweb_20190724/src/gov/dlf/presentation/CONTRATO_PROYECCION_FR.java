package gov.dlf.presentation;


import gov.dlf.facade.*;
import gov.dlf.external.*;
import gov.dlf.logic.*;

import java.util.Date;



import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.jdatapanel.*;
import net.maintrend.jdatapanel.edit.*;
import net.maintrend.jdatapanel.commands.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CONTRATO_PROYECCION_FR
extends Form
{
	// -------------------------------------------------------------------
	// ----------   Instance Attributes   --------------------------------

	/**  */
	public SAIC_DMQ_ORA_Application app;



	// -------------------------------------------------------------------
	// ----------   Constructors and supporting methods   ----------------

	/**
	 *
	 */
	public CONTRATO_PROYECCION_FR ( )
	{
		super ( );
		this.setName ( "CONTRATO_PROYECCION_FR" );

		Debug.println ( Debug.TRACE, "CONTRATO_PROYECCION_FR - constructor" );

		this.setDefinitionPath ( "gov/dlf/presentation/CONTRATO_PROYECCION_FR.jdp" );
		String definition = ResourceUtil.getResourceText ( this.definitionPath );
		this.setDefinition     ( definition );

		this.setHighLightSelected   ( false );
		this.compressFieldLocations ( false, true );  // Compresses only Y-locations
	}


	/**
	 * Overrides ancestor's script
	 *
	 * @param __app
	 */
	public void setApplication ( Application __app )
	{
		this.app = ( SAIC_DMQ_ORA_Application ) __app;
		if ( this.app != null )
		{
			this.setDataManager ( this.app.getDataManager ( ) );
		}

		ICalculator           calculator;
		IBooleanValueProvider txtVisible;
		IBooleanValueProvider groupVisible;
		IObjectValueProvider  valueProvider;
		JDataPanelField       field;
		JDataPanelTextGroup   txtGroup;
		JDataPanelGroup       visGroup;

		this.setArguments ( "CONTRATO_GP", new CONTRATO_FR_GP_Arguments ( this ) );
		this.setArguments ( "MESES_GP", new MESES_FR_GP_Arguments ( this ) );

		this.setObjectEvents ( );

	}


	/**
	 * Overrides ancestor's method
	 *
	 * @return
	 */
	public RallyApplication getApplication ( )
	{
		return this.app;
	}



	// -------------------------------------------------------------------
	// ----------   Action Sites   ---------------------------------------

	/**
	 *
	 */
	public void setObjectEvents ( )
	{	    
		this.registerListener ( "CONTRATO_PROYECCION_FR", JDataPanelListener.AFTERLOAD, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true;
				app.form("CONTRATO_PROYECCION_FR").setItem("SSJS",app.getSS_SERV_GBL());
				app.form("CONTRATO_PROYECCION_FR").setItem("SSJF",app.SSN_JEFE_FAM_GBL);
				NOM_COMP_CUIDO_SSJS_ADL.exec(app,null);
				NOM_COMP_CUIDO_SSJF_ADL.exec(app,null);
				return app.errorFlag;
			}
		} );
		this.registerListener ( "AUT", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.SUPM_GBL , 0))
				{
					app.setError("0", "Solo un supervisor de manejo puede autorizar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "COMENTARIOS", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.SUPM_GBL , 0))
				{
					app.setError("0", "Solo un supervisor de manejo puede autorizar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "FCH_AUTORIZACION", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.SUPM_GBL , 0))
				{
					app.setError("0", "Solo un supervisor de manejo puede autorizar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "AUT", JDataPanelListener.AFTERVALUECHANGE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				String aut = app.form ( "CONTRATO_PROYECCION_FR" ).getStringItem( "AUT" );
				if (Compare.equals(aut, "S"))
				{
				AUTORIZAR_PAGO_PROYECCION_ADL.exec ( app, null ); 
				}

				return app.errorFlag;
			}
		} );
		this.registerListener ( "AUT", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				String aut = app.form ( "CONTRATO_PROYECCION_FR" ).getStringItem( "AUT" );
				if (Compare.equals(aut, "S") )
				{
					AUTORIZAR_PAGO_PROYECCION_ADL.exec ( app, null );
					app.form("CONTRATO_PROYECCION_FR").setItem("AUT", " ");
				}
				else if (Compare.equals(aut, "N"))
				{
					app.form("CONTRATO_PROYECCION_FR").setItem("AUT", " ");
					app.form("CONTRATO_PROYECCION_FR").setItem("FCH_AUTORIZACION", null);
					if(Compare.equals(app.SUPM_GBL, 1))
					{
						app.form("CONTRATO_PROYECCION_FR").setItem("ESTATUS", "DENEGADO");
						app.form ( "CONTRATO_PROYECCION_FR" ).setItem ( "ID_SUPERVISOR",app.ID_TECNICO_GBL);
						COMMENT_DENIED_PKT.exec(app);
					}
				}
				
				return app.errorFlag;
			}
		} );
		this.registerListener ( "ESNEGATIVO", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				String aut = app.form ( "CONTRATO_PROYECCION_FR" ).getStringItem( "ESNEGATIVO" );
				if (!(Compare.equals(aut, "A")||Compare.equals(aut, "D")))
				{
					app.setError("0", "Ingrese con una 'A' para aumentar ó una 'D' para disminuir.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "ID_ACTIVIDAD", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true;
				CALCULAR_PAGO_PROYECCION_ADL.exec ( app, null ); 
				return app.errorFlag;
			}
		} );
		this.registerListener ( "ESNEGATIVO", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "ESNEGATIVO", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				else
				CALCULAR_PAGO_PROYECCION_ADL.exec ( app, null ); 
				return app.errorFlag;
			}
		} );
		this.registerListener ( "ESNEGATIVO", JDataPanelListener.AFTERVALUECHANGE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				//app.errorFlag = true; CHECK_ACCESS_ID_ACTIVIDAD.exec ( app, null ); return app.errorFlag;
				app.errorFlag = true;
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				else
				CALCULAR_PAGO_PROYECCION_ADL.exec ( app, null ); 
				return app.errorFlag;
			}
		} );
		this.registerListener ( "DIAS_LABORABLES", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				else
				{
				double dias_asis = app.form ( "CONTRATO_PROYECCION_FR" ).getDoubleItem ( "DIAS_ASIS" );
				double dias_asis_part = app.form ( "CONTRATO_PROYECCION_FR" ).getDoubleItem ( "DIAS_ASIS_PART" );
				double dias_mes = MathService.plus(dias_asis, dias_asis_part);
				double dias_labs = app.form ( "CONTRATO_PROYECCION_FR" ).getDoubleItem ( "DIAS_LABORABLES" );
				String tipo_proveedor = app.form ( "CONTRATO_PROYECCION_FR" ).getStringItem("TIPO_PROVEEDOR");
				if(Compare.gt(dias_mes, dias_labs) && ! (Compare.equals(tipo_proveedor, "CENTRO CUIDO") ) )
				{
					app.setError("0", "Dias asistidos sobrepasan los dias laborables.");
					app.form ( "CONTRATO_PROYECCION_FR" ).setItem ( "DIAS_ASIS", "");
					app.form ( "CONTRATO_PROYECCION_FR" ).setItem ( "DIAS_ASIS_PART", ""); 
					app.form ( "CONTRATO_PROYECCION_FR" ).setItem ( "PAGO", 0);
					app.errorFlag = false;
				}
				else
				{
					app.errorFlag = true;
				}
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "DIAS_ASIS", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "DIAS_ASIS_PART", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "DIAS_LABORABLES", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "ID_ACTIVIDAD", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "ACTIVIDAD", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "PAGO", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
		this.registerListener ( "AJUSTE", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
		{
			public boolean eventFired ( String eventName )
			{
				app.errorFlag = true; 
				if (Compare.equals(app.MACA_GBL , 0))
				{
					app.setError("0", "Solo un manejador puede trabajar el caso.");
					app.errorFlag = false; 
				}
				return app.errorFlag;
			}
		} );
	}
}



class CONTRATO_FR_GP_Arguments extends JDataPanelGroupArguments
{
	/**  */
	protected Form model;
	/**  */
	protected SAIC_DMQ_ORA_Application app = null;

	/**  */
	public CONTRATO_FR_GP_Arguments ( Form form )
	{
		this.model = form;

		this.setArgName ( "SSN_PAR" );
		this.setArgName ( "PROVEEDORID" );
		this.setArgName ( "TIPOCUIDO" );
 	    this.setArgName ( "DESDE_PAR" );
		this.setArgName ( "HASTA_PAR" );
	

	}

	/**  */
	public Object getArgValue ( String argName )
	{
		if ( this.app == null ) this.app = ( SAIC_DMQ_ORA_Application ) this.model.getApplication ( );
		if ( argName == null )
		{
			return null;
		}
		else if ( argName.equals ( "SSN_PAR" ) )
		{
			return this.app.getSSN_GBL( ); // Global Variable
		}
		else if ( argName.equals ( "PROVEEDORID" ) )
		{
			return this.app.form("CONTRATO_PROYECCION_FR").getDoubleItem( "ID_PROVEEDOR" );
		}
		else if ( argName.equals ( "TIPOCUIDO" ) )
		{
			return this.app.form("CONTRATO_PROYECCION_FR").getStringItem( "COD_CUIDO" );
		}
		else if ( argName.equals ( "DESDE_PAR" ) )
		{
			return this.app.form("CONTRATO_PROYEC_LIST_FRM").getDateItem( "DESDE" );
		}
		else if ( argName.equals ( "HASTA_PAR" ) )
		{
			return this.app.form("CONTRATO_PROYEC_LIST_FRM").getDateItem( "HASTA" );
		}

		return null;
	}
}


/**
 *
 */
class MESES_FR_GP_Arguments extends JDataPanelGroupArguments
{
	/**  */
	protected Form model;
	/**  */
	protected SAIC_DMQ_ORA_Application app = null;

	/**  */
	public MESES_FR_GP_Arguments ( Form form )
	{
		this.model = form;

		this.setArgName ( "SSN_PAR" );
		this.setArgName ( "PROVEEDORID" );
		this.setArgName ( "TIPOCUIDO" );
		this.setArgName ( "DESDE_PAR" );
		this.setArgName ( "HASTA_PAR" );
	}

	/**  */
	public Object getArgValue ( String argName )
	{
		if ( this.app == null ) this.app = ( SAIC_DMQ_ORA_Application ) this.model.getApplication ( );
		if ( argName == null )
		{
			return null;
		}
		else if ( argName.equals ( "SSN_PAR" ) )
		{
			return this.app.form("CONTRATO_PROYECCION_FR").getDoubleItem( "SEG_SOC_CLIENTE" );
		}
		else if ( argName.equals ( "PROVEEDORID" ) )
		{
			return this.app.form("CONTRATO_PROYECCION_FR").getDoubleItem( "ID_PROVEEDOR" );
		}
		else if ( argName.equals ( "TIPOCUIDO" ) )
		{
			return this.app.form("CONTRATO_PROYECCION_FR").getStringItem( "COD_CUIDO" );
		}
		else if ( argName.equals ( "DESDE_PAR" ) )
		{
			return this.app.form("CONTRATO_PROYEC_LIST_FRM").getDateItem( "DESDE" );
		}
		else if ( argName.equals ( "HASTA_PAR" ) )
		{
			return this.app.form("CONTRATO_PROYEC_LIST_FRM").getDateItem( "HASTA" );
		}
		return null;
	}
}

