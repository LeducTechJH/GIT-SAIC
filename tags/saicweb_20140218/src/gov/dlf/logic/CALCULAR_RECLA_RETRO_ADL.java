package gov.dlf.logic;


import gov.dlf.facade.SAIC_DMQ_ORA_Application;

import net.maintrend.interfaces.IRegisteredObject;
import net.maintrend.interlink.ParameterSet;
import net.maintrend.rallyengine.ADL;
import net.maintrend.rallyengine.Form;
import net.maintrend.rallyengine.RallyApplication;
import net.maintrend.rallyengine.RallyDataManager;
import net.maintrend.util.Compare;
import net.maintrend.util.Debug;
import net.maintrend.util.MathService;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CALCULAR_RECLA_RETRO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CALCULAR_RECLA_RETRO_ADL get ( RallyApplication __app )
  {
    CALCULAR_RECLA_RETRO_ADL adl = new CALCULAR_RECLA_RETRO_ADL ( );
    __app.register ( adl, "CALCULAR_RECLA_RETRO_ADL" );
    __app.setADL ( CALCULAR_RECLA_RETRO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CALCULAR_RECLA_RETRO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CALCULAR_RECLA_RETRO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CALCULAR_RECLA_RETRO_ADL" );
    if ( rObj != null && rObj instanceof CALCULAR_RECLA_RETRO_ADL )
    {
      this.app.setADL ( CALCULAR_RECLA_RETRO_ADL.class, ( CALCULAR_RECLA_RETRO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CALCULAR_RECLA_RETRO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CALCULAR_RECLA_RETRO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    Form frm = this.app.getLastForm ( "DETERMINAR_RECLAMACION_FR" );
    if ( frm == null ) return;

    String accion = frm.getStringItem ( "ACCION" );

    if ( ( Compare.equals ( accion, "RECL" ) ) || ( Compare.equals ( accion, "RREC" ) ) ) 
    {
      frm.setItem ( "TOTAL_RECLAMACION", MathService.minus ( frm.getDoubleItem ( "TOTAL_BENEFICIOS_RECIBIDOS" ), frm.getDoubleItem ( "TOTAL_BENEFICIOS_CORRECTOS" ) )  );
    }
    if ( Compare.lt ( frm.getDoubleItem ( "TOTAL_RECLAMACION" ), 0 ) ) 
    {
      frm.setItem ( "TOTAL_RECLAMACION", 0  );
    }

    if ( ( Compare.equals ( accion, "RETR" ) ) || ( Compare.equals ( accion, "RRET" ) ) ) 
    {
      frm.setItem ( "TOTAL_RETROACTIVO", MathService.minus ( frm.getDoubleItem ( "TOTAL_BENEFICIOS_CORRECTOS" ), frm.getDoubleItem ( "TOTAL_BENEFICIOS_RECIBIDOS" ) )  );
    }
    if ( Compare.lt ( frm.getDoubleItem ( "TOTAL_RETROACTIVO" ), 0 ) ) 
    {
      frm.setItem ( "TOTAL_RETROACTIVO", 0  );
    }
  }
}



/* ---------------------------------------------------------------------


     
procedure calcular_recla_retro_adl;

begin
SET_TRACE();
if (DETERMINAR_RECLAMACION_FR.ACCION = 'RECL') or (DETERMINAR_RECLAMACION_FR.ACC
ION = 'RREC')
then
        DETERMINAR_RECLAMACION_FR.TOTAL_RECLAMACION := DETERMINAR_RECLAMACION_FR
.TOTAL_BENEFICIOS_RECIBIDOS -  DETERMINAR_RECLAMACION_FR.TOTAL_BENEFICIOS_CORREC
TOS;
        if DETERMINAR_RECLAMACION_FR.TOTAL_RECLAMACION < 0 then
                DETERMINAR_RECLAMACION_FR.TOTAL_RECLAMACION := 0;
{endif}

if (DETERMINAR_RECLAMACION_FR.ACCION = 'RETR') or (DETERMINAR_RECLAMACION_FR.ACC
ION = 'RRET')
then
        DETERMINAR_RECLAMACION_FR.TOTAL_RETROACTIVO := DETERMINAR_RECLAMACION_FR
.TOTAL_BENEFICIOS_CORRECTOS - DETERMINAR_RECLAMACION_FR.TOTAL_BENEFICIOS_RECIBID
OS;
        if DETERMINAR_RECLAMACION_FR.TOTAL_RETROACTIVO < 0 then
                DETERMINAR_RECLAMACION_FR.TOTAL_RETROACTIVO := 0;
{endif}
SET_NOTRACE();
end;
    



--------------------------------------------------------------------- */
