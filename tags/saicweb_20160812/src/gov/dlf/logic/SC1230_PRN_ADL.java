package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SC1230_PRN_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------



  public Date FPAGO = null;

  public String S_DTE = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setFPAGO  ( RallyApplication __app, Parameter value )
  {
    ( ( SC1230_PRN_ADL ) __app.getADL ( SC1230_PRN_ADL.class ) ).FPAGO = value.getDate ( );
  }  

  
  /**  */
  public static void setS_DTE  ( RallyApplication __app, Parameter value )
  {
    ( ( SC1230_PRN_ADL ) __app.getADL ( SC1230_PRN_ADL.class ) ).S_DTE = value.getString ( );
  }  
    


  /**  */
  public static Date getFPAGO  ( RallyApplication __app )
  {
    return ( ( SC1230_PRN_ADL ) __app.getADL ( SC1230_PRN_ADL.class ) ).FPAGO;
  }


  /**  */
  public static void setFPAGO  ( RallyApplication __app, Date value )
  {
    ( ( SC1230_PRN_ADL ) __app.getADL ( SC1230_PRN_ADL.class ) ).FPAGO = value;
  }


  /**  */
  public static void setFPAGO  ( RallyApplication __app, Object value )
  {
    ( ( SC1230_PRN_ADL ) __app.getADL ( SC1230_PRN_ADL.class ) ).FPAGO = ( Date ) value;
  }



  /**  */
  public static String getS_DTE  ( RallyApplication __app )
  {
    return ( ( SC1230_PRN_ADL ) __app.getADL ( SC1230_PRN_ADL.class ) ).S_DTE;
  }


  /**  */
  public static void setS_DTE  ( RallyApplication __app, String value )
  {
    ( ( SC1230_PRN_ADL ) __app.getADL ( SC1230_PRN_ADL.class ) ).S_DTE = value;
  }


  /**  */
  public static void setS_DTE  ( RallyApplication __app, Object value )
  {
    ( ( SC1230_PRN_ADL ) __app.getADL ( SC1230_PRN_ADL.class ) ).S_DTE = ( String ) value;
  }





  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SC1230_PRN_ADL get ( RallyApplication __app )
  {
    SC1230_PRN_ADL adl = new SC1230_PRN_ADL ( );
    __app.register ( adl, "SC1230_PRN_ADL" );
    __app.setADL ( SC1230_PRN_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SC1230_PRN_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SC1230_PRN_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SC1230_PRN_ADL" );
    if ( rObj != null && rObj instanceof SC1230_PRN_ADL )
    {
      this.app.setADL ( SC1230_PRN_ADL.class, ( SC1230_PRN_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SC1230_PRN_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SC1230_PRN_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    FPAGO = TruncService.trunc ( this.app.form ( "SC1230_FR" ).getDateItem ( "FCH_PAGO0" ), "DDD" ) ;
    S_DTE = StringService.toStringValue  ( FPAGO ,"dd-MMM-yyyy" ,StringService.Language.SPANISH );

    this.callParms.clear ( );
    ( ( SC1230_ACL ) this.app.getNewInstance ( "SC1230_ACL" ) ).execute ( this.callParms );

    this.app.returnTo ( "RECAUDA_MAIN_MENU" ); if ( true ) return;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SC1230_PRN_ADL;

VAR
        FPAGO   :       DATE EXPORT;
        S_DTE   :       CHAR(12);

SET_TRACE();

FPAGO := TRUNC (SC1230_FR.FCH_PAGO0, 'DDD');

S_DTE := TO_CHAR (FPAGO, 'DD-Mon-YYYY');
DEBUG_LOG ('SDATE IS ' || S_DTE);

CALL SC1230_ACL;

RETURN_TO RECAUDA_MAIN_MENU;

SET_NOTRACE();
    



--------------------------------------------------------------------- */
