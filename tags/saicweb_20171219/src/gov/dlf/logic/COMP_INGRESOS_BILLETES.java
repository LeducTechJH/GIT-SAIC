package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class COMP_INGRESOS_BILLETES
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STAT_CODE = 0;

  public double OPEN2_ID = 0;

  public double STAT2_CODE = 0;

  public double KEY_PRESS = 0;

  public double GAN_ORD = 0;

  public double GAN_EXT = 0;
  
  public double GAN_SEMI = 0;

  public double NSOR_ORD = 0;

  public double NSOR_EXT = 0;
  
  public double NSOR_SEMI = 0;



  public DataStore SORBIL_RO_DSD = null;

  public DataStore GANBIL_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTAT_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN2_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTAT2_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT2_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setKEY_PRESS  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).KEY_PRESS = value.getDouble ( );
  }  

  
  /**  */
  public static void setGAN_ORD  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_ORD = value.getDouble ( );
  }  

  
  /**  */
  public static void setGAN_EXT  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_EXT = value.getDouble ( );
  }  

  public static void setGAN_SEMI  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_SEMI = value.getDouble ( );
  }  
  
  /**  */
  public static void setNSOR_ORD  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_ORD = value.getDouble ( );
  }  

  
  /**  */
  public static void setNSOR_EXT  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_EXT = value.getDouble ( );
  }  
  
  public static void setNSOR_SEMI  ( RallyApplication __app, Parameter value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_SEMI = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getSORBIL_RO_DSD  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).SORBIL_RO_DSD;
  }


  /**  */
  public static void setSORBIL_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).SORBIL_RO_DSD = value;
  }


  /**  */
  public static void setSORBIL_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).SORBIL_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getGANBIL_RO_DSD  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GANBIL_RO_DSD;
  }


  /**  */
  public static void setGANBIL_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GANBIL_RO_DSD = value;
  }


  /**  */
  public static void setGANBIL_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GANBIL_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTAT_CODE  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT_CODE;
  }


  /**  */
  public static Double getSTAT_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT_CODE );
  }


  /**  */
  public static void setSTAT_CODE  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT_CODE = value;
  }


  /**  */
  public static void setSTAT_CODE  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN2_ID  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN2_ID;
  }


  /**  */
  public static Double getOPEN2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN2_ID );
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN2_ID = value;
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).OPEN2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTAT2_CODE  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT2_CODE;
  }


  /**  */
  public static Double getSTAT2_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT2_CODE );
  }


  /**  */
  public static void setSTAT2_CODE  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT2_CODE = value;
  }


  /**  */
  public static void setSTAT2_CODE  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).STAT2_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getKEY_PRESS  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).KEY_PRESS;
  }


  /**  */
  public static Double getKEY_PRESSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).KEY_PRESS );
  }


  /**  */
  public static void setKEY_PRESS  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).KEY_PRESS = value;
  }


  /**  */
  public static void setKEY_PRESS  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).KEY_PRESS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGAN_ORD  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_ORD;
  }


  /**  */
  public static Double getGAN_ORDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_ORD );
  }


  /**  */
  public static void setGAN_ORD  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_ORD = value;
  }


  /**  */
  public static void setGAN_ORD  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_ORD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGAN_EXT  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_EXT;
  }


  /**  */
  public static Double getGAN_EXTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_EXT );
  }


  /**  */
  public static void setGAN_EXT  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_EXT = value;
  }


  /**  */
  public static void setGAN_EXT  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_EXT = ( ( Double ) value ).doubleValue ( );
  }

  public static double getGAN_SEMI  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_SEMI;
  }


  /**  */
  public static Double getGAN_SEMIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_SEMI );
  }


  /**  */
  public static void setGAN_SEMI  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_SEMI = value;
  }


  /**  */
  public static void setGAN_SEMI  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).GAN_SEMI = ( ( Double ) value ).doubleValue ( );
  }

  /**  */
  public static double getNSOR_ORD  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_ORD;
  }


  /**  */
  public static Double getNSOR_ORDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_ORD );
  }


  /**  */
  public static void setNSOR_ORD  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_ORD = value;
  }


  /**  */
  public static void setNSOR_ORD  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_ORD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNSOR_EXT  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_EXT;
  }


  /**  */
  public static Double getNSOR_EXTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_EXT );
  }


  /**  */
  public static void setNSOR_EXT  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_EXT = value;
  }


  /**  */
  public static void setNSOR_SEMI  ( RallyApplication __app, Object value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_SEMI = ( ( Double ) value ).doubleValue ( );
  }

  public static double getNSOR_SEMI  ( RallyApplication __app )
  {
    return ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_SEMI;
  }


  /**  */
  public static Double getNSOR_SEMIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_SEMI );
  }


  /**  */
  public static void setNSOR_SEMI  ( RallyApplication __app, double value )
  {
    ( ( COMP_INGRESOS_BILLETES ) __app.getADL ( COMP_INGRESOS_BILLETES.class ) ).NSOR_SEMI = value;
  }


  


  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static COMP_INGRESOS_BILLETES get ( RallyApplication __app )
  {
    COMP_INGRESOS_BILLETES adl = new COMP_INGRESOS_BILLETES ( );
    __app.register ( adl, "COMP_INGRESOS_BILLETES" );
    __app.setADL ( COMP_INGRESOS_BILLETES.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    COMP_INGRESOS_BILLETES.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    COMP_INGRESOS_BILLETES.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "COMP_INGRESOS_BILLETES" );
    if ( rObj != null && rObj instanceof COMP_INGRESOS_BILLETES )
    {
      this.app.setADL ( COMP_INGRESOS_BILLETES.class, ( COMP_INGRESOS_BILLETES ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "COMP_INGRESOS_BILLETES Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "COMP_INGRESOS_BILLETES ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    KEY_PRESS = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( KEY_PRESS, RallyAppCommandFactory.FPREV ) ) 
    {
      this.app.returnTo ( "BILLETES_PKT" ); if ( true ) return;
    }
    if ( ( Compare.lt ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_EXTRA" ), 18 ) ) || 
    		( Compare.lt ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_ORDINARIO" ), 18 ) ) || 
    		( Compare.lt ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_SEMI" ), 18 ) ) ) 
    {
      this.app.setError ( 0, 7004 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    SORBIL_RO_DSD = this.dm.create ( "SORBIL_RO_DSD" );
    OPEN2_ID = SORBIL_RO_DSD.getId ( );
    STAT2_CODE = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( STAT2_CODE, 0 ) ) 
    {
      this.app.setError ( 1, STAT2_CODE );
      this.doReturn ( );
      return; 
    }
    GANBIL_RO_DSD = this.dm.create ( "GANBIL_RO_DSD" );
    OPEN_ID = GANBIL_RO_DSD.getId ( );
    STAT_CODE = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( STAT_CODE, 0 ) ) 
    {
      this.app.setError ( 2, STAT_CODE );
      this.doReturn ( );
      return; 
    }

    STAT_CODE  = this.dm.reset ( OPEN_ID );

    if ( ! Compare.equals ( STAT_CODE, 0 ) ) 
    {
      this.app.setError ( 3, STAT_CODE );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "GANBIL_RO_DSD" ), "CODIGO_BILLETERO", this.app.form ( "INGRESOS_CLIENTE_FR" ).getStringItem ( "COD_TIPO_INGRESO" ));

    STAT_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STAT_CODE  = this.dm.retrieve ( OPEN_ID );

    if ( ! Compare.equals ( STAT_CODE, 0 ) ) 
    {
      this.app.setError ( 4, STAT_CODE );
      this.doReturn ( );
      return; 
    }

    STAT_CODE  = this.dm.firstRow ( OPEN_ID );

    if ( ! Compare.equals ( STAT_CODE, 0 ) ) 
    {
      this.app.setError ( 5, STAT_CODE );
      this.doReturn ( );
      return; 
    }
    GAN_ORD = this.dm.getFieldDouble ( this.dm.get ( "GANBIL_RO_DSD" ), "GANANCIA_ORD" );
    GAN_EXT = this.dm.getFieldDouble ( this.dm.get ( "GANBIL_RO_DSD" ), "GANANCIA_EXTRA" );
    GAN_SEMI = this.dm.getFieldDouble ( this.dm.get ( "GANBIL_RO_DSD" ), "GANANCIA_SEMI" );
    
    STAT2_CODE  = this.dm.reset ( OPEN2_ID );

    if ( ! Compare.equals ( STAT2_CODE, 0 ) ) 
    {
      this.app.setError ( 6, STAT2_CODE );
      this.doReturn ( );
      return; 
    }

    STAT2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    STAT2_CODE  = this.dm.retrieve ( OPEN2_ID );

    if ( ! Compare.equals ( STAT2_CODE, 0 ) ) 
    {
      this.app.setError ( 7, STAT2_CODE );
      this.doReturn ( );
      return; 
    }

    STAT2_CODE  = this.dm.firstRow ( OPEN2_ID );

    if ( ! Compare.equals ( STAT2_CODE, 0 ) ) 
    {
      this.app.setError ( 8, STAT2_CODE );
      this.doReturn ( );
      return; 
    }
    NSOR_ORD = this.dm.getFieldDouble ( this.dm.get ( "SORBIL_RO_DSD" ), "NUM_SOR_ORD" );
    NSOR_EXT = this.dm.getFieldDouble ( this.dm.get ( "SORBIL_RO_DSD" ), "NUM_SOR_EXT" );
    NSOR_SEMI = this.dm.getFieldDouble ( this.dm.get ( "SORBIL_RO_DSD" ), "NUM_SOR_SEMI" );
    STAT_CODE  = this.dm.dbClose ( OPEN_ID );

    STAT2_CODE  = this.dm.dbClose ( OPEN2_ID );

    this.app.form ( "BILLETES_FR" ).setItem ( "FECHA_EFECTIVIDAD", this.app.SYSTEM_DATE  );
    this.app.form ( "BILLETES_FR" ).setItem ( "GAN_SEM_ORD", ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_ORDINARIO" )* GAN_ORD )  );
    this.app.form ( "BILLETES_FR" ).setItem ( "GAN_ANUAL_ORD", ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_ORDINARIO" )* GAN_ORD ) * ( NSOR_ORD )  );
    this.app.form ( "BILLETES_FR" ).setItem ( "GAN_SEM_EXTRA", ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_EXTRA" )* GAN_EXT )  );
    this.app.form ( "BILLETES_FR" ).setItem ( "GAN_ANUAL_EXTRA", ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_EXTRA" )* GAN_EXT ) * ( NSOR_EXT )  );
    this.app.form ( "BILLETES_FR" ).setItem ( "GAN_SEM_SEMI", ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_SEMI" )* GAN_SEMI )  );
    this.app.form ( "BILLETES_FR" ).setItem ( "GAN_ANUAL_SEMI", ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_SEMI" )* GAN_SEMI ) * ( NSOR_SEMI )  );
    this.app.form ( "BILLETES_FR" ).setItem ( "INGRESO_ANUAL", MathService.plus (MathService.plus ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "GAN_ANUAL_ORD" ), this.app.form ( "BILLETES_FR" ).getDoubleItem ( "GAN_ANUAL_EXTRA" ) ), this.app.form ( "BILLETES_FR" ).getDoubleItem ( "GAN_ANUAL_SEMI" ) )  );
    this.app.COMP_ING_BILL_GBL = TruncService.trunc( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "INGRESO_ANUAL" ) / 12 );
    //    this.app.COMP_ING_BILL_GBL = ( MathService.plus (MathService.plus ( ( ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_EXTRA" )* GAN_EXT ) * ( NSOR_EXT ) ), ( ( this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_ORDINARIO" )* GAN_ORD ) * ( NSOR_ORD ) )  ) ,this.app.form ( "BILLETES_FR" ).getDoubleItem ( "CANT_BILLETE_SEMI" )* GAN_SEMI ) * ( NSOR_SEMI ) ) / 12;
    this.app.form ( "BILLETES_FR" ).setItem ( "INGRESO_MENSUAL", this.app.COMP_ING_BILL_GBL  );
    this.app.form ( "BILLETES_FR" ).update ( );
    this.app.callCommand ( RallyAppCommandFactory.COMMIT );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    BILLETES_P_PKT.exec ( this.app );
    return;

  }
  
  
  /**
  *
  */
 protected void step2 ( ParameterSet ps )
 {
   app.returnTo ( "BILLETES_ADL" );
   return;

 }
}



/* ---------------------------------------------------------------------


     
PROCEDURE COMP_INGRESOS_BILLETES;

VAR
  OPEN_ID : NUMBER;
  STAT_CODE : NUMBER;
  OPEN2_ID : NUMBER;
  STAT2_CODE : NUMBER;
  KEY_PRESS : NUMBER;
  GAN_ORD : NUMBER EXPORT;
  GAN_EXT : NUMBER EXPORT;
  NSOR_ORD : NUMBER EXPORT;
  NSOR_EXT : NUMBER EXPORT;

BEGIN
 KEY_PRESS := GET_CMD();


 IF ( KEY_PRESS = FPREV)  
     THEN
      BEGIN
       RETURN_TO BILLETES_PKT;
      END;

  IF (   BILLETES_FR.CANT_BILLETE_EXTRA < 18)
   OR (   BILLETES_FR.CANT_BILLETE_ORDINARIO  < 18) THEN
   BEGIN
        ERROR(7004);
        SET_FAILURE();
        RETURN;     
   END;

  DB_OPEN(SORBIL_RO_DSD,OPEN2_ID,STAT2_CODE);
   IF STAT2_CODE <> 0 THEN
     BEGIN
       ERROR(STAT2_CODE);
       RETURN;
     END;
   DB_OPEN(GANBIL_RO_DSD,OPEN_ID,STAT_CODE);
   IF STAT_CODE <> 0 THEN
     BEGIN
       ERROR(STAT_CODE);
       RETURN;
     END;
    DB_RESET(OPEN_ID,STAT_CODE);
    IF STAT_CODE <> 0 THEN
     BEGIN
       ERROR(STAT_CODE);
       RETURN;
     END;
    GANBIL_RO_DSD.CODIGO_BILLETERO := INGRESOS_CLIENTE_FR.COD_TIPO_INGRESO;
   
    DB_QUERY(OPEN_ID,STAT_CODE);
    IF STAT_CODE <> 0 THEN
     BEGIN
       ERROR(STAT_CODE);
       RETURN;
     END;
     
    DB_GET_FIRST(OPEN_ID,STAT_CODE);
    IF STAT_CODE <> 0 THEN
      BEGIN
        ERROR(STAT_CODE);
        RETURN;
      END; 
     GAN_ORD := GANBIL_RO_DSD.GANANCIA_ORD;
     GAN_EXT := GANBIL_RO_DSD.GANANCIA_EXTRA;
    
     
    DB_RESET(OPEN2_ID,STAT2_CODE);
    IF STAT2_CODE <> 0 THEN
     BEGIN
       ERROR(STAT2_CODE);
       RETURN;
     END;

    DB_QUERY(OPEN2_ID,STAT2_CODE);
    IF STAT2_CODE <> 0 THEN
     BEGIN
       ERROR(STAT2_CODE);
       RETURN;
     END;

    DB_GET_FIRST(OPEN2_ID,STAT2_CODE);
    IF STAT2_CODE <> 0 THEN
      BEGIN
        ERROR(STAT2_CODE);
        RETURN;
      END; 
     NSOR_ORD := SORBIL_RO_DSD.NUM_SOR_ORD;
     NSOR_EXT := SORBIL_RO_DSD.NUM_SOR_EXT;
     DB_CLOSE(OPEN_ID,STAT_CODE);
     DB_CLOSE(OPEN2_ID,STAT2_CODE);
 
       BILLETES_FR.FECHA_EFECTIVIDAD := SYSTEM_DATE;
       BILLETES_FR.GAN_SEM_ORD := (BILLETES_FR.CANT_BILLETE_ORDINARIO *GAN_ORD);
       BILLETES_FR.GAN_ANUAL_ORD:= (BILLETES_FR.CANT_BILLETE_ORDINARIO *GAN_ORD)
 *(NSOR_ORD);
       BILLETES_FR.GAN_SEM_EXTRA := (BILLETES_FR.CANT_BILLETE_EXTRA  *GAN_EXT);
       BILLETES_FR.GAN_ANUAL_EXTRA := (BILLETES_FR.CANT_BILLETE_EXTRA  *GAN_EXT)
 *(NSOR_EXT);
 BILLETES_FR.INGRESO_ANUAL := BILLETES_FR.GAN_ANUAL_ORD+BILLETES_FR.GAN_ANUAL_EX
TRA;
 COMP_ING_BILL_GBL := ( ((BILLETES_FR.CANT_BILLETE_EXTRA  *GAN_EXT) *(NSOR_EXT))
 + ((BILLETES_FR.CANT_BILLETE_ORDINARIO *GAN_ORD) *(NSOR_ORD)))/12;
 BILLETES_FR.INGRESO_MENSUAL := COMP_ING_BILL_GBL;
 CALL_CMD('COMMIT');
 CALL BILLETES_P_PKT;
END;
    



--------------------------------------------------------------------- */
