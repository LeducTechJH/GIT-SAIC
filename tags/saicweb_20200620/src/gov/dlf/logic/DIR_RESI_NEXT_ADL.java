package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DIR_RESI_NEXT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;
 
  public boolean _condition4 = false;
 
  public boolean _condition5 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double LAST_CMD = 0;

  public double OPEN_ID = 0;

  public double STATUS_CODE = 0;



  public String LAST_MOD = null;

  public DataStore DIRECCIONES_R_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setLAST_CMD  ( RallyApplication __app, Parameter value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_CMD = value.getDouble ( );
  }  

  
  /**  */
  public static void setLAST_MOD  ( RallyApplication __app, Parameter value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_MOD = value.getString ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }  
    


  /**  */
  public static String getLAST_MOD  ( RallyApplication __app )
  {
    return ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_MOD;
  }


  /**  */
  public static void setLAST_MOD  ( RallyApplication __app, String value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_MOD = value;
  }


  /**  */
  public static void setLAST_MOD  ( RallyApplication __app, Object value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_MOD = ( String ) value;
  }



  /**  */
  public static DataStore getDIRECCIONES_R_DSD  ( RallyApplication __app )
  {
    return ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).DIRECCIONES_R_DSD;
  }


  /**  */
  public static void setDIRECCIONES_R_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).DIRECCIONES_R_DSD = value;
  }


  /**  */
  public static void setDIRECCIONES_R_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).DIRECCIONES_R_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getLAST_CMD  ( RallyApplication __app )
  {
    return ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_CMD;
  }


  /**  */
  public static Double getLAST_CMDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_CMD );
  }


  /**  */
  public static void setLAST_CMD  ( RallyApplication __app, double value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_CMD = value;
  }


  /**  */
  public static void setLAST_CMD  ( RallyApplication __app, Object value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).LAST_CMD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DIR_RESI_NEXT_ADL ) __app.getADL ( DIR_RESI_NEXT_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DIR_RESI_NEXT_ADL get ( RallyApplication __app )
  {
    DIR_RESI_NEXT_ADL adl = new DIR_RESI_NEXT_ADL ( );
    __app.register ( adl, "DIR_RESI_NEXT_ADL" );
    __app.setADL ( DIR_RESI_NEXT_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DIR_RESI_NEXT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DIR_RESI_NEXT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DIR_RESI_NEXT_ADL" );
    if ( rObj != null && rObj instanceof DIR_RESI_NEXT_ADL )
    {
      this.app.setADL ( DIR_RESI_NEXT_ADL.class, ( DIR_RESI_NEXT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DIR_RESI_NEXT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DIR_RESI_NEXT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    DIRECCIONES_R_DSD = this.dm.create ( "DIRECCIONES_R_DSD" );
    OPEN_ID = DIRECCIONES_R_DSD.getId ( );
    STATUS_CODE = RallyDataStoreException.getDefault ( );
    LAST_CMD = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    LAST_MOD = this.app.getMode ( );
    if ( Compare.equals ( LAST_CMD, RallyAppCommandFactory.FPREV ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.executeCommand ( RallyAppCommandFactory.FPREV );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( LAST_CMD, RallyAppCommandFactory.FPREV ) ) 
    {
      return;
    }
    if ( ( Compare.equals ( LAST_MOD, "UPDATE" ) ) && ( Compare.equals ( LAST_CMD, RallyAppCommandFactory.FNEXT ) )  ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "DIRECCIONES_R_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "SOLICITUD_SERVICIO_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAMILIA" ));
      this.dm.setField ( this.dm.get ( "DIRECCIONES_R_DSD" ), "COD_TIPO_DIRECCION", "RESI" );
      this.dm.setField ( this.dm.get ( "DIRECCIONES_R_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        this._condition2 = true;
      }
      else
      {
        this._condition2 = false;
      }
      if ( this._condition2 )
      {
        this.app.callCommand ( RallyAppCommandFactory.FINSNEXT );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( ( Compare.equals ( LAST_MOD, "UPDATE" ) ) && ( Compare.equals ( LAST_CMD, RallyAppCommandFactory.FNEXT ) )  ) 
    {
      if ( this._condition2 )    //      if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        this.app.form ( "SOLICITUD_SERVICIO_FR" ).setItem ( "DIR_RESI_FLG", "T"  );
      }
      else
      {
        this.app.callCommand ( RallyAppCommandFactory.RGNEXT );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( ( Compare.equals ( LAST_MOD, "UPDATE" ) ) && ( Compare.equals ( LAST_CMD, RallyAppCommandFactory.FNEXT ) )  ) 
    {
      if ( this._condition2 )    //      if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
      {
      }
      else
      {
        this.doReturn ( );
        return; 
      }
    }
    if ( ( Compare.equals ( LAST_MOD, "INSERT" ) ) && ( Compare.equals ( LAST_CMD, RallyAppCommandFactory.FNEXT ) )  ) 
    {
      this._condition3 = true;
    }
    else
    {
      this._condition3 = false;
    }
    if ( this._condition3 )
    {
      if ( Compare.equals ( this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DIR_RESI_FLG" ), "F" ) ) 
      {
        this._condition4 = true;
      }
      else
      {
        this._condition4 = false;
      }
      if ( this._condition4 )
      {
        STATUS_CODE  = this.dm.reset ( OPEN_ID );

        this.dm.setField ( this.dm.get ( "DIRECCIONES_R_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "SOLICITUD_SERVICIO_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAMILIA" ));
        this.dm.setField ( this.dm.get ( "DIRECCIONES_R_DSD" ), "COD_TIPO_DIRECCION", "RESI" );
        this.dm.setField ( this.dm.get ( "DIRECCIONES_R_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

        STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
        STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

        STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

        if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
        {
          this._condition5 = true;
        }
        else
        {
          this._condition5 = false;
        }
        if ( this._condition5 )
        {
          this.app.callCommand ( RallyAppCommandFactory.FINSNEXT );
          return;
        }
      }
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition3 )    //    if ( ( Compare.equals ( LAST_MOD, "INSERT" ) ) && ( Compare.equals ( LAST_CMD, RallyAppCommandFactory.FNEXT ) )  ) 
    {
      if ( this._condition4 )    //      if ( Compare.equals ( this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DIR_RESI_FLG" ), "F" ) ) 
      {
        if ( this._condition5 )    //        if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
        {
          this.app.form ( "SOLICITUD_SERVICIO_FR" ).setItem ( "DIR_RESI_FLG", "T"  );
          this.app.RESI_FLAG_GBL = "*";
        }
        else
        {
          this.app.callCommand ( RallyAppCommandFactory.RGNEXT );
          return;
        }
      }
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( this._condition3 )    //    if ( ( Compare.equals ( LAST_MOD, "INSERT" ) ) && ( Compare.equals ( LAST_CMD, RallyAppCommandFactory.FNEXT ) )  ) 
    {
      if ( this._condition4 )    //      if ( Compare.equals ( this.app.form ( "SOLICITUD_SERVICIO_FR" ).getStringItem ( "DIR_RESI_FLG" ), "F" ) ) 
      {
        if ( this._condition5 )    //        if ( ! Compare.equals ( STATUS_CODE, 0 ) ) 
        {
        }
        else
        {
          this.doReturn ( );
          return; 
        }
      }
      else
      {
        this.app.callCommand ( RallyAppCommandFactory.RGNEXT );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step6 ( ParameterSet ps )
  {
    STATUS_CODE  = this.dm.dbClose ( OPEN_ID );

  }
}



/* ---------------------------------------------------------------------


     
procedure dir_resi_next_adl;   
var last_cmd: number(6,0);
    last_mod: char(6);
    open_id: number;
    status_code: number;
begin
        DB_OPEN(DIRECCIONES_R_DSD,OPEN_ID,STATUS_CODE);
        last_cmd:=get_cmd();
        last_mod:=get_mode();
        if (last_cmd=FPREV)
        then
                execute_cmd('previous field');
        {endif}
        if (last_mod='UPDATE') and (last_cmd=FNEXT)
        then    
            begin
                db_reset(open_id,status_code);
                direcciones_r_dsd.seguro_social_jefe_fam := 
                        solicitud_servicio_fr.seguro_social_jefe_familia;
                DIRECCIONES_R_DSD.COD_TIPO_DIRECCION := 'RESI';
                DIRECCIONES_R_DSD.RMO_OFICINA := RMO_GBL;
                db_query(open_id,status_code);
                db_get_first(open_id,status_code);
                if status_code <> 0
                then
                   begin
                        call_cmd('insert record next_group');
                        SOLICITUD_SERVICIO_FR.DIR_resi_FLG:='T';
                   end;
                else
                   begin
                        call_cmd('Next group');
                        return;
                   end;
            end;
        {endif}
        if (last_mod='INSERT') and (last_cmd=FNEXT)     
        then
                if (SOLICITUD_SERVICIO_FR.DIR_resi_FLG='F')
                then
                  begin
                        db_reset(open_id,status_code);
                        direcciones_r_dsd.seguro_social_jefe_fam := 
                        solicitud_servicio_fr.seguro_social_jefe_familia;
                        DIRECCIONES_R_DSD.COD_TIPO_DIRECCION := 'RESI';
                        DIRECCIONES_R_DSD.RMO_OFICINA := RMO_GBL;
                        db_query(open_id,status_code);
                        db_get_first(open_id,status_code);
                        if status_code <> 0
                        then
                            begin       
                                call_cmd('insert record next_group');
                                SOLICITUD_SERVICIO_FR.DIR_resi_FLG:='T';
                                 RESI_FLAG_GBL := '*';
                             end;
                        else
                           begin
                                call_cmd('Next group');
                                return;
                           end;
                  end;
                else
                        call_cmd('Next group');
                {endif}
        {endif}
        db_close(open_id,status_code);
end;
    



--------------------------------------------------------------------- */
