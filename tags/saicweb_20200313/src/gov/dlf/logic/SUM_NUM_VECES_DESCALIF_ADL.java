package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SUM_NUM_VECES_DESCALIF_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COUNTER = 0;

  public double NULL_VAL = 0;

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;



  public DataStore DESCALIFICADOS_LOC_RO_DSD = null;

  public DataStore DESCALIFICADOS_READ_LOC_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Parameter value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).COUNTER = value.getDouble ( );
  }  

  
  /**  */
  public static void setNULL_VAL  ( RallyApplication __app, Parameter value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).NULL_VAL = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getDESCALIFICADOS_LOC_RO_DSD  ( RallyApplication __app )
  {
    return ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).DESCALIFICADOS_LOC_RO_DSD;
  }


  /**  */
  public static void setDESCALIFICADOS_LOC_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).DESCALIFICADOS_LOC_RO_DSD = value;
  }


  /**  */
  public static void setDESCALIFICADOS_LOC_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).DESCALIFICADOS_LOC_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD;
  }


  /**  */
  public static void setDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD = value;
  }


  /**  */
  public static void setDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getCOUNTER  ( RallyApplication __app )
  {
    return ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).COUNTER;
  }


  /**  */
  public static Double getCOUNTERDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).COUNTER );
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, double value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).COUNTER = value;
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Object value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).COUNTER = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNULL_VAL  ( RallyApplication __app )
  {
    return ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).NULL_VAL;
  }


  /**  */
  public static Double getNULL_VALDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).NULL_VAL );
  }


  /**  */
  public static void setNULL_VAL  ( RallyApplication __app, double value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).NULL_VAL = value;
  }


  /**  */
  public static void setNULL_VAL  ( RallyApplication __app, Object value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).NULL_VAL = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( SUM_NUM_VECES_DESCALIF_ADL ) __app.getADL ( SUM_NUM_VECES_DESCALIF_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SUM_NUM_VECES_DESCALIF_ADL get ( RallyApplication __app )
  {
    SUM_NUM_VECES_DESCALIF_ADL adl = new SUM_NUM_VECES_DESCALIF_ADL ( );
    __app.register ( adl, "SUM_NUM_VECES_DESCALIF_ADL" );
    __app.setADL ( SUM_NUM_VECES_DESCALIF_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SUM_NUM_VECES_DESCALIF_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SUM_NUM_VECES_DESCALIF_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SUM_NUM_VECES_DESCALIF_ADL" );
    if ( rObj != null && rObj instanceof SUM_NUM_VECES_DESCALIF_ADL )
    {
      this.app.setADL ( SUM_NUM_VECES_DESCALIF_ADL.class, ( SUM_NUM_VECES_DESCALIF_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SUM_NUM_VECES_DESCALIF_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SUM_NUM_VECES_DESCALIF_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NULL_VAL = TruncService.setNull ( NULL_VAL  );
    this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "RMO_OFICINA", this.app.RMO_GBL  );
    if ( Compare.equals ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" ), NULL_VAL ) ) 
    {
      this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "NUM_VECES_DESC", 0  );
    }
    if ( Compare.equals ( StringService.toStringValue  ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" )), " " ) ) 
    {
      this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "NUM_VECES_DESC", 0  );
    }
    DESCALIFICADOS_LOC_RO_DSD = this.dm.create ( "DESCALIFICADOS_LOC_RO_DSD" );
    OPEN_ID = DESCALIFICADOS_LOC_RO_DSD.getId ( );
    STATUS_ID = RallyDataStoreException.getDefault ( );

    STATUS_ID  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "SEGURO_SOCIAL_CLIENTE" ));
    this.dm.setField ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "COD_SERVICIO", this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getStringItem ( "COD_SERVICIO" ));
    this.dm.setField ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_ID  = this.dm.retrieve ( OPEN_ID );

    STATUS_ID  = this.dm.firstRow ( OPEN_ID );

    while ( Compare.equals ( STATUS_ID, 0 ) ) 
    {
      COUNTER = this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" );
      if ( ( ! Compare.equals ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDateItem ( "FCH_EXPIRACION_MEDICAID" ), this.dm.getFieldDate ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "FCH_DESCALIFICACION" ) ) ) && ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "COD_SERVICIO" ), 0, 3 ), "PAN" ) )  ) 
      {
        if ( ( Compare.ge ( COUNTER, 300 ) ) || ( Compare.ge ( FormattingFactory.parseStringToDouble ( RallyStringService.subString ( "00" + StringService.toStringValue  ( COUNTER ), MathService.minus ( StringService.length ( "00" + StringService.toStringValue  ( COUNTER )  ), 3  ), 2 ) ), 30 ) ) ) 
        {
          this.app.setError ( 0, 5544 );
          this.app.errorFlag = false;
          this.doReturn ( );
          return; 
        }
        else
        {
          if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "COD_RAZON_DESCALIFICADO" ), "VIOL" ) ) 
          {
            COUNTER = MathService.plus ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" ), 10  );
          }
          if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "COD_RAZON_DESCALIFICADO" ), "ABJU" ) ) 
          {
            COUNTER = MathService.plus ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" ), 100  );
          }
          this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "NUM_VECES_DESC", COUNTER  );
          this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "FCH_EXPIRACION_MEDICAID", TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )   );
        }
      }
      else if ( ( ! Compare.equals ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDateItem ( "FCH_EXPIRACION_MEDICAID" ), this.dm.getFieldDate ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "FCH_DESCALIFICACION" ) ) ) && ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "DESCALIFICADOS_LOC_RO_DSD" ), "COD_SERVICIO" ), 0, 2 ), "AE" ) )   )
      {
        if ( Compare.ge ( FormattingFactory.parseStringToDouble ( RallyStringService.subString ( "00" + StringService.toStringValue  ( COUNTER ), MathService.minus ( StringService.length ( "00" + StringService.toStringValue  ( COUNTER )  ), 2  ), 1 ) ), 3 ) ) 
        {
          this.app.setError ( 1, 5544 );
          this.app.errorFlag = false;
          this.doReturn ( );
          return; 
        }
        else
        {
          if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "COD_RAZON_DESCALIFICADO" ), "VIOL" ) ) 
          {
            COUNTER = MathService.plus ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" ), 1  );
          }
          if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "COD_RAZON_DESCALIFICADO" ), "NCPR" ) ) 
          {
            COUNTER = MathService.plus ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" ), 1000  );
          }
           this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "NUM_VECES_DESC", COUNTER  );
          this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "FCH_EXPIRACION_MEDICAID", TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )   );
        }
      }

      STATUS_ID  = this.dm.nextRow ( OPEN_ID );

    }
    STATUS_ID  = this.dm.dbClose ( OPEN_ID );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SUM_NUM_VECES_DESCALIF_ADL;

var
   counter :  number;
   null_val : number;
   OPEN_ID : NUMBER;
   STATUS_ID : NUMBER;

begin
set_trace();
 MAKE_NULL(NULL_VAL);
{ PATERNO_GBL := INFOR_BIO_FRM.DSC_APELLIDO_PATERNO;
 MATERNO_GBL := INFOR_BIO_FRM.DSC_APELLIDO_MATERNO;
 SOUNDEX_GBL := '';
 CALL SNDXRTN_ADL;
 DESCALIFICADOS_CLIENTE_FR.ID_INDICE_SOUNDEX := SOUNDEX_GBL;}

 DESCALIFICADOS_CLIENTE_FR.RMO_OFICINA := RMO_GBL;

{ IF (INFOR_BIO_FRM.FLG_DESCALIFICADO <> 'X') 
       then RETURN;}
if DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC = null_val
    then DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC := 0;
if to_char(DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC) = ' '
    then DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC := 0;

DB_OPEN(DESCALIFICADOS_LOC_RO_DSD,OPEN_ID,STATUS_ID);
DB_RESET(OPEN_ID,STATUS_ID);

DESCALIFICADOS_LOC_RO_DSD.SEGURO_SOCIAL_CLIENTE :=
DESCALIFICADOS_CLIENTE_FR.SEGURO_SOCIAL_CLIENTE;
DESCALIFICADOS_LOC_RO_DSD.COD_SERVICIO:=
DESCALIFICADOS_CLIENTE_FR.COD_SERVICIO;
DESCALIFICADOS_LOC_RO_DSD.RMO_OFICINA:=RMO_GBL;
DB_QUERY(OPEN_ID,STATUS_ID);
DB_GET_FIRST(OPEN_ID,STATUS_ID);
WHILE (STATUS_ID = 0) DO
BEGIN

COUNTER := DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC;
        if (DESCALIFICADOS_CLIENTE_FR.FCH_EXPIRACION_MEDICAID <> DESCALIFICADOS_
LOC_RO_DSD.FCH_DESCALIFICACION)
        and (SUBSTR(DESCALIFICADOS_LOC_RO_DSD.COD_SERVICIO,0,3) = 'PAN')
        then
          BEGIN
           if (counter >= 300) OR
              (to_number(SUBSTR('00'||TO_CHAR(counter),LENGTH('00'||TO_CHAR(coun
ter))-3,2)) >= 30) THEN
           begin
               error(5544);
               set_failure();
               RETURN;
           end;
           else begin 
                 IF DESCALIFICADOS_LOC_RO_DSD.COD_RAZON_DESCALIFICADO = 'VIOL' T
HEN
                       counter := DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC + 10;
                 IF (DESCALIFICADOS_LOC_RO_DSD.COD_RAZON_DESCALIFICADO = 'ABJU')
                 THEN
                  counter :=  DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC + 100;
                 DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC := counter;
                 DESCALIFICADOS_CLIENTE_FR.FCH_EXPIRACION_MEDICAID := TRUNC(SYST
EM_DATE,'DDD');
                 end;
          END;
        else if (DESCALIFICADOS_CLIENTE_FR.FCH_EXPIRACION_MEDICAID <> DESCALIFIC
ADOS_LOC_RO_DSD.FCH_DESCALIFICACION) AND
                 (SUBSTR(DESCALIFICADOS_LOC_RO_DSD.COD_SERVICIO,0,2) = 'AE')
             then
               if to_number(SUBSTR('00'||TO_CHAR(counter),LENGTH('00'||TO_CHAR(c
ounter))-2,1)) >= 3
               then
                    begin
                    error(5544);
                    set_failure();
                    RETURN;
                    end;
               else begin
                     IF DESCALIFICADOS_READ_LOC_DSD.COD_RAZON_DESCALIFICADO = 'V
IOL' THEN
                         counter :=  DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC + 
1;
                         DESCALIFICADOS_CLIENTE_FR.NUM_VECES_DESC := counter;
                         DESCALIFICADOS_CLIENTE_FR.FCH_EXPIRACION_MEDICAID := TR
UNC(SYSTEM_DATE,'DDD'); 
            END;
        DB_GET_NEXT(OPEN_ID,STATUS_ID);
     END;     
  SET_NOTRACE();
DB_CLOSE(OPEN_ID,STATUS_ID);

   END;
    



--------------------------------------------------------------------- */
