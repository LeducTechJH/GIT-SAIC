package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class REGPAG_PRN_PKT_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static REGPAG_PRN_PKT_ADL get ( RallyApplication __app )
  {
    REGPAG_PRN_PKT_ADL adl = new REGPAG_PRN_PKT_ADL ( );
    __app.register ( adl, "REGPAG_PRN_PKT_ADL" );
    __app.setADL ( REGPAG_PRN_PKT_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    REGPAG_PRN_PKT_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    REGPAG_PRN_PKT_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "REGPAG_PRN_PKT_ADL" );
    if ( rObj != null && rObj instanceof REGPAG_PRN_PKT_ADL )
    {
      this.app.setADL ( REGPAG_PRN_PKT_ADL.class, ( REGPAG_PRN_PKT_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "REGPAG_PRN_PKT_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "REGPAG_PRN_PKT_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.setError ( 0, 7100 );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE REGPAG_PRN_PKT_ADL;

SET_TRACE();

ERROR(7100);

{
REGPAG_PRN_FR.SERVICIOS_SEGURO_SOCIAL_JEFE_FAM := REGPAG_FR.SERVICIOS_SEGURO_SOC
IAL_JEFE_FAM;
REGPAG_PRN_FR.SERVICIOS_SEGURO_SOCIAL_JEFE_SERV := REGPAG_FR.SERVICIOS_SEGURO_SO
CIAL_JEFE_SERV;
REGPAG_PRN_FR.SERVICIOS_COD_SERVICIO := REGPAG_FR.SERVICIOS_COD_SERVICIO;       
    
REGPAG_PRN_FR.SERVICIOS_COD_STATUS_SERVICIO  := REGPAG_FR.SERVICIOS_COD_STATUS_S
ERVICIO;   
REGPAG_PRN_FR.REGPAG_NOMBRE := REGPAG_FR.REGPAG_NOMBRE;                         
REGPAG_PRN_FR.RECLA_RETRO_TBL_CLASIFICACION_RECLA := REGPAG_FR.RECLA_RETRO_TBL_C
LASIFICACION_RECLA;
REGPAG_PRN_FR.RECLA_RETRO_TBL_CANTIDAD_RECLA_RETRO := REGPAG_FR.RECLA_RETRO_TBL_
CANTIDAD_RECLA_RETRO;        
REGPAG_PRN_FR.RECLA_RETRO_TBL_VLR_BALANCE  := REGPAG_FR.RECLA_RETRO_TBL_VLR_BALA
NCE;        
REGPAG_PRN_FR.RECLA_RETRO_TBL_CANTIDAD_DEDUCIR := REGPAG_FR.RECLA_RETRO_TBL_CANT
IDAD_DEDUCIR;   
REGPAG_PRN_FR.RECLA_RETRO_TBL_NUMERO_FACTURA := REGPAG_FR.RECLA_RETRO_TBL_NUMERO
_FACTURA;     
REGPAG_PRN_FR.FACTURAS_FCH_FACTURA := REGPAG_FR.FACTURAS_FCH_FACTURA;
}
{
REGPAG_PRN_FR.SSJF := REGPAG_FR.SERVICIOS_SEGURO_SOCIAL_JEFE_FAM;
REGPAG_PRN_FR.SSJS := REGPAG_FR.SERVICIOS_SEGURO_SOCIAL_JEFE_SERV;
REGPAG_PRN_FR.CS   := REGPAG_FR.SERVICIOS_COD_SERVICIO;           
REGPAG_PRN_FR.CSS  := REGPAG_FR.SERVICIOS_COD_STATUS_SERVICIO;   
REGPAG_PRN_FR.NOMB := REGPAG_FR.REGPAG_NOMBRE;                         
REGPAG_PRN_FR.CLRE := REGPAG_FR.RECLA_RETRO_TBL_CLASIFICACION_RECLA;
REGPAG_PRN_FR.REOR := REGPAG_FR.RECLA_RETRO_TBL_CANTIDAD_RECLA_RETRO;        
REGPAG_PRN_FR.BAL  := REGPAG_FR.RECLA_RETRO_TBL_VLR_BALANCE;        
REGPAG_PRN_FR.PAGM := REGPAG_FR.RECLA_RETRO_TBL_CANTIDAD_DEDUCIR;   
REGPAG_PRN_FR.FACT := REGPAG_FR.RECLA_RETRO_TBL_NUMERO_FACTURA;     
REGPAG_PRN_FR.FECH := REGPAG_FR.FACTURAS_FCH_FACTURA;
REGPAG_PRN_FR.FCHP := REGPAG_FR.FCH_PAGO;              
REGPAG_PRN_FR.TIPP := REGPAG_FR.MODO_PAGO;           
REGPAG_PRN_FR.NUMC := REGPAG_FR.NUM_CHEQUE;          
REGPAG_PRN_FR.NUMR := REGPAG_FR.NUM_RECIBO;             
REGPAG_PRN_FR.PAGE := REGPAG_FR.RECIBIDO_EN;           
REGPAG_PRN_FR.CANT := REGPAG_FR.VLR_CANTIDAD;           
}

SET_NOTRACE();



    



--------------------------------------------------------------------- */
