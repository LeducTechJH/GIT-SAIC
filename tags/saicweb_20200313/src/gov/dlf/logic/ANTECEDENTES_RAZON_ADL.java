package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class ANTECEDENTES_RAZON_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double CLC_STAT_ID = 0;

  public double CLC_STATUS = 0;



  public DataStore CLC_STAT_TBL_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCLC_STAT_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STAT_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCLC_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STATUS = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getCLC_STAT_TBL_DSD  ( RallyApplication __app )
  {
    return ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STAT_TBL_DSD;
  }


  /**  */
  public static void setCLC_STAT_TBL_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STAT_TBL_DSD = value;
  }


  /**  */
  public static void setCLC_STAT_TBL_DSD  ( RallyApplication __app, Object value )
  {
    ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STAT_TBL_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getCLC_STAT_ID  ( RallyApplication __app )
  {
    return ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STAT_ID;
  }


  /**  */
  public static Double getCLC_STAT_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STAT_ID );
  }


  /**  */
  public static void setCLC_STAT_ID  ( RallyApplication __app, double value )
  {
    ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STAT_ID = value;
  }


  /**  */
  public static void setCLC_STAT_ID  ( RallyApplication __app, Object value )
  {
    ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STAT_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCLC_STATUS  ( RallyApplication __app )
  {
    return ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STATUS;
  }


  /**  */
  public static Double getCLC_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STATUS );
  }


  /**  */
  public static void setCLC_STATUS  ( RallyApplication __app, double value )
  {
    ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STATUS = value;
  }


  /**  */
  public static void setCLC_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( ANTECEDENTES_RAZON_ADL ) __app.getADL ( ANTECEDENTES_RAZON_ADL.class ) ).CLC_STATUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static ANTECEDENTES_RAZON_ADL get ( RallyApplication __app )
  {
    ANTECEDENTES_RAZON_ADL adl = new ANTECEDENTES_RAZON_ADL ( );
    __app.register ( adl, "ANTECEDENTES_RAZON_ADL" );
    __app.setADL ( ANTECEDENTES_RAZON_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    ANTECEDENTES_RAZON_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    ANTECEDENTES_RAZON_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "ANTECEDENTES_RAZON_ADL" );
    if ( rObj != null && rObj instanceof ANTECEDENTES_RAZON_ADL )
    {
      this.app.setADL ( ANTECEDENTES_RAZON_ADL.class, ( ANTECEDENTES_RAZON_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "ANTECEDENTES_RAZON_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "ANTECEDENTES_RAZON_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    CLC_STAT_TBL_DSD = this.dm.create ( "CLC_STAT_TBL_DSD" );
    CLC_STAT_ID = CLC_STAT_TBL_DSD.getId ( );
    CLC_STATUS = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( CLC_STATUS, 0 ) ) 
    {
      this.app.setError ( 0, CLC_STATUS );
      this.doReturn ( );
      return; 
    }

    CLC_STATUS  = this.dm.reset ( CLC_STAT_ID );

    this.dm.setField ( this.dm.get ( "CLC_STAT_TBL_DSD" ), "COD_ESTATUS", this.app.form ( "ANTECEDENTE_CLIENTE_FR" ).getStringItem ( "ANTECEDE_PROGRAMA_NUM_CASO" ));

    CLC_STATUS  = this.dm.limitQueryFromBuffer ( CLC_STAT_ID );
    CLC_STATUS  = this.dm.retrieve ( CLC_STAT_ID );

    CLC_STATUS  = this.dm.firstRow ( CLC_STAT_ID );

    if ( Compare.equals ( CLC_STATUS, 0 ) ) 
    {
      this.app.form ( "ANTECEDENTE_CLIENTE_FR" ).setItem ( "DSC_RAZON", this.dm.getFieldString ( this.dm.get ( "CLC_STAT_TBL_DSD" ), "DSC_ESTATUS" )  );
    }
    else
    {
      this.app.form ( "ANTECEDENTE_CLIENTE_FR" ).setItem ( "DSC_RAZON", " "  );
    }
    CLC_STATUS  = this.dm.dbClose ( CLC_STAT_ID );

    this.doReturn ( );
    return; 

  }
}



/* ---------------------------------------------------------------------


     
procedure antecedentes_razon_adl;
var
  clc_stat_id   :       number;
  clc_status    :       number;

begin
set_trace();
db_open(clc_stat_tbl_dsd,clc_stat_id,clc_status);
if (clc_status <> 0) then
        begin
                error(clc_status);
                return;
                end;
db_reset(clc_stat_id,clc_status);
CLC_STAT_TBL_DSD.COD_ESTATUS :=
   ANTECEDENTE_CLIENTE_FR.ANTECEDE_PROGRAMA_NUM_CASO;
db_query(clc_stat_id,clc_status);
db_get_first(clc_stat_id,clc_status);
if (clc_status = 0) then
    ANTECEDENTE_CLIENTE_FR.DSC_RAZON :=
    CLC_STAT_TBL_DSD.DSC_ESTATUS;
ELSE   ANTECEDENTE_CLIENTE_FR.DSC_RAZON := ' ';
db_close(clc_stat_id,clc_status);
return;
set_notrace();
end;

    



--------------------------------------------------------------------- */
