package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SC724_FACTURA_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN2_ID = 0;

  public double STATUS2_ID = 0;

  public double OPEN3_ID = 0;

  public double STATUS3_ID = 0;

  public double LAST_KEY = 0;



  public DataStore FACTURAS_DSD = null;

  public DataStore NOTIFICACIONES_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN2_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS2_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN3_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS3_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS3_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setLAST_KEY  ( RallyApplication __app, Parameter value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).LAST_KEY = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getFACTURAS_DSD  ( RallyApplication __app )
  {
    return ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).FACTURAS_DSD;
  }


  /**  */
  public static void setFACTURAS_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).FACTURAS_DSD = value;
  }


  /**  */
  public static void setFACTURAS_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).FACTURAS_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNOTIFICACIONES_DSD  ( RallyApplication __app )
  {
    return ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).NOTIFICACIONES_DSD;
  }


  /**  */
  public static void setNOTIFICACIONES_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).NOTIFICACIONES_DSD = value;
  }


  /**  */
  public static void setNOTIFICACIONES_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).NOTIFICACIONES_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN2_ID  ( RallyApplication __app )
  {
    return ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN2_ID;
  }


  /**  */
  public static Double getOPEN2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN2_ID );
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, double value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN2_ID = value;
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Object value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS2_ID  ( RallyApplication __app )
  {
    return ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS2_ID;
  }


  /**  */
  public static Double getSTATUS2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS2_ID );
  }


  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, double value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS2_ID = value;
  }


  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, Object value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN3_ID  ( RallyApplication __app )
  {
    return ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN3_ID;
  }


  /**  */
  public static Double getOPEN3_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN3_ID );
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, double value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN3_ID = value;
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Object value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).OPEN3_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS3_ID  ( RallyApplication __app )
  {
    return ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS3_ID;
  }


  /**  */
  public static Double getSTATUS3_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS3_ID );
  }


  /**  */
  public static void setSTATUS3_ID  ( RallyApplication __app, double value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS3_ID = value;
  }


  /**  */
  public static void setSTATUS3_ID  ( RallyApplication __app, Object value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).STATUS3_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getLAST_KEY  ( RallyApplication __app )
  {
    return ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).LAST_KEY;
  }


  /**  */
  public static Double getLAST_KEYDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).LAST_KEY );
  }


  /**  */
  public static void setLAST_KEY  ( RallyApplication __app, double value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).LAST_KEY = value;
  }


  /**  */
  public static void setLAST_KEY  ( RallyApplication __app, Object value )
  {
    ( ( SC724_FACTURA_ADL ) __app.getADL ( SC724_FACTURA_ADL.class ) ).LAST_KEY = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SC724_FACTURA_ADL get ( RallyApplication __app )
  {
    SC724_FACTURA_ADL adl = new SC724_FACTURA_ADL ( );
    __app.register ( adl, "SC724_FACTURA_ADL" );
    __app.setADL ( SC724_FACTURA_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SC724_FACTURA_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SC724_FACTURA_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SC724_FACTURA_ADL" );
    if ( rObj != null && rObj instanceof SC724_FACTURA_ADL )
    {
      this.app.setADL ( SC724_FACTURA_ADL.class, ( SC724_FACTURA_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SC724_FACTURA_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SC724_FACTURA_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    LAST_KEY = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( LAST_KEY, RallyAppCommandFactory.ABORTACTION ) ) 
    {
      this.doReturn ( );
      return;
    }
    FACTURAS_DSD = this.dm.create ( "FACTURAS_DSD" );
    OPEN3_ID = FACTURAS_DSD.getId ( );
    STATUS3_ID = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( STATUS3_ID, 0 ) ) 
    {
      this.app.setError ( 0, STATUS3_ID );
      STATUS3_ID  = this.dm.dbClose ( OPEN3_ID );

      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "FACTURAS_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "FACTURAS_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "FACTURAS_DSD" ), "COD_SERVICIO", this.app.COD_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "FACTURAS_DSD" ), "FCH_FACTURA", this.app.form ( "GET_SC724_FACTURA_FR" ).getDateItem ( "FCH_FACTURA" ));
    this.dm.setField ( this.dm.get ( "FACTURAS_DSD" ), "FCH_VENCIMIENTO", MathService.plus ( this.app.form ( "GET_SC724_FACTURA_FR" ).getDateItem ( "FCH_FACTURA" ), 30  ) );
    this.dm.setField ( this.dm.get ( "FACTURAS_DSD" ), "FECHA_IDENTIFICADO", this.app.FCH_FINAL_GBL );
    this.dm.setField ( this.dm.get ( "FACTURAS_DSD" ), "NUMERO_FACTURA", this.app.form ( "GET_SC724_FACTURA_FR" ).getDoubleItem ( "FACTURA_NO" ));
    this.dm.setField ( this.dm.get ( "FACTURAS_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    boolean tempBool1 = this.dm.getLogEnabled ( );          
    this.dm.setLogEnabled ( false );
    STATUS3_ID  = this.dm.insertRow ( OPEN3_ID );
    this.dm.setLogEnabled ( tempBool1 );
    
    if ( ! Compare.equals ( STATUS3_ID, 0 ) ) 
    {
      this.app.setError ( 1, STATUS3_ID );
      STATUS3_ID  = this.dm.dbClose ( OPEN3_ID );

      this.doReturn ( );
      return; 
    }

    STATUS3_ID  = this.dm.dbCommit ( );
    if ( ! Compare.equals ( STATUS3_ID, 0 ) ) 
    {
      this.app.setError ( 2, STATUS3_ID );
      STATUS3_ID  = this.dm.dbClose ( OPEN3_ID );

      this.doReturn ( );
      return; 
    }
    STATUS3_ID  = this.dm.dbClose ( OPEN3_ID );

    if ( ! Compare.equals ( STATUS3_ID, 0 ) ) 
    {
      this.app.setError ( 3, STATUS3_ID );
      STATUS3_ID  = this.dm.dbClose ( OPEN3_ID );

      this.doReturn ( );
      return; 
    }
    NOTIFICACIONES_DSD = this.dm.create ( "NOTIFICACIONES_DSD" );
    OPEN2_ID = NOTIFICACIONES_DSD.getId ( );
    STATUS2_ID = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
    {
      this.app.setError ( 4, STATUS2_ID );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "NOTIFICACIONES_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "NOTIFICACIONES_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "NOTIFICACIONES_DSD" ), "COD_SERVICIO", this.app.COD_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "NOTIFICACIONES_DSD" ), "COD_NOTIFICACION", "0724" );
    this.dm.setField ( this.dm.get ( "NOTIFICACIONES_DSD" ), "COD_REVISION", "" );
    this.dm.setField ( this.dm.get ( "NOTIFICACIONES_DSD" ), "FCH_NOTIFICACION", this.app.SYSTEM_DATE );
    this.dm.setField ( this.dm.get ( "NOTIFICACIONES_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    this.dm.setLogEnabled ( false );
    STATUS2_ID  = this.dm.insertRow ( OPEN2_ID );
    this.dm.setLogEnabled ( tempBool1 );
    if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
    {
      this.app.setError ( 5, STATUS2_ID );
      this.doReturn ( );
      return; 
    }

    STATUS2_ID  = this.dm.dbCommit ( );
    if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
    {
      this.app.setError ( 6, STATUS2_ID );
      this.doReturn ( );
      return; 
    }
    STATUS2_ID  = this.dm.dbClose ( OPEN2_ID );

    if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
    {
      this.app.setError ( 7, STATUS2_ID );
      this.doReturn ( );
      return; 
    }
    this.app.NUM_FACTURA_GBL = this.app.form ( "GET_SC724_FACTURA_FR" ).getDoubleItem ( "FACTURA_NO" );
    this.app.executeCommand ( RallyAppCommandFactory.EXITACTION );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    return; 

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SC724_FACTURA_ADL;
VAR
   open2_id     :number;
   status2_ID   :number;
   open3_id     :number;
   status3_ID   :number;
   last_key     :number;
begin
last_key := get_cmd();
if last_key = abortaction
then
        return;
{endif}

                        db_open(FACTURAS_DSD,open3_id,status3_id);
                        if status3_id <> 0
                        then
                        begin
                                error(status3_id);
                                db_close(open3_id,status3_id);
                                return;
                        end;
                        {endif} 
                        
                        facturas_dsd.seguro_social_jefe_fam     :=      ss_jefe_
familia_gbl;
                        facturas_dsd.seguro_social_jefe_serv    :=      ss_jefe_
servicio_gbl;
                        facturas_dsd.cod_servicio               :=      cod_serv
icio_gbl;
                        facturas_dsd.fch_factura                :=      GET_SC72
4_FACTURA_FR.FCH_FACTURA;
                        facturas_dsd.fch_vencimiento            :=      GET_SC72
4_FACTURA_FR.FCH_FACTURA+30;
                        facturas_dsd.fecha_identificado         :=      fch_fina
l_gbl;
                        FACTURAS_DSD.NUMERO_FACTURA             :=      GET_SC72
4_FACTURA_FR.FACTURA_NO;
                        FACTURAS_DSD.RMO_OFICINA                :=      RMO_GBL;
                        db_insert(open3_id,status3_id);
                        if status3_id <> 0      
                        then
                        begin
                                error(status3_id);
                                db_close(open3_id,status3_id);
                                return;
                        end;
                        {endif}
                        db_commit(status3_id);
                        if status3_id <> 0
                        then
                        begin
                                error(status3_id);
                                db_close(open3_id,status3_id);
                                return;
                        end;
                
                        {endif}
                        db_close(open3_id,status3_id);
                        if status3_id <> 0
                        then
                        begin
                                error(status3_id);
                                db_close(open3_id,status3_id);
                                return;
                        end;
                        {endif}
                        
                        {actualizar tabla de notificaciones}
                db_open(notificaciones_dsd,open2_id,status2_id);
                        if status2_id <> 0
                        then
                        begin
                                error(status2_id);
                        return;
                        end;
                        {endif} 


                        notificaciones_dsd.seguro_social_jefe_fam       :=      
ss_jefe_familia_gbl;
                        notificaciones_dsd.seguro_social_jefe_serv      :=      
ss_jefe_servicio_gbl;
                        notificaciones_dsd.cod_servicio                 :=      
cod_servicio_gbl;
                        notificaciones_dsd.cod_notificacion             :=      
'0724';
                        notificaciones_dsd.cod_revision                 :=      
'';
                        notificaciones_dsd.fch_notificacion             :=      
system_date;
                        NOTIFICACIONES_DSD.RMO_OFICINA                  :=      
RMO_GBL;                
                        db_insert(open2_id,status2_id);
                        if status2_id <> 0      
                        then
                        begin
                        error(status2_id);
                        return;
                        end;
                        {endif}

                db_commit(status2_id);
                        if status2_id <> 0
                        then
                        begin
                                error(status2_id);
                                return;
                        end;
                        {endif}
                db_close(open2_id,status2_id);
                        if status2_id <> 0
                        then
                        begin
                                error(status2_id);
                                return;
                        end;
                        {endif}
                        NUM_FACTURA_GBL :=      GET_SC724_FACTURA_FR.FACTURA_NO;
                        EXECUTE_CMD('FINISH ACTION');
end;
    



--------------------------------------------------------------------- */
