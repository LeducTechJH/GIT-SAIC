package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class PTRA_EMPRESAS_BL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

 


  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  

  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  public PTRA_EMPRESAS_BL ( SAIC_DMQ_ORA_Application _app )
  {
    this.app = _app;
    this.dm = ( RallyDataManager ) this.app.getDataManager ( );
  }
  
  /**
   *
   */
  public String getEmpresasDscLarga ( String numReferencia )
  {
    String returnValue = "";
    if ( numReferencia == null || numReferencia.length ( ) <= 0 ) return returnValue;
   
    DataStore EMPRESAS_RO_DSD2 = this.dm.create ( "EMPRESAS_RO_DSD2" );
    double OPEN_ID = EMPRESAS_RO_DSD2.getId ( );
    double STAT_ID = RallyDataStoreException.getDefault ( );
    
    STAT_ID  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( EMPRESAS_RO_DSD2, "NUMERO_REFERENCIA", numReferencia );

    STAT_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STAT_ID  = this.dm.retrieve ( OPEN_ID );

    if ( Compare.equals ( STAT_ID, 0 ) ) 
    {
      STAT_ID  = this.dm.firstRow ( OPEN_ID );
      returnValue = this.dm.getFieldString ( EMPRESAS_RO_DSD2, "NOMBRE_PATRONO" );
    }
    
    STAT_ID  = this.dm.dbClose ( OPEN_ID );

    return returnValue;
  }
  
  
  /**
  *
  */
  public void validateNumReferencia ( double numReferencia )
  {
    if ( Double.isNaN ( numReferencia ) || numReferencia <= 0 ) return;
  
    DataStore EMPRESAS_RO_DSD2 = this.dm.create ( "EMPRESAS_RO_DSD2" );
    double OPEN_ID = EMPRESAS_RO_DSD2.getId ( );
    double STAT_ID = RallyDataStoreException.getDefault ( );
   
    STAT_ID  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( EMPRESAS_RO_DSD2, "SEG_SOC_PATRONAL", numReferencia );

    STAT_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STAT_ID  = this.dm.retrieve ( OPEN_ID );

    if ( Compare.equals ( STAT_ID, 0 ) ) 
    {
      STAT_ID  = this.dm.firstRow ( OPEN_ID );
      if ( Compare.equals ( STAT_ID, 0 ) ) 
      {
        this.app.errorFlag = true;
        return;
      }
    }
   
    STAT_ID  = this.dm.dbClose ( OPEN_ID );

    this.app.setError ( "VAL001", "The entered value does not pass the validation" );
    this.app.errorFlag = false;
  }
}



