package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CHECK_TRANS_W_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double CORR_ID = 0;

  public double CORR_STATUS = 0;

  public double INCORR_ID = 0;

  public double INCORR_STATUS = 0;



  public DataStore BASE_CORRECTA_RO_DSD = null;

  public DataStore BASE_INCORRECTA_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCORR_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCORR_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setINCORR_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setINCORR_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_STATUS = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getBASE_CORRECTA_RO_DSD  ( RallyApplication __app )
  {
    return ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).BASE_CORRECTA_RO_DSD;
  }


  /**  */
  public static void setBASE_CORRECTA_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).BASE_CORRECTA_RO_DSD = value;
  }


  /**  */
  public static void setBASE_CORRECTA_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).BASE_CORRECTA_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getBASE_INCORRECTA_RO_DSD  ( RallyApplication __app )
  {
    return ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).BASE_INCORRECTA_RO_DSD;
  }


  /**  */
  public static void setBASE_INCORRECTA_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).BASE_INCORRECTA_RO_DSD = value;
  }


  /**  */
  public static void setBASE_INCORRECTA_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).BASE_INCORRECTA_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getCORR_ID  ( RallyApplication __app )
  {
    return ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_ID;
  }


  /**  */
  public static Double getCORR_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_ID );
  }


  /**  */
  public static void setCORR_ID  ( RallyApplication __app, double value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_ID = value;
  }


  /**  */
  public static void setCORR_ID  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCORR_STATUS  ( RallyApplication __app )
  {
    return ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_STATUS;
  }


  /**  */
  public static Double getCORR_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_STATUS );
  }


  /**  */
  public static void setCORR_STATUS  ( RallyApplication __app, double value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_STATUS = value;
  }


  /**  */
  public static void setCORR_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).CORR_STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINCORR_ID  ( RallyApplication __app )
  {
    return ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_ID;
  }


  /**  */
  public static Double getINCORR_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_ID );
  }


  /**  */
  public static void setINCORR_ID  ( RallyApplication __app, double value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_ID = value;
  }


  /**  */
  public static void setINCORR_ID  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINCORR_STATUS  ( RallyApplication __app )
  {
    return ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_STATUS;
  }


  /**  */
  public static Double getINCORR_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_STATUS );
  }


  /**  */
  public static void setINCORR_STATUS  ( RallyApplication __app, double value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_STATUS = value;
  }


  /**  */
  public static void setINCORR_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_TRANS_W_ADL ) __app.getADL ( CHECK_TRANS_W_ADL.class ) ).INCORR_STATUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CHECK_TRANS_W_ADL get ( RallyApplication __app )
  {
    CHECK_TRANS_W_ADL adl = new CHECK_TRANS_W_ADL ( );
    __app.register ( adl, "CHECK_TRANS_W_ADL" );
    __app.setADL ( CHECK_TRANS_W_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CHECK_TRANS_W_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CHECK_TRANS_W_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CHECK_TRANS_W_ADL" );
    if ( rObj != null && rObj instanceof CHECK_TRANS_W_ADL )
    {
      this.app.setADL ( CHECK_TRANS_W_ADL.class, ( CHECK_TRANS_W_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CHECK_TRANS_W_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CHECK_TRANS_W_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    BASE_CORRECTA_RO_DSD = this.dm.create ( "BASE_CORRECTA_RO_DSD" );
    CORR_ID = BASE_CORRECTA_RO_DSD.getId ( );
    CORR_STATUS = RallyDataStoreException.getDefault ( );
    BASE_INCORRECTA_RO_DSD = this.dm.create ( "BASE_INCORRECTA_RO_DSD" );
    INCORR_ID = BASE_INCORRECTA_RO_DSD.getId ( );
    INCORR_STATUS = RallyDataStoreException.getDefault ( );

    CORR_STATUS  = this.dm.reset ( CORR_ID );

    INCORR_STATUS  = this.dm.reset ( INCORR_ID );

    this.dm.setField ( this.dm.get ( "BASE_CORRECTA_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "BASE_CORRECTA_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "BASE_CORRECTA_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "BASE_CORRECTA_RO_DSD" ), "ACCION", this.app.ACCION_GBL );
    this.dm.setField ( this.dm.get ( "BASE_CORRECTA_RO_DSD" ), "FECHA_IDENTIFICADO", this.app.FECHA_IDENTIFICADO_GBL );
    this.dm.setField ( this.dm.get ( "BASE_CORRECTA_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    CORR_STATUS  = this.dm.limitQueryFromBuffer ( CORR_ID );
    CORR_STATUS  = this.dm.retrieve ( CORR_ID );

    CORR_STATUS  = this.dm.firstRow ( CORR_ID );

    if ( ! Compare.equals ( CORR_STATUS, 0 ) ) 
    {
      this.app.setError ( 0, 6900 );
      CORR_STATUS  = this.dm.dbClose ( CORR_ID );

      INCORR_STATUS  = this.dm.dbClose ( INCORR_ID );

      this.app.FLG_TRANS_W = "S";
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "BASE_INCORRECTA_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "BASE_INCORRECTA_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "BASE_INCORRECTA_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "BASE_INCORRECTA_RO_DSD" ), "ACCION", this.app.ACCION_GBL );
    this.dm.setField ( this.dm.get ( "BASE_INCORRECTA_RO_DSD" ), "FECHA_IDENTIFICADO", this.app.FECHA_IDENTIFICADO_GBL );
    this.dm.setField ( this.dm.get ( "BASE_INCORRECTA_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    INCORR_STATUS  = this.dm.limitQueryFromBuffer ( INCORR_ID );
    INCORR_STATUS  = this.dm.retrieve ( INCORR_ID );

    INCORR_STATUS  = this.dm.firstRow ( INCORR_ID );

    if ( ! Compare.equals ( INCORR_STATUS, 0 ) ) 
    {
      this.app.setError ( 1, 6900 );
      CORR_STATUS  = this.dm.dbClose ( CORR_ID );

      INCORR_STATUS  = this.dm.dbClose ( INCORR_ID );

      this.app.FLG_TRANS_W = "S";
      this.doReturn ( );
      return; 
    }
    CORR_STATUS  = this.dm.dbClose ( CORR_ID );

    INCORR_STATUS  = this.dm.dbClose ( INCORR_ID );

  }
}



/* ---------------------------------------------------------------------


     
VAR
        CORR_ID : NUMBER(9,0);
        CORR_STATUS : NUMBER(9,0);
        INCORR_ID : NUMBER(9,0);
        INCORR_STATUS : NUMBER(9,0);

BEGIN
SET_TRACE();

DB_OPEN(BASE_CORRECTA_RO_DSD,CORR_ID,CORR_STATUS);
DB_OPEN(BASE_INCORRECTA_RO_DSD,INCORR_ID,INCORR_STATUS);

DB_RESET(CORR_ID,CORR_STATUS);
DB_RESET(INCORR_ID,INCORR_STATUS);

BASE_CORRECTA_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
BASE_CORRECTA_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
BASE_CORRECTA_RO_DSD.COD_SERVICIO := cod_serv_gbl;
BASE_CORRECTA_RO_DSD.ACCION := accion_gbl;
BASE_CORRECTA_RO_DSD.FECHA_IDENTIFICADO := fecha_identificado_gbl;
BASE_CORRECTA_RO_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(CORR_ID,CORR_STATUS);
DB_GET_FIRST(CORR_ID,CORR_STATUS);

IF (CORR_STATUS <> 0)
THEN
  BEGIN
   ERROR(6900);
   DB_CLOSE(CORR_ID,CORR_STATUS);
   DB_CLOSE(INCORR_ID,INCORR_STATUS);
   FLG_TRANS_W := 'S';
   RETURN;
  END;

BASE_INCORRECTA_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
BASE_INCORRECTA_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
BASE_INCORRECTA_RO_DSD.COD_SERVICIO := cod_serv_gbl;
BASE_INCORRECTA_RO_DSD.ACCION := accion_gbl;
BASE_INCORRECTA_RO_DSD.FECHA_IDENTIFICADO := fecha_identificado_gbl;
BASE_INCORRECTA_RO_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(INCORR_ID,INCORR_STATUS);
DB_GET_FIRST(INCORR_ID,INCORR_STATUS);

IF (INCORR_STATUS <> 0)
THEN
  BEGIN
   ERROR(6900);
   DB_CLOSE(CORR_ID,CORR_STATUS);
   DB_CLOSE(INCORR_ID,INCORR_STATUS);
   FLG_TRANS_W := 'S';
   RETURN;
  END;

DB_CLOSE(CORR_ID,CORR_STATUS);
DB_CLOSE(INCORR_ID,INCORR_STATUS);
SET_NOTRACE();
END;
    



--------------------------------------------------------------------- */
