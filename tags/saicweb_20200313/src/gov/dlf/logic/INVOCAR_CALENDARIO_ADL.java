package gov.dlf.logic;


import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class INVOCAR_CALENDARIO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double CONTADOR = 0;

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;



  public String SEMANA_NO_DISPONIBLE = null;

  public String NUEVA_FECHA_PEDIDA = null;

  public String FIN_SOLICITUD = null;

  public Date FECHA_PEDIDA = null;

  public String FECHA_CHAR = null;

  public String LOCAL_FUNCTION_REPUESTA = null;

  public DataStore CALENDARIO2_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setSEMANA_NO_DISPONIBLE  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).SEMANA_NO_DISPONIBLE = value.getString ( );
  }  

  
  /**  */
  public static void setNUEVA_FECHA_PEDIDA  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).NUEVA_FECHA_PEDIDA = value.getString ( );
  }  

  
  /**  */
  public static void setFIN_SOLICITUD  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FIN_SOLICITUD = value.getString ( );
  }  

  
  /**  */
  public static void setFECHA_PEDIDA  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FECHA_PEDIDA = value.getDate ( );
  }  

  
  /**  */
  public static void setCONTADOR  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).CONTADOR = value.getDouble ( );
  }  

  
  /**  */
  public static void setFECHA_CHAR  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FECHA_CHAR = value.getString ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setLOCAL_FUNCTION_REPUESTA  ( RallyApplication __app, Parameter value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).LOCAL_FUNCTION_REPUESTA = value.getString ( );
  }  
    


  /**  */
  public static String getSEMANA_NO_DISPONIBLE  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).SEMANA_NO_DISPONIBLE;
  }


  /**  */
  public static void setSEMANA_NO_DISPONIBLE  ( RallyApplication __app, String value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).SEMANA_NO_DISPONIBLE = value;
  }


  /**  */
  public static void setSEMANA_NO_DISPONIBLE  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).SEMANA_NO_DISPONIBLE = ( String ) value;
  }



  /**  */
  public static String getNUEVA_FECHA_PEDIDA  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).NUEVA_FECHA_PEDIDA;
  }


  /**  */
  public static void setNUEVA_FECHA_PEDIDA  ( RallyApplication __app, String value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).NUEVA_FECHA_PEDIDA = value;
  }


  /**  */
  public static void setNUEVA_FECHA_PEDIDA  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).NUEVA_FECHA_PEDIDA = ( String ) value;
  }



  /**  */
  public static String getFIN_SOLICITUD  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FIN_SOLICITUD;
  }


  /**  */
  public static void setFIN_SOLICITUD  ( RallyApplication __app, String value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FIN_SOLICITUD = value;
  }


  /**  */
  public static void setFIN_SOLICITUD  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FIN_SOLICITUD = ( String ) value;
  }



  /**  */
  public static Date getFECHA_PEDIDA  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FECHA_PEDIDA;
  }


  /**  */
  public static void setFECHA_PEDIDA  ( RallyApplication __app, Date value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FECHA_PEDIDA = value;
  }


  /**  */
  public static void setFECHA_PEDIDA  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FECHA_PEDIDA = ( Date ) value;
  }



  /**  */
  public static String getFECHA_CHAR  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FECHA_CHAR;
  }


  /**  */
  public static void setFECHA_CHAR  ( RallyApplication __app, String value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FECHA_CHAR = value;
  }


  /**  */
  public static void setFECHA_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).FECHA_CHAR = ( String ) value;
  }



  /**  */
  public static String getLOCAL_FUNCTION_REPUESTA  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).LOCAL_FUNCTION_REPUESTA;
  }


  /**  */
  public static void setLOCAL_FUNCTION_REPUESTA  ( RallyApplication __app, String value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).LOCAL_FUNCTION_REPUESTA = value;
  }


  /**  */
  public static void setLOCAL_FUNCTION_REPUESTA  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).LOCAL_FUNCTION_REPUESTA = ( String ) value;
  }



  /**  */
  public static DataStore getCALENDARIO2_DSD  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).CALENDARIO2_DSD;
  }


  /**  */
  public static void setCALENDARIO2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).CALENDARIO2_DSD = value;
  }


  /**  */
  public static void setCALENDARIO2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).CALENDARIO2_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getCONTADOR  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).CONTADOR;
  }


  /**  */
  public static Double getCONTADORDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).CONTADOR );
  }


  /**  */
  public static void setCONTADOR  ( RallyApplication __app, double value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).CONTADOR = value;
  }


  /**  */
  public static void setCONTADOR  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).CONTADOR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( INVOCAR_CALENDARIO_ADL ) __app.getADL ( INVOCAR_CALENDARIO_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static INVOCAR_CALENDARIO_ADL get ( RallyApplication __app )
  {
    INVOCAR_CALENDARIO_ADL adl = new INVOCAR_CALENDARIO_ADL ( );
    __app.register ( adl, "INVOCAR_CALENDARIO_ADL" );
    __app.setADL ( INVOCAR_CALENDARIO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    INVOCAR_CALENDARIO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    INVOCAR_CALENDARIO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "INVOCAR_CALENDARIO_ADL" );
    if ( rObj != null && rObj instanceof INVOCAR_CALENDARIO_ADL )
    {
      this.app.setADL ( INVOCAR_CALENDARIO_ADL.class, ( INVOCAR_CALENDARIO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "INVOCAR_CALENDARIO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "INVOCAR_CALENDARIO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    SEMANA_NO_DISPONIBLE = "F";
    NUEVA_FECHA_PEDIDA = "T";
    FIN_SOLICITUD = "F";
    if ( ! Compare.equals ( this.app.INFORMACION_REQUERIMIENTO_GBL, "" ) ) 
    {
      FECHA_PEDIDA = this.app.INFORMACION_REQUERIMIENTO_DHM_GBL;
    }
    else
    {
      FECHA_PEDIDA = this.app.SYSTEM_DATE;
    }
    this.process ( ps );

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    if ( Compare.equals ( FIN_SOLICITUD, "F" ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      if ( ( Compare.equals ( this.app.RUTINA_GBL, "IR" ) ) && ( Compare.equals ( this.app.RESPUESTA_A_Y_IR_GBL, "Y" ) )  ) 
      {
        this.doReturn ( );
        return;
      }
      if ( ! Compare.equals ( this.app.INFORMACION_REQUERIMIENTO_GBL, "" ) ) 
      {
        if ( Compare.equals ( this.app.INFORMACION_REQUERIMIENTO_GBL, "P" ) ) 
        {
          FECHA_PEDIDA = this.app.FCH_INICIO_GBL;
        }
        else
        {
          this.app.FCH_INICIO_GBL = FECHA_PEDIDA;
          this.app.FCH_FINAL_GBL = FECHA_PEDIDA;
        }
      }
      else
      {
        FECHA_CHAR = StringService.toStringValue  ( FECHA_PEDIDA ,"EEEE" ,StringService.Language.SPANISH );
        if ( Compare.equals ( StringService.toStringValue  ( FECHA_PEDIDA ,"EEEE" ,StringService.Language.SPANISH ), "Domingo" ) ) 
        {
          this.app.FCH_INICIO_GBL = MathService.minus ( TruncService.trunc ( FECHA_PEDIDA, "DDD" ) , 6  );
        }
        else
        {
          this.app.FCH_INICIO_GBL = MathService.plus ( TruncService.trunc ( FECHA_PEDIDA, "DAY" ) , 1  );
        }
        this.app.FCH_FINAL_GBL = MathService.plus ( this.app.FCH_INICIO_GBL, 7  );
      }
      if ( Compare.equals ( NUEVA_FECHA_PEDIDA, "T" ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        NUEVA_FECHA_PEDIDA = "F";
        CALENDARIO_BUSQUEDA_UPDAT_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( Compare.equals ( FIN_SOLICITUD, "F" ) ) 
    {
      if ( this._condition1 )    //      if ( Compare.equals ( NUEVA_FECHA_PEDIDA, "T" ) ) 
      {
      }
      if ( Compare.equals ( SEMANA_NO_DISPONIBLE, "T" ) ) 
      {
        if ( ( Compare.equals ( this.app.INFORMACION_REQUERIMIENTO_GBL, "P" ) ) || ( Compare.equals ( this.app.INFORMACION_REQUERIMIENTO_GBL, "T" ) ) ) 
        {
          this.app.setError ( 0, 5505 );
          this.doReturn ( );
          return; 
        }
        else
        {
          SEMANA_NO_DISPONIBLE = "F";
          CONTADOR = 7;
          CALENDARIO2_DSD = this.dm.create ( "CALENDARIO2_DSD" );
          OPEN_ID = CALENDARIO2_DSD.getId ( );
          STATUS_ID = RallyDataStoreException.getDefault ( );
          if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
          {
            this.app.setError ( 1, STATUS_ID );
            this.doReturn ( );
            return; 
          }
          this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "ID_TECNICO", this.app.ID_TECNICO_GBL );
          this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "COD_RAZON", "DISP" );
          this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "COD_SERVICIO", "DISP" );
          this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "DSC_EVENTO", "ENTRADA DISPONIBLE PARA UTILIZACION" );
          FECHA_CHAR = StringService.toStringValue  ( this.app.FCH_INICIO_GBL ,"ddMMyyyy" ,StringService.Language.SPANISH );
          FECHA_CHAR = FECHA_CHAR + "0600";
          this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0", RallySpanishDatesParser.parseDateString ( FECHA_CHAR, "DDMMYYYYHH24MI" ) );
          this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "DURACION_HORA_MIN_CONTACTO", RallySpanishDatesParser.parseDateString ( "15:00", "HH24:MI" ) );
          this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
          
          boolean tempBool = this.dm.getLogEnabled ( );          
          
          while ( ! Compare.equals ( CONTADOR, 0 )  )
          {
            this.dm.setLogEnabled ( false );
            
            STATUS_ID  = this.dm.insertRow ( OPEN_ID );

            this.dm.setLogEnabled ( tempBool );
            
            if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
            {
              this.app.setError ( 2, 4511 );
              this.doReturn ( );
              return; 
            }
            this.dm.setField ( this.dm.get ( "CALENDARIO2_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0", MathService.plus ( this.dm.getFieldDate ( this.dm.get ( "CALENDARIO2_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" ), 1  ) );
            CONTADOR = MathService.minus ( CONTADOR, 1  );
          }

          STATUS_ID  = this.dm.dbCommit ( );
          if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
          {
            this.app.setError ( 3, STATUS_ID );

            STATUS_ID  = this.dm.rollBack ( );
            this.doReturn ( );
            return; 
          }
          STATUS_ID  = this.dm.dbClose ( OPEN_ID );

          if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
          {
            this.app.setError ( 4, STATUS_ID );
            this.doReturn ( );
            return; 
          }
        }
      }
      else
      {
        CALENDARIO_MAIN_FR_QUERY_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    while ( Compare.equals ( FIN_SOLICITUD, "F" ) ) 
    {
      if ( Compare.equals ( SEMANA_NO_DISPONIBLE, "T" ) ) 
      {
      }
      else
      {
      }
      this.currentStep = 1;
      return;
    }

  }
}



/* ---------------------------------------------------------------------


     
VAR
        SEMANA_NO_DISPONIBLE    :       CHAR(1) EXPORT;
        NUEVA_FECHA_PEDIDA      :       CHAR(1) EXPORT;
        FIN_SOLICITUD           :       CHAR(1) EXPORT;
        FECHA_PEDIDA            :       DATE    EXPORT;
        CONTADOR                :       NUMBER;
        FECHA_CHAR              :       CHAR(12);

        OPEN_ID                 :       NUMBER(9,0);
        STATUS_ID               :       NUMBER(9,0);
        LOCAL_FUNCTION_REPUESTA : CHAR(1) EXPORT;
BEGIN
SET_TRACE();

{INICIALIZACION PARA PRUEBAS}

{ID_TECNICO_GBL:=1000;}
{INFORMACION_REQUERIMIENTO_GBL:='T';
INFORMACION_REQUERIMIENTO_DHM_GBL:=
TO_DATE('15-JAN-1993 06:00','DD-MON-YYYY HH24:MI');}


{FIM DA INICIALIZACAO PARA TESTES}

SEMANA_NO_DISPONIBLE:='F';

NUEVA_FECHA_PEDIDA   :='T';
FIN_SOLICITUD       :='F';

IF INFORMACION_REQUERIMIENTO_GBL <> ''          {INVOKED BY INFORM. Y REQ.}
THEN FECHA_PEDIDA:=INFORMACION_REQUERIMIENTO_DHM_GBL; 
ELSE FECHA_PEDIDA:=SYSTEM_DATE;

WHILE  (FIN_SOLICITUD = 'F')
DO BEGIN
IF (RUTINA_GBL='IR') AND (RESPUESTA_A_Y_IR_GBL='Y')
   THEN RETURN;
{RETURN_TO SAVE_CALEND_ACTIVITY_VALUES_ADL;}

IF INFORMACION_REQUERIMIENTO_GBL <> '' {INVOKED BY INFORM. Y REQ.}
THEN BEGIN
        IF (INFORMACION_REQUERIMIENTO_GBL = 'P') THEN   {PLANO TRABAJO}
        BEGIN
                FECHA_PEDIDA   := FCH_INICIO_GBL;
        END;
        ELSE BEGIN
                FCH_INICIO_GBL:=FECHA_PEDIDA;
                FCH_FINAL_GBL :=FECHA_PEDIDA;
        END;
     END;
ELSE BEGIN
        FECHA_CHAR := TO_CHAR(FECHA_PEDIDA, 'fmDay');
DEBUG_LOG ('FECHA_CHAR = ' || FECHA_CHAR);
        IF (TO_CHAR(FECHA_PEDIDA, 'fmDay') = 'Domingo') then
                FCH_INICIO_GBL := TRUNC(FECHA_PEDIDA, 'DDD') - 6;
        ELSE
                FCH_INICIO_GBL:=TRUNC(FECHA_PEDIDA,'DAY') + 1;
        FCH_FINAL_GBL :=FCH_INICIO_GBL + 7;
     END;

IF NUEVA_FECHA_PEDIDA = 'T'
THEN BEGIN
        NUEVA_FECHA_PEDIDA :='F';
        CALL CALENDARIO_BUSQUEDA_UPDAT_PKT;
     END;

IF SEMANA_NO_DISPONIBLE ='T'
THEN BEGIN
IF (INFORMACION_REQUERIMIENTO_GBL = 'P') OR  
   (INFORMACION_REQUERIMIENTO_GBL = 'T') THEN
BEGIN
        ERROR (5505);
        RETURN;
END;
ELSE
BEGIN                                           
        SEMANA_NO_DISPONIBLE :='F';
        CONTADOR:=7;
        DB_OPEN(CALENDARIO2_DSD,OPEN_ID,STATUS_ID);
        IF STATUS_ID <> 0
        THEN BEGIN
                ERROR(STATUS_ID);
                RETURN;
             END;
        CALENDARIO2_DSD.ID_TECNICO:=ID_TECNICO_GBL;
        CALENDARIO2_DSD.COD_RAZON:='DISP';
        CALENDARIO2_DSD.COD_SERVICIO:='DISP';
        CALENDARIO2_DSD.DSC_EVENTO:=
        'ENTRADA DISPONIBLE PARA UTILIZACION';

        FECHA_CHAR:=TO_CHAR(FCH_INICIO_GBL,'DDMMYYYY');
        FECHA_CHAR:=FECHA_CHAR||'0600';
        CALENDARIO2_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0:= 
        TO_DATE(FECHA_CHAR,'DDMMYYYYHH24MI');

        CALENDARIO2_DSD.DURACION_HORA_MIN_CONTACTO:=
        TO_DATE('15:00','HH24:MI');
        CALENDARIO2_DSD.RMO_OFICINA:=rmo_gbl;
        WHILE CONTADOR <> 0
        DO BEGIN
           DB_INSERT(OPEN_ID,STATUS_ID);        
           IF STATUS_ID <> 0
           THEN BEGIN
                ERROR(4511);
                RETURN;
                END;

           CALENDARIO2_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0:=
           CALENDARIO2_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0 + 1;

           CONTADOR:= CONTADOR - 1;
           END;

        DB_COMMIT(STATUS_ID);
        IF STATUS_ID <> 0
        THEN BEGIN
                ERROR(STATUS_ID);
                DB_ROLLBACK (STATUS_ID);
                RETURN;
             END;
        DB_CLOSE (OPEN_ID,STATUS_ID);
        IF STATUS_ID <> 0
        THEN BEGIN
                ERROR(STATUS_ID);
                RETURN;
             END;
     END;
END;
{ELSE IF (LOCAL_FUNCTION_REPUESTA = 'Z' ) THEN RETURN;}
     
ELSE CALL CALENDARIO_MAIN_FR_QUERY_PKT;
END;
SET_NOTRACE();
END;
    



--------------------------------------------------------------------- */
