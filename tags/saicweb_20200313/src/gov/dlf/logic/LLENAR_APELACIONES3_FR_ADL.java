package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class LLENAR_APELACIONES3_FR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;

  public double TECNICO_NULL = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setTECNICO_NULL  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).TECNICO_NULL = value.getDouble ( );
  }  
    



  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTECNICO_NULL  ( RallyApplication __app )
  {
    return ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).TECNICO_NULL;
  }


  /**  */
  public static Double getTECNICO_NULLDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).TECNICO_NULL );
  }


  /**  */
  public static void setTECNICO_NULL  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).TECNICO_NULL = value;
  }


  /**  */
  public static void setTECNICO_NULL  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_APELACIONES3_FR_ADL ) __app.getADL ( LLENAR_APELACIONES3_FR_ADL.class ) ).TECNICO_NULL = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static LLENAR_APELACIONES3_FR_ADL get ( RallyApplication __app )
  {
    LLENAR_APELACIONES3_FR_ADL adl = new LLENAR_APELACIONES3_FR_ADL ( );
    __app.register ( adl, "LLENAR_APELACIONES3_FR_ADL" );
    __app.setADL ( LLENAR_APELACIONES3_FR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    LLENAR_APELACIONES3_FR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    LLENAR_APELACIONES3_FR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "LLENAR_APELACIONES3_FR_ADL" );
    if ( rObj != null && rObj instanceof LLENAR_APELACIONES3_FR_ADL )
    {
      this.app.setADL ( LLENAR_APELACIONES3_FR_ADL.class, ( LLENAR_APELACIONES3_FR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "LLENAR_APELACIONES3_FR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "LLENAR_APELACIONES3_FR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    FLUJO_APELACIONES_ADL.setAPEL_STATUS ( this.app, "FAILURE" );
    TECNICO_NULL = TruncService.setNull ( TECNICO_NULL  );

    this.callParms.clear ( );
    this.callParms.set ( this.app.SSN_GBL  );
    this.callParms.set ( this.app.form ( "APELACIONES3_FR" ).getStringItem ( "NOMBRE_CLIENTE" ) );
    BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.app.SSN_GBL  = this.callParms.getDouble ( );
    this.app.form ( "APELACIONES3_FR" ).setItem ( "NOMBRE_CLIENTE", this.callParms.getString ( ) );

    this.callParms.clear ( );
    this.callParms.set ( this.app.SS_JEFE_FAMILIA_GBL  );
    this.callParms.set ( this.app.form ( "APELACIONES3_FR" ).getStringItem ( "NOMBRE_JEFE_FAMILIA" ) );
    BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.app.SS_JEFE_FAMILIA_GBL  = this.callParms.getDouble ( );
    this.app.form ( "APELACIONES3_FR" ).setItem ( "NOMBRE_JEFE_FAMILIA", this.callParms.getString ( ) );

    this.callParms.clear ( );
    this.callParms.set ( this.app.SS_JEFE_SERVICIO_GBL  );
    this.callParms.set ( this.app.form ( "APELACIONES3_FR" ).getStringItem ( "NOMBRE_JEFE_SERVICIO" ) );
    BUSCAR_NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.app.SS_JEFE_SERVICIO_GBL  = this.callParms.getDouble ( );
    this.app.form ( "APELACIONES3_FR" ).setItem ( "NOMBRE_JEFE_SERVICIO", this.callParms.getString ( ) );

    this.app.TECNICO_ASISTIO_VISTA_GBL = TECNICO_NULL;

  }
}



/* ---------------------------------------------------------------------


     
procedure llenar_apelaciones3_fr_adl;
var
        open_id : number(9,0);
        status_id : number(9,0);        
        tecnico_null :number(4,0);
begin
set_trace();
        flujo_apelaciones_adl.apel_status := 'FAILURE';
        make_null(tecnico_null);
{apelaciones3_fr.seguro_social_cliente := ssn_gbl;
        apelaciones3_fr.seguro_social_jefe_fam := ss_jefe_familia_gbl;
        apelaciones3_fr.seguro_social_jefe_serv := ss_jefe_servicio_gbl;}
        call buscar_nombre_completo_adl(ssn_gbl,APELACIONES3_FR.NOMBRE_cliente);
        call buscar_nombre_completo_adl(ss_jefe_familia_gbl,APELACIONES3_FR.NOMB
RE_JEFE_FAMILIA);
        call buscar_nombre_completo_adl(ss_jefe_servicio_gbl,APELACIONES3_FR.NOM
BRE_JEFE_SERVICIO);
        tecnico_asistio_vista_gbl := tecnico_null;

set_notrace();
end;
    



--------------------------------------------------------------------- */
