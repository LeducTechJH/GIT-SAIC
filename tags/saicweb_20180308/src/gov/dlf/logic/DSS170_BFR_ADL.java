package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DSS170_BFR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RID = 0;

  public double RCD = 0;

  public double BAL_LMTH = 0;

  public double CASO_REF = 0;

  public double CASO_TRAB = 0;

  public double CASO_NOPR = 0;

  public double CASO_AJUS = 0;



  public String DATE01 = null;

  public String DATE31 = null;

  public Date LMTH01 = null;

  public Date LMTH31 = null;

  public Date TSDATE = null;

  public Date FECHA_NULO = null;

  public DataStore RETRO_DSS170_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRID  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRCD  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RCD = value.getDouble ( );
  }  

  
  /**  */
  public static void setDATE01  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).DATE01 = value.getString ( );
  }  

  
  /**  */
  public static void setDATE31  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).DATE31 = value.getString ( );
  }  

  
  /**  */
  public static void setLMTH01  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).LMTH01 = value.getDate ( );
  }  

  
  /**  */
  public static void setLMTH31  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).LMTH31 = value.getDate ( );
  }  

  
  /**  */
  public static void setBAL_LMTH  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).BAL_LMTH = value.getDouble ( );
  }  

  
  /**  */
  public static void setCASO_REF  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_REF = value.getDouble ( );
  }  

  
  /**  */
  public static void setCASO_TRAB  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_TRAB = value.getDouble ( );
  }  

  
  /**  */
  public static void setCASO_NOPR  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_NOPR = value.getDouble ( );
  }  

  
  /**  */
  public static void setCASO_AJUS  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_AJUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setTSDATE  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).TSDATE = value.getDate ( );
  }  

  
  /**  */
  public static void setFECHA_NULO  ( RallyApplication __app, Parameter value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).FECHA_NULO = value.getDate ( );
  }  
    


  /**  */
  public static String getDATE01  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).DATE01;
  }


  /**  */
  public static void setDATE01  ( RallyApplication __app, String value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).DATE01 = value;
  }


  /**  */
  public static void setDATE01  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).DATE01 = ( String ) value;
  }



  /**  */
  public static String getDATE31  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).DATE31;
  }


  /**  */
  public static void setDATE31  ( RallyApplication __app, String value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).DATE31 = value;
  }


  /**  */
  public static void setDATE31  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).DATE31 = ( String ) value;
  }



  /**  */
  public static Date getLMTH01  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).LMTH01;
  }


  /**  */
  public static void setLMTH01  ( RallyApplication __app, Date value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).LMTH01 = value;
  }


  /**  */
  public static void setLMTH01  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).LMTH01 = ( Date ) value;
  }



  /**  */
  public static Date getLMTH31  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).LMTH31;
  }


  /**  */
  public static void setLMTH31  ( RallyApplication __app, Date value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).LMTH31 = value;
  }


  /**  */
  public static void setLMTH31  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).LMTH31 = ( Date ) value;
  }



  /**  */
  public static Date getTSDATE  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).TSDATE;
  }


  /**  */
  public static void setTSDATE  ( RallyApplication __app, Date value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).TSDATE = value;
  }


  /**  */
  public static void setTSDATE  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).TSDATE = ( Date ) value;
  }



  /**  */
  public static Date getFECHA_NULO  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).FECHA_NULO;
  }


  /**  */
  public static void setFECHA_NULO  ( RallyApplication __app, Date value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).FECHA_NULO = value;
  }


  /**  */
  public static void setFECHA_NULO  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).FECHA_NULO = ( Date ) value;
  }



  /**  */
  public static DataStore getRETRO_DSS170_DSD  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RETRO_DSS170_DSD;
  }


  /**  */
  public static void setRETRO_DSS170_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RETRO_DSS170_DSD = value;
  }


  /**  */
  public static void setRETRO_DSS170_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RETRO_DSS170_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRID  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RID;
  }


  /**  */
  public static Double getRIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RID );
  }


  /**  */
  public static void setRID  ( RallyApplication __app, double value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RID = value;
  }


  /**  */
  public static void setRID  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRCD  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RCD;
  }


  /**  */
  public static Double getRCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RCD );
  }


  /**  */
  public static void setRCD  ( RallyApplication __app, double value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RCD = value;
  }


  /**  */
  public static void setRCD  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).RCD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getBAL_LMTH  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).BAL_LMTH;
  }


  /**  */
  public static Double getBAL_LMTHDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).BAL_LMTH );
  }


  /**  */
  public static void setBAL_LMTH  ( RallyApplication __app, double value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).BAL_LMTH = value;
  }


  /**  */
  public static void setBAL_LMTH  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).BAL_LMTH = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCASO_REF  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_REF;
  }


  /**  */
  public static Double getCASO_REFDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_REF );
  }


  /**  */
  public static void setCASO_REF  ( RallyApplication __app, double value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_REF = value;
  }


  /**  */
  public static void setCASO_REF  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_REF = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCASO_TRAB  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_TRAB;
  }


  /**  */
  public static Double getCASO_TRABDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_TRAB );
  }


  /**  */
  public static void setCASO_TRAB  ( RallyApplication __app, double value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_TRAB = value;
  }


  /**  */
  public static void setCASO_TRAB  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_TRAB = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCASO_NOPR  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_NOPR;
  }


  /**  */
  public static Double getCASO_NOPRDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_NOPR );
  }


  /**  */
  public static void setCASO_NOPR  ( RallyApplication __app, double value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_NOPR = value;
  }


  /**  */
  public static void setCASO_NOPR  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_NOPR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCASO_AJUS  ( RallyApplication __app )
  {
    return ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_AJUS;
  }


  /**  */
  public static Double getCASO_AJUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_AJUS );
  }


  /**  */
  public static void setCASO_AJUS  ( RallyApplication __app, double value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_AJUS = value;
  }


  /**  */
  public static void setCASO_AJUS  ( RallyApplication __app, Object value )
  {
    ( ( DSS170_BFR_ADL ) __app.getADL ( DSS170_BFR_ADL.class ) ).CASO_AJUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DSS170_BFR_ADL get ( RallyApplication __app )
  {
    DSS170_BFR_ADL adl = new DSS170_BFR_ADL ( );
    __app.register ( adl, "DSS170_BFR_ADL" );
    __app.setADL ( DSS170_BFR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DSS170_BFR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DSS170_BFR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DSS170_BFR_ADL" );
    if ( rObj != null && rObj instanceof DSS170_BFR_ADL )
    {
      this.app.setADL ( DSS170_BFR_ADL.class, ( DSS170_BFR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DSS170_BFR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DSS170_BFR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    FECHA_NULO = TruncService.setNull ( FECHA_NULO  );
    CASO_REF = 0;
    CASO_TRAB = 0;
    CASO_NOPR = 0;
    CASO_AJUS = 0;
    LMTH01 = DateUtil.addMonths ( this.app.form ( "DSS170_MENU_FR" ).getDateItem ( "DSS170_DATE" ), - 1 );
    LMTH31 = TruncService.lastDay ( LMTH01 ) ;
    this.app.SDATE = this.app.form ( "DSS170_MENU_FR" ).getDateItem ( "DSS170_DATE" );
    this.app.EDATE = TruncService.lastDay ( this.app.SDATE ) ;
    DATE01 = StringService.toStringValue  ( this.app.SDATE ,"dd-MMM-yyyy" ,StringService.Language.SPANISH );
    DATE31 = StringService.toStringValue  ( this.app.EDATE ,"dd-MMM-yyyy" ,StringService.Language.SPANISH );
    this.app.PROGM = RallyStringService.subString ( this.app.form ( "DSS170_MENU_FR" ).getStringItem ( "DSS170_PROG" ), 0, 2 );
    if ( Compare.equals ( this.app.RR_ACCION_GBL, "RETR" ) ) 
    {
      this.app.form ( "DSS170_RPT_FR" ).setItem ( "RETR", "X"  );
    }
    if ( Compare.equals ( this.app.RR_ACCION_GBL, "RECL" ) ) 
    {
      this.app.form ( "DSS170_RPT_FR" ).setItem ( "RECL", "X"  );
    }
    if ( Compare.equals ( this.app.PROGM, "PA" ) ) 
    {
      this.app.form ( "DSS170_RPT_FR" ).setItem ( "XPAN", "X"  );
    }
    else
    {
      this.app.form ( "DSS170_RPT_FR" ).setItem ( "XAE", "X"  );
    }
    RETRO_DSS170_DSD = this.dm.create ( "RETRO_DSS170_DSD" );
    RID = RETRO_DSS170_DSD.getId ( );
    RCD = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( RCD, 0 ) ) 
    {
      this.doReturn ( );
      return; 
    }

    RCD  = this.dm.reset ( RID );

    this.dm.setField ( this.dm.get ( "RETRO_DSS170_DSD" ), "ACCION", this.app.RR_ACCION_GBL );
    this.dm.setField ( this.dm.get ( "RETRO_DSS170_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RCD  = this.dm.limitQueryFromBuffer ( RID );
    RCD  = this.dm.retrieve ( RID );

    RCD  = this.dm.firstRow ( RID );

    while ( ! Compare.equals ( RCD, RallyDataStoreExceptionType.EOS ) ) 
    {
      if ( ( Compare.le ( TruncService.trunc ( this.dm.getFieldDate ( this.dm.get ( "RETRO_DSS170_DSD" ), "FECHA_IDENTIFICADO" ), "DD" ) , LMTH31 ) ) && ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "COD_SERVICIO" ), 0, 2 ), this.app.PROGM ) )  ) 
      {
        if ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "STATUS_AUTORIZACION" ), "AUTO" ) ) 
        {
          BAL_LMTH = MathService.plus ( BAL_LMTH, 1  );
        }
        else
        {
          if ( ! Compare.equals ( this.dm.getFieldDate ( this.dm.get ( "RETRO_DSS170_DSD" ), "FECHA_AUTORIZADO" ), FECHA_NULO ) ) 
          {
            if ( Compare.gt ( TruncService.trunc ( this.dm.getFieldDate ( this.dm.get ( "RETRO_DSS170_DSD" ), "FECHA_AUTORIZADO" ), "DD" ) , LMTH31 ) ) 
            {
              BAL_LMTH = MathService.plus ( BAL_LMTH, 1  );
            }
          }
        }

        RCD  = this.dm.nextRow ( RID );

      }
      else
      {
        RCD  = this.dm.nextRow ( RID );

      }
    }

    RCD  = this.dm.reset ( RID );

    RCD  = this.dm.limitQueryFromBuffer ( RID );
    RCD  = this.dm.retrieve ( RID );

    this.dm.setField ( this.dm.get ( "RETRO_DSS170_DSD" ), "ACCION", this.app.RR_ACCION_GBL );
    this.dm.setField ( this.dm.get ( "RETRO_DSS170_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RCD  = this.dm.firstRow ( RID );

    while ( ! Compare.equals ( RCD, RallyDataStoreExceptionType.EOS ) ) 
    {
      if ( ! Compare.equals ( this.dm.getFieldDate ( this.dm.get ( "RETRO_DSS170_DSD" ), "FECHA_IDENTIFICADO" ), FECHA_NULO ) ) 
      {
        TSDATE = TruncService.trunc ( this.dm.getFieldDate ( this.dm.get ( "RETRO_DSS170_DSD" ), "FECHA_IDENTIFICADO" ), "DDD" ) ;
        if ( ( Compare.ge ( TSDATE, this.app.SDATE ) ) && ( Compare.le ( TSDATE, this.app.EDATE ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "ACCION" ), this.app.RR_ACCION_GBL ) )  && ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "COD_SERVICIO" ), 0, 2 ), this.app.PROGM ) )  ) 
        {
          CASO_REF = MathService.plus ( CASO_REF, 1  );
        }

        RCD  = this.dm.nextRow ( RID );

      }
      else
      {
        RCD  = this.dm.nextRow ( RID );

      }
    }

    RCD  = this.dm.reset ( RID );

    this.dm.setField ( this.dm.get ( "RETRO_DSS170_DSD" ), "ACCION", this.app.RR_ACCION_GBL );
    this.dm.setField ( this.dm.get ( "RETRO_DSS170_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RCD  = this.dm.limitQueryFromBuffer ( RID );
    RCD  = this.dm.retrieve ( RID );

    RCD  = this.dm.firstRow ( RID );

    while ( ! Compare.equals ( RCD, RallyDataStoreExceptionType.EOS ) ) 
    {
      if ( ! Compare.equals ( this.dm.getFieldDate ( this.dm.get ( "RETRO_DSS170_DSD" ), "FECHA_AUTORIZADO" ), FECHA_NULO ) ) 
      {
        TSDATE = TruncService.trunc ( this.dm.getFieldDate ( this.dm.get ( "RETRO_DSS170_DSD" ), "FECHA_AUTORIZADO" ), "DDD" ) ;
        if ( ( Compare.ge ( TSDATE, this.app.SDATE ) ) && ( Compare.le ( TSDATE, this.app.EDATE ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "ACCION" ), this.app.RR_ACCION_GBL ) )  && ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "COD_SERVICIO" ), 0, 2 ), this.app.PROGM ) )  ) 
        {
          if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "STATUS_AUTORIZACION" ), "AUTO" ) ) 
          {
            if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "STATUS" ), "NOPROC10" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RETRO_DSS170_DSD" ), "STATUS" ), "NOPROCRE" ) ) ) 
            {
              CASO_NOPR = MathService.plus ( CASO_NOPR, 1  );
            }
            else
            {
              CASO_TRAB = MathService.plus ( CASO_TRAB, 1  );
            }
          }
        }

        RCD  = this.dm.nextRow ( RID );

      }
      else
      {
        RCD  = this.dm.nextRow ( RID );

      }
    }
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "MESA", this.app.SDATE  );
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "BALM", BAL_LMTH  );
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "CASR", CASO_REF  );
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "SUBI", MathService.plus ( this.app.form ( "DSS170_RPT_FR" ).getDoubleItem ( "BALM" ), CASO_REF  )  );
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "DETE", CASO_TRAB  );
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "NOPR", CASO_NOPR  );
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "SUB2", MathService.plus ( CASO_TRAB, CASO_NOPR  )  );
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "BAL2", MathService.minus ( this.app.form ( "DSS170_RPT_FR" ).getDoubleItem ( "SUBI" ), this.app.form ( "DSS170_RPT_FR" ).getDoubleItem ( "SUB2" ) )  );
    this.app.form ( "DSS170_RPT_FR" ).setItem ( "BALF", this.app.form ( "DSS170_RPT_FR" ).getDoubleItem ( "BAL2" ) );
    RCD  = this.dm.dbClose ( RID );

    if ( ! Compare.equals ( RCD, 0 ) ) 
    {
      this.app.setError ( 0, RCD );
      this.doReturn ( );
      return; 
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure dss170_bfr_adl;

VAR     RID             :       NUMBER;
        RCD             :       NUMBER;
        date01          :       CHAR(11);
        date31          :       CHAR(11);
        LMTH01          :       DATE;
        LMTH31          :       DATE;
        BAL_LMTH        :       NUMBER;
        CASO_REF        :       NUMBER;
        CASO_TRAB       :       NUMBER;
        CASO_NOPR       :       NUMBER;
        CASO_AJUS       :       NUMBER;
        TSDATE          :       DATE;
        FECHA_NULO      :       DATE;
SET_TRACE();
BEGIN
MAKE_NULL(FECHA_NULO);
   CASO_REF     := 0;
   CASO_TRAB    := 0;
   CASO_NOPR    := 0;
   CASO_AJUS    := 0;

   LMTH01 := ADD_MONTHS (DSS170_MENU_FR.DSS170_DATE, -1);
   LMTH31 := LAST_DAY (LMTH01);

{
   LMTH31 := last_day (DSS170_MENU_FR.DSS170_DATE);
   LMTH01 := lmth31 - 90;
}

   SDATE := DSS170_MENU_FR.DSS170_DATE;

   EDATE := LAST_DAY (SDATE);


   DATE01 := TO_CHAR(SDATE,'DD-Mon-YYYY');
   DATE31 := TO_CHAR(EDATE,'DD-Mon-YYYY');

DEBUG_LOG(DATE01);
DEBUG_LOG(DATE31);
   PROGM := SUBSTR(DSS170_MENU_FR.DSS170_PROG,0,2);

   IF RR_ACCION_GBL = 'RETR'
   THEN
        DSS170_RPT_FR.RETR := 'X';

   IF RR_ACCION_GBL = 'RECL'
   THEN
        DSS170_RPT_FR.RECL := 'X';
   {ENDIF}

   IF PROGM = 'PA'
   THEN
        DSS170_RPT_FR.XPAN := 'X';
   ELSE
        DSS170_RPT_FR.XAE  := 'X';
   {ENDIF}

DB_OPEN(RETRO_DSS170_DSD, RID, RCD);
        IF (RCD <> 0)     THEN
                BEGIN
                        RETURN;
                END;
                
DB_RESET (RID, RCD);
RETRO_DSS170_DSD.ACCION := RR_ACCION_GBL;                
RETRO_DSS170_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY (RID, RCD);

DB_GET_FIRST(RID,RCD);
                
WHILE (RCD <> DB_EOS)
DO BEGIN
IF (trunc(RETRO_DSS170_DSD.FECHA_IDENTIFICADO,'DD') <= LMTH31) AND
   (SUBSTR(RETRO_DSS170_DSD.COD_SERVICIO,0,2) = PROGM) THEN
BEGIN

  IF RETRO_DSS170_DSD.STATUS_autorizacion <> 'AUTO' 
  THEN
     BAL_LMTH   :=      BAL_LMTH + 1;
  ELSE
        BEGIN
        if RETRO_DSS170_DSD.FECHA_AUTORIZADO <> fecha_nulo
        then
           begin
                IF trunc(RETRO_DSS170_DSD.FECHA_AUTORIZADO,'DD') > LMTH31
                THEN
                    BAL_LMTH    :=      BAL_LMTH + 1;   
           end;
        END;

DB_GET_NEXT(RID,RCD);
END;
ELSE
DB_GET_NEXT(RID,RCD);
END;

{}

DB_RESET (RID, RCD);

DB_QUERY (RID, RCD);
RETRO_DSS170_DSD.ACCION := RR_ACCION_GBL;                
RETRO_DSS170_DSD.RMO_OFICINA := RMO_GBL;          
DB_GET_FIRST(RID,RCD);
                
WHILE (RCD <> DB_EOS)
DO BEGIN
IF RETRO_DSS170_DSD.FECHA_IDENTIFICADO <> FECHA_NULO
THEN 
   BEGIN
      TSDATE := TRUNC(RETRO_DSS170_DSD.FECHA_IDENTIFICADO,'DDD');
      IF (TSDATE >= SDATE) AND
         (TSDATE <= EDATE) AND       
         (RETRO_DSS170_DSD.ACCION       = RR_ACCION_GBL) AND 
         (SUBSTR(RETRO_DSS170_DSD.COD_SERVICIO,0,2) = PROGM) THEN
         BEGIN
                CASO_REF        :=      CASO_REF + 1;
         END;
                DB_GET_NEXT(RID,RCD);
   END;
ELSE
   DB_GET_NEXT(RID,RCD);

END;

DB_RESET (RID, RCD);
RETRO_DSS170_DSD.ACCION := RR_ACCION_GBL;                
RETRO_DSS170_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY (RID, RCD);
                
DB_GET_FIRST(RID,RCD);
                
WHILE (RCD <> DB_EOS)
DO BEGIN
IF RETRO_DSS170_DSD.FECHA_AUTORIZADO <> FECHA_NULO
THEN 
   BEGIN
     TSDATE := TRUNC(RETRO_DSS170_DSD.FECHA_AUTORIZADO,'DDD');
     IF  (TSDATE >= SDATE) AND
         (TSDATE <= EDATE) AND       
           (RETRO_DSS170_DSD.ACCION     = RR_ACCION_GBL) AND 
           (SUBSTR(RETRO_DSS170_DSD.COD_SERVICIO,0,2) = PROGM) THEN
          BEGIN

                DEBUG_LOG ('SDATE = ' || DATE01);
                DEBUG_LOG ('EDATE = ' || DATE31);
        
                IF (RETRO_DSS170_DSD.STATUS_AUTORIZACION        =       'AUTO')
                THEN
                        BEGIN
                        IF (RETRO_DSS170_DSD.STATUS     =       'NOPROC10') OR
                        (RETRO_DSS170_DSD.STATUS        =       'NOPROCRE') 
                        THEN
                                CASO_NOPR       :=      CASO_NOPR + 1;
                        ELSE
                                CASO_TRAB       :=      CASO_TRAB + 1;
                        END;
        END;
                DB_GET_NEXT(RID,RCD);
END;
ELSE
        DB_GET_NEXT(RID,RCD);
END;

DSS170_RPT_FR.MESA := SDATE;
DSS170_RPT_FR.BALM := BAL_LMTH;
DSS170_RPT_FR.CASR := CASO_REF;
DSS170_RPT_FR.SUBI := DSS170_RPT_FR.BALM + CASO_REF;
DSS170_RPT_FR.DETE := CASO_TRAB;
DSS170_RPT_FR.NOPR := CASO_NOPR;
DSS170_RPT_FR.SUB2 := CASO_TRAB + CASO_NOPR;
DSS170_RPT_FR.BAL2 := DSS170_RPT_FR.SUBI - DSS170_RPT_FR.SUB2;
DSS170_RPT_FR.BALF := DSS170_RPT_FR.BAL2;

DB_CLOSE (RID,RCD);
IF (RCD <> 0) THEN
  BEGIN
      ERROR (RCD);
      RETURN;
  END;
{ENDIF}

set_notrace();
END;

    



--------------------------------------------------------------------- */
