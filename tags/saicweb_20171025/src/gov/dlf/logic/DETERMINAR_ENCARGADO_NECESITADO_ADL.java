package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DETERMINAR_ENCARGADO_NECESITADO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double OPEN2_ID = 0;

  public double OPEN3_ID = 0;

  public double OPEN4_ID = 0;

  public double OPEN5_ID = 0;

  public double OPEN6_ID = 0;

  public double OPEN7_ID = 0;

  public double OPEN8_ID = 0;

  public double OPEN9_ID = 0;

  public double OPEN10_ID = 0;

  public double OPEN11_ID = 0;

  public double INGRESO_ACREDI_ENNE = 0;

  public double STATUS_CODE = 0;

  public double STATUS2_CODE = 0;

  public double STATUS3_CODE = 0;

  public double STATUS4_CODE = 0;

  public double STATUS6_CODE = 0;

  public double STATUS7_CODE = 0;

  public double STATUS9_CODE = 0;

  public double STATUS11_CODE = 0;

  public double NUCLEO_CODE = 0;

  public double OPEN_TEMP = 0;

  public double SERVICIO_BENEFICIO = 0;

  public double SAVE_SSN = 0;

  public double RECURSOS_ACUM = 0;

  public double EDAD_IND = 0;

  public double INGRESO_BRUTO = 0;

  public double SALARIO = 0;

  public double SALARIO_LIMP = 0;

  public double SEG_SOC = 0;

  public double OTROS = 0;

  public double OTROS_EXP = 0;

  public double OTROS_CONY = 0;

  public double INGRESO_NETO = 0;

  public double CUIDO_MENOR = 0;

  public double CUIDO = 0;

  public double DEDUCCION_INGRESO = 0;

  public double INCAPACITADO = 0;

  public double BENEFICIO = 0;

  public double TOTAL_CUIDO = 0;

  public double GASTOS_INHE = 0;

  public double GASTOS_INHERENTES = 0;

  public double RESTE_30 = 0;

  public double CENTAVOS = 0;

  public double ING_TEMP = 0;

  public double EXCENCION_SAL = 0;

  public double EXCENCION_TRABAJO = 0;

  public double EXCENCION_PROD = 0;

  public double EXCENCION_ALBERGUE = 0;

  public double DEFICIT = 0;

  public double SALARIO_CONYUGUE = 0;

  public double INGRESO_ACREDITABLE = 0;

  public double TOT_INGRE_ACREDI = 0;

  public double NECESIDAD_AJUSTADA = 0;

  public double TOT_AJUSTADA = 0;

  public double TOTAL_OTROS = 0;

  public double BENEFICIO_AUTO = 0;

  public double SALA = 0;

  public double ADIE = 0;

  public double NPRO = 0;

  public double PARTE_PROP = 0;

  public double EXC_PROD = 0;

  public double NUM_NUCLEO = 0;

  public double NUM_FAM = 0;

  public double PROP_MENOR = 0;

  public double ALBE = 0;

  public double NUM_MENOR = 0;

  public double SUME_30 = 0;

  public double SS_PADA = 0;

  public double SALA_PADA = 0;

  public double NUM_FAMILIA = 0;

  public double EXC_RECURSO = 0;

  public double RECURSOS_PATRO = 0;

  public double INGRESOS = 0;

  public double SALA_PADRES = 0;

  public double RECURSOS_NO_CATE = 0;

  public double TOT_AJUSTADA_SIN = 0;

  public double NECESIDAD_AJUSTADA_SIN = 0;

  public double NUM_FAMILIA_SIN = 0;

  public double EXCENCION_ALBERGUE_SIN = 0;

  public double TOT_EXCESION_ALBE_SIN = 0;

  public double ADULTO_INCA = 0;

  public double MENOR_MAYOR_2 = 0;

  public double MENOR_2_ANOS = 0;

  public double MAXIMO_CUIDO = 0;

  public double PADR_MADR_TOT = 0;

  public double AE_COUNT = 0;

  public double MADR_PADR_TOT = 0;

  public double TECNICO_NULL = 0;

  public double SALARIO_EXIN = 0;

  public double NUM_SALARIO = 0;

  public double GASTOS_ENSO = 0;

  public double NUM_SALARIO_NOCAT = 0;

  public double GASTOS_NO_CAT = 0;

  public double AYUD = 0;

  public double RESTE_30_ACT = 0;

  public double RESTE_30_SOL = 0;

  public double AYUDA_PERMITIDA = 0;

  public double CONY_INHE = 0;

  public double CONY_ACREDITABLE = 0;

  public double CONY_CUIDO = 0;

  public double CONY_TREINTA_Y_TERSIO = 0;

  public double TREINTA_Y_TERSIO = 0;

  public double CONY_PROD = 0;

  public double CONY_TR = 0;

  public double TR = 0;



  public Date FCH_EMISION = null;

  public String SERVICIO_STATUS = null;

  public String INELEGIBLE_REG = null;

  public String INELEGIBLE_EMER = null;

  public String RAZON = null;

  public String INELEGIBLE_INGRE_BRUTO = null;

  public String ELEGIBLE_REG = null;

  public String ELEGIBLE_EMER = null;

  public String STATUS = null;

  public Date CUARTO_MES = null;

  public String NECESITADO = null;

  public DataStore CLIENTES2_RO_DSD = null;

  public DataStore NUCLEO_SERVICIO_DSD = null;

  public DataStore RECURSOS_NUCLEO_RO_DSD = null;

  public DataStore RECURSOS_CLIENTE_2_RO_DSD = null;

  public DataStore NUCLEO_SERVICIO_UPD_RO_DSD = null;

  public DataStore INGRESOS_NUCLEO_RO_DSD = null;

  public DataStore GASTOS_NUCLEO_RO_DSD = null;

  public DataStore DETERMINA_RO_DSD = null;

  public DataStore SERVICIOS2_RO_DSD = null;

  public DataStore DEDUCCIONES_CLIENTE2_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN2_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN3_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN4_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN5_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN6_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN7_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN7_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN8_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN8_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN9_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN9_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN10_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN10_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN11_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN11_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).FCH_EMISION = value.getDate ( );
  }  

  
  /**  */
  public static void setINGRESO_ACREDI_ENNE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDI_ENNE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS2_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS3_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS3_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS4_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS4_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS6_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS6_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS7_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS7_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS9_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS9_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS11_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS11_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUCLEO_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_TEMP  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_TEMP = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERVICIO_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_STATUS = value.getString ( );
  }  

  
  /**  */
  public static void setSERVICIO_BENEFICIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_BENEFICIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SAVE_SSN = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECURSOS_ACUM  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_ACUM = value.getDouble ( );
  }  

  
  /**  */
  public static void setEDAD_IND  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EDAD_IND = value.getDouble ( );
  }  

  
  /**  */
  public static void setINELEGIBLE_REG  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_REG = value.getString ( );
  }  

  
  /**  */
  public static void setINELEGIBLE_EMER  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_EMER = value.getString ( );
  }  

  
  /**  */
  public static void setRAZON  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RAZON = value.getString ( );
  }  

  
  /**  */
  public static void setINGRESO_BRUTO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_BRUTO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALARIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALARIO_LIMP  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_LIMP = value.getDouble ( );
  }  

  
  /**  */
  public static void setSEG_SOC  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SEG_SOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setOTROS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS = value.getDouble ( );
  }  

  
  /**  */
  public static void setOTROS_EXP  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_EXP = value.getDouble ( );
  }  

  
  /**  */
  public static void setOTROS_CONY  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_CONY = value.getDouble ( );
  }  

  
  /**  */
  public static void setINGRESO_NETO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_NETO = value.getDouble ( );
  }  

  
  /**  */
  public static void setCUIDO_MENOR  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO_MENOR = value.getDouble ( );
  }  

  
  /**  */
  public static void setCUIDO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO = value.getDouble ( );
  }  

  
  /**  */
  public static void setINELEGIBLE_INGRE_BRUTO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_INGRE_BRUTO = value.getString ( );
  }  

  
  /**  */
  public static void setDEDUCCION_INGRESO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEDUCCION_INGRESO = value.getDouble ( );
  }  

  
  /**  */
  public static void setINCAPACITADO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INCAPACITADO = value.getDouble ( );
  }  

  
  /**  */
  public static void setBENEFICIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setELEGIBLE_REG  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ELEGIBLE_REG = value.getString ( );
  }  

  
  /**  */
  public static void setELEGIBLE_EMER  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ELEGIBLE_EMER = value.getString ( );
  }  

  
  /**  */
  public static void setTOTAL_CUIDO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_CUIDO = value.getDouble ( );
  }  

  
  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHE = value.getDouble ( );
  }  

  
  /**  */
  public static void setGASTOS_INHERENTES  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHERENTES = value.getDouble ( );
  }  

  
  /**  */
  public static void setRESTE_30  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30 = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS = value.getString ( );
  }  

  
  /**  */
  public static void setCENTAVOS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CENTAVOS = value.getDouble ( );
  }  

  
  /**  */
  public static void setING_TEMP  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ING_TEMP = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_SAL  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_SAL = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_TRABAJO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_TRABAJO = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_PROD  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_PROD = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_ALBERGUE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE = value.getDouble ( );
  }  

  
  /**  */
  public static void setDEFICIT  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEFICIT = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALARIO_CONYUGUE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_CONYUGUE = value.getDouble ( );
  }  

  
  /**  */
  public static void setINGRESO_ACREDITABLE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDITABLE = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOT_INGRE_ACREDI  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_INGRE_ACREDI = value.getDouble ( );
  }  

  
  /**  */
  public static void setNECESIDAD_AJUSTADA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOT_AJUSTADA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOTAL_OTROS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_OTROS = value.getDouble ( );
  }  

  
  /**  */
  public static void setBENEFICIO_AUTO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO_AUTO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA = value.getDouble ( );
  }  

  
  /**  */
  public static void setADIE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADIE = value.getDouble ( );
  }  

  
  /**  */
  public static void setNPRO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NPRO = value.getDouble ( );
  }  

  
  /**  */
  public static void setPARTE_PROP  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PARTE_PROP = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXC_PROD  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_PROD = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_NUCLEO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_NUCLEO = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_FAM  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAM = value.getDouble ( );
  }  

  
  /**  */
  public static void setPROP_MENOR  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PROP_MENOR = value.getDouble ( );
  }  

  
  /**  */
  public static void setALBE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ALBE = value.getDouble ( );
  }  

  
  /**  */
  public static void setCUARTO_MES  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUARTO_MES = value.getDate ( );
  }  

  
  /**  */
  public static void setNUM_MENOR  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_MENOR = value.getDouble ( );
  }  

  
  /**  */
  public static void setSUME_30  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SUME_30 = value.getDouble ( );
  }  

  
  /**  */
  public static void setSS_PADA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SS_PADA = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALA_PADA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADA = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXC_RECURSO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_RECURSO = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECURSOS_PATRO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_PATRO = value.getDouble ( );
  }  

  
  /**  */
  public static void setINGRESOS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESOS = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALA_PADRES  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADRES = value.getDouble ( );
  }  

  
  /**  */
  public static void setNECESITADO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESITADO = value.getString ( );
  }  

  
  /**  */
  public static void setRECURSOS_NO_CATE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_NO_CATE = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOT_AJUSTADA_SIN  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA_SIN = value.getDouble ( );
  }  

  
  /**  */
  public static void setNECESIDAD_AJUSTADA_SIN  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA_SIN = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_FAMILIA_SIN  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA_SIN = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_ALBERGUE_SIN  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE_SIN = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOT_EXCESION_ALBE_SIN  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_EXCESION_ALBE_SIN = value.getDouble ( );
  }  

  
  /**  */
  public static void setADULTO_INCA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADULTO_INCA = value.getDouble ( );
  }  

  
  /**  */
  public static void setMENOR_MAYOR_2  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_MAYOR_2 = value.getDouble ( );
  }  

  
  /**  */
  public static void setMENOR_2_ANOS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_2_ANOS = value.getDouble ( );
  }  

  
  /**  */
  public static void setMAXIMO_CUIDO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MAXIMO_CUIDO = value.getDouble ( );
  }  

  
  /**  */
  public static void setPADR_MADR_TOT  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PADR_MADR_TOT = value.getDouble ( );
  }  

  
  /**  */
  public static void setAE_COUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AE_COUNT = value.getDouble ( );
  }  

  
  /**  */
  public static void setMADR_PADR_TOT  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MADR_PADR_TOT = value.getDouble ( );
  }  

  
  /**  */
  public static void setTECNICO_NULL  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TECNICO_NULL = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALARIO_EXIN  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_EXIN = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_SALARIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setGASTOS_ENSO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_ENSO = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_SALARIO_NOCAT  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO_NOCAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setGASTOS_NO_CAT  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_NO_CAT = value.getDouble ( );
  }  

  
  /**  */
  public static void setAYUD  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUD = value.getDouble ( );
  }  

  
  /**  */
  public static void setRESTE_30_ACT  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_ACT = value.getDouble ( );
  }  

  
  /**  */
  public static void setRESTE_30_SOL  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_SOL = value.getDouble ( );
  }  

  
  /**  */
  public static void setAYUDA_PERMITIDA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUDA_PERMITIDA = value.getDouble ( );
  }  

  
  /**  */
  public static void setCONY_INHE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_INHE = value.getDouble ( );
  }  

  
  /**  */
  public static void setCONY_ACREDITABLE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_ACREDITABLE = value.getDouble ( );
  }  

  
  /**  */
  public static void setCONY_CUIDO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_CUIDO = value.getDouble ( );
  }  

  
  /**  */
  public static void setCONY_TREINTA_Y_TERSIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TREINTA_Y_TERSIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setTREINTA_Y_TERSIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TREINTA_Y_TERSIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setCONY_PROD  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_PROD = value.getDouble ( );
  }  

  
  /**  */
  public static void setCONY_TR  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TR = value.getDouble ( );
  }  

  
  /**  */
  public static void setTR  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TR = value.getDouble ( );
  }  
    


  /**  */
  public static Date getFCH_EMISION  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).FCH_EMISION;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Date value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).FCH_EMISION = value;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).FCH_EMISION = ( Date ) value;
  }



  /**  */
  public static String getSERVICIO_STATUS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_STATUS;
  }


  /**  */
  public static void setSERVICIO_STATUS  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_STATUS = value;
  }


  /**  */
  public static void setSERVICIO_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_STATUS = ( String ) value;
  }



  /**  */
  public static String getINELEGIBLE_REG  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_REG;
  }


  /**  */
  public static void setINELEGIBLE_REG  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_REG = value;
  }


  /**  */
  public static void setINELEGIBLE_REG  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_REG = ( String ) value;
  }



  /**  */
  public static String getINELEGIBLE_EMER  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_EMER;
  }


  /**  */
  public static void setINELEGIBLE_EMER  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_EMER = value;
  }


  /**  */
  public static void setINELEGIBLE_EMER  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_EMER = ( String ) value;
  }



  /**  */
  public static String getRAZON  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RAZON;
  }


  /**  */
  public static void setRAZON  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RAZON = value;
  }


  /**  */
  public static void setRAZON  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RAZON = ( String ) value;
  }



  /**  */
  public static String getINELEGIBLE_INGRE_BRUTO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_INGRE_BRUTO;
  }


  /**  */
  public static void setINELEGIBLE_INGRE_BRUTO  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_INGRE_BRUTO = value;
  }


  /**  */
  public static void setINELEGIBLE_INGRE_BRUTO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INELEGIBLE_INGRE_BRUTO = ( String ) value;
  }



  /**  */
  public static String getELEGIBLE_REG  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ELEGIBLE_REG;
  }


  /**  */
  public static void setELEGIBLE_REG  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ELEGIBLE_REG = value;
  }


  /**  */
  public static void setELEGIBLE_REG  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ELEGIBLE_REG = ( String ) value;
  }



  /**  */
  public static String getELEGIBLE_EMER  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ELEGIBLE_EMER;
  }


  /**  */
  public static void setELEGIBLE_EMER  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ELEGIBLE_EMER = value;
  }


  /**  */
  public static void setELEGIBLE_EMER  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ELEGIBLE_EMER = ( String ) value;
  }



  /**  */
  public static String getSTATUS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS;
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS = value;
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS = ( String ) value;
  }



  /**  */
  public static Date getCUARTO_MES  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUARTO_MES;
  }


  /**  */
  public static void setCUARTO_MES  ( RallyApplication __app, Date value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUARTO_MES = value;
  }


  /**  */
  public static void setCUARTO_MES  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUARTO_MES = ( Date ) value;
  }



  /**  */
  public static String getNECESITADO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESITADO;
  }


  /**  */
  public static void setNECESITADO  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESITADO = value;
  }


  /**  */
  public static void setNECESITADO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESITADO = ( String ) value;
  }



  /**  */
  public static DataStore getCLIENTES2_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CLIENTES2_RO_DSD;
  }


  /**  */
  public static void setCLIENTES2_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CLIENTES2_RO_DSD = value;
  }


  /**  */
  public static void setCLIENTES2_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CLIENTES2_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_SERVICIO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_SERVICIO_DSD;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_SERVICIO_DSD = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_SERVICIO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECURSOS_NUCLEO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_NUCLEO_RO_DSD;
  }


  /**  */
  public static void setRECURSOS_NUCLEO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_NUCLEO_RO_DSD = value;
  }


  /**  */
  public static void setRECURSOS_NUCLEO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_NUCLEO_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECURSOS_CLIENTE_2_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_CLIENTE_2_RO_DSD;
  }


  /**  */
  public static void setRECURSOS_CLIENTE_2_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_CLIENTE_2_RO_DSD = value;
  }


  /**  */
  public static void setRECURSOS_CLIENTE_2_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_CLIENTE_2_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_SERVICIO_UPD_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_SERVICIO_UPD_RO_DSD;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_UPD_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_SERVICIO_UPD_RO_DSD = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_UPD_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_SERVICIO_UPD_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD;
  }


  /**  */
  public static void setINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD = value;
  }


  /**  */
  public static void setINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_NUCLEO_RO_DSD;
  }


  /**  */
  public static void setGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_NUCLEO_RO_DSD = value;
  }


  /**  */
  public static void setGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_NUCLEO_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getDETERMINA_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DETERMINA_RO_DSD;
  }


  /**  */
  public static void setDETERMINA_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DETERMINA_RO_DSD = value;
  }


  /**  */
  public static void setDETERMINA_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DETERMINA_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getSERVICIOS2_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIOS2_RO_DSD;
  }


  /**  */
  public static void setSERVICIOS2_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIOS2_RO_DSD = value;
  }


  /**  */
  public static void setSERVICIOS2_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIOS2_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getDEDUCCIONES_CLIENTE2_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD = value;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEDUCCIONES_CLIENTE2_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN2_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN2_ID;
  }


  /**  */
  public static Double getOPEN2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN2_ID );
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN2_ID = value;
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN3_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN3_ID;
  }


  /**  */
  public static Double getOPEN3_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN3_ID );
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN3_ID = value;
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN3_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN4_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN4_ID;
  }


  /**  */
  public static Double getOPEN4_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN4_ID );
  }


  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN4_ID = value;
  }


  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN4_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN5_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN5_ID;
  }


  /**  */
  public static Double getOPEN5_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN5_ID );
  }


  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN5_ID = value;
  }


  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN5_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN6_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN6_ID;
  }


  /**  */
  public static Double getOPEN6_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN6_ID );
  }


  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN6_ID = value;
  }


  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN6_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN7_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN7_ID;
  }


  /**  */
  public static Double getOPEN7_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN7_ID );
  }


  /**  */
  public static void setOPEN7_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN7_ID = value;
  }


  /**  */
  public static void setOPEN7_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN7_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN8_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN8_ID;
  }


  /**  */
  public static Double getOPEN8_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN8_ID );
  }


  /**  */
  public static void setOPEN8_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN8_ID = value;
  }


  /**  */
  public static void setOPEN8_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN8_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN9_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN9_ID;
  }


  /**  */
  public static Double getOPEN9_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN9_ID );
  }


  /**  */
  public static void setOPEN9_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN9_ID = value;
  }


  /**  */
  public static void setOPEN9_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN9_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN10_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN10_ID;
  }


  /**  */
  public static Double getOPEN10_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN10_ID );
  }


  /**  */
  public static void setOPEN10_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN10_ID = value;
  }


  /**  */
  public static void setOPEN10_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN10_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN11_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN11_ID;
  }


  /**  */
  public static Double getOPEN11_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN11_ID );
  }


  /**  */
  public static void setOPEN11_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN11_ID = value;
  }


  /**  */
  public static void setOPEN11_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN11_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESO_ACREDI_ENNE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDI_ENNE;
  }


  /**  */
  public static Double getINGRESO_ACREDI_ENNEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDI_ENNE );
  }


  /**  */
  public static void setINGRESO_ACREDI_ENNE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDI_ENNE = value;
  }


  /**  */
  public static void setINGRESO_ACREDI_ENNE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDI_ENNE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS2_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS2_CODE;
  }


  /**  */
  public static Double getSTATUS2_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS2_CODE );
  }


  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS2_CODE = value;
  }


  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS2_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS3_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS3_CODE;
  }


  /**  */
  public static Double getSTATUS3_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS3_CODE );
  }


  /**  */
  public static void setSTATUS3_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS3_CODE = value;
  }


  /**  */
  public static void setSTATUS3_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS3_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS4_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS4_CODE;
  }


  /**  */
  public static Double getSTATUS4_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS4_CODE );
  }


  /**  */
  public static void setSTATUS4_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS4_CODE = value;
  }


  /**  */
  public static void setSTATUS4_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS4_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS6_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS6_CODE;
  }


  /**  */
  public static Double getSTATUS6_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS6_CODE );
  }


  /**  */
  public static void setSTATUS6_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS6_CODE = value;
  }


  /**  */
  public static void setSTATUS6_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS6_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS7_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS7_CODE;
  }


  /**  */
  public static Double getSTATUS7_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS7_CODE );
  }


  /**  */
  public static void setSTATUS7_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS7_CODE = value;
  }


  /**  */
  public static void setSTATUS7_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS7_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS9_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS9_CODE;
  }


  /**  */
  public static Double getSTATUS9_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS9_CODE );
  }


  /**  */
  public static void setSTATUS9_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS9_CODE = value;
  }


  /**  */
  public static void setSTATUS9_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS9_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS11_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS11_CODE;
  }


  /**  */
  public static Double getSTATUS11_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS11_CODE );
  }


  /**  */
  public static void setSTATUS11_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS11_CODE = value;
  }


  /**  */
  public static void setSTATUS11_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).STATUS11_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUCLEO_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_CODE;
  }


  /**  */
  public static Double getNUCLEO_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_CODE );
  }


  /**  */
  public static void setNUCLEO_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_CODE = value;
  }


  /**  */
  public static void setNUCLEO_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUCLEO_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_TEMP  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_TEMP;
  }


  /**  */
  public static Double getOPEN_TEMPDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_TEMP );
  }


  /**  */
  public static void setOPEN_TEMP  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_TEMP = value;
  }


  /**  */
  public static void setOPEN_TEMP  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OPEN_TEMP = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERVICIO_BENEFICIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_BENEFICIO;
  }


  /**  */
  public static Double getSERVICIO_BENEFICIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_BENEFICIO );
  }


  /**  */
  public static void setSERVICIO_BENEFICIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_BENEFICIO = value;
  }


  /**  */
  public static void setSERVICIO_BENEFICIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SERVICIO_BENEFICIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSAVE_SSN  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SAVE_SSN;
  }


  /**  */
  public static Double getSAVE_SSNDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SAVE_SSN );
  }


  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SAVE_SSN = value;
  }


  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SAVE_SSN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECURSOS_ACUM  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_ACUM;
  }


  /**  */
  public static Double getRECURSOS_ACUMDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_ACUM );
  }


  /**  */
  public static void setRECURSOS_ACUM  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_ACUM = value;
  }


  /**  */
  public static void setRECURSOS_ACUM  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_ACUM = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEDAD_IND  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EDAD_IND;
  }


  /**  */
  public static Double getEDAD_INDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EDAD_IND );
  }


  /**  */
  public static void setEDAD_IND  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EDAD_IND = value;
  }


  /**  */
  public static void setEDAD_IND  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EDAD_IND = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESO_BRUTO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_BRUTO;
  }


  /**  */
  public static Double getINGRESO_BRUTODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_BRUTO );
  }


  /**  */
  public static void setINGRESO_BRUTO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_BRUTO = value;
  }


  /**  */
  public static void setINGRESO_BRUTO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_BRUTO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALARIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO;
  }


  /**  */
  public static Double getSALARIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO );
  }


  /**  */
  public static void setSALARIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO = value;
  }


  /**  */
  public static void setSALARIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALARIO_LIMP  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_LIMP;
  }


  /**  */
  public static Double getSALARIO_LIMPDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_LIMP );
  }


  /**  */
  public static void setSALARIO_LIMP  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_LIMP = value;
  }


  /**  */
  public static void setSALARIO_LIMP  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_LIMP = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSEG_SOC  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SEG_SOC;
  }


  /**  */
  public static Double getSEG_SOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SEG_SOC );
  }


  /**  */
  public static void setSEG_SOC  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SEG_SOC = value;
  }


  /**  */
  public static void setSEG_SOC  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SEG_SOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOTROS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS;
  }


  /**  */
  public static Double getOTROSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS );
  }


  /**  */
  public static void setOTROS  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS = value;
  }


  /**  */
  public static void setOTROS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOTROS_EXP  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_EXP;
  }


  /**  */
  public static Double getOTROS_EXPDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_EXP );
  }


  /**  */
  public static void setOTROS_EXP  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_EXP = value;
  }


  /**  */
  public static void setOTROS_EXP  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_EXP = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOTROS_CONY  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_CONY;
  }


  /**  */
  public static Double getOTROS_CONYDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_CONY );
  }


  /**  */
  public static void setOTROS_CONY  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_CONY = value;
  }


  /**  */
  public static void setOTROS_CONY  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).OTROS_CONY = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESO_NETO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_NETO;
  }


  /**  */
  public static Double getINGRESO_NETODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_NETO );
  }


  /**  */
  public static void setINGRESO_NETO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_NETO = value;
  }


  /**  */
  public static void setINGRESO_NETO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_NETO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCUIDO_MENOR  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO_MENOR;
  }


  /**  */
  public static Double getCUIDO_MENORDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO_MENOR );
  }


  /**  */
  public static void setCUIDO_MENOR  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO_MENOR = value;
  }


  /**  */
  public static void setCUIDO_MENOR  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO_MENOR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCUIDO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO;
  }


  /**  */
  public static Double getCUIDODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO );
  }


  /**  */
  public static void setCUIDO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO = value;
  }


  /**  */
  public static void setCUIDO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CUIDO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDEDUCCION_INGRESO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEDUCCION_INGRESO;
  }


  /**  */
  public static Double getDEDUCCION_INGRESODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEDUCCION_INGRESO );
  }


  /**  */
  public static void setDEDUCCION_INGRESO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEDUCCION_INGRESO = value;
  }


  /**  */
  public static void setDEDUCCION_INGRESO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEDUCCION_INGRESO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINCAPACITADO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INCAPACITADO;
  }


  /**  */
  public static Double getINCAPACITADODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INCAPACITADO );
  }


  /**  */
  public static void setINCAPACITADO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INCAPACITADO = value;
  }


  /**  */
  public static void setINCAPACITADO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INCAPACITADO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getBENEFICIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO;
  }


  /**  */
  public static Double getBENEFICIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO );
  }


  /**  */
  public static void setBENEFICIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO = value;
  }


  /**  */
  public static void setBENEFICIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOTAL_CUIDO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_CUIDO;
  }


  /**  */
  public static Double getTOTAL_CUIDODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_CUIDO );
  }


  /**  */
  public static void setTOTAL_CUIDO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_CUIDO = value;
  }


  /**  */
  public static void setTOTAL_CUIDO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_CUIDO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS_INHE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHE;
  }


  /**  */
  public static Double getGASTOS_INHEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHE );
  }


  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHE = value;
  }


  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS_INHERENTES  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHERENTES;
  }


  /**  */
  public static Double getGASTOS_INHERENTESDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHERENTES );
  }


  /**  */
  public static void setGASTOS_INHERENTES  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHERENTES = value;
  }


  /**  */
  public static void setGASTOS_INHERENTES  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_INHERENTES = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRESTE_30  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30;
  }


  /**  */
  public static Double getRESTE_30Double ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30 );
  }


  /**  */
  public static void setRESTE_30  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30 = value;
  }


  /**  */
  public static void setRESTE_30  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30 = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCENTAVOS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CENTAVOS;
  }


  /**  */
  public static Double getCENTAVOSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CENTAVOS );
  }


  /**  */
  public static void setCENTAVOS  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CENTAVOS = value;
  }


  /**  */
  public static void setCENTAVOS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CENTAVOS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getING_TEMP  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ING_TEMP;
  }


  /**  */
  public static Double getING_TEMPDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ING_TEMP );
  }


  /**  */
  public static void setING_TEMP  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ING_TEMP = value;
  }


  /**  */
  public static void setING_TEMP  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ING_TEMP = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_SAL  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_SAL;
  }


  /**  */
  public static Double getEXCENCION_SALDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_SAL );
  }


  /**  */
  public static void setEXCENCION_SAL  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_SAL = value;
  }


  /**  */
  public static void setEXCENCION_SAL  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_SAL = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_TRABAJO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_TRABAJO;
  }


  /**  */
  public static Double getEXCENCION_TRABAJODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_TRABAJO );
  }


  /**  */
  public static void setEXCENCION_TRABAJO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_TRABAJO = value;
  }


  /**  */
  public static void setEXCENCION_TRABAJO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_TRABAJO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_PROD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_PROD;
  }


  /**  */
  public static Double getEXCENCION_PRODDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_PROD );
  }


  /**  */
  public static void setEXCENCION_PROD  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_PROD = value;
  }


  /**  */
  public static void setEXCENCION_PROD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_PROD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_ALBERGUE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE;
  }


  /**  */
  public static Double getEXCENCION_ALBERGUEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE );
  }


  /**  */
  public static void setEXCENCION_ALBERGUE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE = value;
  }


  /**  */
  public static void setEXCENCION_ALBERGUE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDEFICIT  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEFICIT;
  }


  /**  */
  public static Double getDEFICITDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEFICIT );
  }


  /**  */
  public static void setDEFICIT  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEFICIT = value;
  }


  /**  */
  public static void setDEFICIT  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).DEFICIT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALARIO_CONYUGUE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_CONYUGUE;
  }


  /**  */
  public static Double getSALARIO_CONYUGUEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_CONYUGUE );
  }


  /**  */
  public static void setSALARIO_CONYUGUE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_CONYUGUE = value;
  }


  /**  */
  public static void setSALARIO_CONYUGUE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_CONYUGUE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESO_ACREDITABLE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDITABLE;
  }


  /**  */
  public static Double getINGRESO_ACREDITABLEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDITABLE );
  }


  /**  */
  public static void setINGRESO_ACREDITABLE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDITABLE = value;
  }


  /**  */
  public static void setINGRESO_ACREDITABLE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESO_ACREDITABLE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOT_INGRE_ACREDI  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_INGRE_ACREDI;
  }


  /**  */
  public static Double getTOT_INGRE_ACREDIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_INGRE_ACREDI );
  }


  /**  */
  public static void setTOT_INGRE_ACREDI  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_INGRE_ACREDI = value;
  }


  /**  */
  public static void setTOT_INGRE_ACREDI  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_INGRE_ACREDI = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNECESIDAD_AJUSTADA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA;
  }


  /**  */
  public static Double getNECESIDAD_AJUSTADADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA );
  }


  /**  */
  public static void setNECESIDAD_AJUSTADA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA = value;
  }


  /**  */
  public static void setNECESIDAD_AJUSTADA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOT_AJUSTADA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA;
  }


  /**  */
  public static Double getTOT_AJUSTADADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA );
  }


  /**  */
  public static void setTOT_AJUSTADA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA = value;
  }


  /**  */
  public static void setTOT_AJUSTADA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOTAL_OTROS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_OTROS;
  }


  /**  */
  public static Double getTOTAL_OTROSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_OTROS );
  }


  /**  */
  public static void setTOTAL_OTROS  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_OTROS = value;
  }


  /**  */
  public static void setTOTAL_OTROS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOTAL_OTROS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getBENEFICIO_AUTO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO_AUTO;
  }


  /**  */
  public static Double getBENEFICIO_AUTODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO_AUTO );
  }


  /**  */
  public static void setBENEFICIO_AUTO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO_AUTO = value;
  }


  /**  */
  public static void setBENEFICIO_AUTO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).BENEFICIO_AUTO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA;
  }


  /**  */
  public static Double getSALADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA );
  }


  /**  */
  public static void setSALA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA = value;
  }


  /**  */
  public static void setSALA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getADIE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADIE;
  }


  /**  */
  public static Double getADIEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADIE );
  }


  /**  */
  public static void setADIE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADIE = value;
  }


  /**  */
  public static void setADIE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADIE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNPRO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NPRO;
  }


  /**  */
  public static Double getNPRODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NPRO );
  }


  /**  */
  public static void setNPRO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NPRO = value;
  }


  /**  */
  public static void setNPRO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NPRO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getPARTE_PROP  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PARTE_PROP;
  }


  /**  */
  public static Double getPARTE_PROPDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PARTE_PROP );
  }


  /**  */
  public static void setPARTE_PROP  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PARTE_PROP = value;
  }


  /**  */
  public static void setPARTE_PROP  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PARTE_PROP = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXC_PROD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_PROD;
  }


  /**  */
  public static Double getEXC_PRODDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_PROD );
  }


  /**  */
  public static void setEXC_PROD  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_PROD = value;
  }


  /**  */
  public static void setEXC_PROD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_PROD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_NUCLEO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_NUCLEO;
  }


  /**  */
  public static Double getNUM_NUCLEODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_NUCLEO );
  }


  /**  */
  public static void setNUM_NUCLEO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_NUCLEO = value;
  }


  /**  */
  public static void setNUM_NUCLEO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_NUCLEO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_FAM  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAM;
  }


  /**  */
  public static Double getNUM_FAMDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAM );
  }


  /**  */
  public static void setNUM_FAM  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAM = value;
  }


  /**  */
  public static void setNUM_FAM  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAM = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getPROP_MENOR  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PROP_MENOR;
  }


  /**  */
  public static Double getPROP_MENORDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PROP_MENOR );
  }


  /**  */
  public static void setPROP_MENOR  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PROP_MENOR = value;
  }


  /**  */
  public static void setPROP_MENOR  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PROP_MENOR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getALBE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ALBE;
  }


  /**  */
  public static Double getALBEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ALBE );
  }


  /**  */
  public static void setALBE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ALBE = value;
  }


  /**  */
  public static void setALBE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ALBE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_MENOR  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_MENOR;
  }


  /**  */
  public static Double getNUM_MENORDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_MENOR );
  }


  /**  */
  public static void setNUM_MENOR  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_MENOR = value;
  }


  /**  */
  public static void setNUM_MENOR  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_MENOR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSUME_30  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SUME_30;
  }


  /**  */
  public static Double getSUME_30Double ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SUME_30 );
  }


  /**  */
  public static void setSUME_30  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SUME_30 = value;
  }


  /**  */
  public static void setSUME_30  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SUME_30 = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSS_PADA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SS_PADA;
  }


  /**  */
  public static Double getSS_PADADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SS_PADA );
  }


  /**  */
  public static void setSS_PADA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SS_PADA = value;
  }


  /**  */
  public static void setSS_PADA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SS_PADA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALA_PADA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADA;
  }


  /**  */
  public static Double getSALA_PADADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADA );
  }


  /**  */
  public static void setSALA_PADA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADA = value;
  }


  /**  */
  public static void setSALA_PADA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_FAMILIA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA;
  }


  /**  */
  public static Double getNUM_FAMILIADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA );
  }


  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA = value;
  }


  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXC_RECURSO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_RECURSO;
  }


  /**  */
  public static Double getEXC_RECURSODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_RECURSO );
  }


  /**  */
  public static void setEXC_RECURSO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_RECURSO = value;
  }


  /**  */
  public static void setEXC_RECURSO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXC_RECURSO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECURSOS_PATRO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_PATRO;
  }


  /**  */
  public static Double getRECURSOS_PATRODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_PATRO );
  }


  /**  */
  public static void setRECURSOS_PATRO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_PATRO = value;
  }


  /**  */
  public static void setRECURSOS_PATRO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_PATRO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESOS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESOS;
  }


  /**  */
  public static Double getINGRESOSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESOS );
  }


  /**  */
  public static void setINGRESOS  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESOS = value;
  }


  /**  */
  public static void setINGRESOS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).INGRESOS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALA_PADRES  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADRES;
  }


  /**  */
  public static Double getSALA_PADRESDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADRES );
  }


  /**  */
  public static void setSALA_PADRES  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADRES = value;
  }


  /**  */
  public static void setSALA_PADRES  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALA_PADRES = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECURSOS_NO_CATE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_NO_CATE;
  }


  /**  */
  public static Double getRECURSOS_NO_CATEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_NO_CATE );
  }


  /**  */
  public static void setRECURSOS_NO_CATE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_NO_CATE = value;
  }


  /**  */
  public static void setRECURSOS_NO_CATE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RECURSOS_NO_CATE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOT_AJUSTADA_SIN  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA_SIN;
  }


  /**  */
  public static Double getTOT_AJUSTADA_SINDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA_SIN );
  }


  /**  */
  public static void setTOT_AJUSTADA_SIN  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA_SIN = value;
  }


  /**  */
  public static void setTOT_AJUSTADA_SIN  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_AJUSTADA_SIN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNECESIDAD_AJUSTADA_SIN  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA_SIN;
  }


  /**  */
  public static Double getNECESIDAD_AJUSTADA_SINDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA_SIN );
  }


  /**  */
  public static void setNECESIDAD_AJUSTADA_SIN  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA_SIN = value;
  }


  /**  */
  public static void setNECESIDAD_AJUSTADA_SIN  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NECESIDAD_AJUSTADA_SIN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_FAMILIA_SIN  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA_SIN;
  }


  /**  */
  public static Double getNUM_FAMILIA_SINDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA_SIN );
  }


  /**  */
  public static void setNUM_FAMILIA_SIN  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA_SIN = value;
  }


  /**  */
  public static void setNUM_FAMILIA_SIN  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_FAMILIA_SIN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_ALBERGUE_SIN  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE_SIN;
  }


  /**  */
  public static Double getEXCENCION_ALBERGUE_SINDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE_SIN );
  }


  /**  */
  public static void setEXCENCION_ALBERGUE_SIN  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE_SIN = value;
  }


  /**  */
  public static void setEXCENCION_ALBERGUE_SIN  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).EXCENCION_ALBERGUE_SIN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOT_EXCESION_ALBE_SIN  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_EXCESION_ALBE_SIN;
  }


  /**  */
  public static Double getTOT_EXCESION_ALBE_SINDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_EXCESION_ALBE_SIN );
  }


  /**  */
  public static void setTOT_EXCESION_ALBE_SIN  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_EXCESION_ALBE_SIN = value;
  }


  /**  */
  public static void setTOT_EXCESION_ALBE_SIN  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TOT_EXCESION_ALBE_SIN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getADULTO_INCA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADULTO_INCA;
  }


  /**  */
  public static Double getADULTO_INCADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADULTO_INCA );
  }


  /**  */
  public static void setADULTO_INCA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADULTO_INCA = value;
  }


  /**  */
  public static void setADULTO_INCA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).ADULTO_INCA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getMENOR_MAYOR_2  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_MAYOR_2;
  }


  /**  */
  public static Double getMENOR_MAYOR_2Double ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_MAYOR_2 );
  }


  /**  */
  public static void setMENOR_MAYOR_2  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_MAYOR_2 = value;
  }


  /**  */
  public static void setMENOR_MAYOR_2  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_MAYOR_2 = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getMENOR_2_ANOS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_2_ANOS;
  }


  /**  */
  public static Double getMENOR_2_ANOSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_2_ANOS );
  }


  /**  */
  public static void setMENOR_2_ANOS  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_2_ANOS = value;
  }


  /**  */
  public static void setMENOR_2_ANOS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MENOR_2_ANOS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getMAXIMO_CUIDO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MAXIMO_CUIDO;
  }


  /**  */
  public static Double getMAXIMO_CUIDODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MAXIMO_CUIDO );
  }


  /**  */
  public static void setMAXIMO_CUIDO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MAXIMO_CUIDO = value;
  }


  /**  */
  public static void setMAXIMO_CUIDO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MAXIMO_CUIDO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getPADR_MADR_TOT  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PADR_MADR_TOT;
  }


  /**  */
  public static Double getPADR_MADR_TOTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PADR_MADR_TOT );
  }


  /**  */
  public static void setPADR_MADR_TOT  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PADR_MADR_TOT = value;
  }


  /**  */
  public static void setPADR_MADR_TOT  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).PADR_MADR_TOT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getAE_COUNT  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AE_COUNT;
  }


  /**  */
  public static Double getAE_COUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AE_COUNT );
  }


  /**  */
  public static void setAE_COUNT  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AE_COUNT = value;
  }


  /**  */
  public static void setAE_COUNT  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AE_COUNT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getMADR_PADR_TOT  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MADR_PADR_TOT;
  }


  /**  */
  public static Double getMADR_PADR_TOTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MADR_PADR_TOT );
  }


  /**  */
  public static void setMADR_PADR_TOT  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MADR_PADR_TOT = value;
  }


  /**  */
  public static void setMADR_PADR_TOT  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).MADR_PADR_TOT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTECNICO_NULL  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TECNICO_NULL;
  }


  /**  */
  public static Double getTECNICO_NULLDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TECNICO_NULL );
  }


  /**  */
  public static void setTECNICO_NULL  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TECNICO_NULL = value;
  }


  /**  */
  public static void setTECNICO_NULL  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TECNICO_NULL = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALARIO_EXIN  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_EXIN;
  }


  /**  */
  public static Double getSALARIO_EXINDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_EXIN );
  }


  /**  */
  public static void setSALARIO_EXIN  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_EXIN = value;
  }


  /**  */
  public static void setSALARIO_EXIN  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).SALARIO_EXIN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_SALARIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO;
  }


  /**  */
  public static Double getNUM_SALARIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO );
  }


  /**  */
  public static void setNUM_SALARIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO = value;
  }


  /**  */
  public static void setNUM_SALARIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS_ENSO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_ENSO;
  }


  /**  */
  public static Double getGASTOS_ENSODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_ENSO );
  }


  /**  */
  public static void setGASTOS_ENSO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_ENSO = value;
  }


  /**  */
  public static void setGASTOS_ENSO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_ENSO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_SALARIO_NOCAT  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO_NOCAT;
  }


  /**  */
  public static Double getNUM_SALARIO_NOCATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO_NOCAT );
  }


  /**  */
  public static void setNUM_SALARIO_NOCAT  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO_NOCAT = value;
  }


  /**  */
  public static void setNUM_SALARIO_NOCAT  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).NUM_SALARIO_NOCAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS_NO_CAT  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_NO_CAT;
  }


  /**  */
  public static Double getGASTOS_NO_CATDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_NO_CAT );
  }


  /**  */
  public static void setGASTOS_NO_CAT  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_NO_CAT = value;
  }


  /**  */
  public static void setGASTOS_NO_CAT  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).GASTOS_NO_CAT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getAYUD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUD;
  }


  /**  */
  public static Double getAYUDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUD );
  }


  /**  */
  public static void setAYUD  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUD = value;
  }


  /**  */
  public static void setAYUD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRESTE_30_ACT  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_ACT;
  }


  /**  */
  public static Double getRESTE_30_ACTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_ACT );
  }


  /**  */
  public static void setRESTE_30_ACT  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_ACT = value;
  }


  /**  */
  public static void setRESTE_30_ACT  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_ACT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRESTE_30_SOL  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_SOL;
  }


  /**  */
  public static Double getRESTE_30_SOLDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_SOL );
  }


  /**  */
  public static void setRESTE_30_SOL  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_SOL = value;
  }


  /**  */
  public static void setRESTE_30_SOL  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).RESTE_30_SOL = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getAYUDA_PERMITIDA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUDA_PERMITIDA;
  }


  /**  */
  public static Double getAYUDA_PERMITIDADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUDA_PERMITIDA );
  }


  /**  */
  public static void setAYUDA_PERMITIDA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUDA_PERMITIDA = value;
  }


  /**  */
  public static void setAYUDA_PERMITIDA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).AYUDA_PERMITIDA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCONY_INHE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_INHE;
  }


  /**  */
  public static Double getCONY_INHEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_INHE );
  }


  /**  */
  public static void setCONY_INHE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_INHE = value;
  }


  /**  */
  public static void setCONY_INHE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_INHE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCONY_ACREDITABLE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_ACREDITABLE;
  }


  /**  */
  public static Double getCONY_ACREDITABLEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_ACREDITABLE );
  }


  /**  */
  public static void setCONY_ACREDITABLE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_ACREDITABLE = value;
  }


  /**  */
  public static void setCONY_ACREDITABLE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_ACREDITABLE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCONY_CUIDO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_CUIDO;
  }


  /**  */
  public static Double getCONY_CUIDODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_CUIDO );
  }


  /**  */
  public static void setCONY_CUIDO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_CUIDO = value;
  }


  /**  */
  public static void setCONY_CUIDO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_CUIDO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCONY_TREINTA_Y_TERSIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TREINTA_Y_TERSIO;
  }


  /**  */
  public static Double getCONY_TREINTA_Y_TERSIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TREINTA_Y_TERSIO );
  }


  /**  */
  public static void setCONY_TREINTA_Y_TERSIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TREINTA_Y_TERSIO = value;
  }


  /**  */
  public static void setCONY_TREINTA_Y_TERSIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TREINTA_Y_TERSIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTREINTA_Y_TERSIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TREINTA_Y_TERSIO;
  }


  /**  */
  public static Double getTREINTA_Y_TERSIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TREINTA_Y_TERSIO );
  }


  /**  */
  public static void setTREINTA_Y_TERSIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TREINTA_Y_TERSIO = value;
  }


  /**  */
  public static void setTREINTA_Y_TERSIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TREINTA_Y_TERSIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCONY_PROD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_PROD;
  }


  /**  */
  public static Double getCONY_PRODDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_PROD );
  }


  /**  */
  public static void setCONY_PROD  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_PROD = value;
  }


  /**  */
  public static void setCONY_PROD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_PROD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCONY_TR  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TR;
  }


  /**  */
  public static Double getCONY_TRDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TR );
  }


  /**  */
  public static void setCONY_TR  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TR = value;
  }


  /**  */
  public static void setCONY_TR  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).CONY_TR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTR  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TR;
  }


  /**  */
  public static Double getTRDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TR );
  }


  /**  */
  public static void setTR  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TR = value;
  }


  /**  */
  public static void setTR  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) __app.getADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class ) ).TR = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DETERMINAR_ENCARGADO_NECESITADO_ADL get ( RallyApplication __app )
  {
    DETERMINAR_ENCARGADO_NECESITADO_ADL adl = new DETERMINAR_ENCARGADO_NECESITADO_ADL ( );
    __app.register ( adl, "DETERMINAR_ENCARGADO_NECESITADO_ADL" );
    __app.setADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DETERMINAR_ENCARGADO_NECESITADO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DETERMINAR_ENCARGADO_NECESITADO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }


  /**
   * Populating the parameter set object with return values
   */
  protected void returnParms ( ParameterSet ps, double OPEN_ID, double OPEN2_ID, double OPEN3_ID, double OPEN4_ID, double OPEN5_ID, double OPEN6_ID, double OPEN7_ID, double OPEN8_ID, double OPEN9_ID, double OPEN10_ID, double OPEN11_ID, Date FCH_EMISION, double INGRESO_ACREDI_ENNE )
  {
    ps.reset ( );
    ps.set ( OPEN_ID );
    ps.set ( OPEN2_ID );
    ps.set ( OPEN3_ID );
    ps.set ( OPEN4_ID );
    ps.set ( OPEN5_ID );
    ps.set ( OPEN6_ID );
    ps.set ( OPEN7_ID );
    ps.set ( OPEN8_ID );
    ps.set ( OPEN9_ID );
    ps.set ( OPEN10_ID );
    ps.set ( OPEN11_ID );
    ps.set ( FCH_EMISION );
    ps.set ( INGRESO_ACREDI_ENNE );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DETERMINAR_ENCARGADO_NECESITADO_ADL" );
    if ( rObj != null && rObj instanceof DETERMINAR_ENCARGADO_NECESITADO_ADL )
    {
      this.app.setADL ( DETERMINAR_ENCARGADO_NECESITADO_ADL.class, ( DETERMINAR_ENCARGADO_NECESITADO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DETERMINAR_ENCARGADO_NECESITADO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DETERMINAR_ENCARGADO_NECESITADO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    ps.reset ( );
    OPEN_ID = ps.getDouble( );
    OPEN2_ID = ps.getDouble( );
    OPEN3_ID = ps.getDouble( );
    OPEN4_ID = ps.getDouble( );
    OPEN5_ID = ps.getDouble( );
    OPEN6_ID = ps.getDouble( );
    OPEN7_ID = ps.getDouble( );
    OPEN8_ID = ps.getDouble( );
    OPEN9_ID = ps.getDouble( );
    OPEN10_ID = ps.getDouble( );
    OPEN11_ID = ps.getDouble( );
    FCH_EMISION = ps.getDate( );
    INGRESO_ACREDI_ENNE = ps.getDouble( );

    TECNICO_NULL = TruncService.setNull ( TECNICO_NULL  );
    CONY_INHE = 0;
    CONY_ACREDITABLE = 0;
    CONY_CUIDO = 0;
    CONY_TREINTA_Y_TERSIO = 0;
    CONY_PROD = 0;
    TREINTA_Y_TERSIO = 0;
    CONY_TR = 0;
    TR = 0;
    EXCENCION_ALBERGUE_SIN = 0;
    TOT_EXCESION_ALBE_SIN = 0;
    AYUDA_PERMITIDA = 0;
    RECURSOS_ACUM = 0;
    EXC_RECURSO = 0;

    STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

    this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );

    STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

    STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

    while ( Compare.equals ( STATUS2_CODE, 0 )  )
    {
      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      if ( Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENSO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENNE" ) ) || ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_ESTADO_CIVIL" ), "CASA" ) )  ) ) 
        {
          STATUS3_CODE  = this.dm.reset ( OPEN3_ID );

          this.dm.setField ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
          this.dm.setField ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
          this.dm.setField ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
          this.dm.setField ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

          STATUS3_CODE  = this.dm.limitQueryFromBuffer ( OPEN3_ID );
          STATUS3_CODE  = this.dm.retrieve ( OPEN3_ID );

          STATUS3_CODE  = this.dm.firstRow ( OPEN3_ID );

          while ( Compare.equals ( STATUS3_CODE, 0 )  )
          {
            if ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "COD_TIPO_RECURSO" ), 0, 4 ), "VEH1" ) ) 
            {
              if ( Compare.ge ( this.dm.getFieldDouble ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_RECURSO" ), 4000 ) ) 
              {
                RECURSOS_NO_CATE = MathService.minus ( MathService.plus ( RECURSOS_NO_CATE, this.dm.getFieldDouble ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_RECURSO" )  ), 4000  );
              }
              else
              {
                RECURSOS_NO_CATE = RECURSOS_NO_CATE;
              }
            }
            else
            {
              RECURSOS_NO_CATE = MathService.plus ( RECURSOS_NO_CATE, this.dm.getFieldDouble ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_RECURSO" )  );
            }

            STATUS3_CODE  = this.dm.nextRow ( OPEN3_ID );

          }
        }
        else
        {
          STATUS7_CODE  = this.dm.reset ( OPEN7_ID );

          this.dm.setField ( this.dm.get ( "RECURSOS_CLIENTE_2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

          STATUS7_CODE  = this.dm.limitQueryFromBuffer ( OPEN7_ID );
          STATUS7_CODE  = this.dm.retrieve ( OPEN7_ID );

          STATUS7_CODE  = this.dm.firstRow ( OPEN7_ID );

          while ( Compare.equals ( STATUS7_CODE, 0 )  )
          {
            if ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "RECURSOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_RECURSO" ), 0, 4 ), "VEH1" ) ) 
            {
              if ( Compare.ge ( this.dm.getFieldDouble ( this.dm.get ( "RECURSOS_CLIENTE_2_RO_DSD" ), "VLR_CANTIDAD_RECURSO" ), 4000 ) ) 
              {
                RECURSOS_NO_CATE = MathService.minus ( MathService.plus ( RECURSOS_NO_CATE, this.dm.getFieldDouble ( this.dm.get ( "RECURSOS_CLIENTE_2_RO_DSD" ), "VLR_CANTIDAD_RECURSO" )  ), 4000  );
              }
              else
              {
                RECURSOS_NO_CATE = RECURSOS_NO_CATE;
              }
            }
            else
            {
              RECURSOS_NO_CATE = MathService.plus ( RECURSOS_NO_CATE, this.dm.getFieldDouble ( this.dm.get ( "RECURSOS_CLIENTE_2_RO_DSD" ), "VLR_CANTIDAD_RECURSO" )  );
            }

            STATUS7_CODE  = this.dm.nextRow ( OPEN7_ID );

          }
        }
      }

      STATUS2_CODE  = this.dm.nextRow ( OPEN2_ID );

    }
    if ( Compare.gt ( RECURSOS_NO_CATE, 2000 ) ) 
    {
      NECESITADO = "F";

      STATUS_CODE  = this.dm.reset ( OPEN10_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.app.SS_SERV_GBL );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN10_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN10_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN10_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV", "ENNA" );

      STATUS_CODE  = this.dm.update ( OPEN10_ID );

      this.returnParms ( ps, OPEN_ID, OPEN2_ID, OPEN3_ID, OPEN4_ID, OPEN5_ID, OPEN6_ID, OPEN7_ID, OPEN8_ID, OPEN9_ID, OPEN10_ID, OPEN11_ID, FCH_EMISION, INGRESO_ACREDI_ENNE );
      this.doReturn ( );
      return; 
    }
    SALARIO = 0;
    SEG_SOC = 0;
    OTROS = 0;
    SALA = 0;
    NPRO = 0;
    SALARIO_EXIN = 0;
    NUM_SALARIO = 0;

    STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

    this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );

    STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

    STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

    while ( Compare.equals ( STATUS2_CODE, 0 )  )
    {
      EDAD_IND = DateUtil.monthsBetween ( FCH_EMISION, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;

      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      if ( Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        STATUS_CODE  = this.dm.reset ( OPEN5_ID );

        this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
        this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
        this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
        this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

        STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN5_ID );
        STATUS_CODE  = this.dm.retrieve ( OPEN5_ID );

        STATUS_CODE  = this.dm.firstRow ( OPEN5_ID );

        while ( Compare.equals ( STATUS_CODE, 0 )  )
        {
          if ( ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_PAN" ), "X" ) )  ) || ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_AE" ), "X" ) )  ) ) 
          {
            this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_REHABILITACION" ) );
          }
          else
          {
            if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "S" ) ) 
            {
              if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( ! Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" ) ) ) 
              {
                this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 4.3 );
              }
              else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" ) ) 
              {
                this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 4.3 );
              }
            }
            else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "B" ) ) 
            {
              this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 2.15 );
            }
            else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "Q" ) ) 
            {
              this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 2.0 );
            }
            else
            {
              this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 1.0 );
            }
          }
          if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENSO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENNE" ) ) || ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.lt ( EDAD_IND, 21 ) )  ) || ( ( Compare.ge ( EDAD_IND, 21 ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_INCAPACIDAD_PRIMARIA" ), "NA" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FLG_INCAPACIDAD_VERIFICADA" ), "S" ) )  ) || ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_ESTADO_CIVIL" ), "CASA" ) )  ) ) 
          {
            if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "SALA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "ADIE" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "NPRO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "PTRA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRN" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAS" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAC" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BILV" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRB" ) ) ) 
            {
              if ( ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_ESTADO_CIVIL" ), "CASA" ) )  ) || ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.lt ( EDAD_IND, 21 ) )  ) || ( ( Compare.ge ( EDAD_IND, 21 ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_INCAPACIDAD_PRIMARIA" ), "NA" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FLG_INCAPACIDAD_VERIFICADA" ), "S" ) )  ) ) && ( Compare.gt ( this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ), 0 ) )  ) 
              {
                SALARIO_EXIN = MathService.plus ( SALARIO_EXIN, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
                INGRESO_BRUTO = MathService.plus ( INGRESO_BRUTO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
                NUM_SALARIO_NOCAT = MathService.plus ( NUM_SALARIO_NOCAT, 1  );
              }
              else
              {
                SALARIO = MathService.plus ( SALARIO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
                INGRESO_BRUTO = MathService.plus ( INGRESO_BRUTO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
                NUM_SALARIO = MathService.plus ( NUM_SALARIO, 1  );
              }
            }
            else
            {
              if ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
              {
                OTROS_EXP = MathService.plus ( OTROS_EXP, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
              }
              else
              {
                OTROS_CONY = MathService.plus ( OTROS_CONY, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
              }
            }
            if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "SALA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "PTRA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRB" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BILV" ) ) ) 
            {
              SALA = MathService.plus ( SALA, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
            }
            else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "ADIE" ) ) 
            {
              ADIE = MathService.plus ( ADIE, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
            }
            else if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "NPRO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRN" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAS" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAC" ) )  )
            {
              NPRO = MathService.plus ( NPRO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
            }
            else
            {
              OTROS = MathService.plus ( OTROS, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
            }
          }

          STATUS_CODE  = this.dm.nextRow ( OPEN5_ID );

        }
      }

      STATUS2_CODE  = this.dm.nextRow ( OPEN2_ID );

    }
    if ( Compare.le ( ( MathService.plus ( MathService.plus ( INGRESO_BRUTO, SALARIO_EXIN  ), OTROS  ) ), 0 ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      STATUS_CODE  = this.dm.reset ( OPEN10_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.app.SS_SERV_GBL );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN10_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN10_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN10_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV", "ENNE" );

      STATUS_CODE  = this.dm.update ( OPEN10_ID );

      PREP_ENCARGADO_NEC_PKT.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.le ( ( MathService.plus ( MathService.plus ( INGRESO_BRUTO, SALARIO_EXIN  ), OTROS  ) ), 0 ) ) 
    {
      this.returnParms ( ps, OPEN_ID, OPEN2_ID, OPEN3_ID, OPEN4_ID, OPEN5_ID, OPEN6_ID, OPEN7_ID, OPEN8_ID, OPEN9_ID, OPEN10_ID, OPEN11_ID, FCH_EMISION, INGRESO_ACREDI_ENNE );
      this.doReturn ( );
      return; 
    }
    NUM_NUCLEO = 0;

    STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

    this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );

    STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

    STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

    while ( Compare.equals ( STATUS2_CODE, 0 )  )
    {
      EDAD_IND = DateUtil.monthsBetween ( FCH_EMISION, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;

      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENSO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENNE" ) ) || ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.lt ( EDAD_IND, 21 ) )  ) || ( ( Compare.ge ( EDAD_IND, 21 ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_INCAPACIDAD_PRIMARIA" ), "NA" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FLG_INCAPACIDAD_VERIFICADA" ), "S" ) )  ) || ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_ESTADO_CIVIL" ), "CASA" ) )  ) ) 
      {
        NUM_NUCLEO = MathService.plus ( NUM_NUCLEO, 1  );
      }

      STATUS2_CODE  = this.dm.nextRow ( OPEN2_ID );

    }
    ALBE = 0;

    STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

    this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );

    STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

    STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

    while ( Compare.equals ( STATUS2_CODE, 0 )  )
    {
      STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE", "ALBE" );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

      STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
      STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

      STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

      if ( Compare.equals ( STATUS6_CODE, 0 ) ) 
      {
        STATUS_CODE  = this.dm.reset ( OPEN_ID );

        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

        STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
        STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

        STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

        if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENSO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENNE" ) ) || ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_ESTADO_CIVIL" ), "CASA" ) )  ) ) 
        {
          ALBE = MathService.plus ( ALBE, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
        }
      }

      STATUS2_CODE  = this.dm.nextRow ( OPEN2_ID );

    }

    STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE", "AYUD" );

    STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
    STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

    STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

    if ( Compare.equals ( STATUS6_CODE, 0 ) ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      STATUS11_CODE  = this.dm.reset ( OPEN11_ID );

      this.dm.setField ( this.dm.get ( "DETERMINA_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );

      STATUS11_CODE  = this.dm.limitQueryFromBuffer ( OPEN11_ID );
      STATUS11_CODE  = this.dm.retrieve ( OPEN11_ID );

      STATUS11_CODE  = this.dm.firstRow ( OPEN11_ID );

      while ( ( Compare.equals ( STATUS11_CODE, 0 ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "DETERMINA_RO_DSD" ), "FECHA_EFECTIVIDAD" ), FCH_EMISION ) )   )
      {
        AYUDA_PERMITIDA = MathService.plus ( ( this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA" ) * 2 ), ( ( MathService.minus ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "NUM_PERSONAS_AYUDA" ), 1  ) ) * this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA_FAM" ) * 2 )  );

        STATUS11_CODE  = this.dm.nextRow ( OPEN11_ID );

      }
      if ( Compare.gt ( ( MathService.plus ( INGRESO_BRUTO, OTROS  ) ), ( ( MathService.plus ( AYUDA_PERMITIDA, ALBE  ) ) * 1.85 ) ) ) 
      {
        this._condition2 = true;
      }
      else
      {
        this._condition2 = false;
      }
      if ( this._condition2 )
      {
        NECESITADO = "F";

        STATUS_CODE  = this.dm.reset ( OPEN10_ID );

        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.app.SS_SERV_GBL );

        STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN10_ID );
        STATUS_CODE  = this.dm.retrieve ( OPEN10_ID );

        STATUS_CODE  = this.dm.firstRow ( OPEN10_ID );

        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV", "ENNA" );

        STATUS_CODE  = this.dm.update ( OPEN10_ID );

        PREP_ENCARGADO_NEC_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( STATUS6_CODE, 0 ) ) 
    {
      if ( this._condition2 )    //      if ( Compare.gt ( ( MathService.plus ( INGRESO_BRUTO, OTROS  ) ), ( ( MathService.plus ( AYUDA_PERMITIDA, ALBE  ) ) * 1.85 ) ) ) 
      {
        this.returnParms ( ps, OPEN_ID, OPEN2_ID, OPEN3_ID, OPEN4_ID, OPEN5_ID, OPEN6_ID, OPEN7_ID, OPEN8_ID, OPEN9_ID, OPEN10_ID, OPEN11_ID, FCH_EMISION, INGRESO_ACREDI_ENNE );
        this.doReturn ( );
        return; 
      }
    }
    CENTAVOS = 0;
    ING_TEMP = 0;
    EXCENCION_SAL = 0;
    EXCENCION_TRABAJO = INGRESO_BRUTO;
    GASTOS_INHERENTES = 0;
    GASTOS_INHE = 0;
    if ( Compare.gt ( NPRO, 0 ) ) 
    {
      STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );

      STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
      STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

      STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

      while ( Compare.equals ( STATUS6_CODE, 0 )  )
      {
        STATUS_CODE  = this.dm.reset ( OPEN_ID );

        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
        this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

        STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
        STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

        STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

        if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "PROA" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "PROC" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ALBE" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ESTU" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ANCI" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "MEDI" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "CUID" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETYT" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETRT" ) )  ) 
        {
          if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENSO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENNE" ) ) ) 
          {
            GASTOS_INHERENTES = MathService.plus ( GASTOS_INHERENTES, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
          }
          else
          {
            CONY_INHE = MathService.plus ( CONY_INHE, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
            GASTOS_INHERENTES = MathService.plus ( GASTOS_INHERENTES, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
          }
        }
        if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENSO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENNE" ) ) ) 
        {
          GASTOS_ENSO = MathService.plus ( GASTOS_ENSO, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
        }
        else
        {
          GASTOS_NO_CAT = MathService.plus ( GASTOS_NO_CAT, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
        }

        STATUS6_CODE  = this.dm.nextRow ( OPEN6_ID );

      }
      GASTOS_INHERENTES = TruncService.trunc ( GASTOS_INHERENTES ) ;
      if ( Compare.ge ( INGRESO_BRUTO, GASTOS_INHERENTES ) ) 
      {
        INGRESO_BRUTO = MathService.minus ( INGRESO_BRUTO, GASTOS_INHERENTES  );
      }
      else
      {
        INGRESO_BRUTO = 0;
      }
    }
    EXCENCION_PROD = 0;
    if ( Compare.gt ( INGRESO_BRUTO, 0 ) ) 
    {
      EXCENCION_PROD = MathService.plus ( EXCENCION_PROD, ( ( MathService.plus ( NUM_SALARIO, NUM_SALARIO_NOCAT  ) ) * 90 )  );
      if ( Compare.ge ( INGRESO_BRUTO, EXCENCION_PROD ) ) 
      {
        INGRESO_ACREDITABLE = MathService.minus ( INGRESO_BRUTO, EXCENCION_PROD  );
      }
      else
      {
        INGRESO_ACREDITABLE = 0;
      }
    }
    RESTE_30 = 0;
    RESTE_30_ACT = 0;
    this.app.ETYT_CASO_GBL = "N";
    SALARIO_LIMP = MathService.minus ( SALARIO, ( MathService.plus ( GASTOS_ENSO, 90  ) )  );

    STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

    this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );

    STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

    STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

    while ( Compare.equals ( STATUS2_CODE, 0 )  )
    {
      EDAD_IND = DateUtil.monthsBetween ( FCH_EMISION, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;

      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
      STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

      STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

      while ( Compare.equals ( STATUS6_CODE, 0 )  )
      {
        if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETYT" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETRT" ) ) ) 
        {
          if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) ) && ( ( ( Compare.ge ( EDAD_IND, 18 ) ) && ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ), this.app.SS_SERV_GBL ) )  ) || ( Compare.lt ( EDAD_IND, 18 ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FACT_ELEGIBILIDAD_AEC" ), "INCA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) )  ) 
          {
            STATUS4_CODE  = this.dm.reset ( OPEN4_ID );

            this.dm.setField ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
            this.dm.setField ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
            this.dm.setField ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
            this.dm.setField ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

            STATUS4_CODE  = this.dm.limitQueryFromBuffer ( OPEN4_ID );
            STATUS4_CODE  = this.dm.retrieve ( OPEN4_ID );

            STATUS4_CODE  = this.dm.firstRow ( OPEN4_ID );

            CUARTO_MES = DateUtil.addMonths ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "FCH_SOLICITUD" ), 4 );
            if ( ( Compare.gt ( SALARIO_LIMP, 0 ) ) && ( ( ! Compare.equals ( SALARIO, 0 ) ) || ( ! Compare.equals ( SALARIO_CONYUGUE, 0 ) ) )  && ( Compare.equals ( this.app.AUTORIZADA_GBL, "S" ) )  ) 
            {
              this.app.ETYT_CASO_GBL = "Y";
              if ( Compare.ge ( SALARIO_LIMP, 30 ) ) 
              {
                if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETYT" ) ) 
                {
                  if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
                  {
                    CONY_TREINTA_Y_TERSIO = TruncService.round ( MathService.plus ( 30, ( ( MathService.minus ( SALARIO_LIMP, 30  ) ) * 0.333 )  ) ) ;
                  }
                  else
                  {
                    TREINTA_Y_TERSIO = TruncService.round ( MathService.plus ( 30, ( ( MathService.minus ( SALARIO_LIMP, 30  ) ) * 0.333 )  ) ) ;
                  }
                }
                else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
                {
                  CONY_TREINTA_Y_TERSIO = 30;
                }
                else
                {
                  TREINTA_Y_TERSIO = 30;
                }
                RESTE_30 = MathService.plus ( RESTE_30, TREINTA_Y_TERSIO  );
                RESTE_30_ACT = MathService.plus ( RESTE_30_ACT, TREINTA_Y_TERSIO  );
              }
              else
              {
                if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) && ( ! Compare.equals ( SALARIO_CONYUGUE, 0 ) )  ) 
                {
                  CONY_TREINTA_Y_TERSIO = SALARIO_LIMP;
                  CONY_TR = MathService.plus ( CONY_TR, SALARIO_LIMP  );
                }
                else
                {
                  TREINTA_Y_TERSIO = SALARIO_LIMP;
                  TR = MathService.plus ( TR, SALARIO_LIMP  );
                }
              }
              if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) && ( ! Compare.equals ( SALARIO_CONYUGUE, 0 ) )  ) 
              {
                if ( Compare.ge ( INGRESO_ACREDITABLE, CONY_TREINTA_Y_TERSIO ) ) 
                {
                  INGRESO_ACREDITABLE = MathService.minus ( INGRESO_ACREDITABLE, CONY_TREINTA_Y_TERSIO  );
                  CONY_TR = MathService.plus ( CONY_TR, CONY_TREINTA_Y_TERSIO  );
                }
                else
                {
                  INGRESO_ACREDITABLE = 0;
                }
              }
              else if ( Compare.ge ( INGRESO_ACREDITABLE, TREINTA_Y_TERSIO )  )
              {
                INGRESO_ACREDITABLE = MathService.minus ( INGRESO_ACREDITABLE, TREINTA_Y_TERSIO  );
                TR = MathService.plus ( TR, TREINTA_Y_TERSIO  );
              }
              else
              {
                INGRESO_ACREDITABLE = 0;
              }
            }
          }
          if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETYT" ) ) && ( Compare.equals ( this.app.AUTORIZADA_GBL, "S" ) )  ) 
          {
            STATUS9_CODE  = this.dm.reset ( OPEN9_ID );

            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "COD_TIPO_DEDUCCIONE", "ETYT" );
            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

            STATUS9_CODE  = this.dm.limitQueryFromBuffer ( OPEN9_ID );
            STATUS9_CODE  = this.dm.retrieve ( OPEN9_ID );

            STATUS9_CODE  = this.dm.firstRow ( OPEN9_ID );

            if ( Compare.equals ( STATUS9_CODE, 0 ) ) 
            {
              if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
              {
                this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "VLR_CANTIDAD_DEDUCCIONE", CONY_TREINTA_Y_TERSIO );
              }
              else
              {
                this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "VLR_CANTIDAD_DEDUCCIONE", TREINTA_Y_TERSIO );
              }

              STATUS9_CODE  = this.dm.update ( OPEN9_ID );

            }
          }
          if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETRT" ) ) && ( Compare.equals ( this.app.AUTORIZADA_GBL, "S" ) )  ) 
          {
            STATUS9_CODE  = this.dm.reset ( OPEN9_ID );

            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "COD_TIPO_DEDUCCIONE", "ETRT" );
            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

            STATUS9_CODE  = this.dm.limitQueryFromBuffer ( OPEN9_ID );
            STATUS9_CODE  = this.dm.retrieve ( OPEN9_ID );

            STATUS9_CODE  = this.dm.firstRow ( OPEN9_ID );

            if ( Compare.equals ( STATUS9_CODE, 0 ) ) 
            {
              if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
              {
                this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "VLR_CANTIDAD_DEDUCCIONE", CONY_TREINTA_Y_TERSIO );
              }
              else
              {
                this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "VLR_CANTIDAD_DEDUCCIONE", TREINTA_Y_TERSIO );
              }

              STATUS9_CODE  = this.dm.update ( OPEN9_ID );

            }
          }
        }

        STATUS6_CODE  = this.dm.nextRow ( OPEN6_ID );

      }

      STATUS2_CODE  = this.dm.nextRow ( OPEN2_ID );

    }

    STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE", "AYUD" );

    STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
    STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

    STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

    if ( Compare.equals ( STATUS6_CODE, 0 ) ) 
    {
      STATUS11_CODE  = this.dm.reset ( OPEN11_ID );

      this.dm.setField ( this.dm.get ( "DETERMINA_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );

      STATUS11_CODE  = this.dm.limitQueryFromBuffer ( OPEN11_ID );
      STATUS11_CODE  = this.dm.retrieve ( OPEN11_ID );

      STATUS11_CODE  = this.dm.firstRow ( OPEN11_ID );

      while ( ( Compare.equals ( STATUS11_CODE, 0 ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "DETERMINA_RO_DSD" ), "FECHA_EFECTIVIDAD" ), FCH_EMISION ) )   )
      {
        AYUDA_PERMITIDA = MathService.plus ( ( this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA" ) * 2 ), ( ( MathService.minus ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "NUM_PERSONAS_AYUDA" ), 1  ) ) * this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA_FAM" ) * 2 )  );

        STATUS11_CODE  = this.dm.nextRow ( OPEN11_ID );

      }
      if ( ( Compare.equals ( INGRESO_BRUTO, 0 ) ) && ( Compare.gt ( OTROS, 0 ) )  ) 
      {
        if ( Compare.ge ( OTROS, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ) ) ) 
        {
          if ( Compare.gt ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ), AYUDA_PERMITIDA ) ) 
          {
            AYUD = AYUDA_PERMITIDA;
            OTROS = MathService.minus ( OTROS, AYUDA_PERMITIDA  );
          }
          else
          {
            AYUD = this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" );
            OTROS = MathService.minus ( OTROS, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
          }
        }
        else
        {
          AYUD = 0;
          OTROS = 0;
        }
      }
      else if ( Compare.ge ( INGRESO_ACREDITABLE, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ) )  )
      {
        if ( Compare.gt ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ), AYUDA_PERMITIDA ) ) 
        {
          AYUD = AYUDA_PERMITIDA;
          INGRESO_ACREDITABLE = MathService.minus ( INGRESO_ACREDITABLE, AYUDA_PERMITIDA  );
        }
        else
        {
          AYUD = this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" );
          INGRESO_ACREDITABLE = MathService.minus ( INGRESO_ACREDITABLE, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
        }
      }
      else
      {
        INGRESO_ACREDITABLE = 0;
        AYUD = 0;
      }
    }
    CUIDO_MENOR = 0;
    TOTAL_CUIDO = 0;
    TOT_INGRE_ACREDI = INGRESO_ACREDITABLE;
    TOTAL_OTROS = MathService.plus ( TOT_INGRE_ACREDI, OTROS  );
    INGRESO_NETO = TruncService.trunc ( MathService.plus ( TOTAL_OTROS, PARTE_PROP  ) ) ;
    INGRESO_NETO = TruncService.trunc ( INGRESO_NETO ) ;
    NECESIDAD_AJUSTADA = 0;
    NUM_FAMILIA = 0;

    STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

    this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );

    STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

    STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

    while ( Compare.equals ( STATUS2_CODE, 0 )  )
    {
      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      if ( Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) )  ) 
        {
          NUM_FAMILIA = MathService.plus ( NUM_FAMILIA, 1  );
        }
      }

      STATUS2_CODE  = this.dm.nextRow ( OPEN2_ID );

    }

    STATUS_CODE  = this.dm.nextRow ( OPEN_ID );

    STATUS11_CODE  = this.dm.reset ( OPEN11_ID );

    this.dm.setField ( this.dm.get ( "DETERMINA_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );

    STATUS11_CODE  = this.dm.limitQueryFromBuffer ( OPEN11_ID );
    STATUS11_CODE  = this.dm.retrieve ( OPEN11_ID );

    STATUS11_CODE  = this.dm.firstRow ( OPEN11_ID );

    while ( ( Compare.equals ( STATUS11_CODE, 0 ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "DETERMINA_RO_DSD" ), "FECHA_EFECTIVIDAD" ), FCH_EMISION ) )   )
    {
      NECESIDAD_AJUSTADA = MathService.plus ( this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA" ), ( ( MathService.minus ( NUM_FAMILIA, 1  ) ) * this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA_FAM" ) )  );

      STATUS11_CODE  = this.dm.nextRow ( OPEN11_ID );

    }
    CENTAVOS = 0;
    ING_TEMP = 0;
    EXCENCION_ALBERGUE = 0;

    STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE", "ALBE" );

    STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
    STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

    STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

    if ( Compare.equals ( STATUS6_CODE, 0 ) ) 
    {
      CENTAVOS = TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ) ) ;
      if ( Compare.gt ( CENTAVOS, 0 ) ) 
      {
        ING_TEMP = TruncService.trunc ( ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ) ) ) ;
      }
      else
      {
        ING_TEMP = ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ) );
      }
      if ( ( Compare.ge ( ING_TEMP, 0.01 ) ) && ( Compare.lt ( ING_TEMP, 3 ) )  ) 
      {
        EXCENCION_ALBERGUE = 1;
      }
      else if ( Compare.gt ( ING_TEMP, 200 )  )
      {
        EXCENCION_ALBERGUE = 100;
      }
      else
      {
        EXCENCION_ALBERGUE = TruncService.round ( ING_TEMP / 2 ) ;
      }
      if ( Compare.gt ( EXCENCION_ALBERGUE, 100 ) ) 
      {
        EXCENCION_ALBERGUE = 100;
      }
    }
    EXCENCION_ALBERGUE = EXCENCION_ALBERGUE;
    TOT_AJUSTADA = MathService.plus ( NECESIDAD_AJUSTADA, EXCENCION_ALBERGUE  );
    if ( Compare.ge ( TOT_AJUSTADA, INGRESO_NETO ) ) 
    {
      DEFICIT = MathService.minus ( TOT_AJUSTADA, INGRESO_NETO  );
    }
    else
    {
      DEFICIT = 0;
    }
    if ( Compare.equals ( DEFICIT, 0 ) ) 
    {
      this._condition3 = true;
    }
    else
    {
      this._condition3 = false;
    }
    if ( this._condition3 )
    {
      NECESITADO = "F";

      STATUS_CODE  = this.dm.reset ( OPEN10_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.app.SS_SERV_GBL );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN10_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN10_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN10_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV", "ENNA" );

      STATUS_CODE  = this.dm.update ( OPEN10_ID );

      PREP_ENCARGADO_NEC_PKT.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition3 )    //    if ( Compare.equals ( DEFICIT, 0 ) ) 
    {
      this.returnParms ( ps, OPEN_ID, OPEN2_ID, OPEN3_ID, OPEN4_ID, OPEN5_ID, OPEN6_ID, OPEN7_ID, OPEN8_ID, OPEN9_ID, OPEN10_ID, OPEN11_ID, FCH_EMISION, INGRESO_ACREDI_ENNE );
      this.doReturn ( );
      return; 
    }
    SALARIO_LIMP = MathService.minus ( SALARIO, ( MathService.plus ( GASTOS_ENSO, 90  ) )  );
    RESTE_30 = 0;
    RESTE_30_SOL = 0;
    this.app.ETYT_CASO_GBL = "N";

    STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

    this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );

    STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

    STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

    while ( Compare.equals ( STATUS2_CODE, 0 )  )
    {
      EDAD_IND = DateUtil.monthsBetween ( FCH_EMISION, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;

      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

      STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
      STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

      STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

      while ( Compare.equals ( STATUS6_CODE, 0 )  )
      {
        if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETYT" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETRT" ) ) ) 
        {
          if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) ) && ( ( ( Compare.ge ( EDAD_IND, 18 ) ) && ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ), this.app.SS_SERV_GBL ) )  ) || ( Compare.lt ( EDAD_IND, 18 ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FACT_ELEGIBILIDAD_AEC" ), "INCA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) )  ) 
          {
            STATUS4_CODE  = this.dm.reset ( OPEN4_ID );

            this.dm.setField ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
            this.dm.setField ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
            this.dm.setField ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
            this.dm.setField ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

            STATUS4_CODE  = this.dm.limitQueryFromBuffer ( OPEN4_ID );
            STATUS4_CODE  = this.dm.retrieve ( OPEN4_ID );

            STATUS4_CODE  = this.dm.firstRow ( OPEN4_ID );

            RESTE_30 = 0;
            RESTE_30_SOL = 0;
            CUARTO_MES = DateUtil.addMonths ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS2_RO_DSD" ), "FCH_SOLICITUD" ), 4 );
            if ( ( Compare.gt ( SALARIO_LIMP, 0 ) ) && ( ( ! Compare.equals ( SALARIO, 0 ) ) || ( ! Compare.equals ( SALARIO_CONYUGUE, 0 ) ) )  && ( Compare.equals ( this.app.AUTORIZADA_GBL, "N" ) )  ) 
            {
              this.app.ETYT_CASO_GBL = "Y";
              if ( Compare.ge ( SALARIO_LIMP, 30 ) ) 
              {
                if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETYT" ) ) 
                {
                  if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
                  {
                    CONY_TREINTA_Y_TERSIO = TruncService.round ( MathService.plus ( 30, ( ( MathService.minus ( SALARIO_LIMP, 30  ) ) * 0.333 )  ) ) ;
                  }
                  else
                  {
                    TREINTA_Y_TERSIO = TruncService.round ( MathService.plus ( 30, ( ( MathService.minus ( SALARIO_LIMP, 30  ) ) * 0.333 )  ) ) ;
                  }
                }
                else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
                {
                  CONY_TREINTA_Y_TERSIO = 30;
                }
                else
                {
                  TREINTA_Y_TERSIO = 30;
                }
                RESTE_30 = MathService.plus ( RESTE_30, TREINTA_Y_TERSIO  );
                RESTE_30_SOL = MathService.plus ( RESTE_30_SOL, TREINTA_Y_TERSIO  );
              }
              else
              {
                if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) && ( ! Compare.equals ( SALARIO_CONYUGUE, 0 ) )  ) 
                {
                  CONY_TREINTA_Y_TERSIO = SALARIO_LIMP;
                  CONY_TR = MathService.plus ( CONY_TR, SALARIO_LIMP  );
                }
                else
                {
                  TREINTA_Y_TERSIO = SALARIO_LIMP;
                  TR = MathService.plus ( TR, SALARIO_LIMP  );
                }
              }
              if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) && ( ! Compare.equals ( SALARIO_CONYUGUE, 0 ) )  ) 
              {
                if ( Compare.ge ( INGRESO_ACREDITABLE, CONY_TREINTA_Y_TERSIO ) ) 
                {
                  INGRESO_ACREDITABLE = MathService.minus ( INGRESO_ACREDITABLE, CONY_TREINTA_Y_TERSIO  );
                  CONY_TR = MathService.plus ( CONY_TR, CONY_TREINTA_Y_TERSIO  );
                }
                else
                {
                  INGRESO_ACREDITABLE = 0;
                }
              }
              else if ( Compare.ge ( INGRESO_ACREDITABLE, TREINTA_Y_TERSIO )  )
              {
                INGRESO_ACREDITABLE = MathService.minus ( INGRESO_ACREDITABLE, TREINTA_Y_TERSIO  );
                TR = MathService.plus ( TR, TREINTA_Y_TERSIO  );
              }
              else
              {
                INGRESO_ACREDITABLE = 0;
              }
            }
          }
          if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETYT" ) ) && ( Compare.equals ( this.app.AUTORIZADA_GBL, "N" ) )  ) 
          {
            STATUS9_CODE  = this.dm.reset ( OPEN9_ID );

            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );
            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "COD_TIPO_DEDUCCIONE", "ETYT" );
            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

            STATUS9_CODE  = this.dm.limitQueryFromBuffer ( OPEN9_ID );
            STATUS9_CODE  = this.dm.retrieve ( OPEN9_ID );

            STATUS9_CODE  = this.dm.firstRow ( OPEN9_ID );

            if ( Compare.equals ( STATUS9_CODE, 0 ) ) 
            {
              if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
              {
                this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "VLR_CANTIDAD_DEDUCCIONE", CONY_TREINTA_Y_TERSIO );
              }
              else
              {
                this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "VLR_CANTIDAD_DEDUCCIONE", TREINTA_Y_TERSIO );
              }

              STATUS9_CODE  = this.dm.update ( OPEN9_ID );

            }
          }
          if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ETRT" ) ) && ( Compare.equals ( this.app.AUTORIZADA_GBL, "N" ) )  ) 
          {
            STATUS9_CODE  = this.dm.reset ( OPEN9_ID );

            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );
            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "COD_TIPO_DEDUCCIONE", "ETRT" );
            this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

            STATUS9_CODE  = this.dm.limitQueryFromBuffer ( OPEN9_ID );
            STATUS9_CODE  = this.dm.retrieve ( OPEN9_ID );

            STATUS9_CODE  = this.dm.firstRow ( OPEN9_ID );

            if ( Compare.equals ( STATUS9_CODE, 0 ) ) 
            {
              if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) 
              {
                this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "VLR_CANTIDAD_DEDUCCIONE", CONY_TREINTA_Y_TERSIO );
              }
              else
              {
                this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_DSD" ), "VLR_CANTIDAD_DEDUCCIONE", TREINTA_Y_TERSIO );
              }

              STATUS9_CODE  = this.dm.update ( OPEN9_ID );

            }
          }
        }

        STATUS6_CODE  = this.dm.nextRow ( OPEN6_ID );

      }
      NECESIDAD_AJUSTADA_SIN = 0;
      NUM_FAMILIA_SIN = 0;

      STATUS_CODE  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

      if ( Compare.equals ( STATUS_CODE, 0 ) ) 
      {
        if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENSO" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENNE" ) )  ) 
        {
          NUM_FAMILIA_SIN = MathService.plus ( NUM_FAMILIA_SIN, 1  );
        }
      }

      STATUS_CODE  = this.dm.nextRow ( OPEN_ID );

      if ( Compare.ge ( NUM_FAMILIA_SIN, 1 ) ) 
      {
        STATUS11_CODE  = this.dm.reset ( OPEN11_ID );

        this.dm.setField ( this.dm.get ( "DETERMINA_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );

        STATUS11_CODE  = this.dm.limitQueryFromBuffer ( OPEN11_ID );
        STATUS11_CODE  = this.dm.retrieve ( OPEN11_ID );

        STATUS11_CODE  = this.dm.firstRow ( OPEN11_ID );

        while ( ( Compare.equals ( STATUS11_CODE, 0 ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "DETERMINA_RO_DSD" ), "FECHA_EFECTIVIDAD" ), FCH_EMISION ) )   )
        {
          NECESIDAD_AJUSTADA_SIN = MathService.plus ( this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA" ), ( ( MathService.minus ( NUM_FAMILIA_SIN, 1  ) ) * this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA_FAM" ) )  );

          STATUS11_CODE  = this.dm.nextRow ( OPEN11_ID );

        }
      }
      else
      {
        NECESIDAD_AJUSTADA_SIN = 0;
      }
      CENTAVOS = 0;
      ING_TEMP = 0;
      EXCENCION_ALBERGUE_SIN = 0;
      if ( Compare.ge ( NUM_FAMILIA_SIN, 1 ) ) 
      {
        STATUS6_CODE  = this.dm.reset ( OPEN6_ID );

        this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
        this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
        this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
        this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE", "ALBE" );
        this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE" ) );

        STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
        STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

        STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

        if ( Compare.equals ( STATUS6_CODE, 0 ) ) 
        {
          STATUS_CODE  = this.dm.reset ( OPEN_ID );

          this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
          this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
          this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
          this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );

          STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
          STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

          STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

          if ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.lt ( EDAD_IND, 21 ) )  ) || ( ( Compare.ge ( EDAD_IND, 21 ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_INCAPACIDAD_PRIMARIA" ), "NA" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FLG_INCAPACIDAD_VERIFICADA" ), "S" ) )  ) || ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) )  && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_ESTADO_CIVIL" ), "CASA" ) )  ) ) 
          {
            CENTAVOS = TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ) ) ;
            if ( Compare.gt ( CENTAVOS, 0 ) ) 
            {
              ING_TEMP = TruncService.trunc ( ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ) ) ) ;
            }
            else
            {
              ING_TEMP = ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ) );
            }
            if ( ( Compare.ge ( ING_TEMP, 0.01 ) ) && ( Compare.lt ( ING_TEMP, 3 ) )  ) 
            {
              EXCENCION_ALBERGUE_SIN = 1;
            }
            else if ( Compare.gt ( ING_TEMP, 200 )  )
            {
              EXCENCION_ALBERGUE_SIN = 100;
            }
            else
            {
              EXCENCION_ALBERGUE_SIN = TruncService.round ( ING_TEMP / 2 ) ;
            }
            if ( Compare.gt ( EXCENCION_ALBERGUE_SIN, 100 ) ) 
            {
              EXCENCION_ALBERGUE_SIN = 100;
            }
          }
        }
      }
      TOT_EXCESION_ALBE_SIN = MathService.plus ( TOT_EXCESION_ALBE_SIN, EXCENCION_ALBERGUE_SIN  );

      STATUS2_CODE  = this.dm.nextRow ( OPEN2_ID );

    }
    TOT_AJUSTADA_SIN = MathService.plus ( NECESIDAD_AJUSTADA_SIN, TOT_EXCESION_ALBE_SIN  );
    if ( Compare.ge ( MathService.minus ( INGRESO_NETO, RESTE_30_SOL  ), TOT_AJUSTADA_SIN ) ) 
    {
      INGRESO_ACREDI_ENNE = MathService.minus ( MathService.minus ( INGRESO_NETO, RESTE_30_SOL  ), TOT_AJUSTADA_SIN  );
    }
    else
    {
      INGRESO_ACREDI_ENNE = 0;
    }
    if ( Compare.lt ( INGRESO_ACREDI_ENNE, 0 ) ) 
    {
      INGRESO_ACREDI_ENNE = 0;
    }

    STATUS_CODE  = this.dm.reset ( OPEN10_ID );

    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.app.SS_SERV_GBL );

    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN10_ID );
    STATUS_CODE  = this.dm.retrieve ( OPEN10_ID );

    STATUS_CODE  = this.dm.firstRow ( OPEN10_ID );

    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_UPD_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV", "ENNE" );

    STATUS_CODE  = this.dm.update ( OPEN10_ID );

    PREP_ENCARGADO_NEC_PKT.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    this.returnParms ( ps, OPEN_ID, OPEN2_ID, OPEN3_ID, OPEN4_ID, OPEN5_ID, OPEN6_ID, OPEN7_ID, OPEN8_ID, OPEN9_ID, OPEN10_ID, OPEN11_ID, FCH_EMISION, INGRESO_ACREDI_ENNE );
    this.doReturn ( );
    return;
  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE DETERMINAR_ENCARGADO_NECESITADO_ADL(
                                                VAR OPEN_ID : NUMBER;
                                                VAR OPEN2_ID : NUMBER;
                                                VAR OPEN3_ID : NUMBER;
                                                VAR OPEN4_ID : NUMBER;
                                                VAR OPEN5_ID : NUMBER;
                                                VAR OPEN6_ID : NUMBER;
                                                VAR OPEN7_ID : NUMBER;
                                                VAR OPEN8_ID : NUMBER;
                                                VAR OPEN9_ID : NUMBER;
                                                VAR OPEN10_ID : NUMBER;
                                                VAR OPEN11_ID : NUMBER;
                                                VAR FCH_EMISION :DATE;
                                                VAR INGRESO_ACREDI_ENNE : NUMBER
 EXPORT;);

VAR

STATUS_CODE : NUMBER;
STATUS2_CODE : NUMBER;
STATUS3_CODE : NUMBER;
STATUS4_CODE : NUMBER;
STATUS6_CODE : NUMBER;
STATUS7_CODE : NUMBER;
STATUS9_CODE : NUMBER;
STATUS11_CODE : NUMBER;
NUCLEO_CODE : NUMBER;
OPEN_TEMP : NUMBER;

SERVICIO_STATUS:        CHAR(8) EXPORT;
SERVICIO_BENEFICIO:     NUMBER EXPORT;

SAVE_SSN:       NUMBER;
RECURSOS_ACUM : NUMBER;
EDAD_IND : NUMBER;
INELEGIBLE_REG : CHAR(1) EXPORT;
INELEGIBLE_EMER : CHAR(1) EXPORT;
RAZON : CHAR(50) EXPORT;
INGRESO_BRUTO : NUMBER;
SALARIO : NUMBER EXPORT;
SALARIO_LIMP : NUMBER EXPORT;
SEG_SOC : NUMBER EXPORT;
OTROS : NUMBER EXPORT;
OTROS_EXP:NUMBER EXPORT;
OTROS_CONY:NUMBER EXPORT;
INGRESO_NETO : NUMBER EXPORT;
CUIDO_MENOR : NUMBER EXPORT;
CUIDO : NUMBER EXPORT;
INELEGIBLE_INGRE_BRUTO : CHAR(1);
DEDUCCION_INGRESO : NUMBER;
INCAPACITADO : NUMBER;
BENEFICIO : NUMBER EXPORT;
ELEGIBLE_REG : CHAR(1) EXPORT;
ELEGIBLE_EMER : CHAR(1) EXPORT;
TOTAL_CUIDO : NUMBER EXPORT;
GASTOS_INHE : NUMBER EXPORT;
GASTOS_INHERENTES : NUMBER EXPORT;
RESTE_30 : NUMBER EXPORT;
STATUS : CHAR(4);
CENTAVOS : NUMBER;
ING_TEMP : NUMBER;
EXCENCION_SAL : NUMBER EXPORT;
EXCENCION_TRABAJO : NUMBER EXPORT;
EXCENCION_PROD : NUMBER EXPORT;
EXCENCION_ALBERGUE : NUMBER EXPORT;
DEFICIT : NUMBER EXPORT;
SALARIO_CONYUGUE : NUMBER EXPORT;
INGRESO_ACREDITABLE : NUMBER EXPORT;
TOT_INGRE_ACREDI : NUMBER EXPORT;
NECESIDAD_AJUSTADA : NUMBER EXPORT;
TOT_AJUSTADA : NUMBER EXPORT;
TOTAL_OTROS : NUMBER EXPORT;
BENEFICIO_AUTO : NUMBER EXPORT;
SALA : NUMBER;
ADIE : NUMBER;
NPRO : NUMBER;
PARTE_PROP : NUMBER EXPORT;
EXC_PROD : NUMBER EXPORT;
NUM_NUCLEO : NUMBER;
NUM_FAM : NUMBER;
PROP_MENOR : NUMBER;
ALBE : NUMBER EXPORT;
CUARTO_MES : DATE;
NUM_MENOR : NUMBER;
SUME_30 : NUMBER EXPORT;
SS_PADA : NUMBER EXPORT;
SALA_PADA : NUMBER EXPORT;
NUM_FAMILIA : NUMBER;
EXC_RECURSO : NUMBER;
RECURSOS_PATRO : NUMBER;
INGRESOS : NUMBER EXPORT;
SALA_PADRES : NUMBER EXPORT;
NECESITADO : CHAR;
RECURSOS_NO_CATE : NUMBER;
TOT_AJUSTADA_SIN : NUMBER EXPORT;
NECESIDAD_AJUSTADA_SIN : NUMBER EXPORT;
NUM_FAMILIA_SIN : NUMBER EXPORT;
EXCENCION_ALBERGUE_SIN : NUMBER EXPORT;
TOT_EXCESION_ALBE_SIN : NUMBER EXPORT;
ADULTO_INCA : NUMBER;
MENOR_MAYOR_2 : NUMBER;
MENOR_2_ANOS : NUMBER;
MAXIMO_CUIDO : NUMBER;
PADR_MADR_TOT : NUMBER;
AE_COUNT : NUMBER;
MADR_PADR_TOT : NUMBER;
TECNICO_NULL : NUMBER;
SALARIO_EXIN : NUMBER EXPORT;
NUM_SALARIO : NUMBER EXPORT;
GASTOS_ENSO : NUMBER EXPORT;
NUM_SALARIO_NOCAT : NUMBER EXPORT;
GASTOS_NO_CAT : NUMBER EXPORT;
AYUD : NUMBER EXPORT;
RESTE_30_ACT : NUMBER EXPORT;
RESTE_30_SOL : NUMBER EXPORT;
AYUDA_PERMITIDA : NUMBER;
CONY_INHE : NUMBER EXPORT;
CONY_ACREDITABLE : NUMBER;
CONY_CUIDO : NUMBER;
CONY_TREINTA_Y_TERSIO : NUMBER;
TREINTA_Y_TERSIO : NUMBER;
cony_prod : number;
CONY_TR :NUMBER;
TR :NUMBER;

BEGIN
SET_TRACE();
MAKE_NULL(TECNICO_NULL);

{       SS_JEFE_GBL := 583171929;
        SS_SERV_GBL := 583171929;
        COD_SERV_GBL := 'AE2C';}
{FCH_SOLIC_SERV_GBL:=TO_DATE('01-JAN-1993');}
CONY_INHE := 0;
CONY_ACREDITABLE := 0;
CONY_CUIDO := 0;
CONY_TREINTA_Y_TERSIO := 0;
cony_prod := 0;
TREINTA_Y_TERSIO := 0;
CONY_TR := 0;
TR := 0;
EXCENCION_ALBERGUE_SIN := 0;
TOT_EXCESION_ALBE_SIN := 0;
AYUDA_PERMITIDA := 0;
{ TOTALIZAR RECURSOS }
        RECURSOS_ACUM := 0;
        EXC_RECURSO := 0;
        DB_RESET(OPEN2_ID,STATUS2_CODE);
        CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN2_ID,STATUS2_CODE);
        DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
        WHILE STATUS2_CODE = 0 DO
        BEGIN
            DB_RESET(OPEN_ID,STATUS_CODE);
            NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
            NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
            NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
            NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
            DB_QUERY(OPEN_ID,STATUS_CODE);
            DB_GET_FIRST(OPEN_ID,STATUS_CODE);
            IF STATUS_CODE = 0
            THEN
                IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENSO') O
R
                   (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENNE') O
R
                   ((NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'NCAT') 
AND
                    (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') AND
                    (CLIENTES2_RO_DSD.COD_ESTADO_CIVIL = 'CASA')) 
                THEN
                  BEGIN
                        DB_RESET(OPEN3_ID,STATUS3_CODE);
                        RECURSOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE
_GBL;
                        RECURSOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SER
V_GBL;
                        RECURSOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
                        RECURSOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
                        DB_QUERY(OPEN3_ID,STATUS3_CODE);
                        DB_GET_FIRST(OPEN3_ID,STATUS3_CODE);
                        WHILE STATUS3_CODE = 0 DO
                        BEGIN
                        IF (substr(RECURSOS_NUCLEO_RO_DSD.COD_TIPO_RECURSO,0,4) 
= 'VEH1') 
                        THEN BEGIN
                                IF RECURSOS_NUCLEO_RO_DSD.VLR_CANTIDAD_RECURSO>=
4000
                                THEN
                                   RECURSOS_NO_CATE := RECURSOS_NO_CATE +
                                   RECURSOS_NUCLEO_RO_DSD.VLR_CANTIDAD_RECURSO -
 4000;
                                ELSE
                                   RECURSOS_NO_CATE := RECURSOS_NO_CATE;
                             END;
                        ELSE
                           RECURSOS_NO_CATE := RECURSOS_NO_CATE +
                                RECURSOS_NUCLEO_RO_DSD.VLR_CANTIDAD_RECURSO;   
                           DB_GET_NEXT(OPEN3_ID,STATUS3_CODE);
                        END;
                  END;
            ELSE
                BEGIN
                        DB_RESET(OPEN7_ID,STATUS7_CODE);
                        RECURSOS_CLIENTE_2_RO_DSD.SEGURO_SOCIAL_CLIENTE := 
                                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
                        DB_QUERY(OPEN7_ID,STATUS7_CODE);
                        DB_GET_FIRST(OPEN7_ID,STATUS7_CODE);
                        WHILE STATUS7_CODE = 0 DO
                        BEGIN
                        IF (substr(RECURSOS_CLIENTE_2_RO_DSD.COD_TIPO_RECURSO,0,
4) = 'VEH1') 
                        THEN BEGIN
                                IF RECURSOS_CLIENTE_2_RO_DSD.VLR_CANTIDAD_RECURS
O>=4000
                                THEN
                                   RECURSOS_NO_CATE := RECURSOS_NO_CATE +
                                   RECURSOS_CLIENTE_2_RO_DSD.VLR_CANTIDAD_RECURS
O - 4000;
                                ELSE
                                   RECURSOS_NO_CATE := RECURSOS_NO_CATE;
                             END;
                        ELSE
                           RECURSOS_NO_CATE := RECURSOS_NO_CATE +
                                RECURSOS_CLIENTE_2_RO_DSD.VLR_CANTIDAD_RECURSO;
        
                           DB_GET_NEXT(OPEN7_ID,STATUS7_CODE);
                        END;
                END;
            DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
        END;

{ DETERMINAR ELEGIBILIDAD POR RECURSOS }
        IF RECURSOS_NO_CATE > 2000
        THEN BEGIN
                NECESITADO := 'F';
            DB_RESET(OPEN10_ID,STATUS_CODE);
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO := SS_SERV_GBL
;
            DB_QUERY(OPEN10_ID,STATUS_CODE);
            DB_GET_FIRST(OPEN10_ID,STATUS_CODE);
            NUCLEO_SERVICIO_UPD_RO_DSD.COD_PARENTESCO_RELACION_SERV := 'ENNA';
            DB_UPDATE(OPEN10_ID,STATUS_CODE);
            RETURN;
                { CALL DETERMINAR ELEGIBILIDAD SIN ENCARGADO }
            END;

{ Determinar Elegibilidad por Ingreso }
{ SE ACUMULAN LOS INGRESOS DE NUCLEO NO CATEGORICO Y EL ENSO }
        SALARIO := 0;
        SEG_SOC := 0;
        OTROS := 0;
        SALA := 0;
        NPRO := 0;
        SALARIO_EXIN := 0;
        NUM_SALARIO := 0;
        DB_RESET(OPEN2_ID,STATUS2_CODE);
        CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN2_ID,STATUS2_CODE);
        DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
        WHILE STATUS2_CODE = 0 DO
        BEGIN
           EDAD_IND := MONTHS_BETWEEN(FCH_EMISION,CLIENTES2_RO_DSD.FCH_NACIMIENT
O)/12;
           DB_RESET(OPEN_ID,STATUS_CODE);
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
           DB_QUERY(OPEN_ID,STATUS_CODE);
           DB_GET_FIRST(OPEN_ID,STATUS_CODE);
           IF STATUS_CODE = 0
           THEN BEGIN
             DB_RESET(OPEN5_ID,STATUS_CODE);
             INGRESOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
             INGRESOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
             INGRESOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
             INGRESOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
             DB_QUERY(OPEN5_ID,STATUS_CODE);
             DB_GET_FIRST(OPEN5_ID,STATUS_CODE);
             WHILE STATUS_CODE = 0 DO
             BEGIN
{
   Rutina para implementar computo de ingreso a base
   de norma de 4.0(AE) y 4.3(PAN).
   Se provee tambien para entrar ingreso AE segun forma AE-98
        9-MAYO-1994   Ramon Fardonk/Jorge Rodriguez
}
   IF ((SUBSTR(COD_SERV_GBL,0,3)='PAN') AND (INGRESOS_NUCLEO_RO_DSD.FLG_PAN = 'X
')) OR
        ((SUBSTR(COD_SERV_GBL,0,2)='AE') AND (INGRESOS_NUCLEO_RO_DSD.FLG_AE = 'X
'))
        THEN BEGIN
               INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                 INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_REHABILITACION;
             END;
        ELSE BEGIN
               IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='S')
                  THEN BEGIN
                       IF (SUBSTR(COD_SERV_GBL,0,3)='PAN') OR
                          (SUBSTR(COD_SERV_GBL,0,4)<>'AE-C')
                          THEN BEGIN
                                INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                                INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 4.
3;
                               END;
                          ELSE IF (SUBSTR(COD_SERV_GBL,0,4)='AE-C')
                               THEN BEGIN
                                    INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:
=
                                    INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO 
* 4.3;
                                    END;
                       END;
               ELSE IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='B')
                  THEN BEGIN
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 2.15;
                       END;
               ELSE IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='Q')
                  THEN BEGIN
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 2.0;
                       END;
               ELSE BEGIN
{                         Entro 'M' o estaba en blanco }
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 1.0;
                    END;
        END;


               IF (INGRESOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENSO')
 
                or
                  (INGRESOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENNE')
 
                OR
                  ((INGRESOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV = 'NCAT'
) AND
                   (EDAD_IND < 21))
                OR 
                    ((EDAD_IND >= 21) AND (CLIENTES2_RO_DSD.COD_INCAPACIDAD_PRIM
ARIA <> 'NA')
                     AND (CLIENTES2_RO_DSD.FLG_INCAPACIDAD_VERIFICADA = 'S'))
                OR
                  ((INGRESOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV = 'NCAT'
) AND
                    (CLIENTES2_RO_DSD.COD_ESTADO_CIVIL = 'CASA')) 
               THEN BEGIN
               IF  (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'SALA') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'ADIE') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'NPRO') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'PTRA') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRN') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BIAS') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BIAC') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BILV') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRB')
               THEN BEGIN
                         IF (((INGRESOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SE
RV = 'NCAT') AND
                                (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') A
ND
                                (CLIENTES2_RO_DSD.COD_ESTADO_CIVIL = 'CASA')) 
                         OR
                            ((INGRESOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SER
V = 'NCAT') AND
                             (EDAD_IND < 21))
                         OR 
                            ((EDAD_IND >= 21) AND (CLIENTES2_RO_DSD.COD_INCAPACI
DAD_PRIMARIA <> 'NA')
                              AND (CLIENTES2_RO_DSD.FLG_INCAPACIDAD_VERIFICADA =
 'S')))
                         AND
                            (INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO > 0)
                         THEN
                          BEGIN
                          SALARIO_EXIN := SALARIO_EXIN +
                             INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO;
                          INGRESO_BRUTO := INGRESO_BRUTO + 
                             INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO;
                          NUM_SALARIO_NOCAT := NUM_SALARIO_NOCAT + 1;
                          END;
                         ELSE
                          BEGIN
                          SALARIO := SALARIO + 
                             INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO;
                          INGRESO_BRUTO := INGRESO_BRUTO + 
                             INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO;
                          NUM_SALARIO := NUM_SALARIO + 1;
                          END;
                         END;
                    ELSE BEGIN
                         IF  (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM <> 'CONY') THE
N
                                 OTROS_EXP := OTROS_EXP + INGRESOS_NUCLEO_RO_DSD
.VLR_CANTIDAD_INGRESO;
                         ELSE
                                 OTROS_CONY := OTROS_CONY + INGRESOS_NUCLEO_RO_D
SD.VLR_CANTIDAD_INGRESO;

                         END;

                IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'SALA') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'PTRA') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRB') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BILV')
                THEN
                    SALA := SALA + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO;
                ELSE
                   IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'ADIE')
                   THEN
                        ADIE := ADIE + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRE
SO;
                   ELSE
                      IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'NPRO') OR
                         (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRN') OR
                         (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BIAS') OR
                         (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BIAC') 
                      THEN
                          NPRO := NPRO + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_ING
RESO;
                      ELSE

                          OTROS := OTROS + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_I
NGRESO;
                END;
                DB_GET_NEXT(OPEN5_ID,STATUS_CODE);
                END;
            END;
          DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
        END;
{         SALARIO := TRUNC(SALARIO);}
{         OTROS := TRUNC(OTROS);}
{         INGRESO_BRUTO := TRUNC(INGRESO_BRUTO);}

{ DE NO TENER INGRESOS DETERMINAR ELEGIBILIDAD INCLUYENDO EL ENCARGADO }
        IF (INGRESO_BRUTO+SALARIO_EXIN+OTROS) <= 0
        THEN BEGIN
            DB_RESET(OPEN10_ID,STATUS_CODE);
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO := SS_SERV_GBL
;
            DB_QUERY(OPEN10_ID,STATUS_CODE);
           DB_GET_FIRST(OPEN10_ID,STATUS_CODE);
            NUCLEO_SERVICIO_UPD_RO_DSD.COD_PARENTESCO_RELACION_SERV := 'ENNE';
            DB_UPDATE(OPEN10_ID,STATUS_CODE);
            CALL PREP_ENCARGADO_NEC_PKT;
            RETURN;
        END;

{ DE TENER INGRESOS DETERMINAR SI EL NUCLEO ES ELEGIBLE }
        NUM_NUCLEO := 0;
        DB_RESET(OPEN2_ID,STATUS2_CODE);
        CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN2_ID,STATUS2_CODE);
        DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
        WHILE STATUS2_CODE = 0 DO
        BEGIN
          EDAD_IND := MONTHS_BETWEEN(FCH_EMISION,CLIENTES2_RO_DSD.FCH_NACIMIENTO
)/12;
          DB_RESET(OPEN_ID,STATUS_CODE);
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
          NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
          DB_QUERY(OPEN_ID,STATUS_CODE);
          DB_GET_FIRST(OPEN_ID,STATUS_CODE);
          IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENSO') OR
             (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENNE') OR
             ((NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'NCAT') AND
              (EDAD_IND < 21))
          OR 
             ((EDAD_IND >= 21) AND (CLIENTES2_RO_DSD.COD_INCAPACIDAD_PRIMARIA <>
 'NA')
              AND (CLIENTES2_RO_DSD.FLG_INCAPACIDAD_VERIFICADA = 'S'))
          OR
             ((NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'NCAT') AND
                                (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') A
ND
                                (CLIENTES2_RO_DSD.COD_ESTADO_CIVIL = 'CASA')) 
          THEN
                NUM_NUCLEO := NUM_NUCLEO + 1;
        DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
        END;

        ALBE := 0;
        DB_RESET(OPEN2_ID,STATUS2_CODE);
        CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN2_ID,STATUS2_CODE);
        DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
        WHILE STATUS2_CODE = 0 DO
        BEGIN
           DB_RESET(OPEN6_ID,STATUS6_CODE);
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE:='ALBE';
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
           DB_QUERY(OPEN6_ID,STATUS6_CODE);
           DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);
         IF STATUS6_CODE = 0
         THEN BEGIN
          DB_RESET(OPEN_ID,STATUS_CODE);
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
          NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
          DB_QUERY(OPEN_ID,STATUS_CODE);
          DB_GET_FIRST(OPEN_ID,STATUS_CODE);

           IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENSO') OR
              (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENNE') OR
              ((NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'NCAT') AND
                (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') AND
                (CLIENTES2_RO_DSD.COD_ESTADO_CIVIL = 'CASA'))          
           THEN
                  ALBE := ALBE + GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE;
          END;
        DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
        END;
           DB_RESET(OPEN6_ID,STATUS6_CODE);
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE:='AYUD';
           DB_QUERY(OPEN6_ID,STATUS6_CODE);
           DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);
           IF STATUS6_CODE = 0 THEN
           BEGIN
                DB_RESET(OPEN11_ID,STATUS11_CODE);
                DETERMINA_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
                DB_QUERY(OPEN11_ID,STATUS11_CODE);
                DB_GET_FIRST(OPEN11_ID,STATUS11_CODE);
                WHILE (STATUS11_CODE = 0) AND
                 (DETERMINA_RO_DSD.FECHA_EFECTIVIDAD <= FCH_EMISION) DO 
                BEGIN
                        AYUDA_PERMITIDA := (DETERMINA_RO_DSD.NECESIDAD_AJUSTADA*
2) +
                        ((GASTOS_NUCLEO_RO_DSD.NUM_PERSONAS_AYUDA - 1)*DETERMINA
_RO_DSD.NECESIDAD_AJUSTADA_FAM*2);
                        DB_GET_NEXT(OPEN11_ID,STATUS11_CODE);
                END;
                IF (INGRESO_BRUTO + OTROS) > ((AYUDA_PERMITIDA+ALBE)*1.85)
                THEN BEGIN
                        NECESITADO := 'F';
                        DB_RESET(OPEN10_ID,STATUS_CODE);
                        NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_
JEFE_GBL;
                        NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS
_SERV_GBL;
                        NUCLEO_SERVICIO_UPD_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
                        NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
 SS_SERV_GBL;
                        DB_QUERY(OPEN10_ID,STATUS_CODE);
                        DB_GET_FIRST(OPEN10_ID,STATUS_CODE);
                        NUCLEO_SERVICIO_UPD_RO_DSD.COD_PARENTESCO_RELACION_SERV 
:= 'ENNA';
                        DB_UPDATE(OPEN10_ID,STATUS_CODE);
                        CALL PREP_ENCARGADO_NEC_PKT;
                        RETURN;
             END;
        END;

        CENTAVOS := 0;
        ING_TEMP := 0;
        EXCENCION_SAL := 0;
        EXCENCION_TRABAJO := INGRESO_BRUTO;

{ RESTE GASTOS INHERENTES AL NEGOCIO PROPIO}
        GASTOS_INHERENTES := 0;
        GASTOS_INHE := 0;
        IF (NPRO > 0)
        THEN
        BEGIN
        DB_RESET(OPEN6_ID,STATUS6_CODE);
        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM:=SS_JEFE_GBL;
        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV:=SS_SERV_GBL;
        GASTOS_NUCLEO_RO_DSD.COD_SERVICIO:=COD_SERV_GBL;
        DB_QUERY(OPEN6_ID,STATUS6_CODE);
        DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);
        WHILE STATUS6_CODE = 0 DO
        BEGIN
          DB_RESET(OPEN_ID,STATUS_CODE);
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
          NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
          DB_QUERY(OPEN_ID,STATUS_CODE);
          DB_GET_FIRST(OPEN_ID,STATUS_CODE);

             IF (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'PROA') AND
                (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'PROC') AND
                (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'ALBE') AND
                (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'ESTU') AND
                (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'ANCI') AND
                (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'MEDI') AND
                (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'CUID') AND
                (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'ETYT') AND
                (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'ETRT')
             THEN
                BEGIN 
                        IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = '
ENSO') OR
                            (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 
'ENNE')
                        THEN
                           GASTOS_INHERENTES := GASTOS_INHERENTES + GASTOS_NUCLE
O_RO_DSD.VLR_CANTIDAD_DEDUCCIONE;
                        else
                        BEGIN
                           CONY_INHE := CONY_INHE + GASTOS_NUCLEO_RO_DSD.VLR_CAN
TIDAD_DEDUCCIONE;
                           GASTOS_INHERENTES := GASTOS_INHERENTES + GASTOS_NUCLE
O_RO_DSD.VLR_CANTIDAD_DEDUCCIONE;               
                        END;
                END;
           IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENSO') OR
              (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENNE')
           THEN
                GASTOS_ENSO := GASTOS_ENSO + GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_D
EDUCCIONE;
           ELSE
                        GASTOS_NO_CAT := GASTOS_NO_CAT + GASTOS_NUCLEO_RO_DSD.VL
R_CANTIDAD_DEDUCCIONE;
             DB_GET_NEXT(OPEN6_ID,STATUS6_CODE);
        END;
        GASTOS_INHERENTES := TRUNC(GASTOS_INHERENTES);

        IF INGRESO_BRUTO >= GASTOS_INHERENTES
        THEN
           INGRESO_BRUTO := INGRESO_BRUTO - GASTOS_INHERENTES;
        ELSE
           INGRESO_BRUTO := 0;
        END;

{ RESTE LOS GASTOS DE PRODUCCION }
        EXCENCION_PROD := 0;
        IF INGRESO_BRUTO > 0
        THEN BEGIN

            EXCENCION_PROD := EXCENCION_PROD + ((NUM_SALARIO+NUM_SALARIO_NOCAT) 
* 90);
        
{              EXC_PROD := 75;
               IF INGRESO_BRUTO >= 75
               THEN 
                   EXCENCION_PROD := INGRESO_BRUTO - 75;
               ELSE
                   EXCENCION_PROD := 0;
}
                IF INGRESO_BRUTO >= EXCENCION_PROD
                THEN
                   INGRESO_ACREDITABLE := INGRESO_BRUTO - EXCENCION_PROD;
                ELSE
                   INGRESO_ACREDITABLE := 0;
            END;


{ EXCENSION POR TRABAJO CASOS ACTIVOS CAT. C }

RESTE_30 := 0;
RESTE_30_ACT := 0;
ETYT_CASO_GBL:='N';
SALARIO_LIMP := SALARIO - (GASTOS_ENSO + 90);
DB_RESET(OPEN2_ID,STATUS2_CODE);
CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
DB_QUERY(OPEN2_ID,STATUS2_CODE);
DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
WHILE STATUS2_CODE = 0 DO
BEGIN
    EDAD_IND := MONTHS_BETWEEN(FCH_EMISION,CLIENTES2_RO_DSD.FCH_NACIMIENTO)/12;
    DB_RESET(OPEN_ID,STATUS_CODE);
    NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
    NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
    NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
    NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
    CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
    DB_QUERY(OPEN_ID,STATUS_CODE);
    DB_GET_FIRST(OPEN_ID,STATUS_CODE);
    DB_RESET(OPEN6_ID,STATUS6_CODE);
    GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM:=SS_JEFE_GBL;
    GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV:=SS_SERV_GBL;
    GASTOS_NUCLEO_RO_DSD.COD_SERVICIO:=COD_SERV_GBL;
    GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
                NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO;
    GASTOS_NUCLEO_RO_DSD.RMO_OFICINA := RMO_GBL;
    DB_QUERY(OPEN6_ID,STATUS6_CODE);
    DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);
    WHILE STATUS6_CODE = 0 DO
BEGIN
IF ((GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETYT') OR
    (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETRT'))
THEN
BEGIN
        IF  (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAL') AND
            (((EDAD_IND >= 18) AND (NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIAR
IO = SS_SERV_GBL)) OR
              (EDAD_IND < 18)
                OR
              (CLIENTES2_RO_DSD.FACT_ELEGIBILIDAD_AEC = 'INCA') OR
              (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY'))
        THEN BEGIN
        DB_RESET(OPEN4_ID,STATUS4_CODE);
        SERVICIOS2_RO_DSD.SEGURO_SOCIAL_JEFE_FAM:=SS_JEFE_GBL;
        SERVICIOS2_RO_DSD.SEGURO_SOCIAL_JEFE_SERV:=SS_SERV_GBL;
        SERVICIOS2_RO_DSD.COD_SERVICIO:=COD_SERV_GBL;
        SERVICIOS2_RO_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN4_ID,STATUS4_CODE);
        DB_GET_FIRST(OPEN4_ID,STATUS4_CODE);
        CUARTO_MES:=ADD_MONTHS(SERVICIOS2_RO_DSD.FCH_SOLICITUD,4);
{IF(TRUNC(SYSTEM_DATE,'DDD') >= TRUNC(SERVICIOS2_RO_DSD.FCH_SOLICITUD,'DDD')) AN
D
        ((SERVICIOS2_RO_DSD.COD_STATUS_SERVICIO = 'ACTIVO') OR
         (SERVICIOS2_RO_DSD.COD_STATUS_SERVICIO = 'PENDAUTO')) AND 
        (TRUNC(SERVICIOS2_RO_DSD.FCH_SOLICITUD,'DDD') <= TRUNC(CUARTO_MES,'DDD')
) and
        (((SALARIO_LIMP > 0)) AND ((SALARIO <> 0) OR (SALARIO_CONYUGUE <>0)))}
        IF (SALARIO_LIMP > 0) AND ((SALARIO <> 0) OR (SALARIO_CONYUGUE <>0)) AND
        (AUTORIZADA_GBL = 'S') 
        THEN BEGIN
            ETYT_CASO_GBL:='Y';
            if SALARIO_LIMP >= 30
            then begin
                IF (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETYT')
                THEN
                   IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY')
                   THEN
                       CONY_TREINTA_Y_TERSIO := ROUND(30 + ((SALARIO_LIMP- 30) *
 0.333));
                   ELSE
                       TREINTA_Y_TERSIO := ROUND(30 + ((SALARIO_LIMP - 30) * 0.3
33));
                ELSE
                   IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY')
                   THEN
                       CONY_TREINTA_Y_TERSIO := 30;
                   ELSE
                       TREINTA_Y_TERSIO := 30;

                DEBUG_LOG('AQUI ING '||TO_CHAR(SALARIO_LIMP));
                DEBUG_LOG('AQUI 30 '||TO_CHAR(TREINTA_Y_TERSIO));
                DEBUG_LOG('CONY 30 '||TO_CHAR(CONY_TREINTA_Y_TERSIO));
                RESTE_30 := RESTE_30 + TREINTA_Y_TERSIO;
                RESTE_30_ACT := RESTE_30_ACT + TREINTA_Y_TERSIO;
                DEBUG_LOG('RESTE_30 '||TO_CHAR(RESTE_30));
              end;
            else begin
                   IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') AND
                      (SALARIO_CONYUGUE <> 0)
                   THEN BEGIN
                        CONY_TREINTA_Y_TERSIO := SALARIO_LIMP;
                        CONY_TR := CONY_TR + SALARIO_LIMP;
                        END;
                   else BEGIN
                        treinta_y_tersio := SALARIO_LIMP;
                        TR := TR + SALARIO_LIMP;
                        END;
                 end;

                IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') AND
                   (SALARIO_CONYUGUE <> 0)
                THEN
                    IF INGRESO_ACREDITABLE >= CONY_TREINTA_Y_TERSIO
                    THEN BEGIN
                             INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - CONY_T
REINTA_Y_TERSIO;
                             CONY_TR := CONY_TR + CONY_TREINTA_Y_TERSIO;
                         END;
                    ELSE
                      INGRESO_ACREDITABLE := 0;
                ELSE
                    IF INGRESO_ACREDITABLE >= TREINTA_Y_TERSIO
                    THEN BEGIN
                           INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - TREINTA_
Y_TERSIO;
                            TR := TR + TREINTA_Y_TERSIO;
                         END;
                    ELSE BEGIN
                            INGRESO_ACREDITABLE := 0;
                        END;
            END;
        END;

        IF (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETYT') AND
        (AUTORIZADA_GBL = 'S')
        THEN
        BEGIN
          DB_RESET(OPEN9_ID,STATUS9_CODE);
          DEDUCCIONES_CLIENTE2_DSD.SEGURO_SOCIAL_CLIENTE :=
                NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO;
          DEDUCCIONES_CLIENTE2_DSD.COD_TIPO_DEDUCCIONE := 'ETYT';
          DEDUCCIONES_CLIENTE2_DSD.RMO_OFICINA := RMO_GBL;
          DB_QUERY(OPEN9_ID,STATUS9_CODE);
          DB_GET_FIRST(OPEN9_ID,STATUS9_CODE);
          IF STATUS9_CODE = 0 
          THEN
             BEGIN
                IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY')
                THEN
                    DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE := CONY_TRE
INTA_Y_TERSIO;
                ELSE
                    DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE := TREINTA_
Y_TERSIO;
                DB_UPDATE(OPEN9_ID,STATUS9_CODE); 
             END;
        END;

{ CUANDO SEA 30 DOLARES }

        IF (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETRT') AND
        (AUTORIZADA_GBL = 'S')
        THEN
        BEGIN
          DB_RESET(OPEN9_ID,STATUS9_CODE);
          DEDUCCIONES_CLIENTE2_DSD.SEGURO_SOCIAL_CLIENTE :=
                NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO;
          DEDUCCIONES_CLIENTE2_DSD.COD_TIPO_DEDUCCIONE := 'ETRT';
          DEDUCCIONES_CLIENTE2_DSD.RMO_OFICINA := RMO_GBL;
          DB_QUERY(OPEN9_ID,STATUS9_CODE);
          DB_GET_FIRST(OPEN9_ID,STATUS9_CODE);
          IF STATUS9_CODE = 0 
          THEN
             BEGIN
                IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY')
                THEN
                    DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE := CONY_TRE
INTA_Y_TERSIO;
                ELSE
                    DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE := TREINTA_
Y_TERSIO;
                DB_UPDATE(OPEN9_ID,STATUS9_CODE);
             END;
        END;
END;
DB_GET_NEXT(OPEN6_ID,STATUS6_CODE);
END;
DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
END;


{ GASTOS AYUDA FAMILIARES POR RESPONSABILIDAD LEGAL }
           DB_RESET(OPEN6_ID,STATUS6_CODE);
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE:='AYUD';
           DB_QUERY(OPEN6_ID,STATUS6_CODE);
           DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);
                DEBUG_LOG('ayuda '||TO_CHAR(GASTOS_NUCLEO_RO_DSD.NUM_PERSONAS_AY
UDA));

           IF STATUS6_CODE = 0
           THEN
           BEGIN
                DEBUG_LOG('ayuda '||TO_CHAR(GASTOS_NUCLEO_RO_DSD.NUM_PERSONAS_AY
UDA));
                DB_RESET(OPEN11_ID,STATUS11_CODE);
                DETERMINA_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
                DB_QUERY(OPEN11_ID,STATUS11_CODE);
                DB_GET_FIRST(OPEN11_ID,STATUS11_CODE);
                WHILE (STATUS11_CODE = 0) AND
                (DETERMINA_RO_DSD.FECHA_EFECTIVIDAD <= FCH_EMISION) DO 
                BEGIN
                DEBUG_LOG('ayuda '||TO_CHAR(GASTOS_NUCLEO_RO_DSD.NUM_PERSONAS_AY
UDA));
                        AYUDA_PERMITIDA := (DETERMINA_RO_DSD.NECESIDAD_AJUSTADA*
2) +
                        ((GASTOS_NUCLEO_RO_DSD.NUM_PERSONAS_AYUDA - 1)*DETERMINA
_RO_DSD.NECESIDAD_AJUSTADA_FAM*2);
                        DB_GET_NEXT(OPEN11_ID,STATUS11_CODE);
                END;

               IF (INGRESO_BRUTO = 0) AND (OTROS > 0)
                THEN
                    IF OTROS >= GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE
                    THEN
                       BEGIN
                            IF (GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE > A
YUDA_PERMITIDA)
                            THEN BEGIN
                                   ayud := AYUDA_PERMITIDA;
                                   OTROS := OTROS - AYUDA_PERMITIDA;
                                 END;
                            ELSE BEGIN
                                   ayud := GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DED
UCCIONE;
                                   OTROS := OTROS - GASTOS_NUCLEO_RO_DSD.VLR_CAN
TIDAD_DEDUCCIONE;
                                 END;
                       END;
                    ELSE
                       BEGIN
                         AYUD := 0;
                         OTROS := 0;
                       END;
                ELSE
                IF INGRESO_ACREDITABLE >= GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDU
CCIONE
                THEN BEGIN
                        IF (GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE > AYUDA
_PERMITIDA)
                        THEN BEGIN
                                ayud := AYUDA_PERMITIDA;
                                INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - 
                                     AYUDA_PERMITIDA;
                             END;
                        ELSE BEGIN
                                ayud := GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCC
IONE;
                                INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - 
                                      GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIO
NE;
                             END;
                     END;
                ELSE BEGIN
                       INGRESO_ACREDITABLE := 0;
                       AYUD := 0;
                     END;
        END;
{ GASTOS POR CUIDO DE MENORES }
        CUIDO_MENOR := 0;
        TOTAL_CUIDO := 0;
{       DB_RESET(OPEN2_ID,STATUS2_CODE);
        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE := SS_JEFE_GBL;
        DB_QUERY(OPEN2_ID,STATUS2_CODE);
        DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
        WHILE STATUS2_CODE = 0 DO
        BEGIN
           DB_RESET(OPEN6_ID,STATUS_CODE);
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE:='CUID';
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
           DB_QUERY(OPEN6_ID,STATUS_CODE);
           DB_GET_FIRST(OPEN6_ID,STATUS_CODE);
           IF STATUS_CODE = 0 
           THEN 
           BEGIN
              IF (GASTOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENNA') OR
                 (GASTOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENNE') OR
 
                 (GASTOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENSO')
              THEN 
                BEGIN
                DB_RESET(OPEN2_ID,STATUS2_CODE);
                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE := NUCLEO_SERVICIO_DSD.SE
GURO_SOCIAL_BENEFICIARIO;
                DB_QUERY(OPEN2_ID,STATUS2_CODE);
                DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
                DB_RESET(OPEN6_ID,STATUS6_CODE);
                GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
                GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
                GASTOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
                GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
                        NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO;
                DB_QUERY(OPEN6_ID,STATUS6_CODE);
                DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);

                IF CLIENTES2_RO_DSD.COD_ESTATUS_EMPLEO = 'DES2'
                THEN 
                BEGIN
                     WHILE STATUS6_CODE = 0 DO
                     BEGIN
                     IF (SUBSTR(GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE,0,3) = 
'CMN') AND
                        (CONT_MENORES < MENOR_2_ANOS) 
                     THEN
                     BEGIN
                        IF GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE > 100
                        THEN
                          CUIDO_MENOR := CUIDO_MENOR + 100;
                        ELSE
                          CUIDO_MENOR := CUIDO_MENOR + GASTOS_NUCLEO_RO_DSD.VLR_
CANTIDAD_DEDUCCIONE;
                        CONT_MENORES := CONT_MENORES + 1;
                     END;
                     ELSE
                     IF (SUBSTR(GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE,0,3) = 
'CMY') AND
                        (CONT_MAYORES < (ADULTO_INCA + MENOR_MAYOR_2))
                     THEN
                     BEGIN
                        IF GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE > 87
                        THEN
                          CUIDO_MENOR := CUIDO_MENOR + 87;
                        ELSE
                          CUIDO_MENOR := CUIDO_MENOR + GASTOS_NUCLEO_RO_DSD.VLR_
CANTIDAD_DEDUCCIONE;
                        CONT_MAYORES := CONT_MAYORES + 1;
                     END;
                     DB_GET_NEXT(OPEN6_ID,STATUS6_CODE);
                   END;
                END;
                 ELSE
                   BEGIN
                     IF CLIENTES2_RO_DSD.COD_ESTATUS_EMPLEO = 'EMPL'
                     THEN 
                     BEGIN
                     WHILE STATUS6_CODE = 0 DO
                     BEGIN
                     IF (SUBSTR(GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE,0,3) = 
'CMN') AND
                        (CONT_MENORES < MENOR_2_ANOS) 
                     THEN
                     BEGIN
                        IF GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE > 200
                        THEN
                          CUIDO_MENOR := CUIDO_MENOR + 200;
                        ELSE
                          CUIDO_MENOR := CUIDO_MENOR + GASTOS_NUCLEO_RO_DSD.VLR_
CANTIDAD_DEDUCCIONE;
                        CONT_MENORES := CONT_MENORES + 1;
                     END;
                     ELSE
                     IF (SUBSTR(GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE,0,3) = 
'CMY') AND
                        (CONT_MAYORES < (ADULTO_INCA + MENOR_MAYOR_2))
                     THEN
                     BEGIN
                        IF GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE > 175
                        THEN
                          CUIDO_MENOR := CUIDO_MENOR + 175;
                        ELSE
                          CUIDO_MENOR := CUIDO_MENOR + GASTOS_NUCLEO_RO_DSD.VLR_
CANTIDAD_DEDUCCIONE;
                        CONT_MAYORES := CONT_MAYORES + 1;
                     END;
                     DB_GET_NEXT(OPEN6_ID,STATUS6_CODE);
                   END;
                END;
                END;
                END; 
        DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
        END;
        
          IF GASTOS_INHE >= CUIDO_MENOR
          THEN
             TOTAL_CUIDO := GASTOS_INHE - CUIDO_MENOR;
          ELSE
             TOTAL_CUIDO := 0;

          IF INGRESO_ACREDITABLE >= CUIDO_MENOR
          THEN
             INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - CUIDO_MENOR;
          ELSE
             INGRESO_ACREDITABLE := 0;
}

{ TOTAL INGRESOS ACREDITABLES }

        TOT_INGRE_ACREDI :=  INGRESO_ACREDITABLE;

{ TOTAL OTROS INGRESOS }

        TOTAL_OTROS := TOT_INGRE_ACREDI + OTROS;

{ SUME LA PARTE PROPORCINAL CATEGORICA DE LOS NINOS }   
{       IF SERVICIOS2_DRO_SD.FLG_AEC_CLASSIF <> 'N'
        THEN
        BEGIN
        PARTE_PROP := 0;
        NUM_MENOR := 0;
        NUM_FAM := 0;
        DB_RESET(OPEN2_ID,STATUS2_CODE);
        CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN2_ID,STATUS2_CODE);
        DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
        WHILE STATUS2_CODE = 0 DO
        BEGIN
          DB_RESET(OPEN_ID,STATUS_CODE);
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
          NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
          NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                        CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
          DB_QUERY(OPEN_ID,STATUS_CODE);
          DB_GET_FIRST(OPEN_ID,STATUS_CODE);
          IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAL') AND
             (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NA')
          THEN 
                NUM_FAM := NUM_FAM + 1;
          DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
        END;
          PROP_MENOR := TRUNC(MADR_PADR_TOT/NUM_FAM);

        OPEN_ID:=OPEN_TEMP;
        DB_RESET(OPEN_ID,STATUS_CODE);
        IF STATUS_CODE<>0
           THEN BEGIN
                 ERROR(STATUS_CODE);
                 RETURN;
                END;
        NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
        DB_QUERY(OPEN_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
          IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAT')
          THEN 
          BEGIN
             DB_RESET(OPEN2_ID,STATUS2_CODE);
             CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE := NUCLEO_SERVICIO_DSD.SEGUR
O_SOCIAL_BENEFICIARIO;
             DB_QUERY(OPEN2_ID,STATUS2_CODE);
             DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
             EDAD_IND := MONTHS_BETWEEN(FCH_EMISION,CLIENTES2_RO_DSD.FCH_NACIMIE
NTO)/12;
             IF EDAD_IND < 18
             THEN BEGIN
                        NUM_MENOR := NUM_MENOR + 1;
                  END;
          END;
        DB_GET_NEXT(OPEN_ID,STATUS_CODE);
        END;
        PARTE_PROP := NUM_MENOR * PROP_MENOR;
        END;
}
{ TOTAL INGRESO NETO }
        INGRESO_NETO := TRUNC(TOTAL_OTROS + PARTE_PROP);

        INGRESO_NETO := TRUNC(INGRESO_NETO);

{ NECESIDADES BASICAS AJUSTADAS }
        NECESIDAD_AJUSTADA := 0;
        NUM_FAMILIA := 0;
        DB_RESET(OPEN2_ID,STATUS2_CODE);
        CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN2_ID,STATUS2_CODE);
        DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
        WHILE STATUS2_CODE = 0 DO
        BEGIN
           DB_RESET(OPEN_ID,STATUS_CODE);
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
           DB_QUERY(OPEN_ID,STATUS_CODE);
           DB_GET_FIRST(OPEN_ID,STATUS_CODE);
           IF STATUS_CODE = 0
           THEN
           BEGIN
{   IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAT') AND}
           IF   (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAL') AND
              (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'BNSC') AND
              (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'BNPR')
           THEN
                NUM_FAMILIA := NUM_FAMILIA + 1;
                END;

{          IF STATUS_CODE = 0 
           THEN
             IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'ENSO')
             THEN 
                NUM_FAMILIA := NUM_FAMILIA + 1;
           ELSE
                NUM_FAMILIA := NUM_FAMILIA + 1;
}

           DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
        END;

        DB_GET_NEXT(OPEN_ID,STATUS_CODE);
        DB_RESET(OPEN11_ID,STATUS11_CODE);
        DETERMINA_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
        DB_QUERY(OPEN11_ID,STATUS11_CODE);
        DB_GET_FIRST(OPEN11_ID,STATUS11_CODE);
        WHILE (STATUS11_CODE = 0) AND
        (DETERMINA_RO_DSD.FECHA_EFECTIVIDAD <= FCH_EMISION) DO 
        BEGIN
                NECESIDAD_AJUSTADA := DETERMINA_RO_DSD.NECESIDAD_AJUSTADA+
                ((NUM_FAMILIA - 1)*DETERMINA_RO_DSD.NECESIDAD_AJUSTADA_FAM);
                DB_GET_NEXT(OPEN11_ID,STATUS11_CODE);
        END;


{ ALBERGUE AJUSTADO }
        CENTAVOS := 0;
        ING_TEMP := 0;
        EXCENCION_ALBERGUE := 0;
{       DB_RESET(OPEN2_ID,STATUS2_CODE);
        CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN2_ID,STATUS2_CODE);
        DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
        WHILE STATUS2_CODE = 0 DO
        BEGIN
 }
            DB_RESET(OPEN6_ID,STATUS6_CODE);
            GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
            GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
            GASTOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
            GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE:='ALBE';
            DB_QUERY(OPEN6_ID,STATUS6_CODE);
            DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);
            IF STATUS6_CODE = 0
            THEN BEGIN
                 
                 CENTAVOS := TRUNC(GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE)
;
                 IF CENTAVOS > 0
                 THEN
                    ING_TEMP := TRUNC((GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCI
ONE));
                 ELSE
                    ING_TEMP := (GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE);

                IF (ING_TEMP >= 0.01) AND (ING_TEMP < 3) 
                THEN
                        EXCENCION_ALBERGUE := 1;
                ELSE
                   IF ing_temp > 200 
                   THEN
                        EXCENCION_ALBERGUE := 100;
                   else
                        excencion_albergue :=ROUND(ing_temp/2);

                 IF EXCENCION_ALBERGUE > 100 
                 THEN
                        EXCENCION_ALBERGUE := 100;
                 END;

            EXCENCION_ALBERGUE := EXCENCION_ALBERGUE;

{ TOTAL NECESIDADES AJUSTADAS }

        TOT_AJUSTADA := NECESIDAD_AJUSTADA + EXCENCION_ALBERGUE;

{ CALCULAR EL DEFICIT }
        IF TOT_AJUSTADA >= INGRESO_NETO
        THEN
           DEFICIT := TOT_AJUSTADA - INGRESO_NETO;
        ELSE
           DEFICIT := 0;

            IF DEFICIT = 0
            THEN
            BEGIN
            NECESITADO := 'F';
            DB_RESET(OPEN10_ID,STATUS_CODE);
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO := SS_SERV_GBL
;
            DB_QUERY(OPEN10_ID,STATUS_CODE);
            DB_GET_FIRST(OPEN10_ID,STATUS_CODE);
            NUCLEO_SERVICIO_UPD_RO_DSD.COD_PARENTESCO_RELACION_SERV := 'ENNA';
            DB_UPDATE(OPEN10_ID,STATUS_CODE);
            CALL PREP_ENCARGADO_NEC_PKT;
            RETURN;
           END;

{ EXCENSION POR TRABAJO CASOS SOLICITANTES CAT. C }
SALARIO_LIMP := SALARIO - (GASTOS_ENSO + 90);
RESTE_30 := 0;
RESTE_30_SOL := 0;
ETYT_CASO_GBL:='N';
DB_RESET(OPEN2_ID,STATUS2_CODE);
CLIENTES2_RO_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
DB_QUERY(OPEN2_ID,STATUS2_CODE);
DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
WHILE STATUS2_CODE = 0 DO
BEGIN
    EDAD_IND := MONTHS_BETWEEN(FCH_EMISION,CLIENTES2_RO_DSD.FCH_NACIMIENTO)/12;
    DB_RESET(OPEN_ID,STATUS_CODE);
    NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
    NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
    NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
    NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
    CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
    DB_QUERY(OPEN_ID,STATUS_CODE);
    DB_GET_FIRST(OPEN_ID,STATUS_CODE);
    DB_RESET(OPEN6_ID,STATUS6_CODE);

DB_RESET(OPEN6_ID,STATUS6_CODE);
GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM:=SS_JEFE_GBL;
GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV:=SS_SERV_GBL;
GASTOS_NUCLEO_RO_DSD.COD_SERVICIO:=COD_SERV_GBL;
GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
                NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO;
GASTOS_NUCLEO_RO_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(OPEN6_ID,STATUS6_CODE);
DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);
WHILE STATUS6_CODE = 0 DO
BEGIN
IF ((GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETYT') OR
    (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETRT'))
THEN
BEGIN
        IF  (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAL') AND
            (((EDAD_IND >= 18) AND (NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIAR
IO = SS_SERV_GBL)) OR
              (EDAD_IND < 18)
                OR
              (CLIENTES2_RO_DSD.FACT_ELEGIBILIDAD_AEC = 'INCA') OR
              (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY'))
        THEN BEGIN
        DB_RESET(OPEN4_ID,STATUS4_CODE);
        SERVICIOS2_RO_DSD.SEGURO_SOCIAL_JEFE_FAM:=SS_JEFE_GBL;
        SERVICIOS2_RO_DSD.SEGURO_SOCIAL_JEFE_SERV:=SS_SERV_GBL;
        SERVICIOS2_RO_DSD.COD_SERVICIO:=COD_SERV_GBL;
        SERVICIOS2_RO_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN4_ID,STATUS4_CODE);
        DB_GET_FIRST(OPEN4_ID,STATUS4_CODE);
        RESTE_30 := 0;
        RESTE_30_SOL := 0;
        CUARTO_MES:=ADD_MONTHS(SERVICIOS2_RO_DSD.FCH_SOLICITUD,4);
{       IF      (SERVICIOS2_RO_DSD.COD_STATUS_SERVICIO <> 'ACTIVO') AND
        (TRUNC(SYSTEM_DATE,'DDD') >= TRUNC(SERVICIOS2_RO_DSD.FCH_SOLICITUD,'DDD'
)) AND
        (TRUNC(SERVICIOS2_RO_DSD.FCH_SOLICITUD,'DDD') <= TRUNC(CUARTO_MES,'DDD')
) and}
    IF  (SALARIO_LIMP > 0) AND ((SALARIO <> 0) OR (SALARIO_CONYUGUE <>0))
        AND     (AUTORIZADA_GBL = 'N')
        THEN BEGIN
            ETYT_CASO_GBL:='Y';
            if SALARIO_LIMP >= 30
            then begin
                IF (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETYT')
                THEN
                   IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY')
                   THEN
                       CONY_TREINTA_Y_TERSIO := ROUND(30 + ((SALARIO_LIMP - 30) 
* 0.333));
                   ELSE
                       TREINTA_Y_TERSIO := ROUND(30 + ((SALARIO_LIMP - 30) * 0.3
33));
                ELSE
                   IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY')
                   THEN
                       CONY_TREINTA_Y_TERSIO := 30;
                   ELSE
                       TREINTA_Y_TERSIO := 30;

                DEBUG_LOG('AQUI ING '||TO_CHAR(INGRESO_ACREDITABLE));
                DEBUG_LOG('AQUI 30 '||TO_CHAR(TREINTA_Y_TERSIO));
                DEBUG_LOG('CONY 30 '||TO_CHAR(CONY_TREINTA_Y_TERSIO));
                RESTE_30 := RESTE_30 + TREINTA_Y_TERSIO;
                RESTE_30_SOL:= RESTE_30_SOL + TREINTA_Y_TERSIO;
                DEBUG_LOG('RESTE_30 '||TO_CHAR(RESTE_30));
              end;
            else begin
                   IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') AND
                      (SALARIO_CONYUGUE <> 0)
                   THEN BEGIN
                        CONY_TREINTA_Y_TERSIO := SALARIO_LIMP;
                        CONY_TR := CONY_TR + SALARIO_LIMP;
                        END;
                   else BEGIN
                        treinta_y_tersio := SALARIO_LIMP;
                        TR := TR + SALARIO_LIMP;
                        END;
                 end;

                IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') AND
                   (SALARIO_CONYUGUE <> 0)
                THEN
                    IF INGRESO_ACREDITABLE >= CONY_TREINTA_Y_TERSIO
                    THEN BEGIN
                             INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - CONY_T
REINTA_Y_TERSIO;
                             CONY_TR := CONY_TR + CONY_TREINTA_Y_TERSIO;
                         END;
                    ELSE
                      INGRESO_ACREDITABLE := 0;
                ELSE
                    IF INGRESO_ACREDITABLE >= TREINTA_Y_TERSIO
                    THEN BEGIN
                           INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - TREINTA_
Y_TERSIO;
                            TR := TR + TREINTA_Y_TERSIO;
                         END;
                    ELSE BEGIN
                            INGRESO_ACREDITABLE := 0;
                        END;
            END;
        END;

        IF (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETYT') AND
        (AUTORIZADA_GBL = 'N') 
        THEN
        BEGIN
          DB_RESET(OPEN9_ID,STATUS9_CODE);
          DEDUCCIONES_CLIENTE2_DSD.SEGURO_SOCIAL_CLIENTE :=
           CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
          DEDUCCIONES_CLIENTE2_DSD.COD_TIPO_DEDUCCIONE := 'ETYT';
          DEDUCCIONES_CLIENTE2_DSD.RMO_OFICINA := RMO_GBL;
          DB_QUERY(OPEN9_ID,STATUS9_CODE);
          DB_GET_FIRST(OPEN9_ID,STATUS9_CODE);
          IF STATUS9_CODE = 0 
          THEN
             BEGIN
                IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY')
                THEN
                    DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE := CONY_TRE
INTA_Y_TERSIO;
                ELSE
                    DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE := TREINTA_
Y_TERSIO;
                DB_UPDATE(OPEN9_ID,STATUS9_CODE); 
             END;
        END;

{ CUANDO SEA 30 DOLARES }

        IF (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ETRT') AND
        (AUTORIZADA_GBL = 'N') 
        THEN
        BEGIN
          DB_RESET(OPEN9_ID,STATUS9_CODE);
          DEDUCCIONES_CLIENTE2_DSD.SEGURO_SOCIAL_CLIENTE :=
           CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
          DEDUCCIONES_CLIENTE2_DSD.COD_TIPO_DEDUCCIONE := 'ETRT';
          DEDUCCIONES_CLIENTE2_DSD.RMO_OFICINA := RMO_GBL;
          DB_QUERY(OPEN9_ID,STATUS9_CODE);
          DB_GET_FIRST(OPEN9_ID,STATUS9_CODE);
          IF STATUS9_CODE = 0 
          THEN
             BEGIN
                IF (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY')
                THEN
                    DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE := CONY_TRE
INTA_Y_TERSIO;
                ELSE
                    DEDUCCIONES_CLIENTE2_DSD.VLR_CANTIDAD_DEDUCCIONE := TREINTA_
Y_TERSIO;
                DB_UPDATE(OPEN9_ID,STATUS9_CODE);
             END;
        END;
END;
DB_GET_NEXT(OPEN6_ID,STATUS6_CODE);
END;


{ INGRESO ACREDITABLE AL ENCARGADO NECESITADO }

{ NECESIDADES BASICAS AJUSTADAS SIN ENCARGADO}
        NECESIDAD_AJUSTADA_SIN:=0;
        NUM_FAMILIA_SIN := 0;
           DB_RESET(OPEN_ID,STATUS_CODE);
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
           CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
           DB_QUERY(OPEN_ID,STATUS_CODE);
           DB_GET_FIRST(OPEN_ID,STATUS_CODE);
           IF STATUS_CODE = 0 THEN
           BEGIN
           IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAL') AND
              (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'BNPR') AND
              (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'ENSO') AND
              (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'ENNE')
           THEN
                NUM_FAMILIA_SIN := NUM_FAMILIA_SIN + 1;

           END;
           DEBUG_LOG('NUM_FAMILIA_SIN'||TO_CHAR(NUM_FAMILIA_SIN));
       DB_GET_NEXT(OPEN_ID,STATUS_CODE);
        
  IF NUM_FAMILIA_SIN >= 1
   THEN
    Begin
        DB_RESET(OPEN11_ID,STATUS11_CODE);
        DETERMINA_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
        DB_QUERY(OPEN11_ID,STATUS11_CODE);
        DB_GET_FIRST(OPEN11_ID,STATUS11_CODE);
        WHILE (STATUS11_CODE = 0) AND
        (DETERMINA_RO_DSD.FECHA_EFECTIVIDAD <= FCH_EMISION) DO 
        BEGIN
                NECESIDAD_AJUSTADA_SIN := DETERMINA_RO_DSD.NECESIDAD_AJUSTADA+
                ((NUM_FAMILIA_SIN-1)*DETERMINA_RO_DSD.NECESIDAD_AJUSTADA_FAM);
                DB_GET_NEXT(OPEN11_ID,STATUS11_CODE);
        END;    
     end;
   ELSE
        BEGIN
                NECESIDAD_AJUSTADA_SIN := 0;
        END;
        DEBUG_LOG('NECESIDAD_AJUSTADA_SIN'||TO_CHAR(NECESIDAD_AJUSTADA_SIN));

{ ALBERGUE AJUSTADO SIN ENCARGADO}
        CENTAVOS := 0;
        ING_TEMP := 0;
        EXCENCION_ALBERGUE_SIN := 0;
        IF NUM_FAMILIA_SIN >= 1
        THEN BEGIN
           DB_RESET(OPEN6_ID,STATUS6_CODE);
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
           GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE:='ALBE';
           GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO :=
           CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE;
           DB_QUERY(OPEN6_ID,STATUS6_CODE);
           DB_GET_FIRST(OPEN6_ID,STATUS6_CODE);
           IF STATUS6_CODE = 0
           THEN BEGIN

           DB_RESET(OPEN_ID,STATUS_CODE);
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
           NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
           NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO := 
                        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO;
           DB_QUERY(OPEN_ID,STATUS_CODE);
           DB_GET_FIRST(OPEN_ID,STATUS_CODE);

           IF ((NUCLEO_servicio_dsd.cod_PARENTESCO_RELACION_SERV = 'NCAT') AND
                (EDAD_IND < 21)) 
           OR 
                ((EDAD_IND >= 21) AND (CLIENTES2_RO_DSD.COD_INCAPACIDAD_PRIMARIA
 <> 'NA')
                  AND (CLIENTES2_RO_DSD.FLG_INCAPACIDAD_VERIFICADA = 'S'))
           OR
                ((NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV = 'NCAT') AND
                (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY') AND
                (CLIENTES2_RO_DSD.COD_ESTADO_CIVIL = 'CASA'))          
           THEN
                BEGIN
                DEBUG_LOG('ALBERGUE '||TO_CHAR(GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD
_DEDUCCIONE));

                 CENTAVOS := TRUNC(GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE)
;
                 IF CENTAVOS > 0
                 THEN
                    ING_TEMP := TRUNC((GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCI
ONE));
                 ELSE
                    ING_TEMP := (GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE);

                IF (ING_TEMP >= 0.01) AND (ING_TEMP < 3) 
                THEN
                        EXCENCION_ALBERGUE_SIN := 1;
                ELSE
                   IF ing_temp > 200 
                   THEN
                        EXCENCION_ALBERGUE_SIN  := 100;
                   else
                        excencion_albergue_SIN :=ROUND(ing_temp/2);

                 IF EXCENCION_ALBERGUE_SIN > 100
                 THEN
                    EXCENCION_ALBERGUE_SIN := 100;
                 END;
            END;

{    EXCENCION_ALBERGUE_SIN := EXCENCION_ALBERGUE_SIN;}
        END;
TOT_EXCESION_ALBE_SIN := TOT_EXCESION_ALBE_SIN + EXCENCION_ALBERGUE_SIN;
DB_GET_NEXT(OPEN2_ID,STATUS2_CODE);
END;

{ TOTAL NECESIDADES AJUSTADAS }

        TOT_AJUSTADA_SIN := NECESIDAD_AJUSTADA_SIN + TOT_EXCESION_ALBE_SIN;

{ INGRESO DISPONIBLE DEL E.N. }
        DEBUG_LOG('INGRESO_NETO '||TO_CHAR(INGRESO_NETO));
        DEBUG_LOG('TOT_AJUSTADA_SIN '||TO_CHAR(TOT_AJUSTADA_SIN));
        DEBUG_LOG('RESTE_30_SOL '||TO_CHAR(RESTE_30_SOL));
        if ingreso_neto-RESTE_30_SOL >= tot_ajustada_sin
        then
            INGRESO_ACREDI_ENNE := INGRESO_NETO-RESTE_30_SOL - TOT_AJUSTADA_SIN;
        else
            ingreso_acredi_enne := 0;

        IF INGRESO_ACREDI_ENNE < 0
        THEN
           INGRESO_ACREDI_ENNE := 0;
        
            DB_RESET(OPEN10_ID,STATUS_CODE);
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
            NUCLEO_SERVICIO_UPD_RO_DSD.SEGURO_SOCIAL_BENEFICIARIO := SS_SERV_GBL
;
            DB_QUERY(OPEN10_ID,STATUS_CODE);
            DB_GET_FIRST(OPEN10_ID,STATUS_CODE);
            NUCLEO_SERVICIO_UPD_RO_DSD.COD_PARENTESCO_RELACION_SERV := 'ENNE';
            DB_UPDATE(OPEN10_ID,STATUS_CODE);
            CALL PREP_ENCARGADO_NEC_PKT;
            RETURN;

SET_NOTRACE();

END;


    



--------------------------------------------------------------------- */
