package gov.dlf.logic;


import gov.dlf.facade.SAIC_DMQ_ORA_Application;

import net.maintrend.datamanager.DataStore;
import net.maintrend.interfaces.IRegisteredObject;
import net.maintrend.interlink.Parameter;
import net.maintrend.interlink.ParameterSet;
import net.maintrend.rallyengine.ADL;
import net.maintrend.rallyengine.RallyApplication;
import net.maintrend.rallyengine.RallyDataManager;
import net.maintrend.rallyengine.RallyDataStoreException;
import net.maintrend.rallyengine.RallyDataStoreExceptionType;
import net.maintrend.util.Compare;
import net.maintrend.util.Debug;
import net.maintrend.util.MathService;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SERV_SUM_CLIENTE_GAST_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;

  public double TOT_AMOUNT = 0;



  public DataStore DEDUCCIONES_CLIENTE2_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOT_AMOUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).TOT_AMOUNT = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getDEDUCCIONES_CLIENTE2_RO_DSD  ( RallyApplication __app )
  {
    return ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).DEDUCCIONES_CLIENTE2_RO_DSD;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE2_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).DEDUCCIONES_CLIENTE2_RO_DSD = value;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE2_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).DEDUCCIONES_CLIENTE2_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOT_AMOUNT  ( RallyApplication __app )
  {
    return ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).TOT_AMOUNT;
  }


  /**  */
  public static Double getTOT_AMOUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).TOT_AMOUNT );
  }


  /**  */
  public static void setTOT_AMOUNT  ( RallyApplication __app, double value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).TOT_AMOUNT = value;
  }


  /**  */
  public static void setTOT_AMOUNT  ( RallyApplication __app, Object value )
  {
    ( ( SERV_SUM_CLIENTE_GAST_ADL ) __app.getADL ( SERV_SUM_CLIENTE_GAST_ADL.class ) ).TOT_AMOUNT = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SERV_SUM_CLIENTE_GAST_ADL get ( RallyApplication __app )
  {
    SERV_SUM_CLIENTE_GAST_ADL adl = new SERV_SUM_CLIENTE_GAST_ADL ( );
    __app.register ( adl, "SERV_SUM_CLIENTE_GAST_ADL" );
    __app.setADL ( SERV_SUM_CLIENTE_GAST_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SERV_SUM_CLIENTE_GAST_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SERV_SUM_CLIENTE_GAST_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SERV_SUM_CLIENTE_GAST_ADL" );
    if ( rObj != null && rObj instanceof SERV_SUM_CLIENTE_GAST_ADL )
    {
      this.app.setADL ( SERV_SUM_CLIENTE_GAST_ADL.class, ( SERV_SUM_CLIENTE_GAST_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SERV_SUM_CLIENTE_GAST_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SERV_SUM_CLIENTE_GAST_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "TOT_GAST", 0  );
    DEDUCCIONES_CLIENTE2_RO_DSD = this.dm.create ( "DEDUCCIONES_CLIENTE2_RO_DSD" );
    OPEN_ID = DEDUCCIONES_CLIENTE2_RO_DSD.getId ( );
    STATUS_ID = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 0, STATUS_ID );
      this.doReturn ( );
      return; 
    }

    STATUS_ID  = this.dm.reset ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 1, STATUS_ID );
      this.doReturn ( );
      return; 
    }

    double ssn = this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_BENEFICIARIO" );
    if ( Double.isNaN ( ssn ) ) ssn = 0;

    this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", ssn );
    this.dm.setField ( this.dm.get ( "DEDUCCIONES_CLIENTE2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_ID  = this.dm.retrieve ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 2, STATUS_ID );
      this.doReturn ( );
      return; 
    }

    STATUS_ID  = this.dm.firstRow ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      if ( Compare.equals ( STATUS_ID, RallyDataStoreExceptionType.EOS ) ) 
      {
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "TOT_GAST", 0  );
        this.doReturn ( );
        return; 
      }
      else
      {
        this.app.setError ( 3, STATUS_ID );
        this.doReturn ( );
        return; 
      }
    }
    TOT_AMOUNT = 0;
    while ( ! Compare.equals ( STATUS_ID, RallyDataStoreExceptionType.EOS )  )
    {
      TOT_AMOUNT = MathService.plus ( TOT_AMOUNT, this.dm.getFieldDouble ( this.dm.get ( "DEDUCCIONES_CLIENTE2_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );

      STATUS_ID  = this.dm.nextRow ( OPEN_ID );

    }
    STATUS_ID  = this.dm.dbClose ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 4, STATUS_ID );
      this.doReturn ( );
      return; 
    }
    this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "TOT_GAST", TOT_AMOUNT  );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SERV_SUM_CLIENTE_GAST_ADL;


VAR
        OPEN_ID:        NUMBER(9,0);
        STATUS_ID:      NUMBER(9,0);
        TOT_AMOUNT:     NUMBER(9,2);

BEGIN

SET_TRACE();
SERV_NUCLEO_SERV_FRM.TOT_GAST:=0;
DB_OPEN(DEDUCCIONES_CLIENTE2_RO_DSD,OPEN_ID,STATUS_ID);
IF STATUS_ID<>0
   THEN BEGIN
          ERROR(STATUS_ID);
          RETURN;
        END;
DB_RESET(OPEN_ID,STATUS_ID);
IF STATUS_ID<>0
   THEN BEGIN
          ERROR(STATUS_ID);
          RETURN;
        END;
DEDUCCIONES_CLIENTE2_RO_DSD.SEGURO_SOCIAL_CLIENTE:=
     SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_BENEFICIARIO;
DEDUCCIONES_CLIENTE2_RO_DSD.RMO_OFICINA:=RMO_GBL;
DB_QUERY(OPEN_ID,STATUS_ID);
IF STATUS_ID<>0
   THEN BEGIN
          ERROR(STATUS_ID);
          RETURN;
        END;
DB_GET_FIRST(OPEN_ID,STATUS_ID);
IF STATUS_ID<>0
   THEN IF STATUS_ID=DB_EOS
         THEN BEGIN
               SERV_NUCLEO_SERV_FRM.TOT_GAST:=0;
               RETURN;
              END;
         ELSE BEGIN
                ERROR(STATUS_ID);
                RETURN;
              END;
TOT_AMOUNT:=0;
WHILE STATUS_ID<>DB_EOS DO
  BEGIN
    TOT_AMOUNT:=TOT_AMOUNT+DEDUCCIONES_CLIENTE2_RO_DSD.VLR_CANTIDAD_DEDUCCIONE;
    DB_GET_NEXT(OPEN_ID,STATUS_ID);
  END;

DB_CLOSE(OPEN_ID,STATUS_ID);
IF STATUS_ID<>0
   THEN BEGIN
          ERROR(STATUS_ID);
          RETURN;
        END;
SERV_NUCLEO_SERV_FRM.TOT_GAST:=TOT_AMOUNT;

SET_NOTRACE();

END;

    


    



--------------------------------------------------------------------- */
