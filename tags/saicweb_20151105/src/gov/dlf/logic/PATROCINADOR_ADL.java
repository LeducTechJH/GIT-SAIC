package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class PATROCINADOR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double OPEN2_ID = 0;

  public double OPEN3_ID = 0;

  public double OPEN4_ID = 0;

  public double OPEN5_ID = 0;

  public double OPEN6_ID = 0;

  public double OPEN11_ID = 0;

  public double INGRESOS = 0;

  public double STATUS_CODE = 0;

  public double STATUS2_CODE = 0;

  public double STATUS11_CODE = 0;

  public double SALA_PATRO = 0;

  public double ING_BRUTO = 0;

  public double SALA = 0;

  public double NPRO = 0;

  public double ADIE = 0;

  public double OTROS = 0;

  public double GASTOS_INHE = 0;

  public double RESTA_20 = 0;

  public double NECESIDAD = 0;

  public double GASTOS = 0;

  public double NUM_FAMILIA = 0;

  public double NPRO_BRUTO = 0;

  public double PROD = 0;

  public double ALBE = 0;

  public double AYUD = 0;

  public double AYUDA_PERMITIDA = 0;

  public double SALA_COUNT = 0;



  public Date FCH_EMISION = null;

  public DataStore INGRESOS_NUCLEO_RO_DSD = null;

  public DataStore GASTOS_NUCLEO_RO_DSD = null;

  public DataStore NUCLEO_SERVICIO_DSD = null;

  public DataStore DETERMINA_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN2_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN3_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN4_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN5_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN6_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN11_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN11_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).FCH_EMISION = value.getDate ( );
  }  

  
  /**  */
  public static void setINGRESOS  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).INGRESOS = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS2_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS11_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS11_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALA_PATRO  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_PATRO = value.getDouble ( );
  }  

  
  /**  */
  public static void setING_BRUTO  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ING_BRUTO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALA  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA = value.getDouble ( );
  }  

  
  /**  */
  public static void setNPRO  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO = value.getDouble ( );
  }  

  
  /**  */
  public static void setADIE  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ADIE = value.getDouble ( );
  }  

  
  /**  */
  public static void setOTROS  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OTROS = value.getDouble ( );
  }  

  
  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS_INHE = value.getDouble ( );
  }  

  
  /**  */
  public static void setRESTA_20  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).RESTA_20 = value.getDouble ( );
  }  

  
  /**  */
  public static void setNECESIDAD  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NECESIDAD = value.getDouble ( );
  }  

  
  /**  */
  public static void setGASTOS  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NUM_FAMILIA = value.getDouble ( );
  }  

  
  /**  */
  public static void setNPRO_BRUTO  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO_BRUTO = value.getDouble ( );
  }  

  
  /**  */
  public static void setPROD  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).PROD = value.getDouble ( );
  }  

  
  /**  */
  public static void setALBE  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ALBE = value.getDouble ( );
  }  

  
  /**  */
  public static void setAYUD  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUD = value.getDouble ( );
  }  

  
  /**  */
  public static void setAYUDA_PERMITIDA  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUDA_PERMITIDA = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALA_COUNT  ( RallyApplication __app, Parameter value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_COUNT = value.getDouble ( );
  }  
    


  /**  */
  public static Date getFCH_EMISION  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).FCH_EMISION;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Date value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).FCH_EMISION = value;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).FCH_EMISION = ( Date ) value;
  }



  /**  */
  public static DataStore getINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD;
  }


  /**  */
  public static void setINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD = value;
  }


  /**  */
  public static void setINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS_NUCLEO_RO_DSD;
  }


  /**  */
  public static void setGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS_NUCLEO_RO_DSD = value;
  }


  /**  */
  public static void setGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS_NUCLEO_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_SERVICIO_DSD  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NUCLEO_SERVICIO_DSD;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NUCLEO_SERVICIO_DSD = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NUCLEO_SERVICIO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getDETERMINA_RO_DSD  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).DETERMINA_RO_DSD;
  }


  /**  */
  public static void setDETERMINA_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).DETERMINA_RO_DSD = value;
  }


  /**  */
  public static void setDETERMINA_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).DETERMINA_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN2_ID  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN2_ID;
  }


  /**  */
  public static Double getOPEN2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN2_ID );
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN2_ID = value;
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN3_ID  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN3_ID;
  }


  /**  */
  public static Double getOPEN3_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN3_ID );
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN3_ID = value;
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN3_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN4_ID  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN4_ID;
  }


  /**  */
  public static Double getOPEN4_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN4_ID );
  }


  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN4_ID = value;
  }


  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN4_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN5_ID  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN5_ID;
  }


  /**  */
  public static Double getOPEN5_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN5_ID );
  }


  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN5_ID = value;
  }


  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN5_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN6_ID  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN6_ID;
  }


  /**  */
  public static Double getOPEN6_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN6_ID );
  }


  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN6_ID = value;
  }


  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN6_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN11_ID  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN11_ID;
  }


  /**  */
  public static Double getOPEN11_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN11_ID );
  }


  /**  */
  public static void setOPEN11_ID  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN11_ID = value;
  }


  /**  */
  public static void setOPEN11_ID  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OPEN11_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESOS  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).INGRESOS;
  }


  /**  */
  public static Double getINGRESOSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).INGRESOS );
  }


  /**  */
  public static void setINGRESOS  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).INGRESOS = value;
  }


  /**  */
  public static void setINGRESOS  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).INGRESOS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS2_CODE  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS2_CODE;
  }


  /**  */
  public static Double getSTATUS2_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS2_CODE );
  }


  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS2_CODE = value;
  }


  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS2_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS11_CODE  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS11_CODE;
  }


  /**  */
  public static Double getSTATUS11_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS11_CODE );
  }


  /**  */
  public static void setSTATUS11_CODE  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS11_CODE = value;
  }


  /**  */
  public static void setSTATUS11_CODE  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).STATUS11_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALA_PATRO  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_PATRO;
  }


  /**  */
  public static Double getSALA_PATRODouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_PATRO );
  }


  /**  */
  public static void setSALA_PATRO  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_PATRO = value;
  }


  /**  */
  public static void setSALA_PATRO  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_PATRO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getING_BRUTO  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ING_BRUTO;
  }


  /**  */
  public static Double getING_BRUTODouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ING_BRUTO );
  }


  /**  */
  public static void setING_BRUTO  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ING_BRUTO = value;
  }


  /**  */
  public static void setING_BRUTO  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ING_BRUTO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALA  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA;
  }


  /**  */
  public static Double getSALADouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA );
  }


  /**  */
  public static void setSALA  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA = value;
  }


  /**  */
  public static void setSALA  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNPRO  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO;
  }


  /**  */
  public static Double getNPRODouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO );
  }


  /**  */
  public static void setNPRO  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO = value;
  }


  /**  */
  public static void setNPRO  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getADIE  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ADIE;
  }


  /**  */
  public static Double getADIEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ADIE );
  }


  /**  */
  public static void setADIE  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ADIE = value;
  }


  /**  */
  public static void setADIE  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ADIE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOTROS  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OTROS;
  }


  /**  */
  public static Double getOTROSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OTROS );
  }


  /**  */
  public static void setOTROS  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OTROS = value;
  }


  /**  */
  public static void setOTROS  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).OTROS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS_INHE  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS_INHE;
  }


  /**  */
  public static Double getGASTOS_INHEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS_INHE );
  }


  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS_INHE = value;
  }


  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS_INHE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRESTA_20  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).RESTA_20;
  }


  /**  */
  public static Double getRESTA_20Double ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).RESTA_20 );
  }


  /**  */
  public static void setRESTA_20  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).RESTA_20 = value;
  }


  /**  */
  public static void setRESTA_20  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).RESTA_20 = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNECESIDAD  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NECESIDAD;
  }


  /**  */
  public static Double getNECESIDADDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NECESIDAD );
  }


  /**  */
  public static void setNECESIDAD  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NECESIDAD = value;
  }


  /**  */
  public static void setNECESIDAD  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NECESIDAD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS;
  }


  /**  */
  public static Double getGASTOSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS );
  }


  /**  */
  public static void setGASTOS  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS = value;
  }


  /**  */
  public static void setGASTOS  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).GASTOS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_FAMILIA  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NUM_FAMILIA;
  }


  /**  */
  public static Double getNUM_FAMILIADouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NUM_FAMILIA );
  }


  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NUM_FAMILIA = value;
  }


  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NUM_FAMILIA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNPRO_BRUTO  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO_BRUTO;
  }


  /**  */
  public static Double getNPRO_BRUTODouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO_BRUTO );
  }


  /**  */
  public static void setNPRO_BRUTO  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO_BRUTO = value;
  }


  /**  */
  public static void setNPRO_BRUTO  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).NPRO_BRUTO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getPROD  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).PROD;
  }


  /**  */
  public static Double getPRODDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).PROD );
  }


  /**  */
  public static void setPROD  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).PROD = value;
  }


  /**  */
  public static void setPROD  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).PROD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getALBE  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ALBE;
  }


  /**  */
  public static Double getALBEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ALBE );
  }


  /**  */
  public static void setALBE  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ALBE = value;
  }


  /**  */
  public static void setALBE  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).ALBE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getAYUD  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUD;
  }


  /**  */
  public static Double getAYUDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUD );
  }


  /**  */
  public static void setAYUD  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUD = value;
  }


  /**  */
  public static void setAYUD  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getAYUDA_PERMITIDA  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUDA_PERMITIDA;
  }


  /**  */
  public static Double getAYUDA_PERMITIDADouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUDA_PERMITIDA );
  }


  /**  */
  public static void setAYUDA_PERMITIDA  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUDA_PERMITIDA = value;
  }


  /**  */
  public static void setAYUDA_PERMITIDA  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).AYUDA_PERMITIDA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALA_COUNT  ( RallyApplication __app )
  {
    return ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_COUNT;
  }


  /**  */
  public static Double getSALA_COUNTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_COUNT );
  }


  /**  */
  public static void setSALA_COUNT  ( RallyApplication __app, double value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_COUNT = value;
  }


  /**  */
  public static void setSALA_COUNT  ( RallyApplication __app, Object value )
  {
    ( ( PATROCINADOR_ADL ) __app.getADL ( PATROCINADOR_ADL.class ) ).SALA_COUNT = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static PATROCINADOR_ADL get ( RallyApplication __app )
  {
    PATROCINADOR_ADL adl = new PATROCINADOR_ADL ( );
    __app.register ( adl, "PATROCINADOR_ADL" );
    __app.setADL ( PATROCINADOR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    PATROCINADOR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    PATROCINADOR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }


  /**
   * Populating the parameter set object with return values
   */
  protected void returnParms ( ParameterSet ps, double OPEN_ID, double OPEN2_ID, double OPEN3_ID, double OPEN4_ID, double OPEN5_ID, double OPEN6_ID, double OPEN11_ID, Date FCH_EMISION, double INGRESOS )
  {
    ps.reset ( );
    ps.set ( OPEN_ID );
    ps.set ( OPEN2_ID );
    ps.set ( OPEN3_ID );
    ps.set ( OPEN4_ID );
    ps.set ( OPEN5_ID );
    ps.set ( OPEN6_ID );
    ps.set ( OPEN11_ID );
    ps.set ( FCH_EMISION );
    ps.set ( INGRESOS );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "PATROCINADOR_ADL" );
    if ( rObj != null && rObj instanceof PATROCINADOR_ADL )
    {
      this.app.setADL ( PATROCINADOR_ADL.class, ( PATROCINADOR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "PATROCINADOR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "PATROCINADOR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    ps.reset ( );
    OPEN_ID = ps.getDouble( );
    OPEN2_ID = ps.getDouble( );
    OPEN3_ID = ps.getDouble( );
    OPEN4_ID = ps.getDouble( );
    OPEN5_ID = ps.getDouble( );
    OPEN6_ID = ps.getDouble( );
    OPEN11_ID = ps.getDouble( );
    FCH_EMISION = ps.getDate( );
    INGRESOS = ps.getDouble( );

    SALA_PATRO = 0;
    OTROS = 0;
    SALA = 0;
    NPRO = 0;
    SALA_COUNT = 0;

    STATUS_CODE  = this.dm.reset ( OPEN5_ID );

    this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV", "EXIN" );

    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN5_ID );
    STATUS_CODE  = this.dm.retrieve ( OPEN5_ID );

    STATUS_CODE  = this.dm.firstRow ( OPEN5_ID );

    while ( Compare.equals ( STATUS_CODE, 0 )  )
    {
      if ( ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_PAN" ), "X" ) )  ) || ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_AE" ), "X" ) )  ) ) 
      {
        this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_REHABILITACION" ) );
      }
      else
      {
        if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "S" ) ) 
        {
          if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( ! Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" ) ) ) 
          {
            this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 4.3 );
          }
          else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" ) ) 
          {
            this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 4.3 );
          }
        }
        else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "B" ) ) 
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 2.15 );
        }
        else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "Q" ) ) 
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 2.0 );
        }
        else
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 1.0 );
        }
      }
      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "SALA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRB" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "ADIE" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "PTRA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "NPRO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BILV" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAC" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAS" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRN" ) ) ) 
      {
        SALA_PATRO = MathService.plus ( SALA_PATRO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
        ING_BRUTO = MathService.plus ( ING_BRUTO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
        SALA_COUNT = MathService.plus ( SALA_COUNT, 1  );
        if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "SALA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "PTRA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRB" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BILV" ) ) ) 
        {
          SALA = MathService.plus ( SALA, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
        }
        else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "ADIE" ) ) 
        {
          ADIE = MathService.plus ( ADIE, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
        }
        else if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "NPRO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRN" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAS" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAC" ) )  )
        {
          NPRO = MathService.plus ( NPRO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
        }
      }
      else
      {
        OTROS = MathService.plus ( OTROS, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
      }

      STATUS_CODE  = this.dm.nextRow ( OPEN5_ID );

    }
    NPRO_BRUTO = NPRO;
    GASTOS_INHE = 0;
    if ( Compare.gt ( NPRO, 0 ) ) 
    {
      STATUS_CODE  = this.dm.reset ( OPEN6_ID );

      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV", "EXIN" );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE", "GINP" );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN6_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN6_ID );

      while ( Compare.equals ( STATUS_CODE, 0 )  )
      {
        GASTOS_INHE = MathService.plus ( GASTOS_INHE, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );

        STATUS_CODE  = this.dm.nextRow ( OPEN6_ID );

      }
      GASTOS_INHE = TruncService.trunc ( GASTOS_INHE ) ;
      NPRO_BRUTO = MathService.minus ( NPRO_BRUTO, GASTOS_INHE  );
    }
    INGRESOS = 0;
    INGRESOS = MathService.plus ( NPRO_BRUTO, SALA  );
    PROD = 0;
    RESTA_20 = SALA_COUNT * 90;
    if ( Compare.le ( RESTA_20, INGRESOS ) ) 
    {
      PROD = RESTA_20;
      INGRESOS = MathService.minus ( INGRESOS, RESTA_20  );
    }
    else
    {
      INGRESOS = 0;
    }
    INGRESOS = MathService.plus ( MathService.plus ( INGRESOS, OTROS  ), ADIE  );
    NECESIDAD = 0;

    STATUS_CODE  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );

    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

    STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

    while ( Compare.equals ( STATUS_CODE, 0 )  )
    {
      if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) )  ) 
      {
        NUM_FAMILIA = MathService.plus ( NUM_FAMILIA, 1  );
      }

      STATUS_CODE  = this.dm.nextRow ( OPEN_ID );

    }

    STATUS11_CODE  = this.dm.reset ( OPEN11_ID );

    this.dm.setField ( this.dm.get ( "DETERMINA_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );

    STATUS11_CODE  = this.dm.limitQueryFromBuffer ( OPEN11_ID );
    STATUS11_CODE  = this.dm.retrieve ( OPEN11_ID );

    STATUS11_CODE  = this.dm.firstRow ( OPEN11_ID );

    while ( ( Compare.equals ( STATUS11_CODE, 0 ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "DETERMINA_RO_DSD" ), "FECHA_EFECTIVIDAD" ), FCH_EMISION ) )   )
    {
      NECESIDAD = MathService.plus ( ( this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA" ) * 2 ), ( ( MathService.minus ( NUM_FAMILIA, 1  ) ) * this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA_FAM" ) * 2 )  );

      STATUS11_CODE  = this.dm.nextRow ( OPEN11_ID );

    }
    if ( Compare.gt ( INGRESOS, NECESIDAD ) ) 
    {
      INGRESOS = MathService.minus ( INGRESOS, NECESIDAD  );
    }
    else
    {
      INGRESOS = 0;
    }
    GASTOS = 0;

    STATUS_CODE  = this.dm.reset ( OPEN6_ID );

    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_PARENTESCO_RELACION_SERV", "EXIN" );

    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
    STATUS_CODE  = this.dm.retrieve ( OPEN6_ID );

    STATUS_CODE  = this.dm.firstRow ( OPEN6_ID );

    while ( Compare.equals ( STATUS_CODE, 0 )  )
    {
      if ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "GINP" ) ) 
      {
        if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "ALBE" ) ) 
        {
          if ( Compare.gt ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ), 200 ) ) 
          {
            ALBE = 200;
            GASTOS = MathService.plus ( GASTOS, 200  );
          }
          else
          {
            ALBE = this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" );
            GASTOS = MathService.plus ( GASTOS, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
          }
        }
        else if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE" ), "AYUD" ) ) && ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ), 0 ) )   )
        {
          STATUS11_CODE  = this.dm.reset ( OPEN11_ID );

          this.dm.setField ( this.dm.get ( "DETERMINA_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );

          STATUS11_CODE  = this.dm.limitQueryFromBuffer ( OPEN11_ID );
          STATUS11_CODE  = this.dm.retrieve ( OPEN11_ID );

          STATUS11_CODE  = this.dm.firstRow ( OPEN11_ID );

          while ( ( Compare.equals ( STATUS11_CODE, 0 ) ) && ( Compare.le ( this.dm.getFieldDate ( this.dm.get ( "DETERMINA_RO_DSD" ), "FECHA_EFECTIVIDAD" ), FCH_EMISION ) )   )
          {
            AYUDA_PERMITIDA = MathService.plus ( ( this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA" ) * 2 ), ( ( MathService.minus ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "NUM_PERSONAS_AYUDA" ), 1  ) ) * this.dm.getFieldDouble ( this.dm.get ( "DETERMINA_RO_DSD" ), "NECESIDAD_AJUSTADA_FAM" ) * 2 )  );

            STATUS11_CODE  = this.dm.nextRow ( OPEN11_ID );

          }
          if ( Compare.gt ( this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" ), AYUDA_PERMITIDA ) ) 
          {
            AYUD = AYUDA_PERMITIDA;
            GASTOS = MathService.plus ( GASTOS, AYUDA_PERMITIDA  );
          }
          else
          {
            AYUD = this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" );
            GASTOS = MathService.plus ( GASTOS, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
          }
        }
        else
        {
          GASTOS = MathService.plus ( GASTOS, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
        }
      }

      STATUS_CODE  = this.dm.nextRow ( OPEN6_ID );

    }
    if ( Compare.gt ( INGRESOS, GASTOS ) ) 
    {
      INGRESOS = MathService.minus ( INGRESOS, GASTOS  );
    }
    else
    {
      INGRESOS = 0;
    }
    PREP_PADRASTRO_PKT.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  { 
    this.returnParms ( ps, OPEN_ID, OPEN2_ID, OPEN3_ID, OPEN4_ID, OPEN5_ID, OPEN6_ID, OPEN11_ID, FCH_EMISION, INGRESOS );
    this.doReturn ( );
    return; 

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE PATROCINADOR_ADL
                        (VAR OPEN_ID  : NUMBER;
                         VAR OPEN2_ID : NUMBER;
                         VAR OPEN3_ID : NUMBER;
                         VAR OPEN4_ID : NUMBER;
                         VAR OPEN5_ID : NUMBER;
                         VAR OPEN6_ID : NUMBER;
                         VAR OPEN11_ID : NUMBER;
                         VAR FCH_EMISION :DATE;
                         VAR INGRESOS : NUMBER EXPORT;);

VAR

STATUS_CODE : NUMBER;
STATUS2_CODE : NUMBER;
STATUS11_CODE : NUMBER;

SALA_PATRO : NUMBER EXPORT;
ING_BRUTO : NUMBER;
SALA : NUMBER EXPORT;
NPRO : NUMBER EXPORT;
ADIE : NUMBER EXPORT;
OTROS : NUMBER EXPORT;
GASTOS_INHE : NUMBER EXPORT;
RESTA_20 : NUMBER;
NECESIDAD : NUMBER EXPORT;
GASTOS : NUMBER EXPORT;
NUM_FAMILIA : NUMBER;
NPRO_BRUTO : NUMBER;
PROD : NUMBER EXPORT;
ALBE : NUMBER EXPORT;
AYUD : NUMBER EXPORT;
AYUDA_PERMITIDA : NUMBER;
SALA_COUNT : NUMBER;

BEGIN
SET_TRACE();

{ INGRESOS BRUTO DE PATROCINADOR(ES) }
        SALA_PATRO := 0;
        OTROS := 0;
        SALA := 0;
        NPRO := 0;
        SALA_COUNT := 0;
        DB_RESET(OPEN5_ID,STATUS_CODE);
        INGRESOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        INGRESOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        INGRESOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
        INGRESOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV := 'EXIN';
        DB_QUERY(OPEN5_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN5_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
{
   Rutina para implementar computo de ingreso a base
   de norma de 4.0(AE) y 4.3(PAN).
   Se provee tambien para entrar ingreso AE segun forma AE-98
        9-MAYO-1994   Ramon Fardonk/Jorge Rodriguez
}
   IF ((SUBSTR(COD_SERV_GBL,0,3)='PAN') AND (INGRESOS_NUCLEO_RO_DSD.FLG_PAN = 'X
')) OR
        ((SUBSTR(COD_SERV_GBL,0,2)='AE') AND (INGRESOS_NUCLEO_RO_DSD.FLG_AE = 'X
'))
        THEN BEGIN
               INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                 INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_REHABILITACION;
             END;
        ELSE BEGIN
               IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='S')
                  THEN BEGIN
                       IF (SUBSTR(COD_SERV_GBL,0,3)='PAN') OR
                          (SUBSTR(COD_SERV_GBL,0,4)<>'AE-C')
                          THEN BEGIN
                                INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                                INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 4.
3;
                               END;
                          ELSE IF (SUBSTR(COD_SERV_GBL,0,4)='AE-C')
                               THEN BEGIN
                                    INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:
=
                                    INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO 
* 4.3;
                                    END;
                       END;
               ELSE IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='B')
                  THEN BEGIN
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 2.15;
                       END;
               ELSE IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='Q')
                  THEN BEGIN
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 2.0;
                       END;
               ELSE BEGIN
{                         Entro 'M' o estaba en blanco }
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 1.0;
                    END;
        END;
                  IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'SALA') OR
                     (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRB') OR
                     (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'ADIE') OR
                     (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'PTRA') OR
                     (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'NPRO') OR
                     (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BILV') OR
                     (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BIAC') OR
                     (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BIAS') OR
                     (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRN') 
                  THEN BEGIN

                         SALA_PATRO := SALA_PATRO + 
                                        INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGR
ESO;
                         ING_BRUTO := ING_BRUTO + 
                                        INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGR
ESO;
                         SALA_COUNT := SALA_COUNT + 1;

                IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'SALA') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'PTRA') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRB') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BILV')
                THEN
                    SALA := SALA + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO;
                ELSE
                   IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'ADIE')
                   THEN
                        ADIE := ADIE + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRE
SO;
                   ELSE
                      IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'NPRO') OR
                         (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRN') OR
                         (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BIAS') OR
                         (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'BIAC') 
                      THEN
                          NPRO := NPRO + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_ING
RESO;
                  END;
                  ELSE
                      OTROS := OTROS + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRE
SO;

        DB_GET_NEXT(OPEN5_ID,STATUS_CODE);
        END;
{         SALA_PATRO := TRUNC(SALA_PATRO);}
{         OTROS := TRUNC(OTROS);}
{         ING_BRUTO := TRUNC(ING_BRUTO);}
NPRO_BRUTO := NPRO;
{ RESTO LOS GASTOS INHERENTES SI NEGOCIO PROPIO }
        GASTOS_INHE := 0;
        IF NPRO > 0
        THEN
        BEGIN
        DB_RESET(OPEN6_ID,STATUS_CODE);
        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM:=SS_JEFE_GBL;
        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV:=SS_SERV_GBL;
        GASTOS_NUCLEO_RO_DSD.COD_SERVICIO:=COD_SERV_GBL;
        GASTOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV:='EXIN';
        GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE:='GINP';
        DB_QUERY(OPEN6_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN6_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
                GASTOS_INHE := GASTOS_INHE + 
                        GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE;
             DB_GET_NEXT(OPEN6_ID,STATUS_CODE);
        END;
        GASTOS_INHE := TRUNC(GASTOS_INHE);

        NPRO_BRUTO := NPRO_BRUTO - GASTOS_INHE;
        END;

{ A LA CANTIDAD DE NEGOCIO PROPIO SE SUMA SALARIO }
        INGRESOS := 0;
        INGRESOS := NPRO_BRUTO + SALA;

{ SE MULTIPLICA POR 20%  - RUTINA RETIRADA 1-JUL-1999 
        RESTA_20 := 0;
        RESTA_20 := TRUNC(INGRESOS * 0.2);
        IF INGRESOS > 0
        THEN BEGIN
                IF RESTA_20 < 175
                THEN BEGIN
                        PROD := RESTA_20;
                        INGRESOS := INGRESOS - RESTA_20;
                     END;
                ELSE BEGIN
                        PROD := 175;
                        INGRESOS := INGRESOS - 175;
                     END;
             END;
        ELSE
            INGRESOS := 0;
}
{ SE INCLUYO RUTINA GASTOS PROD POR LA ANTERIOR }
        PROD := 0;
        RESTA_20 := SALA_COUNT * 90;
        IF RESTA_20 <= INGRESOS
        THEN BEGIN
                PROD := RESTA_20;
                INGRESOS := INGRESOS - RESTA_20;
             END;
        ELSE
             INGRESOS := 0;
        
{ SE SUMAN INGRESOS POR OTROS CONCEPTOS }

        INGRESOS := INGRESOS + OTROS + ADIE;

{ DEDUCIR NECESIDADES BASICAS }

        NECESIDAD := 0;
        DB_RESET(OPEN_ID,STATUS_CODE);
        NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
        DB_QUERY(OPEN_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
          IF (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'BNPR') AND
             (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'BNSC') AND
             (NUCLEO_SERVICIO_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAL')
          THEN 
                NUM_FAMILIA := NUM_FAMILIA + 1;
        DB_GET_NEXT(OPEN_ID,STATUS_CODE);
        END;

        DB_RESET(OPEN11_ID,STATUS11_CODE);
        DETERMINA_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
        DB_QUERY(OPEN11_ID,STATUS11_CODE);
        DB_GET_FIRST(OPEN11_ID,STATUS11_CODE);
        WHILE (STATUS11_CODE = 0) AND
         (DETERMINA_RO_DSD.FECHA_EFECTIVIDAD <= FCH_EMISION) DO 
        BEGIN
                NECESIDAD := (DETERMINA_RO_DSD.NECESIDAD_AJUSTADA*2) +
                ((NUM_FAMILIA - 1)*DETERMINA_RO_DSD.NECESIDAD_AJUSTADA_FAM*2);
                DB_GET_NEXT(OPEN11_ID,STATUS11_CODE);
        END;

        IF INGRESOS > NECESIDAD
        THEN
            INGRESOS := INGRESOS - NECESIDAD;
        ELSE
            INGRESOS := 0;
        
{ DEDUCIR GASTOS }
        GASTOS := 0;
        DB_RESET(OPEN6_ID,STATUS_CODE);
        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        GASTOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
        GASTOS_NUCLEO_RO_DSD.COD_PARENTESCO_RELACION_SERV := 'EXIN';
        DB_QUERY(OPEN6_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN6_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
        IF GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE <> 'GINP'
        THEN
        BEGIN
            IF GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'ALBE'
            THEN
                IF GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE > 200
                THEN BEGIN
                     ALBE := 200;
                     GASTOS := GASTOS + 200;
                     END;
                ELSE BEGIN
                     ALBE := GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE;
                     GASTOS := GASTOS + GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCC
IONE;
                     END;
            ELSE
            IF (GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE = 'AYUD') AND
                (GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE <> 0)
            THEN BEGIN
                DB_RESET(OPEN11_ID,STATUS11_CODE);
                DETERMINA_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
                DB_QUERY(OPEN11_ID,STATUS11_CODE);
                DB_GET_FIRST(OPEN11_ID,STATUS11_CODE);
                WHILE (STATUS11_CODE = 0) AND
                 (DETERMINA_RO_DSD.FECHA_EFECTIVIDAD <= FCH_EMISION) DO 
                BEGIN
                        AYUDA_PERMITIDA := (DETERMINA_RO_DSD.NECESIDAD_AJUSTADA*
2) +
                        ((GASTOS_NUCLEO_RO_DSD.NUM_PERSONAS_AYUDA - 1)*DETERMINA
_RO_DSD.NECESIDAD_AJUSTADA_FAM*2);
                        DB_GET_NEXT(OPEN11_ID,STATUS11_CODE);
                END;
                        IF (GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE > AYUDA
_PERMITIDA)
                        THEN BEGIN
                                ayud := AYUDA_PERMITIDA;
                                GASTOS := GASTOS + AYUDA_PERMITIDA;
                             END;
                        ELSE BEGIN
                                ayud := GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCC
IONE;
                                GASTOS := GASTOS + GASTOS_NUCLEO_RO_DSD.VLR_CANT
IDAD_DEDUCCIONE;
                             END;
                     END;
            ELSE
            GASTOS := GASTOS + GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE;
        END;
            DB_GET_NEXT(OPEN6_ID,STATUS_CODE);
        END;

        IF INGRESOS > GASTOS
        THEN
            INGRESOS := INGRESOS - GASTOS;
        ELSE
            INGRESOS := 0;

call prep_padrastro_pkt;

RETURN;

SET_NOTRACE();

END;
    



--------------------------------------------------------------------- */
