package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CALCULAR_NUM_MESES_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CALCULAR_NUM_MESES_ADL get ( RallyApplication __app )
  {
    CALCULAR_NUM_MESES_ADL adl = new CALCULAR_NUM_MESES_ADL ( );
    __app.register ( adl, "CALCULAR_NUM_MESES_ADL" );
    __app.setADL ( CALCULAR_NUM_MESES_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CALCULAR_NUM_MESES_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CALCULAR_NUM_MESES_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CALCULAR_NUM_MESES_ADL" );
    if ( rObj != null && rObj instanceof CALCULAR_NUM_MESES_ADL )
    {
      this.app.setADL ( CALCULAR_NUM_MESES_ADL.class, ( CALCULAR_NUM_MESES_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CALCULAR_NUM_MESES_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CALCULAR_NUM_MESES_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( ( Compare.equals ( RallyStringService.subString ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "LI" ) ) && ( Compare.gt ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "NUM_MESES_DEDUCIR" ), 12 ) )  && ( Compare.equals ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getStringItem ( "METODO_PAGO" ), "PLPA" ) )  ) 
    {
      this.app.setError ( 0, 1011 );
      this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).setItem ( "CANTIDAD_DEDUCIR", TruncService.trunc ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "CANTIDAD_RECLA_RETRO" )/ 12 )   );
      this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).setItem ( "NUM_MESES_DEDUCIR", 12  );
      this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).setItem ( "VLR_REMANENTE", MathService.minus ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "VLR_BALANCE" ), ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "CANTIDAD_DEDUCIR" )* this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "NUM_MESES_DEDUCIR" ))  )  );
      if ( Compare.gt ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "VLR_REMANENTE" ), 0 ) ) 
      {
        this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).setItem ( "CANTIDAD_DEDUCIR", TruncService.trunc ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "CANTIDAD_RECLA_RETRO" )/ 11 )   );
        this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).setItem ( "NUM_MESES_DEDUCIR", 12  );
        this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).setItem ( "VLR_REMANENTE", MathService.minus ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "VLR_BALANCE" ), ( this.app.form ( "COMPROMISO_PAGO_RECLA_FR" ).getDoubleItem ( "CANTIDAD_DEDUCIR" )* 11 )  )  );
      }
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE CALCULAR_NUM_MESES_ADL;

BEGIN

IF (SUBSTR(COMPROMISO_PAGO_RECLA_FR.COD_SERVICIO,0,2) = 'AT') 
        AND (COMPROMISO_PAGO_RECLA_FR.NUM_MESES_DEDUCIR > 12)
        AND (COMPROMISO_PAGO_RECLA_FR.METODO_PAGO = 'PLPA')
THEN
    BEGIN
        ERROR(1011);
        COMPROMISO_PAGO_RECLA_FR.CANTIDAD_DEDUCIR := TRUNC(COMPROMISO_PAGO_RECLA
_FR.CANTIDAD_RECLA_RETRO / 12);
        COMPROMISO_PAGO_RECLA_FR.NUM_MESES_DEDUCIR := 12;
        COMPROMISO_PAGO_RECLA_FR.VLR_REMANENTE := COMPROMISO_PAGO_RECLA_FR.VLR_B
ALANCE
        - (COMPROMISO_PAGO_RECLA_FR.CANTIDAD_DEDUCIR * COMPROMISO_PAGO_RECLA_FR.
NUM_MESES_DEDUCIR);

        IF COMPROMISO_PAGO_RECLA_FR.VLR_REMANENTE > 0
        THEN
           BEGIN
                COMPROMISO_PAGO_RECLA_FR.CANTIDAD_DEDUCIR := TRUNC(COMPROMISO_PA
GO_RECLA_FR.CANTIDAD_RECLA_RETRO / 11);
                COMPROMISO_PAGO_RECLA_FR.NUM_MESES_DEDUCIR := 12;
                COMPROMISO_PAGO_RECLA_FR.VLR_REMANENTE := COMPROMISO_PAGO_RECLA_
FR.VLR_BALANCE
                - (COMPROMISO_PAGO_RECLA_FR.CANTIDAD_DEDUCIR * 11);
           END;
        {ENDIF}
    END;
{ENDIF}

END;
    



--------------------------------------------------------------------- */
