package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMMAND = 0;

  public double OPEN_ID = 0;

  public double CODE_STATUS = 0;



  public String TEMP = null;

  public String NULLBOY = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).COMMAND = value.getDouble ( );
  }  

  
  /**  */
  public static void setTEMP  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).TEMP = value.getString ( );
  }  

  
  /**  */
  public static void setNULLBOY  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).NULLBOY = value.getString ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCODE_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).CODE_STATUS = value.getDouble ( );
  }  
    


  /**  */
  public static String getTEMP  ( RallyApplication __app )
  {
    return ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).TEMP;
  }


  /**  */
  public static void setTEMP  ( RallyApplication __app, String value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).TEMP = value;
  }


  /**  */
  public static void setTEMP  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).TEMP = ( String ) value;
  }



  /**  */
  public static String getNULLBOY  ( RallyApplication __app )
  {
    return ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).NULLBOY;
  }


  /**  */
  public static void setNULLBOY  ( RallyApplication __app, String value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).NULLBOY = value;
  }


  /**  */
  public static void setNULLBOY  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).NULLBOY = ( String ) value;
  }




  /**  */
  public static double getCOMMAND  ( RallyApplication __app )
  {
    return ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).COMMAND;
  }


  /**  */
  public static Double getCOMMANDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).COMMAND );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, double value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).COMMAND = value;
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCODE_STATUS  ( RallyApplication __app )
  {
    return ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).CODE_STATUS;
  }


  /**  */
  public static Double getCODE_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).CODE_STATUS );
  }


  /**  */
  public static void setCODE_STATUS  ( RallyApplication __app, double value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).CODE_STATUS = value;
  }


  /**  */
  public static void setCODE_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) __app.getADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class ) ).CODE_STATUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL get ( RallyApplication __app )
  {
    CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL adl = new CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ( );
    __app.register ( adl, "CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL" );
    __app.setADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL" );
    if ( rObj != null && rObj instanceof CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL )
    {
      this.app.setADL ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL.class, ( CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }

}



/* ---------------------------------------------------------------------


     
PROCEDURE CHECK_FOR_FIRST_NUC_MEMBER_INFO_ADL;

VAR 
   COMMAND : NUMBER;
   TEMP : CHAR(1);
   NULLBOY : CHAR;
   open_id : number;
   code_status : number;

BEGIN
{ET_TRACE();
MAKE_NULL(NULLBOY);
COMMAND := GET_CMD();
DEBUG_LOG(RUTINA_GBL);
DEBUG_LOG(TO_CHAR(SOLIC_SERV_COMP_FAMILIAR_FR.RECORDS_LEIDOS_AGREGATE));

IF (COMMAND = EXITACTION) THEN
   BEGIN
        db_open(CLIENTES_READ_LOC_DSD,open_id,code_status);
        db_reset(open_id,code_status);
                clientes_read_loc_dsd.seguro_social_jefe_familia := SSN_JEFE_FAM
_GBL;
                CLIENTES_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
        db_query(open_id,code_status);
        db_get_first(open_id,code_status);
        while code_status = 0 do
            begin
            if ((clientes_read_loc_dsd.COD_PARENTESCO_FAM = '') OR
                   (clientes_read_loc_dsd.COD_PARENTESCO_FAM = NULLBOY))
            THEN BEGIN
                   ERROR(5539);
                   SET_FAILURE();
                   CALL_CMD('IGNORE');
                END;
            db_get_next(open_id,code_status);
            end;

iF (RUTINA_GBL = 'AC') and (rutina_gbl = 'MC') THEN
  IF   (SOLIC_SERV_COMP_FAMILIAR_FR.RECORDS_LEIDOS_AGREGATE >= 1) AND
       ((SOLIC_SERV_COMP_FAMILIAR_FR.COD_PARENTESCO_FAM = '') OR
         (SOLIC_SERV_COMP_FAMILIAR_FR.COD_PARENTESCO_FAM = NULLBOY))
         THEN BEGIN
            ERROR(5539);
            CALL_CMD('IGNORE');
            SET_FAILURE();
            END;

   END;
SET_NOTRACE();
}
END;
    



--------------------------------------------------------------------- */
