package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CENTRAL_REMOVER_CLIENTE_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double LOCAL_OPEN_ID = 0;

  public double LOCAL_STAT_ID = 0;

  public double CENTRAL_OPEN_ID = 0;

  public double CENTRAL_STAT_ID = 0;



  public String STATUS_VAR = null;

  public DataStore CLIENTES_RO_DSD = null;

  public DataStore CENTRAL_CLIENTES2_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setSTATUS_VAR  ( RallyApplication __app, Parameter value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).STATUS_VAR = value.getString ( );
  }  

  
  /**  */
  public static void setLOCAL_OPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setLOCAL_STAT_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_STAT_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCENTRAL_OPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCENTRAL_STAT_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_STAT_ID = value.getDouble ( );
  }  
    


  /**  */
  public static String getSTATUS_VAR  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).STATUS_VAR;
  }


  /**  */
  public static void setSTATUS_VAR  ( RallyApplication __app, String value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).STATUS_VAR = value;
  }


  /**  */
  public static void setSTATUS_VAR  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).STATUS_VAR = ( String ) value;
  }



  /**  */
  public static DataStore getCLIENTES_RO_DSD  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CLIENTES_RO_DSD;
  }


  /**  */
  public static void setCLIENTES_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CLIENTES_RO_DSD = value;
  }


  /**  */
  public static void setCLIENTES_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CLIENTES_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getCENTRAL_CLIENTES2_DSD  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_CLIENTES2_DSD;
  }


  /**  */
  public static void setCENTRAL_CLIENTES2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_CLIENTES2_DSD = value;
  }


  /**  */
  public static void setCENTRAL_CLIENTES2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_CLIENTES2_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getLOCAL_OPEN_ID  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_OPEN_ID;
  }


  /**  */
  public static Double getLOCAL_OPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_OPEN_ID );
  }


  /**  */
  public static void setLOCAL_OPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_OPEN_ID = value;
  }


  /**  */
  public static void setLOCAL_OPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getLOCAL_STAT_ID  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_STAT_ID;
  }


  /**  */
  public static Double getLOCAL_STAT_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_STAT_ID );
  }


  /**  */
  public static void setLOCAL_STAT_ID  ( RallyApplication __app, double value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_STAT_ID = value;
  }


  /**  */
  public static void setLOCAL_STAT_ID  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).LOCAL_STAT_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCENTRAL_OPEN_ID  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_OPEN_ID;
  }


  /**  */
  public static Double getCENTRAL_OPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_OPEN_ID );
  }


  /**  */
  public static void setCENTRAL_OPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_OPEN_ID = value;
  }


  /**  */
  public static void setCENTRAL_OPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCENTRAL_STAT_ID  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_STAT_ID;
  }


  /**  */
  public static Double getCENTRAL_STAT_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_STAT_ID );
  }


  /**  */
  public static void setCENTRAL_STAT_ID  ( RallyApplication __app, double value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_STAT_ID = value;
  }


  /**  */
  public static void setCENTRAL_STAT_ID  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_ADL.class ) ).CENTRAL_STAT_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CENTRAL_REMOVER_CLIENTE_ADL get ( RallyApplication __app )
  {
    CENTRAL_REMOVER_CLIENTE_ADL adl = new CENTRAL_REMOVER_CLIENTE_ADL ( );
    __app.register ( adl, "CENTRAL_REMOVER_CLIENTE_ADL" );
    __app.setADL ( CENTRAL_REMOVER_CLIENTE_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CENTRAL_REMOVER_CLIENTE_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CENTRAL_REMOVER_CLIENTE_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }


  /**
   * Populating the parameter set object with return values
   */
  protected void returnParms ( ParameterSet ps, String STATUS_VAR )
  {
    ps.reset ( );
    ps.set ( STATUS_VAR );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CENTRAL_REMOVER_CLIENTE_ADL" );
    if ( rObj != null && rObj instanceof CENTRAL_REMOVER_CLIENTE_ADL )
    {
      this.app.setADL ( CENTRAL_REMOVER_CLIENTE_ADL.class, ( CENTRAL_REMOVER_CLIENTE_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CENTRAL_REMOVER_CLIENTE_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CENTRAL_REMOVER_CLIENTE_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    ps.reset ( );
    STATUS_VAR = ps.getString( );

    CLIENTES_RO_DSD = this.dm.create ( "CLIENTES_RO_DSD" );
    LOCAL_OPEN_ID = CLIENTES_RO_DSD.getId ( );
    LOCAL_STAT_ID = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( LOCAL_STAT_ID, 0 ) ) 
    {
      this.returnParms ( ps, STATUS_VAR ); 
      this.doReturn ( );
      return;
    }
    CENTRAL_CLIENTES2_DSD = this.dm.create ( "CENTRAL_CLIENTES2_DSD" );
    CENTRAL_OPEN_ID = CENTRAL_CLIENTES2_DSD.getId ( );
    CENTRAL_STAT_ID = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( CENTRAL_STAT_ID, 0 ) ) 
    {
      LOCAL_STAT_ID  = this.dm.dbClose ( LOCAL_OPEN_ID );
      
      this.returnParms ( ps, STATUS_VAR ); 
      this.doReturn ( );
      return; 
    }

    LOCAL_STAT_ID  = this.dm.reset ( LOCAL_OPEN_ID );

    if ( ! Compare.equals ( LOCAL_STAT_ID, 0 ) ) 
    {
      LOCAL_STAT_ID  = this.dm.dbClose ( LOCAL_OPEN_ID );

      CENTRAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );

      
      this.returnParms ( ps, STATUS_VAR );
      this.doReturn ( );
      return;
    }
    this.dm.setField ( this.dm.get ( "CLIENTES_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_CLIENTE" ));
    this.dm.setField ( this.dm.get ( "CLIENTES_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    LOCAL_STAT_ID  = this.dm.limitQueryFromBuffer ( LOCAL_OPEN_ID );
    LOCAL_STAT_ID  = this.dm.retrieve ( LOCAL_OPEN_ID );

    if ( ! Compare.equals ( LOCAL_STAT_ID, 0 ) ) 
    {
      LOCAL_STAT_ID  = this.dm.dbClose ( LOCAL_OPEN_ID );

      CENTRAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );
      
      this.returnParms ( ps, STATUS_VAR ); 
      this.doReturn ( );
      return;
    }

    LOCAL_STAT_ID  = this.dm.firstRow ( LOCAL_OPEN_ID );

    if ( Compare.equals ( LOCAL_STAT_ID, 0 ) ) 
    {
      LOCAL_STAT_ID  = this.dm.dbClose ( LOCAL_OPEN_ID );

      CENTRAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );

      STATUS_VAR = "LOCAL";
      
      this.returnParms ( ps, STATUS_VAR ); 
      this.doReturn ( );
      return; 
    }
    LOCAL_STAT_ID  = this.dm.dbClose ( LOCAL_OPEN_ID );

    CENTRAL_STAT_ID  = this.dm.reset ( CENTRAL_OPEN_ID );

    if ( ! Compare.equals ( CENTRAL_STAT_ID, 0 ) ) 
    {
      CENTRAL_STAT_ID  = this.dm.rollBack ( );
      CENTRAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );
      
      this.returnParms ( ps, STATUS_VAR );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "CENTRAL_CLIENTES2_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_CLIENTE" ));

    CENTRAL_STAT_ID  = this.dm.limitQueryFromBuffer ( CENTRAL_OPEN_ID );
    CENTRAL_STAT_ID  = this.dm.retrieve ( CENTRAL_OPEN_ID );

    if ( ! Compare.equals ( CENTRAL_STAT_ID, 0 ) ) 
    {
      CENTRAL_STAT_ID  = this.dm.rollBack ( );
      LOCAL_STAT_ID  = this.dm.dbClose ( LOCAL_OPEN_ID );

      CENTRAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );

      this.returnParms ( ps, STATUS_VAR ); 
      this.doReturn ( );
      return; 
    }

    CENTRAL_STAT_ID  = this.dm.firstRow ( CENTRAL_OPEN_ID );

    if ( ! Compare.equals ( CENTRAL_STAT_ID, 0 ) ) 
    {
      CENTRAL_STAT_ID  = this.dm.rollBack ( );
      CENTRAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );
      
      this.returnParms ( ps, STATUS_VAR );
      this.doReturn ( );
      return; 
    }

    CENTRAL_STAT_ID  = this.dm.delete ( CENTRAL_OPEN_ID );
    this.dm.update ( CENTRAL_CLIENTES2_DSD );
   
    if ( ! Compare.equals ( CENTRAL_STAT_ID, 0 ) ) 
    {
      CENTRAL_STAT_ID  = this.dm.rollBack ( );
      CENTRAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );
      
      this.returnParms ( ps, STATUS_VAR );
      this.doReturn ( );
      return; 
    }

    CENTRAL_STAT_ID  = this.dm.dbCommit ( );
    if ( ! Compare.equals ( CENTRAL_STAT_ID, 0 ) ) 
    {
      CENTRAL_STAT_ID  = this.dm.rollBack ( );
      CENTRAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );
      
      this.returnParms ( ps, STATUS_VAR );
      this.doReturn ( );
      return; 
    }
    LOCAL_STAT_ID  = this.dm.dbClose ( CENTRAL_OPEN_ID );

    STATUS_VAR = "SUCCESS";
    this.returnParms ( ps, STATUS_VAR );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE CENTRAL_REMOVER_CLIENTE_ADL(VAR STATUS_VAR: CHAR(8););

VAR

LOCAL_OPEN_ID:  NUMBER(9,0);
LOCAL_STAT_ID:  NUMBER(9,0);

CENTRAL_OPEN_ID:        NUMBER(9,0);
CENTRAL_STAT_ID:        NUMBER(9,0);

BEGIN
SET_TRACE();

DB_OPEN(CLIENTES_RO_DSD,LOCAL_OPEN_ID,LOCAL_STAT_ID);
IF (LOCAL_STAT_ID<>0)  THEN RETURN;

DB_OPEN(CENTRAL_CLIENTES2_DSD,CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
IF (CENTRAL_STAT_ID<>0)
   THEN BEGIN
          DB_CLOSE(LOCAL_OPEN_ID,LOCAL_STAT_ID);
          RETURN;
        END;

DB_RESET(LOCAL_OPEN_ID,LOCAL_STAT_ID);
IF (LOCAL_STAT_ID<>0)  
    THEN BEGIN
           DB_CLOSE(LOCAL_OPEN_ID,LOCAL_STAT_ID);
           DB_CLOSE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
           RETURN;
         END;

CLIENTES_RO_DSD.SEGURO_SOCIAL_CLIENTE:=
     MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM.SEGURO_SOCIAL_CLIENTE;
CLIENTES_RO_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(LOCAL_OPEN_ID,LOCAL_STAT_ID);
IF (LOCAL_STAT_ID<>0)  
    THEN BEGIN
           DB_CLOSE(LOCAL_OPEN_ID,LOCAL_STAT_ID);
           DB_CLOSE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
           RETURN;
         END;

DB_GET_FIRST(LOCAL_OPEN_ID,LOCAL_STAT_ID);
IF (LOCAL_STAT_ID=0)  
    THEN BEGIN
           DB_CLOSE(LOCAL_OPEN_ID,LOCAL_STAT_ID);
           DB_CLOSE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
           STATUS_VAR:='LOCAL';
           RETURN;
         END;

DB_CLOSE(LOCAL_OPEN_ID,LOCAL_STAT_ID);


DB_RESET(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
IF (CENTRAL_STAT_ID<>0)  
    THEN BEGIN
           DB_ROLLBACK(CENTRAL_STAT_ID);
           DB_CLOSE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
           RETURN;
         END;

CENTRAL_CLIENTES2_DSD.SEGURO_SOCIAL_CLIENTE:=
     MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM.SEGURO_SOCIAL_CLIENTE;

DB_QUERY(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
IF (CENTRAL_STAT_ID<>0)  
    THEN BEGIN
           DB_ROLLBACK(CENTRAL_STAT_ID);
           DB_CLOSE(LOCAL_OPEN_ID,LOCAL_STAT_ID);
           DB_CLOSE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
           RETURN;
         END;

DB_GET_FIRST(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
IF (CENTRAL_STAT_ID<>0)  
    THEN BEGIN
           DB_ROLLBACK(CENTRAL_STAT_ID);
           DB_CLOSE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
           RETURN;
         END;

DB_DELETE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
IF (CENTRAL_STAT_ID<>0)  
    THEN BEGIN
           DB_ROLLBACK(CENTRAL_STAT_ID);
           DB_CLOSE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
           RETURN;
         END;

DB_COMMIT(CENTRAL_STAT_ID);
IF (CENTRAL_STAT_ID<>0)  
    THEN BEGIN
           DB_ROLLBACK(CENTRAL_STAT_ID);
           DB_CLOSE(CENTRAL_OPEN_ID,CENTRAL_STAT_ID);
           RETURN;
         END;

DB_CLOSE(CENTRAL_OPEN_ID,LOCAL_STAT_ID);

STATUS_VAR:='SUCCESS';

SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
