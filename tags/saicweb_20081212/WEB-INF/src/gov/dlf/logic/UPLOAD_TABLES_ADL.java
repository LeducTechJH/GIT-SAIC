package gov.dlf.logic;


import java.util.Date;

import gov.dlf.external.DELETE_FIX_FILES;
import gov.dlf.facade.SAIC_DMQ_ORA_Application;
import net.maintrend.datamanager.DataStore;
import net.maintrend.interfaces.IRegisteredObject;
import net.maintrend.interlink.Parameter;
import net.maintrend.interlink.ParameterSet;
import net.maintrend.rallyengine.ADL;
import net.maintrend.rallyengine.RallyApplication;
import net.maintrend.rallyengine.RallyDataManager;
import net.maintrend.rallyengine.RallyDataStoreException;
import net.maintrend.util.Compare;
import net.maintrend.util.Debug;
import net.maintrend.util.TruncService;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class UPLOAD_TABLES_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double CLIENTES_READ_LOC_DSD_ID = 0;

  public double NUCLEO_READ_LOC_DSD_ID = 0;

  public double INGRESOS_READ_LOC_DSD_ID = 0;

  public double RECURSOS_READ_LOC_DSD_ID = 0;

  public double DEDUCCIONES_READ_LOC_DSD_ID = 0;

  public double CLIENTES_HIST_RW_DSD_ID = 0;

  public double NUCLEO_SERVICIO_HIST_RW_DSD_ID = 0;

  public double INGRESOS_CLIENTE_HIST_RW_DSD_ID = 0;

  public double RECURSOS_CLIENTE_HIST_RW_DSD_ID = 0;

  public double DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID = 0;

  public double BILLETES_READ_LOC_DSD_ID = 0;

  public double BILLETES_HIST_RW_DSD_ID = 0;

  public double CLIENTES_READ_LOC_STATUS_CODE = 0;

  public double NUCLEO_READ_LOC_STATUS_CODE = 0;

  public double INGRESOS_READ_LOC_STATUS_CODE = 0;

  public double RECURSOS_READ_LOC_STATUS_CODE = 0;

  public double DEDUCCIONES_READ_LOC_STATUS_CODE = 0;

  public double CLIENTES_HIST_RW_STATUS_CODE = 0;

  public double NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = 0;

  public double INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = 0;

  public double RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = 0;

  public double DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = 0;

  public double BILLETES_READ_LOC_STATUS_CODE = 0;

  public double BILLETES_HIST_RW_STATUS_CODE = 0;

  public double NULLVALUE = 0;



  public DataStore CLIENTES_READ_LOC_DSD = null;

  public DataStore NUCLEO_READ_LOC_DSD = null;

  public DataStore INGRESOS_READ_LOC_DSD = null;

  public DataStore RECURSOS_READ_LOC_DSD = null;

  public DataStore DEDUCCIONES_READ_LOC_DSD = null;

  public DataStore BILLETES_READ_LOC_DSD = null;
  

  public DataStore CLIENTES_HIST_RW_DSD = null;

  public DataStore NUCLEO_SERVICIO_HIST_RW_DSD = null;

  public DataStore INGRESOS_CLIENTE_HIST_RW_DSD = null;

  public DataStore RECURSOS_CLIENTE_HIST_RW_DSD = null;

  public DataStore DEDUCCIONES_CLIENTE_HIST_RW_DSD = null;

  public DataStore BILLETES_HIST_RW_DSD = null;

  // *** BEGIN MODS JOR 11/21/2008 ***
  public DataStore CLIENTES_HIST_RO_DSD = null;
  public double CLIENTE_HIST_DSD_ID = 0;
  public double CLIENTES_HIST_STATUS_CODE = 0;
  // *** END MODS JOR 11/21/2008 ***


  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID2  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID3  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID4  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID5  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID6  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID7  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID8  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID9  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID10  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID11  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_DSD_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID12  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID = value.getDouble ( );
  }  

  // *** BEGIN MODS JOR 11/21/2008 ***
  public static void setOPEN_ID13  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTE_HIST_DSD_ID = value.getDouble ( );
  }  
  // *** END MODS JOR 11/21/2008 ***

  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE2  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE3  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE4  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE5  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE6  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE7  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE8  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE9  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE10  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE11  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE12  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE = value.getDouble ( );
  }  

  // *** BEGIN MODS JOR 11/21/2008 ***
  public static void setSTATUS_CODE13  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_STATUS_CODE = value.getDouble ( );
  }  
  // *** END MODS JOR 11/21/2008 ***

  
  /**  */
  public static void setNULLVALUE  ( RallyApplication __app, Parameter value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NULLVALUE = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getCLIENTES_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_DSD;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_DSD = value;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_DSD;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_DSD = value;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getINGRESOS_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_DSD;
  }


  /**  */
  public static void setINGRESOS_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_DSD = value;
  }


  /**  */
  public static void setINGRESOS_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECURSOS_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_DSD;
  }


  /**  */
  public static void setRECURSOS_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_DSD = value;
  }


  /**  */
  public static void setRECURSOS_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getDEDUCCIONES_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_DSD;
  }


  /**  */
  public static void setDEDUCCIONES_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_DSD = value;
  }


  /**  */
  public static void setDEDUCCIONES_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getBILLETES_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_DSD;
  }


  /**  */
  public static void setBILLETES_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_DSD = value;
  }


  /**  */
  public static void setBILLETES_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getCLIENTES_FIX_DSD  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD;
  }


  /**  */
  public static void setCLIENTES_FIX_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD = value;
  }


  /**  */
  public static void setCLIENTES_FIX_DSD  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getNUCLEO_SERVICIO_FIX  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_FIX  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_FIX  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getINGRESOS_CLIENTE_FIX  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD;
  }


  /**  */
  public static void setINGRESOS_CLIENTE_FIX  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD = value;
  }


  /**  */
  public static void setINGRESOS_CLIENTE_FIX  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECURSOS_CLIENTE_FIX  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD;
  }


  /**  */
  public static void setRECURSOS_CLIENTE_FIX  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD = value;
  }


  /**  */
  public static void setRECURSOS_CLIENTE_FIX  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getDEDUCCIONES_CLIENTE_FIX  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE_FIX  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD = value;
  }


  /**  */
  public static void setDEDUCCIONES_CLIENTE_FIX  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getBILLETES_FIX  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD;
  }


  /**  */
  public static void setBILLETES_FIX  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD = value;
  }


  /**  */
  public static void setBILLETES_FIX  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD = ( DataStore ) value;
  }

  // *** BEGIN MODS JOR 11/21/2008 ***
  public static DataStore getCLIENTES_FIX_RO_DSD  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD;
  }
  /**  */
  public static void setCLIENTES_FIX_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD = value;
  }
  /**  */
  public static void setCLIENTES_FIX_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RO_DSD = ( DataStore ) value;
  }
  // *** END MODS JOR 11/21/2008 ***



  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_DSD_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID2  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID2Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID2  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID2  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID3  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID3Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID3  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID3  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID4  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID4Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID4  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID4  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID5  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID5Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID5  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID5  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID6  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID6Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID6  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID6  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID7  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID7Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID7  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID7  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID8  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID8Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID8  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID8  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID9  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID9Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID9  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID9  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID10  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID10Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID10  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID10  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID11  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID11Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID11  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID11  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID12  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID;
  }


  /**  */
  public static Double getOPEN_ID12Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID );
  }


  /**  */
  public static void setOPEN_ID12  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID = value;
  }


  /**  */
  public static void setOPEN_ID12  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }

  // *** BEGIN MODS JOR 11/21/2008 ***
  public static double getOPEN_ID13  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTE_HIST_DSD_ID;
  }
  public static Double getOPEN_ID13Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTE_HIST_DSD_ID );
  }
  public static void setOPEN_ID13  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTE_HIST_DSD_ID = value;
  }
  public static void setOPEN_ID13  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTE_HIST_DSD_ID = ( ( Double ) value ).doubleValue ( );
  }
  // *** END MODS JOR 11/21/2008 ***
  
  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_READ_LOC_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE2  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE2Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE2  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE2  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_READ_LOC_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE3  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE3Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE3  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE3  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_READ_LOC_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE4  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE4Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE4  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE4  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_READ_LOC_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE5  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE5Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE5  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE5  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_READ_LOC_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE6  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE6Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE6  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE6  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE7  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE7Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE7  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE7  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE8  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE8Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE8  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE8  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE9  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE9Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE9  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE9  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE10  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE10Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE10  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE10  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE11  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE11Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE11  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE11  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_READ_LOC_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE12  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODE12Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE12  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE12  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).BILLETES_HIST_RW_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }

  // *** BEGIN MODS JOR 11/21/2008 ***
  public static double getSTATUS_CODE13  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_STATUS_CODE;
  }
  public static Double getSTATUS_CODE13Double ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_STATUS_CODE );
  }
  public static void setSTATUS_CODE13  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_STATUS_CODE = value;
  }
  public static void setSTATUS_CODE13  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).CLIENTES_HIST_STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }
  // *** END MODS JOR 11/21/2008 ***

  /**  */
  public static double getNULLVALUE  ( RallyApplication __app )
  {
    return ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NULLVALUE;
  }


  /**  */
  public static Double getNULLVALUEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NULLVALUE );
  }


  /**  */
  public static void setNULLVALUE  ( RallyApplication __app, double value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NULLVALUE = value;
  }


  /**  */
  public static void setNULLVALUE  ( RallyApplication __app, Object value )
  {
    ( ( UPLOAD_TABLES_ADL ) __app.getADL ( UPLOAD_TABLES_ADL.class ) ).NULLVALUE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static UPLOAD_TABLES_ADL get ( RallyApplication __app )
  {
    UPLOAD_TABLES_ADL adl = new UPLOAD_TABLES_ADL ( );
    __app.register ( adl, "UPLOAD_TABLES_ADL" );
    __app.setADL ( UPLOAD_TABLES_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    UPLOAD_TABLES_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    UPLOAD_TABLES_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "UPLOAD_TABLES_ADL" );
    if ( rObj != null && rObj instanceof UPLOAD_TABLES_ADL )
    {
      this.app.setADL ( UPLOAD_TABLES_ADL.class, ( UPLOAD_TABLES_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "UPLOAD_TABLES_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "UPLOAD_TABLES_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NULLVALUE = TruncService.setNull ( NULLVALUE  );
    this.app.FILE_SPEC = "*.RGF;";

    this.callParms.clear ( );
    DELETE_FIX_FILES.exec ( this.app, this.callParms );
    
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    this.app.FILE_SPEC = "*.FIX;*";

    this.callParms.clear ( );
    DELETE_FIX_FILES.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {

    CLIENTES_READ_LOC_DSD = this.dm.create ( "CLIENTES_READ_LOC_DSD" );
    CLIENTES_READ_LOC_DSD_ID = CLIENTES_READ_LOC_DSD.getId ( );
    CLIENTES_READ_LOC_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    NUCLEO_READ_LOC_DSD = this.dm.create ( "NUCLEO_READ_LOC_DSD" );
    NUCLEO_READ_LOC_DSD_ID = NUCLEO_READ_LOC_DSD.getId ( );
    NUCLEO_READ_LOC_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    INGRESOS_READ_LOC_DSD = this.dm.create ( "INGRESOS_READ_LOC_DSD" );
    INGRESOS_READ_LOC_DSD_ID = INGRESOS_READ_LOC_DSD.getId ( );
    INGRESOS_READ_LOC_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    RECURSOS_READ_LOC_DSD = this.dm.create ( "RECURSOS_READ_LOC_DSD" );
    RECURSOS_READ_LOC_DSD_ID = RECURSOS_READ_LOC_DSD.getId ( );
    RECURSOS_READ_LOC_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    DEDUCCIONES_READ_LOC_DSD = this.dm.create ( "DEDUCCIONES_READ_LOC_DSD" );
    DEDUCCIONES_READ_LOC_DSD_ID = DEDUCCIONES_READ_LOC_DSD.getId ( );
    DEDUCCIONES_READ_LOC_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    BILLETES_READ_LOC_DSD = this.dm.create ( "BILLETES_READ_LOC_DSD" );
    BILLETES_READ_LOC_DSD_ID = BILLETES_READ_LOC_DSD.getId ( );
    BILLETES_READ_LOC_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    CLIENTES_HIST_RW_DSD = this.dm.create ( "CLIENTES_HIST_RW_DSD" );
    CLIENTES_HIST_RW_DSD_ID = CLIENTES_HIST_RW_DSD.getId ( );
    CLIENTES_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    NUCLEO_SERVICIO_HIST_RW_DSD = this.dm.create ( "NUCLEO_SERVICIO_HIST_RW_DSD" );
    NUCLEO_SERVICIO_HIST_RW_DSD_ID = NUCLEO_SERVICIO_HIST_RW_DSD.getId ( );
    NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    INGRESOS_CLIENTE_HIST_RW_DSD = this.dm.create ( "INGRESOS_CLIENTE_HIST_RW_DSD" );
    INGRESOS_CLIENTE_HIST_RW_DSD_ID = INGRESOS_CLIENTE_HIST_RW_DSD.getId ( );
    INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    RECURSOS_CLIENTE_HIST_RW_DSD = this.dm.create ( "RECURSOS_CLIENTE_HIST_RW_DSD" );
    RECURSOS_CLIENTE_HIST_RW_DSD_ID = RECURSOS_CLIENTE_HIST_RW_DSD.getId ( );
    RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    DEDUCCIONES_CLIENTE_HIST_RW_DSD = this.dm.create ( "DEDUCCIONES_CLIENTE_HIST_RW_DSD" );
    DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID = DEDUCCIONES_CLIENTE_HIST_RW_DSD.getId ( );
    DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    BILLETES_HIST_RW_DSD = this.dm.create ( "BILLETES_HIST_RW_DSD" );
    BILLETES_HIST_RW_DSD_ID = BILLETES_HIST_RW_DSD.getId ( );
    BILLETES_HIST_RW_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    // *** BEGIN MODS JOR 11/21/2008 ***
    // *** delete any existing history rows for ss_jefe_gbl ***
    // ***        and tipo_trans = T ***
    CLIENTES_HIST_RO_DSD = this.dm.create ( "CLIENTES_HIST_RO_DSD" );
    CLIENTE_HIST_DSD_ID = CLIENTES_HIST_RO_DSD.getId ( );
    CLIENTES_HIST_STATUS_CODE = RallyDataStoreException.getDefault ( );
    
    CLIENTES_HIST_STATUS_CODE  = this.dm.reset ( CLIENTE_HIST_DSD_ID );
    CLIENTES_HIST_STATUS_CODE  = setFieldDouble ( CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );
    CLIENTES_HIST_STATUS_CODE  = setFieldString ( CLIENTES_HIST_RO_DSD, "TIPO_TRANS", "T" );

    CLIENTES_HIST_STATUS_CODE  = this.dm.limitQueryFromBuffer ( CLIENTE_HIST_DSD_ID );
    CLIENTES_HIST_STATUS_CODE  = this.dm.retrieve ( CLIENTE_HIST_DSD_ID );
    CLIENTES_HIST_STATUS_CODE  = this.dm.firstRow ( CLIENTE_HIST_DSD_ID );
    
    while ( Compare.equals ( CLIENTES_HIST_STATUS_CODE, 0 )  )
    {
    	INGRESOS_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.reset ( INGRESOS_CLIENTE_HIST_RW_DSD_ID );
    	INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = setFieldDouble ( INGRESOS_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
    	INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, "TIPO_TRANS", "T" );
    	INGRESOS_CLIENTE_HIST_RW_STATUS_CODE = deleteRows ( INGRESOS_CLIENTE_HIST_RW_DSD_ID);
      
    	RECURSOS_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.reset ( RECURSOS_CLIENTE_HIST_RW_DSD_ID );
    	RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = setFieldDouble ( RECURSOS_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
    	RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = setFieldString ( RECURSOS_CLIENTE_HIST_RW_DSD, "TIPO_TRANS", "T" );
    	RECURSOS_CLIENTE_HIST_RW_STATUS_CODE = deleteRows ( RECURSOS_CLIENTE_HIST_RW_DSD_ID);
    	
    	DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.reset ( DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID );
    	DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = setFieldDouble ( DEDUCCIONES_CLIENTE_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
    	DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = setFieldString ( DEDUCCIONES_CLIENTE_HIST_RW_DSD, "TIPO_TRANS", "T" );
    	DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE = deleteRows ( DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID);
    	
    	BILLETES_HIST_RW_STATUS_CODE  = this.dm.reset ( BILLETES_HIST_RW_DSD_ID );
    	BILLETES_HIST_RW_STATUS_CODE = setFieldDouble ( BILLETES_HIST_RW_DSD , CLIENTES_HIST_RO_DSD, "SEGURO_SOCIAL_CLIENTE");
    	BILLETES_HIST_RW_STATUS_CODE = setFieldString ( BILLETES_HIST_RW_DSD, "TIPO_TRANS", "T" );
    	BILLETES_HIST_RW_STATUS_CODE = deleteRows ( BILLETES_HIST_RW_DSD_ID);
    	
    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = this.dm.reset  ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD , "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD , "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL  );
    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = setFieldString ( NUCLEO_SERVICIO_HIST_RW_DSD , "COD_SERVICIO", this.app.COD_SERV_GBL );
    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = setFieldString ( NUCLEO_SERVICIO_HIST_RW_DSD , "TIPO_TRANS", "T" );
    	NUCLEO_SERVICIO_HIST_RW_STATUS_CODE = deleteRows ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
      
		CLIENTES_HIST_STATUS_CODE  = this.dm.nextRow ( CLIENTE_HIST_DSD_ID );
    }
    CLIENTES_HIST_RW_STATUS_CODE = this.dm.delete(CLIENTES_HIST_RW_DSD_ID);
    CLIENTES_HIST_RW_STATUS_CODE  = this.dm.dbCommit ( );
    // *** END MODS JOR 11/21/2008 ***

    CLIENTES_READ_LOC_STATUS_CODE  = this.dm.reset ( CLIENTES_READ_LOC_DSD_ID );

    this.dm.setField ( CLIENTES_READ_LOC_DSD, "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );

    CLIENTES_READ_LOC_STATUS_CODE  = getFirstRow ( CLIENTES_READ_LOC_DSD_ID );
    while ( Compare.equals ( CLIENTES_READ_LOC_STATUS_CODE, 0 )  )
    {
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "SEGURO_SOCIAL_CLIENTE");	
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "SEGURO_SOCIAL_JEFE_FAMILIA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "DSC_APELLIDO_PATERNO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "DSC_APELLIDO_MATERNO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "DSC_NOMBRE");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "DSC_INICIAL");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_PARENTESCO_FAM");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_NACIMIENTO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "SEXO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ID_INDICE_SOUNDEX");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_DISPOSICION_CLIENTE");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_STATUS_DISP");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "TELEFONO_HOGAR");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "TELEFONO_TRABAJO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_INSTITUCION");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_INCAPACIDAD_PRIMARIA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_INCAPACIDAD_SECUNDARIA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_CIUDADANIA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_ESCOLARIDAD");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_ESTATUS_EMPLEO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_ESTADO_CIVIL");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_OCUPACION");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_PROBLEMA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ID_NUMERO_EXTRANJERO");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_ARRIBO_EXTRANJERO");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_EXPIRACION_MEDICAID");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ID_NUMERO_MEDICAID");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_EXPIRACION_MEDICARE");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ID_NUMERO_MEDICARE");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "SEGURO_SOCIAL_ANTERIOR");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_PASOS");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_RAZON_DESCALIFICADO_PAN");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_RAZON_DESCALIFICADO_AE");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_ANTECEDENTES_PROGRAMA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ANTECEDE_PROGRAMA_NUM_CASO");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ANTECEDE_PROGRAMA_OFIC_LOCAL");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ANTECEDE_FECHAS_CIERRE");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "NUM_MESES_DESC_PAN");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_DESCALIFICADO_PAN");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "NUM_MESES_DESC_AE");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_DESCALIFACADO_AE");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ANTECEDE_RAZON");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "NUM_VECES_DESC");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_DESCALIFICADO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_INCAPACIDAD_VERIFICADA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "DSC_INSTITUCION_ESCUELA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_PSM");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_AEC_FACTOR_ELEG");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_REHABILITACION_VOC");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FACT_ELEGIBILIDAD_AEC");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "RMO_COD");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "COD_STATUS");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_STATUS");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "CESION_MEDICAID");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "NOMBRE_PLAN_MEDICO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "TIPO_CUBIERTA_MEDICARE");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "DSC_APODO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_PRES");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_TANF");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "TIPO_REGISTRO");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "MESES_SWIP");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ESTUDIA_TIEMPO_COMPLETO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ASISTE_REGULARIDAD");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "CONVICTO_SUSTANCIAS");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "CONVICTO_SUSTANCIAS_F_E");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "CONVICTO_DECL_FRAUD");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "CONVICTO_DECL_FRAUD_F_E");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "VIOLACION_PROBATORIA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "VIOLACION_PROBATORIA_F_E");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "HUELGA");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "CONTEO_60_MESES_TANF");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_VENCIMIENTO_DESC");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_CIERRE_DESCA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "MOTIVOS_ELEGIBILIDAD");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_FIRMO_PRI");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_ENTREGA_AUTOGESTION");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_REFERIDO_MANEJO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ESTATUS_PART_TRABAJO");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_EFECT_DESCA");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "MESES_EXENCION_TANF");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_PTRA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_VET");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_18ANOS");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_60ANOS");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FLG_5MESES");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FECHA_DESDE_EXEN");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FECHA_HASTA_EXEN");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "REMANENTE");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FECHA_REGISTRO");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_JUNTA_MEDICA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "DSC_ASISTE_REGULARIDAD");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_VENCIMIENTO_DESC_AE");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_CIERRE_DESCA_AE");
     setFieldDate   ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "FCH_EFECT_DESCA_AE");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "RMO_OFICINA");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "OCUPACION1");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "OCUPACION2");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "OCUPACION3");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ACEPTA_REGISTRO_EMPLEO");
     setFieldString ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "ACTIVO_REGISTRO_EMPLEO");
     setFieldDouble ( CLIENTES_HIST_RW_DSD, CLIENTES_READ_LOC_DSD, "RMO_OFICINA");
     setFieldString ( CLIENTES_HIST_RW_DSD, "TIPO_TRANS","T");
     
     CLIENTES_HIST_RW_STATUS_CODE  = this.dm.insertRow ( CLIENTES_HIST_RW_DSD_ID );

     INGRESOS_READ_LOC_STATUS_CODE  = this.dm.reset ( INGRESOS_READ_LOC_DSD_ID );
     setFieldDouble( INGRESOS_READ_LOC_DSD, CLIENTES_READ_LOC_DSD,  "SEGURO_SOCIAL_CLIENTE");
     setFieldDouble( INGRESOS_READ_LOC_DSD, "RMO_OFICINA", this.app.RMO_GBL );
     INGRESOS_READ_LOC_STATUS_CODE  = getFirstRow ( INGRESOS_READ_LOC_DSD_ID );
  
     while ( Compare.equals ( INGRESOS_READ_LOC_STATUS_CODE, 0 )  )
     {
    	setFieldDouble ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "SEGURO_SOCIAL_CLIENTE");
    	setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "COD_TIPO_INGRESO");
        setFieldDouble ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "VLR_CANTIDAD_INGRESO");
        setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "DSC_OBS_INGRESO");
        setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "DSC_NOMBRE_PATRONO");
        setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "FLG_PAN");
        setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "FLG_AE");
        setFieldDouble ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "VLR_CANTIDAD_REHABILITACION");
        setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "FLG_FRECUENCIA");
        setFieldDate   ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "FCH_HASTA_CANT_REHAB");
        setFieldDouble ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "RMO_OFICINA");
        setFieldDate   ( INGRESOS_CLIENTE_HIST_RW_DSD, INGRESOS_READ_LOC_DSD, "FCH_RECIBO_GLOB");
        setFieldString ( INGRESOS_CLIENTE_HIST_RW_DSD, "TIPO_TRANS","T");
        
        INGRESOS_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.insertRow ( INGRESOS_CLIENTE_HIST_RW_DSD_ID );
        INGRESOS_READ_LOC_STATUS_CODE  = this.dm.nextRow ( INGRESOS_READ_LOC_DSD_ID );
  	}

     RECURSOS_READ_LOC_STATUS_CODE  = this.dm.reset ( RECURSOS_READ_LOC_DSD_ID );
     setFieldDouble ( RECURSOS_READ_LOC_DSD, CLIENTES_READ_LOC_DSD, "SEGURO_SOCIAL_CLIENTE");
     setFieldDouble ( RECURSOS_READ_LOC_DSD, "RMO_OFICINA", this.app.RMO_GBL );
     RECURSOS_READ_LOC_STATUS_CODE  = getFirstRow ( RECURSOS_READ_LOC_DSD_ID );
 
     while ( Compare.equals ( RECURSOS_READ_LOC_STATUS_CODE, 0 )  )
     {
        setFieldDouble ( RECURSOS_CLIENTE_HIST_RW_DSD, RECURSOS_READ_LOC_DSD, "SEGURO_SOCIAL_CLIENTE");
        setFieldString ( RECURSOS_CLIENTE_HIST_RW_DSD, RECURSOS_READ_LOC_DSD, "COD_TIPO_RECURSO" );
        setFieldDouble ( RECURSOS_CLIENTE_HIST_RW_DSD, RECURSOS_READ_LOC_DSD, "VLR_CANTIDAD_RECURSO");
        setFieldString ( RECURSOS_CLIENTE_HIST_RW_DSD, RECURSOS_READ_LOC_DSD, "DSC_OBS_RECURSO");
        setFieldDouble ( RECURSOS_CLIENTE_HIST_RW_DSD, RECURSOS_READ_LOC_DSD, "RMO_OFICINA");
        setFieldString ( RECURSOS_CLIENTE_HIST_RW_DSD, "TIPO_TRANS","T");
        RECURSOS_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.insertRow ( RECURSOS_CLIENTE_HIST_RW_DSD_ID );
        RECURSOS_READ_LOC_STATUS_CODE  = this.dm.nextRow ( RECURSOS_READ_LOC_DSD_ID );
      }

      DEDUCCIONES_READ_LOC_STATUS_CODE  = this.dm.reset ( DEDUCCIONES_READ_LOC_DSD_ID );
      setFieldDouble ( DEDUCCIONES_READ_LOC_DSD, CLIENTES_READ_LOC_DSD, "SEGURO_SOCIAL_CLIENTE");
      setFieldDouble ( DEDUCCIONES_READ_LOC_DSD, "RMO_OFICINA", this.app.RMO_GBL );
      DEDUCCIONES_READ_LOC_STATUS_CODE  = getFirstRow ( DEDUCCIONES_READ_LOC_DSD_ID );

      while ( Compare.equals ( DEDUCCIONES_READ_LOC_STATUS_CODE, 0 )  )
      {
        setFieldDouble ( DEDUCCIONES_CLIENTE_HIST_RW_DSD, DEDUCCIONES_READ_LOC_DSD, "SEGURO_SOCIAL_CLIENTE" );
        setFieldString ( DEDUCCIONES_CLIENTE_HIST_RW_DSD, DEDUCCIONES_READ_LOC_DSD, "COD_TIPO_DEDUCCIONE" );
        setFieldDouble ( DEDUCCIONES_CLIENTE_HIST_RW_DSD, DEDUCCIONES_READ_LOC_DSD, "VLR_CANTIDAD_DEDUCCIONE" );
        setFieldString ( DEDUCCIONES_CLIENTE_HIST_RW_DSD, DEDUCCIONES_READ_LOC_DSD, "DSC_OBS_DEDUCCIONE" );
        setFieldDouble ( DEDUCCIONES_CLIENTE_HIST_RW_DSD, DEDUCCIONES_READ_LOC_DSD, "RMO_OFICINA" );
        setFieldString ( DEDUCCIONES_CLIENTE_HIST_RW_DSD, "TIPO_TRANS","T");
        DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.insertRow ( DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID );
        DEDUCCIONES_READ_LOC_STATUS_CODE  = this.dm.nextRow ( DEDUCCIONES_READ_LOC_DSD_ID );

      }

      BILLETES_READ_LOC_STATUS_CODE  = this.dm.reset ( BILLETES_READ_LOC_DSD_ID );
      setFieldDouble ( BILLETES_READ_LOC_DSD, CLIENTES_READ_LOC_DSD, "SEGURO_SOCIAL_CLIENTE" );
      setFieldDouble ( BILLETES_READ_LOC_DSD, "RMO_OFICINA", this.app.RMO_GBL );
      BILLETES_READ_LOC_STATUS_CODE  = getFirstRow ( BILLETES_READ_LOC_DSD_ID );

      while ( Compare.equals ( BILLETES_READ_LOC_STATUS_CODE, 0 )  )
      {
      	
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD, "SEGURO_SOCIAL_CLIENTE");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD, "CANT_BILLETE_EXTRA");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD, "CANT_BILLETE_ORDINARIO");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD, "COD_TIPO_INGRESO");
		setFieldDate   ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD, "FECHA_EFECTIVIDAD");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD,"GANANCIA_ANUAL_EXTRA");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD,"GANANCIA_ANUAL_ORD");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD,"GANANCIA_SEMANAL_EXTRA");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD,"GANANCIA_SEMANAL_ORD");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD,"INGRESO_ANUAL");
		setFieldDouble ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD,"INGRESO_MENSUAL");
		setFieldDate   ( BILLETES_HIST_RW_DSD, BILLETES_READ_LOC_DSD,"RMO_OFICINA");
		setFieldString ( BILLETES_HIST_RW_DSD, "TIPO_TRANS","T");
		
		BILLETES_HIST_RW_STATUS_CODE  = this.dm.insertRow ( BILLETES_HIST_RW_DSD_ID );
		BILLETES_READ_LOC_STATUS_CODE  = this.dm.nextRow ( BILLETES_READ_LOC_DSD_ID );

      }

      CLIENTES_READ_LOC_STATUS_CODE  = this.dm.nextRow ( CLIENTES_READ_LOC_DSD_ID );

    }

    NUCLEO_READ_LOC_STATUS_CODE  = this.dm.reset ( NUCLEO_READ_LOC_DSD_ID );

    setFieldDouble ( NUCLEO_READ_LOC_DSD, "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    setFieldDouble ( NUCLEO_READ_LOC_DSD, "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    setFieldString ( NUCLEO_READ_LOC_DSD, "COD_SERVICIO", this.app.COD_SERV_GBL );
    setFieldDouble ( NUCLEO_READ_LOC_DSD, "RMO_OFICINA", this.app.RMO_GBL );
    setFieldDouble ( NUCLEO_READ_LOC_DSD, "RMO_OFICINA2", this.app.RMO_GBL );

    NUCLEO_READ_LOC_STATUS_CODE  = getFirstRow ( NUCLEO_READ_LOC_DSD_ID );

    while ( Compare.equals ( NUCLEO_READ_LOC_STATUS_CODE, 0 )  )
    {
      setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD, NUCLEO_READ_LOC_DSD, "SEGURO_SOCIAL_JEFE_FAM" );
      setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD, NUCLEO_READ_LOC_DSD, "SEGURO_SOCIAL_JEFE_SERV" );
      setFieldString ( NUCLEO_SERVICIO_HIST_RW_DSD, NUCLEO_READ_LOC_DSD, "COD_SERVICIO" );
      setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD, NUCLEO_READ_LOC_DSD, "SEGURO_SOCIAL_BENEFICIARIO" );
      setFieldString ( NUCLEO_SERVICIO_HIST_RW_DSD, NUCLEO_READ_LOC_DSD, "COD_PARENTESCO_RELACION_SERV");
      setFieldDouble ( NUCLEO_SERVICIO_HIST_RW_DSD, NUCLEO_READ_LOC_DSD, "RMO_OFICINA");
      setFieldString ( NUCLEO_SERVICIO_HIST_RW_DSD, "TIPO_TRANS","T");
      NUCLEO_SERVICIO_HIST_RW_STATUS_CODE  = this.dm.insertRow ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
      NUCLEO_READ_LOC_STATUS_CODE  = this.dm.nextRow ( NUCLEO_READ_LOC_DSD_ID );

    }

    CLIENTES_HIST_RW_STATUS_CODE  = this.dm.dbCommit ( );
    
    // *** BEGIN MODS JOR 11/21/2008 ***
    CLIENTES_HIST_STATUS_CODE  =               this.dm.dbClose ( CLIENTE_HIST_DSD_ID );
    // *** END MODS JOR 11/21/2008 ***

    CLIENTES_READ_LOC_STATUS_CODE  =           this.dm.dbClose ( CLIENTES_READ_LOC_DSD_ID );
    NUCLEO_READ_LOC_STATUS_CODE  =             this.dm.dbClose ( NUCLEO_READ_LOC_DSD_ID );
    INGRESOS_READ_LOC_STATUS_CODE  =           this.dm.dbClose ( INGRESOS_READ_LOC_DSD_ID );
    RECURSOS_READ_LOC_STATUS_CODE  =           this.dm.dbClose ( RECURSOS_READ_LOC_DSD_ID );
    DEDUCCIONES_READ_LOC_STATUS_CODE  =        this.dm.dbClose ( DEDUCCIONES_READ_LOC_DSD_ID );
    BILLETES_READ_LOC_STATUS_CODE  =           this.dm.dbClose ( BILLETES_READ_LOC_DSD_ID );
    
    CLIENTES_HIST_RW_STATUS_CODE  =            this.dm.dbClose ( CLIENTES_HIST_RW_DSD_ID );
    NUCLEO_SERVICIO_HIST_RW_STATUS_CODE  =     this.dm.dbClose ( NUCLEO_SERVICIO_HIST_RW_DSD_ID );
    INGRESOS_CLIENTE_HIST_RW_STATUS_CODE  =    this.dm.dbClose ( INGRESOS_CLIENTE_HIST_RW_DSD_ID );
    RECURSOS_CLIENTE_HIST_RW_STATUS_CODE  =    this.dm.dbClose ( RECURSOS_CLIENTE_HIST_RW_DSD_ID );
    DEDUCCIONES_CLIENTE_HIST_RW_STATUS_CODE  = this.dm.dbClose ( DEDUCCIONES_CLIENTE_HIST_RW_DSD_ID );
    BILLETES_HIST_RW_STATUS_CODE  =            this.dm.dbClose ( BILLETES_HIST_RW_DSD_ID );
    System.out.println("UPLOAD_TABLES_ADL Completed");

  }


  private final double getFirstRow(double DSD_ID) {
	  double STATUS_CODE = 0.0;
	  STATUS_CODE  = this.dm.limitQueryFromBuffer ( DSD_ID );
      STATUS_CODE  = this.dm.retrieve ( DSD_ID );
      STATUS_CODE  = this.dm.firstRow ( DSD_ID );
      return STATUS_CODE;
  }
  private final double deleteRow(double DSD_ID,double STATUS_CODE) {
	  
	  while ( Compare.equals ( STATUS_CODE, 0 )  ) {
	        STATUS_CODE  = this.dm.delete ( DSD_ID );
	        STATUS_CODE  = this.dm.firstRow ( DSD_ID );
	      }
     // STATUS_CODE  = this.dm.update ( DSD_ID );
      return STATUS_CODE;
  }
  private final double deleteFirstRow(double DSD_ID) {
	  double STATUS_CODE = getFirstRow( DSD_ID);
	  STATUS_CODE = deleteRow(DSD_ID,STATUS_CODE);
      return STATUS_CODE;
  }

  // *** BEGIN MODS JOR 11/21/2008 ***
  private final double deleteRows(double DSD_ID)
  {
	double STATUS_CODE = 0.0;
	STATUS_CODE  = getFirstRow ( DSD_ID );
	while ( Compare.equals ( STATUS_CODE, 0 ) )
	{
		STATUS_CODE  = this.dm.delete ( DSD_ID );
		STATUS_CODE  = this.dm.nextRow ( DSD_ID );
    }
    return STATUS_CODE;
  }
  // *** END MODS JOR 11/21/2008 ***

  
  
/**
 * Copy the value of the specified field in the source DataStore to the corresponding field in the target DataStore. 
 * This method assumes that the value being set is of type Double. 
 * @param target DataSource the target field
 * @param source DataSource containing the source value
 * @param field name of the field whose value is to be copied.
 */

  private final double setFieldDouble(DataStore target, DataStore source, String field) {
	  return this.dm.setField ( target, field, this.dm.getFieldDouble ( source, field ) );
  }
/**
 * Copy the value of the specified field in the source DataStore to the corresponding field in the target DataStore. 
 * This method assumes that the value being set is of type Date. 
 * @param target
 * @param source
 * @param field
 */
  private final double setFieldDate(DataStore target, DataStore source, String field) {
	  return this.dm.setField ( target, field, this.dm.getFieldDate ( source, field ) );
  }
  
  /**
   * Copy the value of the specified field in the source DataStore to the corresponding field in the target DataStore. 
   * This method assumes that the value being set is of type String. 
   * @param target
   * @param source
   * @param field
   */
  private final double setFieldString(DataStore target, DataStore source, String field) {
	  return this.dm.setField ( target, field, this.dm.getFieldString ( source, field ) );
  }
  
  /**
   * Copy the specified Double value to the specified field in the target DataStore.  
   * @param target
   * @param field
   * @param value
   */
  private final double setFieldDouble(DataStore target, String field, Double value) {
	  return this.dm.setField ( target, field, value );
}

  /**
   * Copy the specified Date value to the specified field in the target DataStore.  
   * @param target
   * @param field
   * @param value
   */
  private final double setFieldDate(DataStore target, String field, Date value) {
	  return this.dm.setField ( target, field, value );
  }
  
  /**
   * Copy the specified String value to the specified field in the target DataStore.  
   * @param target
   * @param field
   * @param value
   */
  private final double setFieldString(DataStore target, String field, String value) {
	  return this.dm.setField ( target, field, value );
  }
  
  /**
   * Copy the value of the specified sourceField in the source DataStore to the corresponding targetField in the target DataStore. 
   * This method assumes that the value being set is of type Double. 
   * @param target
   * @param source
   * @param field
   */
  private final double setFieldDouble(DataStore target, String targetField,  DataStore source, String sourceField) {
	  return this.dm.setField ( target, targetField, this.dm.getFieldDouble ( source, sourceField ) );
  }
  
  /**
   * Copy the value of the specified sourceField in the source DataStore to the corresponding targetField in the target DataStore. 
   * This method assumes that the value being set is of type Date. 
   * @param target
   * @param source
   * @param field
   */
  
  private final double setFieldDate(DataStore target, String targetField,DataStore source, String sourceField) {
	  return this.dm.setField ( target, targetField, this.dm.getFieldDate ( source, sourceField ) );
  }
  /**
   * Copy the value of the specified sourceField in the source DataStore to the corresponding targetField in the target DataStore. 
   * This method assumes that the value being set is of type String. 
   * @param target
   * @param source
   * @param field
   */
  private final double setFieldString(DataStore target, String targetField,DataStore source, String sourceField) {
	  return this.dm.setField ( target, targetField, this.dm.getFieldString ( source, sourceField ) );
  }
  
  
}



/* ---------------------------------------------------------------------


     
PROCEDURE UPLOAD_TABLES_ADL;

VAR
        OPEN_ID         : NUMBER;
        OPEN_ID2        : NUMBER;
        OPEN_ID3        : NUMBER;
        OPEN_ID4        : NUMBER;
        OPEN_ID5        : NUMBER;
        OPEN_ID6        : NUMBER;
        OPEN_ID7        : NUMBER;
        OPEN_ID8        : NUMBER;
        OPEN_ID9        : NUMBER;
        OPEN_ID10       : NUMBER;
        OPEN_ID11       : NUMBER;
        OPEN_ID12       : NUMBER;
        STATUS_CODE     : NUMBER;
        STATUS_CODE2    : NUMBER;
        STATUS_CODE3    : NUMBER;
        STATUS_CODE4    : NUMBER;
        STATUS_CODE5    : NUMBER;
        STATUS_CODE6    : NUMBER;
        STATUS_CODE7    : NUMBER;
        STATUS_CODE8    : NUMBER;
        STATUS_CODE9    : NUMBER;
        STATUS_CODE10   : NUMBER;
        STATUS_CODE11   : NUMBER;
        STATUS_CODE12   : NUMBER;
        NULLVALUE       : NUMBER;
BEGIN
SET_TRACE();
        MAKE_NULL(NULLVALUE);

        FILE_SPEC := '*.RGF;*';
        CALL DELETE_FIX_FILES;
        FILE_SPEC := '*.FIX;*';
        CALL DELETE_FIX_FILES;

        DB_OPEN(CLIENTES_READ_LOC_DSD,OPEN_ID,STATUS_CODE);
        DB_OPEN(NUCLEO_READ_LOC_DSD,OPEN_ID2,STATUS_CODE2);
        DB_OPEN(INGRESOS_READ_LOC_DSD,OPEN_ID3,STATUS_CODE3);
        DB_OPEN(RECURSOS_READ_LOC_DSD,OPEN_ID4,STATUS_CODE4);
        DB_OPEN(DEDUCCIONES_READ_LOC_DSD,OPEN_ID5,STATUS_CODE5);
        DB_OPEN(BILLETES_READ_LOC_DSD,OPEN_ID11,STATUS_CODE11);

        DB_OPEN(CLIENTES_FIX_DSD,OPEN_ID6,STATUS_CODE6);
        DB_OPEN(NUCLEO_SERVICIO_FIX,OPEN_ID7,STATUS_CODE7);
        DB_OPEN(INGRESOS_CLIENTE_FIX,OPEN_ID8,STATUS_CODE8);
        DB_OPEN(RECURSOS_CLIENTE_FIX,OPEN_ID9,STATUS_CODE9);
        DB_OPEN(DEDUCCIONES_CLIENTE_FIX,OPEN_ID10,STATUS_CODE10);
        DB_OPEN(BILLETES_FIX,OPEN_ID12,STATUS_CODE12);

                
        DB_RESET(OPEN_ID,STATUS_CODE);
        CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
        DB_QUERY(OPEN_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
                IF CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE = NULLVALUE
                THEN
                    CLIENTES_FIX_DSD.SEGURO_SOCIAL_CLIENTE := 0;
                ELSE
                    CLIENTES_FIX_DSD.SEGURO_SOCIAL_CLIENTE :=
                        CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE;

                IF CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAMILIA = NULLVALUE
                THEN
                    CLIENTES_FIX_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := 0;
                ELSE
                    CLIENTES_FIX_DSD.SEGURO_SOCIAL_JEFE_FAMILIA :=
                        CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAMILIA;
                CLIENTES_FIX_DSD.DSC_APELLIDO_PATERNO:=
                        CLIENTES_READ_LOC_DSD.DSC_APELLIDO_PATERNO;
                CLIENTES_FIX_DSD.DSC_APELLIDO_MATERNO:=
                        CLIENTES_READ_LOC_DSD.DSC_APELLIDO_MATERNO;
                CLIENTES_FIX_DSD.DSC_NOMBRE :=
                        CLIENTES_READ_LOC_DSD.DSC_NOMBRE;
                CLIENTES_FIX_DSD.DSC_INICIAL:=
                        CLIENTES_READ_LOC_DSD.DSC_INICIAL;
                CLIENTES_FIX_DSD.COD_PARENTESCO_FAM := 
                        CLIENTES_READ_LOC_DSD.COD_PARENTESCO_FAM;
                CLIENTES_FIX_DSD.FCH_NACIMIENTO:=
                        CLIENTES_READ_LOC_DSD.FCH_NACIMIENTO;
                CLIENTES_FIX_DSD.SEXO:=
                        CLIENTES_READ_LOC_DSD.SEXO;
                CLIENTES_FIX_DSD.ID_INDICE_SOUNDEX:=
                        CLIENTES_READ_LOC_DSD.ID_INDICE_SOUNDEX;
                CLIENTES_FIX_DSD.COD_DISPOSICION_CLIENTE:=
                        CLIENTES_READ_LOC_DSD.COD_DISPOSICION_CLIENTE;
                CLIENTES_FIX_DSD.FCH_STATUS_DISP:=
                        CLIENTES_READ_LOC_DSD.FCH_STATUS_DISP;
                CLIENTES_FIX_DSD.TELEFONO_HOGAR:=
                        CLIENTES_READ_LOC_DSD.TELEFONO_HOGAR;
                CLIENTES_FIX_DSD.TELEFONO_TRABAJO:=
                        CLIENTES_READ_LOC_DSD.TELEFONO_TRABAJO;
                CLIENTES_FIX_DSD.COD_INSTITUCION:=
                        CLIENTES_READ_LOC_DSD.COD_INSTITUCION;
                CLIENTES_FIX_DSD.COD_INCAPACIDAD_PRIMARIA:=
                        CLIENTES_READ_LOC_DSD.COD_INCAPACIDAD_PRIMARIA;
                CLIENTES_FIX_DSD.COD_INCAPACIDAD_SECUNDARIA:=
                        CLIENTES_READ_LOC_DSD.COD_INCAPACIDAD_SECUNDARIA;
                CLIENTES_FIX_DSD.COD_CIUDADANIA:=
                        CLIENTES_READ_LOC_DSD.COD_CIUDADANIA;
                CLIENTES_FIX_DSD.COD_ESCOLARIDAD:=
                        CLIENTES_READ_LOC_DSD.COD_ESCOLARIDAD;
                CLIENTES_FIX_DSD.COD_ESTATUS_EMPLEO:=
                        CLIENTES_READ_LOC_DSD.COD_ESTATUS_EMPLEO;
                CLIENTES_FIX_DSD.COD_ESTADO_CIVIL:=
                        CLIENTES_READ_LOC_DSD.COD_ESTADO_CIVIL;
                CLIENTES_FIX_DSD.COD_OCUPACION:=
                        CLIENTES_READ_LOC_DSD.COD_OCUPACION;
                CLIENTES_FIX_DSD.COD_PROBLEMA:=
                        CLIENTES_READ_LOC_DSD.COD_PROBLEMA;
                CLIENTES_FIX_DSD.ID_NUMERO_EXTRANJERO:=
                        CLIENTES_READ_LOC_DSD.ID_NUMERO_EXTRANJERO;
                CLIENTES_FIX_DSD.FCH_ARRIBO_EXTRANJERO:=
                        CLIENTES_READ_LOC_DSD.FCH_ARRIBO_EXTRANJERO;
                CLIENTES_FIX_DSD.FCH_EXPIRACION_MEDICAID:=
                        CLIENTES_READ_LOC_DSD.FCH_EXPIRACION_MEDICAID;
                CLIENTES_FIX_DSD.ID_NUMERO_MEDICAID:=
                        CLIENTES_READ_LOC_DSD.ID_NUMERO_MEDICAID;
                CLIENTES_FIX_DSD.FCH_EXPIRACION_MEDICARE:=
                        CLIENTES_READ_LOC_DSD.FCH_EXPIRACION_MEDICARE;
                CLIENTES_FIX_DSD.ID_NUMERO_MEDICARE:=
                        CLIENTES_READ_LOC_DSD.ID_NUMERO_MEDICARE;

                IF CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_ANTERIOR = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.SEGURO_SOCIAL_ANTERIOR:=0;
                ELSE
                CLIENTES_FIX_DSD.SEGURO_SOCIAL_ANTERIOR:=
                        CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_ANTERIOR;
                CLIENTES_FIX_DSD.COD_PASOS:=
                        CLIENTES_READ_LOC_DSD.COD_PASOS;
                CLIENTES_FIX_DSD.COD_RAZON_DESCALIFICADO_PAN:=
                        CLIENTES_READ_LOC_DSD.COD_RAZON_DESCALIFICADO_PAN;
                CLIENTES_FIX_DSD.COD_RAZON_DESCALIFICADO_AE:=
                        CLIENTES_READ_LOC_DSD.COD_RAZON_DESCALIFICADO_AE;
                CLIENTES_FIX_DSD.COD_ANTECEDENTES_PROGRAMA:=
                        CLIENTES_READ_LOC_DSD.COD_ANTECEDENTES_PROGRAMA;
                CLIENTES_FIX_DSD.ANTECEDE_PROGRAMA_NUM_CASO:=
                        CLIENTES_READ_LOC_DSD.ANTECEDE_PROGRAMA_NUM_CASO;

                IF CLIENTES_READ_LOC_DSD.ANTECEDE_PROGRAMA_OFIC_LOCAL = NULLVALU
E
                THEN
                CLIENTES_FIX_DSD.ANTECEDE_PROGRAMA_OFIC_LOCAL:=0;
                ELSE
                CLIENTES_FIX_DSD.ANTECEDE_PROGRAMA_OFIC_LOCAL:=
                        CLIENTES_READ_LOC_DSD.ANTECEDE_PROGRAMA_OFIC_LOCAL;
                CLIENTES_FIX_DSD.ANTECEDE_FECHAS_CIERRE:=
                        CLIENTES_READ_LOC_DSD.ANTECEDE_FECHAS_CIERRE;
                IF CLIENTES_READ_LOC_DSD.NUM_MESES_DESC_PAN = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.NUM_MESES_DESC_PAN:=0;
                ELSE
                CLIENTES_FIX_DSD.NUM_MESES_DESC_PAN:=
                        CLIENTES_READ_LOC_DSD.NUM_MESES_DESC_PAN;
                CLIENTES_FIX_DSD.FCH_DESCALIFICADO_PAN:=
                        CLIENTES_READ_LOC_DSD.FCH_DESCALIFICADO_PAN;

                IF CLIENTES_READ_LOC_DSD.NUM_MESES_DESC_AE = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.NUM_MESES_DESC_AE:=0;
                ELSE
                CLIENTES_FIX_DSD.NUM_MESES_DESC_AE:=
                        CLIENTES_READ_LOC_DSD.NUM_MESES_DESC_AE;
                CLIENTES_FIX_DSD.FCH_DESCALIFACADO_AE:=
                        CLIENTES_READ_LOC_DSD.FCH_DESCALIFACADO_AE;
                CLIENTES_FIX_DSD.ANTECEDE_RAZON:=
                        CLIENTES_READ_LOC_DSD.ANTECEDE_RAZON;

                IF CLIENTES_READ_LOC_DSD.NUM_VECES_DESC = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.NUM_VECES_DESC:=0;
                ELSE
                CLIENTES_FIX_DSD.NUM_VECES_DESC:=
                        CLIENTES_READ_LOC_DSD.NUM_VECES_DESC;
                CLIENTES_FIX_DSD.FLG_DESCALIFICADO:=
                        CLIENTES_READ_LOC_DSD.FLG_DESCALIFICADO;
                CLIENTES_FIX_DSD.FLG_INCAPACIDAD_VERIFICADA:=
                        CLIENTES_READ_LOC_DSD.FLG_INCAPACIDAD_VERIFICADA;
                CLIENTES_FIX_DSD.DSC_INSTITUCION_ESCUELA:=
                        CLIENTES_READ_LOC_DSD.DSC_INSTITUCION_ESCUELA;
                CLIENTES_FIX_DSD.COD_PSM:=
                        CLIENTES_READ_LOC_DSD.COD_PSM;
                CLIENTES_FIX_DSD.COD_AEC_FACTOR_ELEG:=
                        CLIENTES_READ_LOC_DSD.COD_AEC_FACTOR_ELEG;
                CLIENTES_FIX_DSD.FLG_REHABILITACION_VOC:=
                        CLIENTES_READ_LOC_DSD.FLG_REHABILITACION_VOC;
                CLIENTES_FIX_DSD.FACT_ELEGIBILIDAD_AEC:=
                        CLIENTES_READ_LOC_DSD.FACT_ELEGIBILIDAD_AEC;

                IF CLIENTES_READ_LOC_DSD.RMO_COD = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.RMO_COD:=0;
                ELSE
                CLIENTES_FIX_DSD.RMO_COD:=
                        CLIENTES_READ_LOC_DSD.RMO_COD;
                CLIENTES_FIX_DSD.COD_STATUS:=
                        CLIENTES_READ_LOC_DSD.COD_STATUS;
                CLIENTES_FIX_DSD.FCH_STATUS:=
                        CLIENTES_READ_LOC_DSD.FCH_STATUS;
                CLIENTES_FIX_DSD.CESION_MEDICAID:=
                        CLIENTES_READ_LOC_DSD.CESION_MEDICAID;
                CLIENTES_FIX_DSD.NOMBRE_PLAN_MEDICO:=
                        CLIENTES_READ_LOC_DSD.NOMBRE_PLAN_MEDICO;
                CLIENTES_FIX_DSD.TIPO_CUBIERTA_MEDICARE:=
                        CLIENTES_READ_LOC_DSD.TIPO_CUBIERTA_MEDICARE;
                CLIENTES_FIX_DSD.DSC_APODO:=
                        CLIENTES_READ_LOC_DSD.DSC_APODO;
                CLIENTES_FIX_DSD.FLG_PRES:=
                        CLIENTES_READ_LOC_DSD.FLG_PRES;
                CLIENTES_FIX_DSD.FLG_TANF:=
                        CLIENTES_READ_LOC_DSD.FLG_TANF;
                CLIENTES_FIX_DSD.TIPO_REGISTRO:=
                        CLIENTES_READ_LOC_DSD.TIPO_REGISTRO;
                IF CLIENTES_READ_LOC_DSD.MESES_SWIP = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.MESES_SWIP := 0;
                ELSE
                CLIENTES_FIX_DSD.MESES_SWIP:=
                        CLIENTES_READ_LOC_DSD.MESES_SWIP;
                CLIENTES_FIX_DSD.ESTUDIA_TIEMPO_COMPLETO:=
                        CLIENTES_READ_LOC_DSD.ESTUDIA_TIEMPO_COMPLETO;
                CLIENTES_FIX_DSD.ASISTE_REGULARIDAD:=
                        CLIENTES_READ_LOC_DSD.ASISTE_REGULARIDAD;
                CLIENTES_FIX_DSD.CONVICTO_SUSTANCIAS:=
                        CLIENTES_READ_LOC_DSD.CONVICTO_SUSTANCIAS;
                CLIENTES_FIX_DSD.CONVICTO_SUSTANCIAS_F_E:=
                        CLIENTES_READ_LOC_DSD.CONVICTO_SUSTANCIAS_F_E;
                CLIENTES_FIX_DSD.CONVICTO_DECL_FRAUD:=
                        CLIENTES_READ_LOC_DSD.CONVICTO_DECL_FRAUD;
                CLIENTES_FIX_DSD.CONVICTO_DECL_FRAUD_F_E:=
                        CLIENTES_READ_LOC_DSD.CONVICTO_DECL_FRAUD_F_E;
                CLIENTES_FIX_DSD.VIOLACION_PROBATORIA:=
                        CLIENTES_READ_LOC_DSD.VIOLACION_PROBATORIA;
                CLIENTES_FIX_DSD.VIOLACION_PROBATORIA_F_E:=
                        CLIENTES_READ_LOC_DSD.VIOLACION_PROBATORIA_F_E;
                CLIENTES_FIX_DSD.HUELGA:=
                        CLIENTES_READ_LOC_DSD.HUELGA;
                IF CLIENTES_READ_LOC_DSD.CONTEO_60_MESES_TANF = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.CONTEO_60_MESES_TANF :=0;
                ELSE
                CLIENTES_FIX_DSD.CONTEO_60_MESES_TANF:=
                        CLIENTES_READ_LOC_DSD.CONTEO_60_MESES_TANF;
                CLIENTES_FIX_DSD.FCH_VENCIMIENTO_DESC:=
                        CLIENTES_READ_LOC_DSD.FCH_VENCIMIENTO_DESC;
                CLIENTES_FIX_DSD.FCH_CIERRE_DESCA:=
                        CLIENTES_READ_LOC_DSD.FCH_CIERRE_DESCA;
                CLIENTES_FIX_DSD.MOTIVOS_ELEGIBILIDAD:=
                        CLIENTES_READ_LOC_DSD.MOTIVOS_ELEGIBILIDAD;
                CLIENTES_FIX_DSD.FCH_FIRMO_PRI:=
                        CLIENTES_READ_LOC_DSD.FCH_FIRMO_PRI;
                CLIENTES_FIX_DSD.FCH_ENTREGA_AUTOGESTION:=
                        CLIENTES_READ_LOC_DSD.FCH_ENTREGA_AUTOGESTION;
                CLIENTES_FIX_DSD.FCH_REFERIDO_MANEJO:=
                        CLIENTES_READ_LOC_DSD.FCH_REFERIDO_MANEJO;
                CLIENTES_FIX_DSD.ESTATUS_PART_TRABAJO:=
                        CLIENTES_READ_LOC_DSD.ESTATUS_PART_TRABAJO;
                CLIENTES_FIX_DSD.FCH_EFECT_DESCA:=
                        CLIENTES_READ_LOC_DSD.FCH_EFECT_DESCA;
                IF CLIENTES_READ_LOC_DSD.MESES_EXENCION_TANF = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.MESES_EXENCION_TANF := 0;
                ELSE
                CLIENTES_FIX_DSD.MESES_EXENCION_TANF:=
                        CLIENTES_READ_LOC_DSD.MESES_EXENCION_TANF;
                CLIENTES_FIX_DSD.FLG_PTRA:=
                        CLIENTES_READ_LOC_DSD.FLG_PTRA;
                CLIENTES_FIX_DSD.FLG_VET:=
                        CLIENTES_READ_LOC_DSD.FLG_VET;
                CLIENTES_FIX_DSD.FLG_18ANOS:=
                        CLIENTES_READ_LOC_DSD.FLG_18ANOS;
                CLIENTES_FIX_DSD.FLG_60ANOS:=
                        CLIENTES_READ_LOC_DSD.FLG_60ANOS;
                CLIENTES_FIX_DSD.FLG_5MESES:=
                        CLIENTES_READ_LOC_DSD.FLG_5MESES;
                CLIENTES_FIX_DSD.FECHA_DESDE_EXEN:=
                        CLIENTES_READ_LOC_DSD.FECHA_DESDE_EXEN;
                CLIENTES_FIX_DSD.FECHA_HASTA_EXEN:=
                        CLIENTES_READ_LOC_DSD.FECHA_HASTA_EXEN;
                IF CLIENTES_READ_LOC_DSD.REMANENTE = NULLVALUE
                THEN
                CLIENTES_FIX_DSD.REMANENTE := 0;
                ELSE
                CLIENTES_FIX_DSD.REMANENTE:=
                        CLIENTES_READ_LOC_DSD.REMANENTE;
                CLIENTES_FIX_DSD.FECHA_REGISTRO:=
                        CLIENTES_READ_LOC_DSD.FECHA_REGISTRO;
                CLIENTES_FIX_DSD.FCH_JUNTA_MEDICA:=
                        CLIENTES_READ_LOC_DSD.FCH_JUNTA_MEDICA;
                CLIENTES_FIX_DSD.DSC_ASISTE_REGULARIDAD:=
                        CLIENTES_READ_LOC_DSD.DSC_ASISTE_REGULARIDAD;
                CLIENTES_FIX_DSD.FCH_VENCIMIENTO_DESC_AE:=
                        CLIENTES_READ_LOC_DSD.FCH_VENCIMIENTO_DESC_AE;
                CLIENTES_FIX_DSD.FCH_CIERRE_DESCA_AE:=
                        CLIENTES_READ_LOC_DSD.FCH_CIERRE_DESCA_AE;
                CLIENTES_FIX_DSD.FCH_EFECT_DESCA_AE:=
                        CLIENTES_READ_LOC_DSD.FCH_EFECT_DESCA_AE;
                CLIENTES_FIX_DSD.RMO_OFICINA := 
                        CLIENTES_READ_LOC_DSD.RMO_OFICINA;
                CLIENTES_FIX_DSD.OCUPACION1 := 
                        CLIENTES_READ_LOC_DSD.OCUPACION1;
                CLIENTES_FIX_DSD.OCUPACION2 :=
                        CLIENTES_READ_LOC_DSD.OCUPACION2;
                CLIENTES_FIX_DSD.OCUPACION3 :=
                        CLIENTES_READ_LOC_DSD.OCUPACION3;
                CLIENTES_FIX_DSD.ACEPTA_REGISTRO_EMPLEO :=
                        CLIENTES_READ_LOC_DSD.ACEPTA_REGISTRO_EMPLEO;
                CLIENTES_FIX_DSD.ACTIVO_REGISTRO_EMPLEO :=
                        CLIENTES_READ_LOC_DSD.ACTIVO_REGISTRO_EMPLEO;
                CLIENTES_FIX_DSD.RMO_OFICINA := 
                        CLIENTES_READ_LOC_DSD.RMO_OFICINA;
                DB_INSERT(OPEN_ID6,STATUS_CODE6);
{ UPLOAD DE INGRESOS DEL CLIENTE }

                DB_RESET(OPEN_ID3,STATUS_CODE3);

                INGRESOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE:=
                        CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE;
                INGRESOS_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY(OPEN_ID3,STATUS_CODE3);
                DB_GET_FIRST(OPEN_ID3,STATUS_CODE3);

                WHILE STATUS_CODE3 = 0 DO
                BEGIN
                     IF INGRESOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE = NULLVALUE
                     THEN
                     INGRESOS_CLIENTE_FIX.SEGURO_SOCIAL_CLIENTE:=0;
                     ELSE
                     INGRESOS_CLIENTE_FIX.SEGURO_SOCIAL_CLIENTE:=
                        INGRESOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE;
                     INGRESOS_CLIENTE_FIX.COD_TIPO_INGRESO:=
                        INGRESOS_READ_LOC_DSD.COD_TIPO_INGRESO;
                     IF INGRESOS_READ_LOC_DSD.VLR_CANTIDAD_INGRESO = NULLVALUE
                     THEN
                     INGRESOS_CLIENTE_FIX.VLR_CANTIDAD_INGRESO:=0;
                     ELSE
                     INGRESOS_CLIENTE_FIX.VLR_CANTIDAD_INGRESO:=
                        INGRESOS_READ_LOC_DSD.VLR_CANTIDAD_INGRESO;
                     INGRESOS_CLIENTE_FIX.DSC_OBS_INGRESO:=
                        INGRESOS_READ_LOC_DSD.DSC_OBS_INGRESO;
                     INGRESOS_CLIENTE_FIX.DSC_NOMBRE_PATRONO:=
                        INGRESOS_READ_LOC_DSD.DSC_NOMBRE_PATRONO;
                     INGRESOS_CLIENTE_FIX.FLG_PAN:=
                        INGRESOS_READ_LOC_DSD.FLG_PAN;
                     INGRESOS_CLIENTE_FIX.FLG_AE:=
                        INGRESOS_READ_LOC_DSD.FLG_AE;
                     IF INGRESOS_READ_LOC_DSD.VLR_CANTIDAD_REHABILITACION = NULL
VALUE
                     THEN
                     INGRESOS_CLIENTE_FIX.VLR_CANTIDAD_REHABILITACION:=0;
                     ELSE
                     INGRESOS_CLIENTE_FIX.VLR_CANTIDAD_REHABILITACION:=
                        INGRESOS_READ_LOC_DSD.VLR_CANTIDAD_REHABILITACION;
                     INGRESOS_CLIENTE_FIX.FLG_FRECUENCIA :=
                        INGRESOS_READ_LOC_DSD.FLG_FRECUENCIA;
                     INGRESOS_CLIENTE_FIX.FCH_HASTA_CANT_REHAB :=
                        INGRESOS_READ_LOC_DSD.FCH_HASTA_CANT_REHAB;
                     INGRESOS_CLIENTE_FIX.RMO_OFICINA := 
                        INGRESOS_READ_LOC_DSD.RMO_OFICINA;                   
                     INGRESOS_CLIENTE_FIX.FCH_RECIBO_GLOB :=
                        INGRESOS_READ_LOC_DSD.FCH_RECIBIO_GLOB;
                DB_INSERT(OPEN_ID8,STATUS_CODE8);       
                DB_GET_NEXT(OPEN_ID3,STATUS_CODE3);
                END;

{ UPLOAD DE RECURSOS DEL CLIENTE }

                DB_RESET(OPEN_ID4,STATUS_CODE4);
                RECURSOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE:=
                        CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE;
                RECURSOS_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY(OPEN_ID4,STATUS_CODE4);
                DB_GET_FIRST(OPEN_ID4,STATUS_CODE4);
                WHILE STATUS_CODE4 = 0 DO
                BEGIN
                     IF RECURSOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE = NULLVALUE
                     THEN
                     RECURSOS_CLIENTE_FIX.SEGURO_SOCIAL_CLIENTE:=0;
                     ELSE
                     RECURSOS_CLIENTE_FIX.SEGURO_SOCIAL_CLIENTE:=
                        RECURSOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE;
                     RECURSOS_CLIENTE_FIX.COD_TIPO_RECURSO:=
                        RECURSOS_READ_LOC_DSD.COD_TIPO_RECURSO;
                     IF RECURSOS_READ_LOC_DSD.VLR_CANTIDAD_RECURSO = NULLVALUE
                     THEN
                     RECURSOS_CLIENTE_FIX.VLR_CANTIDAD_RECURSO:= 0;
                     ELSE
                     RECURSOS_CLIENTE_FIX.VLR_CANTIDAD_RECURSO:=
                        RECURSOS_READ_LOC_DSD.VLR_CANTIDAD_RECURSO;
                     RECURSOS_CLIENTE_FIX.DSC_OBS_RECURSO:=
                        RECURSOS_READ_LOC_DSD.DSC_OBS_RECURSO;
                     RECURSOS_CLIENTE_FIX.RMO_OFICINA :=
                        RECURSOS_READ_LOC_DSD.RMO_OFICINA;
                DB_INSERT(OPEN_ID9,STATUS_CODE9);
                DB_GET_NEXT(OPEN_ID4,STATUS_CODE4);
                END;

{ UPLOAD DEDUCCIONES DEL CLIENTE }

                DB_RESET(OPEN_ID5,STATUS_CODE5);
                DEDUCCIONES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE:=
                        CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE;
                DEDUCCIONES_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY(OPEN_ID5,STATUS_CODE5);
                DB_GET_FIRST(OPEN_ID5,STATUS_CODE5);
                WHILE STATUS_CODE5 = 0 DO
                BEGIN
                     IF DEDUCCIONES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE = NULLVAL
UE
                     THEN
                     DEDUCCIONES_CLIENTE_FIX.SEGURO_SOCIAL_CLIENTE:=0;
                     ELSE
                     DEDUCCIONES_CLIENTE_FIX.SEGURO_SOCIAL_CLIENTE:=
                        DEDUCCIONES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE;
                     DEDUCCIONES_CLIENTE_FIX.COD_TIPO_DEDUCCIONE:=
                        DEDUCCIONES_READ_LOC_DSD.COD_TIPO_DEDUCCIONE;
                     IF DEDUCCIONES_READ_LOC_DSD.VLR_CANTIDAD_DEDUCCIONE = NULLV
ALUE
                     THEN
                     DEDUCCIONES_CLIENTE_FIX.VLR_CANTIDAD_DEDUCCIONE:=0;
                     ELSE
                     DEDUCCIONES_CLIENTE_FIX.VLR_CANTIDAD_DEDUCCIONE:=
                        DEDUCCIONES_READ_LOC_DSD.VLR_CANTIDAD_DEDUCCIONE;
                     DEDUCCIONES_CLIENTE_FIX.DSC_OBS_DEDUCC:=
                        DEDUCCIONES_READ_LOC_DSD.DSC_OBS_DEDUCCIONE;
                     DEDUCCIONES_CLIENTE_FIX.RMO_OFICINA :=
                        DEDUCCIONES_READ_LOC_DSD.RMO_OFICINA;
                DB_INSERT(OPEN_ID10,STATUS_CODE10);
                DB_GET_NEXT(OPEN_ID5,STATUS_CODE5);
                END;
        DB_GET_NEXT(OPEN_ID,STATUS_CODE);
        END;
{ NUCLEO DE SERVICIOS }
                DB_RESET(OPEN_ID2,STATUS_CODE2);
                NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
                NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
                NUCLEO_READ_LOC_DSD.COD_SERVICIO := COD_SERV_GBL;
                NUCLEO_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                NUCLEO_READ_LOC_DSD.RMO_OFICINA2:=RMO_GBL;
                DB_QUERY(OPEN_ID2,STATUS_CODE2);
                DB_GET_FIRST(OPEN_ID2,STATUS_CODE2);
                WHILE STATUS_CODE2 = 0 DO
                BEGIN
                NUCLEO_SERVICIO_FIX.SEGURO_SOCIAL_JEFE_FAM:=
                        NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM;
                NUCLEO_SERVICIO_FIX.SEGURO_SOCIAL_JEFE_SERV:=
                        NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV;
                NUCLEO_SERVICIO_FIX.COD_SERVICIO:=
                        NUCLEO_READ_LOC_DSD.COD_SERVICIO;
                NUCLEO_SERVICIO_FIX.SEGURO_SOCIAL_BENEFICIARIO:=
                        NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO;
                NUCLEO_SERVICIO_FIX.COD_PARENTESCO_RELACION_SERV:=
                        NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV;
                NUCLEO_SERVICIO_FIX.RMO_OFICINA := 
                        NUCLEO_READ_LOC_DSD.RMO_OFICINA;
                DB_INSERT(OPEN_ID7,STATUS_CODE7);
                DB_GET_NEXT(OPEN_ID2,STATUS_CODE2);
                END;

{ INFO BILLETES}
                DB_RESET(OPEN_ID11,STATUS_CODE11);
                BILLETES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE := CLIENTES_READ_LOC
_DSD.SEGURO_SOCIAL_CLIENTE;
                BILLETES_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY(OPEN_ID11,STATUS_CODE11);
                DB_GET_FIRST(OPEN_ID11,STATUS_CODE11);
                WHILE STATUS_CODE11 = 0 DO
                BEGIN
                        IF BILLETES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE = NULLVAL
UE
                        THEN
                           BILLETES_FIX.SEGURO_SOCIAL_CLIENTE := 0;
                        ELSE
                           BILLETES_FIX.SEGURO_SOCIAL_CLIENTE := 
                                BILLETES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE;
                        
                        IF BILLETES_READ_LOC_DSD.CANT_BILLETE_EXTRA = NULLVALUE
                        THEN
                        BILLETES_FIX.CANT_BILLETE_EXTRA := 0;
                        ELSE
                        BILLETES_FIX.CANT_BILLETE_EXTRA := BILLETES_READ_LOC_DSD
.CANT_BILLETE_EXTRA;

                        IF BILLETES_READ_LOC_DSD.CANT_BILLETE_ORDINARIO = NULLVA
LUE
                        THEN
                        BILLETES_FIX.CANT_BILLETE_ORDINARIO := 0;
                        ELSE
                        BILLETES_FIX.CANT_BILLETE_ORDINARIO := BILLETES_READ_LOC
_DSD.CANT_BILLETE_ORDINARIO;

                        BILLETES_FIX.COD_TIPO_INGRESO := BILLETES_READ_LOC_DSD.C
OD_TIPO_INGRESO;
                        BILLETES_FIX.FECHA_EFECTIVIDAD := BILLETES_READ_LOC_DSD.
FECHA_EFECTIVIDAD;

                        IF BILLETES_READ_LOC_DSD.GANANCIA_ANUAL_EXTRA = NULLVALU
E
                        THEN
                        BILLETES_FIX.GANANCIA_ANUAL_EXTRA := 0;
                        ELSE
                        BILLETES_FIX.GANANCIA_ANUAL_EXTRA := BILLETES_READ_LOC_D
SD.GANANCIA_ANUAL_EXTRA;
                
                        IF BILLETES_READ_LOC_DSD.GANANCIA_ANUAL_ORD = NULLVALUE
                        THEN
                        BILLETES_FIX.GANANCIA_ANUAL_ORD := 0;
                        ELSE
                        BILLETES_FIX.GANANCIA_ANUAL_ORD := BILLETES_READ_LOC_DSD
.GANANCIA_ANUAL_ORD;

                        IF BILLETES_READ_LOC_DSD.GANANCIA_SEMANAL_EXTRA = NULLVA
LUE
                        THEN
                        BILLETES_FIX.GANANCIA_SEMANAL_EXTRA := 0;
                        ELSE
                        BILLETES_FIX.GANANCIA_SEMANAL_EXTRA := BILLETES_READ_LOC
_DSD.GANANCIA_SEMANAL_EXTRA;
                
                        IF BILLETES_READ_LOC_DSD.GANANCIA_SEMANAL_ORD = NULLVALU
E
                        THEN
                        BILLETES_FIX.GANANCIA_SEMANAL_ORD := 0;
                        ELSE
                        BILLETES_FIX.GANANCIA_SEMANAL_ORD := BILLETES_READ_LOC_D
SD.GANANCIA_SEMANAL_ORD;

                        IF BILLETES_READ_LOC_DSD.INGRESO_ANUAL = NULLVALUE
                        THEN
                        BILLETES_FIX.INGRESO_ANUAL := 0;
                        ELSE
                        BILLETES_FIX.INGRESO_ANUAL := BILLETES_READ_LOC_DSD.INGR
ESO_ANUAL;

                        IF BILLETES_READ_LOC_DSD.INGRESO_MENSUAL = NULLVALUE
                        THEN
                        BILLETES_FIX.INGRESO_MENSUAL := 0;
                        ELSE
                        BILLETES_FIX.INGRESO_MENSUAL := BILLETES_READ_LOC_DSD.IN
GRESO_MENSUAL;                                  
                        
                        BILLETES_FIX.RMO_OFICINA :=
                                BILLETES_READ_LOC_DSD.RMO_OFICINA;
                DB_INSERT(OPEN_ID12,STATUS_CODE12);
                DB_GET_NEXT(OPEN_ID11,STATUS_CODE11);
                END;

        DB_COMMIT(STATUS_CODE6);

        DB_CLOSE(OPEN_ID,STATUS_CODE);
        DB_CLOSE(OPEN_ID2,STATUS_CODE2);
        DB_CLOSE(OPEN_ID3,STATUS_CODE3);
        DB_CLOSE(OPEN_ID4,STATUS_CODE4);
        DB_CLOSE(OPEN_ID5,STATUS_CODE5);
        DB_CLOSE(OPEN_ID6,STATUS_CODE6);
        DB_CLOSE(OPEN_ID7,STATUS_CODE7);
        DB_CLOSE(OPEN_ID8,STATUS_CODE8);
        DB_CLOSE(OPEN_ID9,STATUS_CODE9);
        DB_CLOSE(OPEN_ID10,STATUS_CODE10);
        DB_CLOSE(OPEN_ID11,STATUS_CODE11);
        DB_CLOSE(OPEN_ID12,STATUS_CODE12);

SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
