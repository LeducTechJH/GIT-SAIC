package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class INFO_BIO_BEF_UPD_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static INFO_BIO_BEF_UPD_ADL get ( RallyApplication __app )
  {
    INFO_BIO_BEF_UPD_ADL adl = new INFO_BIO_BEF_UPD_ADL ( );
    __app.register ( adl, "INFO_BIO_BEF_UPD_ADL" );
    __app.setADL ( INFO_BIO_BEF_UPD_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    INFO_BIO_BEF_UPD_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    INFO_BIO_BEF_UPD_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "INFO_BIO_BEF_UPD_ADL" );
    if ( rObj != null && rObj instanceof INFO_BIO_BEF_UPD_ADL )
    {
      this.app.setADL ( INFO_BIO_BEF_UPD_ADL.class, ( INFO_BIO_BEF_UPD_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "INFO_BIO_BEF_UPD_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "INFO_BIO_BEF_UPD_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {
    String TELEFONO_HOGAR = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TELEFONO_HOGAR");
    String TELEFONO_TRABAJO = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TELEFONO_TRABAJO");
    // remove mask characters
    TELEFONO_HOGAR = removeChar(TELEFONO_HOGAR, '(' );
    TELEFONO_HOGAR = removeChar(TELEFONO_HOGAR, ')' );
    TELEFONO_HOGAR = removeChar(TELEFONO_HOGAR, ' ' );
    TELEFONO_HOGAR = removeChar(TELEFONO_HOGAR, '-' );
    if(TELEFONO_HOGAR.length() < 10 && TELEFONO_HOGAR.length() == 7)
    {
      TELEFONO_HOGAR = "787" + TELEFONO_HOGAR;
    }
    TELEFONO_TRABAJO = removeChar(TELEFONO_TRABAJO, '(' );
    TELEFONO_TRABAJO = removeChar(TELEFONO_TRABAJO, ')' );
    TELEFONO_TRABAJO = removeChar(TELEFONO_TRABAJO, ' ' );
    TELEFONO_TRABAJO = removeChar(TELEFONO_TRABAJO, '-' );
    if(TELEFONO_TRABAJO.length() < 10 && TELEFONO_TRABAJO.length() == 7)
    {
    	TELEFONO_TRABAJO = "787" + TELEFONO_TRABAJO;
    }
    this.app.form ( "INFOR_BIO_FRM" ).setItem ( "TELEFONO_HOGAR", TELEFONO_HOGAR  );
    this.app.form ( "INFOR_BIO_FRM" ).setItem ( "TELEFONO_TRABAJO", TELEFONO_TRABAJO  );

  }
  
  protected static String removeChar(String s, char c) {
	String r = "";
	for (int i = 0; i < s.length(); i ++) {
	  if (s.charAt(i) != c) r += s.charAt(i);
	}
	return r;
  }

}
