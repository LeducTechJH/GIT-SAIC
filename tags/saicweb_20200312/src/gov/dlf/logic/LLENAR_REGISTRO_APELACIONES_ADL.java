package gov.dlf.logic;


import gov.dlf.facade.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class LLENAR_REGISTRO_APELACIONES_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RMO_ID = 0;

  public double RMO_STATUS = 0;



  public DataStore RMO_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRMO_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRMO_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_STATUS = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getRMO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_RO_DSD;
  }


  /**  */
  public static void setRMO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_RO_DSD = value;
  }


  /**  */
  public static void setRMO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRMO_ID  ( RallyApplication __app )
  {
    return ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_ID;
  }


  /**  */
  public static Double getRMO_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_ID );
  }


  /**  */
  public static void setRMO_ID  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_ID = value;
  }


  /**  */
  public static void setRMO_ID  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRMO_STATUS  ( RallyApplication __app )
  {
    return ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_STATUS;
  }


  /**  */
  public static Double getRMO_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_STATUS );
  }


  /**  */
  public static void setRMO_STATUS  ( RallyApplication __app, double value )
  {
    ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_STATUS = value;
  }


  /**  */
  public static void setRMO_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( LLENAR_REGISTRO_APELACIONES_ADL ) __app.getADL ( LLENAR_REGISTRO_APELACIONES_ADL.class ) ).RMO_STATUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static LLENAR_REGISTRO_APELACIONES_ADL get ( RallyApplication __app )
  {
    LLENAR_REGISTRO_APELACIONES_ADL adl = new LLENAR_REGISTRO_APELACIONES_ADL ( );
    __app.register ( adl, "LLENAR_REGISTRO_APELACIONES_ADL" );
    __app.setADL ( LLENAR_REGISTRO_APELACIONES_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    LLENAR_REGISTRO_APELACIONES_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    LLENAR_REGISTRO_APELACIONES_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "LLENAR_REGISTRO_APELACIONES_ADL" );
    if ( rObj != null && rObj instanceof LLENAR_REGISTRO_APELACIONES_ADL )
    {
      this.app.setADL ( LLENAR_REGISTRO_APELACIONES_ADL.class, ( LLENAR_REGISTRO_APELACIONES_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "LLENAR_REGISTRO_APELACIONES_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "LLENAR_REGISTRO_APELACIONES_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.form ( "REGISTRO_APELACIONES_RPT" ).setItem ( "FECHA_DESDE", this.app.FECHA_DESDE_GBL  );
    this.app.form ( "REGISTRO_APELACIONES_RPT" ).setItem ( "FECHA_HASTA", this.app.FECHA_HASTA_GBL  );
    RMO_RO_DSD = this.dm.create ( "RMO_RO_DSD" );
    RMO_ID = RMO_RO_DSD.getId ( );
    RMO_STATUS = RallyDataStoreException.getDefault ( );

    RMO_STATUS  = this.dm.reset ( RMO_ID );

    this.dm.setField ( this.dm.get ( "RMO_RO_DSD" ), "COD_RMO", this.app.RMO_GBL );

    RMO_STATUS  = this.dm.limitQueryFromBuffer ( RMO_ID );
    RMO_STATUS  = this.dm.retrieve ( RMO_ID );

    RMO_STATUS  = this.dm.firstRow ( RMO_ID );

    this.app.form ( "REGISTRO_APELACIONES_RPT" ).setItem ( "OFICINA_LOCAL", this.dm.getFieldString ( this.dm.get ( "RMO_RO_DSD" ), "DSC_OFICINA" )  );
    this.app.form ( "REGISTRO_APELACIONES_RPT" ).setItem ( "REGION_OFICINA", this.dm.getFieldString ( this.dm.get ( "RMO_RO_DSD" ), "DSC_REG" )  );
    RMO_STATUS  = this.dm.dbClose ( RMO_ID );

  }
}



/* ---------------------------------------------------------------------


     
procedure llenar_registro_apelaciones_adl;
var
        rmo_id  : number(9,0);
        rmo_status : number(9,0);


begin
set_trace();

        REGISTRO_APELACIONES_RPT.FECHA_DESDE := fecha_desde_gbl;
        REGISTRO_APELACIONES_RPT.FECHA_HASTA := fecha_hasta_gbl;

        db_open(RMO_RO_DSD,rmo_id,rmo_status);
        db_reset(rmo_id,rmo_status);

        RMO_RO_DSD.COD_RMO := RMO_GBL;

        db_query(rmo_id,rmo_status);
        db_get_first(rmo_id,rmo_status);
        
        REGISTRO_APELACIONES_RPT.OFICINA_LOCAL := RMO_RO_DSD.DSC_OFICINA;
        REGISTRO_APELACIONES_RPT.REGION_OFICINA := RMO_RO_DSD.DSC_REG;

        db_close(rmo_id,rmo_status);

set_notrace();
end;
    



--------------------------------------------------------------------- */
