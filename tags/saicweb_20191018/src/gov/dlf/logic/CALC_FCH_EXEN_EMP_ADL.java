package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CALC_FCH_EXEN_EMP_ADL
extends ADL
{
	// -------------------------------------------------------------------
	// ----------   Class Attributes   -----------------------------------

	/**  */
	public static boolean staticCall = true;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes   --------------------------------

	/**  */
	public SAIC_DMQ_ORA_Application app;
	/**  */
	public RallyDataManager dm = null;

	  public double INGRESOS_CLIENTE_2_DSD_ID = 0;
	  
	  public double INGRESOS_CLIENTE_2_STATUS_CODE = 0;
	  
	  public DataStore INGRESOS_CLIENTE_2_RO_DSD = null;

	// -------------------------------------------------------------------
	// ----------   Instance Condition Attributes   ----------------------



	// -------------------------------------------------------------------
	// ----------   Instance Export Attributes   -------------------------





	// -------------------------------------------------------------------
	// ----------   Instance Attributes' Access Methods   ----------------




	// -------------------------------------------------------------------
	// ----------   Methods   --------------------------------------------

	/**
	 * 
	 * @param __app
	 * @return
	 */
	public static CALC_FCH_EXEN_EMP_ADL get ( RallyApplication __app )
	{
		CALC_FCH_EXEN_EMP_ADL adl = new CALC_FCH_EXEN_EMP_ADL ( );
		__app.register ( adl, "CALC_FCH_EXEN_EMP_ADL" );
		__app.setADL ( CALC_FCH_EXEN_EMP_ADL.class, adl ); 
		adl.setApplication ( __app );
		return adl;
	}


	/**
	 *
	 * @param __app
	 * @param ps
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app, ParameterSet ps )
	{
		CALC_FCH_EXEN_EMP_ADL.get ( __app ).process ( ps );
	}


	/**
	 *
	 * @param __app
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app )
	{
		ParameterSet ps = null;
		CALC_FCH_EXEN_EMP_ADL.exec ( __app, ps );
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param __app
	 */
	public void setApplication ( RallyApplication __app )
	{
		this.app = ( SAIC_DMQ_ORA_Application ) __app;
		if ( this.app != null )
		{
			this.dm = ( RallyDataManager ) this.app.getDataManager ( );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param parms
	 */
	public void execute ( ParameterSet parms )
	{
		this.process ( parms );
	}




	/**
	 *
	 */
	protected void doReturn ( )
	{
		this.unregister ( );
	}


	/**
	 *
	 */
	public void unregister ( )
	{
		this.app.unregister ( this );
		IRegisteredObject rObj = this.app.get ( "CALC_FCH_EXEN_EMP_ADL" );
		if ( rObj != null && rObj instanceof CALC_FCH_EXEN_EMP_ADL )
		{
			this.app.setADL ( CALC_FCH_EXEN_EMP_ADL.class, ( CALC_FCH_EXEN_EMP_ADL ) rObj );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param ps
	 */
	protected void process ( ParameterSet ps )
	{
		Debug.println ( Debug.TRACE, "CALC_FCH_EXEN_EMP_ADL Step " + this.currentStep );
		super.process ( ps );
		switch ( this.currentStep ) 
		{
		case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
		case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
		default: 
		{ 
			this.currentStep = 0;
			Debug.println ( Debug.TRACE, "CALC_FCH_EXEN_EMP_ADL ended" );
			this.unregister ( );
			break;
		}
		}
		if ( this.currentStep > 0 ) this.app.goOn ( );
	}
	protected void step0 ( ParameterSet ps )
	{
	    INGRESOS_CLIENTE_2_RO_DSD = this.dm.create ( "INGRESOS_CLIENTE_2_RO_DSD" );
	    INGRESOS_CLIENTE_2_DSD_ID = INGRESOS_CLIENTE_2_RO_DSD.getId ( );
	    INGRESOS_CLIENTE_2_STATUS_CODE = RallyDataStoreException.getDefault ( );
	}

	protected void step1 ( ParameterSet ps )
	{
		INGRESOS_CLIENTE_2_STATUS_CODE  = this.dm.reset ( INGRESOS_CLIENTE_2_DSD_ID );

		this.dm.setField ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE",this.app.form ( "PTRA_EMPLEO_FR" ).getValue ( "SSN_CLIENTE" ));
		INGRESOS_CLIENTE_2_STATUS_CODE  = this.dm.limitQueryFromBuffer ( INGRESOS_CLIENTE_2_DSD_ID );
		INGRESOS_CLIENTE_2_STATUS_CODE  = this.dm.retrieve ( INGRESOS_CLIENTE_2_DSD_ID );

		INGRESOS_CLIENTE_2_STATUS_CODE  = this.dm.firstRow ( INGRESOS_CLIENTE_2_DSD_ID );
		double ingreso=0;
		while ( Compare.equals ( INGRESOS_CLIENTE_2_STATUS_CODE, 0 ) )
		{
			if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "SALA" ) ) || 
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "ADIE" ) ) || 
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "NPRO" ) ) ||
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRN" ) ) ||
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "PTRA" ) ) || 
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "RETE" ) ) ||
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "JTPA" ) ) ||
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAC" ) ) || 
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "BIAS" ) ) || 
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "BILV" ) ) ||
 				    ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRB" ) ) || 
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "MARI" ) ) ||  
					( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "COD_TIPO_INGRESO" ), "ACUA" ) ) )
				
					{
			
						if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "FLG_FRECUENCIA" ), "S" ) )
						{
							ingreso = MathService.plus ( ingreso, TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) )* 4.3  );
						}
						else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "FLG_FRECUENCIA" ), "B" ) )
						{
							ingreso = MathService.plus ( ingreso, TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) )* 2.15  );
						}
						else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "FLG_FRECUENCIA" ), "Q" ) )
						{
							ingreso = MathService.plus ( ingreso, TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) )* 2.0  );
						}
						else
						{
							ingreso = MathService.plus ( ingreso, TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_CLIENTE_2_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) )* 1.0  );
						}
			
					}
			this.dm.nextRow(INGRESOS_CLIENTE_2_DSD_ID);
		  }
		this.app.form ( "PTRA_EMPLEO_FR" ).setItem ( "INGRESO",ingreso);
		INGRESOS_CLIENTE_2_STATUS_CODE  = this.dm.dbClose ( INGRESOS_CLIENTE_2_DSD_ID );
		//CALCULAR EXENCIONES 
		if(Compare.equals(this.app.form ( "PTRA_EMPLEO_FR" ).getStringItem( "CAT_EXEN" ), "EPAN"))
		{
			this.app.form ( "PTRA_EMPLEO_FR" ).setItem ( "FECHA_DESDE_EXEN", DateUtil.addMonths (this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem( "FCH_COBRO" ),1 ));
			this.app.form ( "PTRA_EMPLEO_FR" ).setItem ( "FECHA_HASTA_EXEN", DateUtil.addMonths (this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem( "FCH_COBRO" ),18 ));
			this.app.form ( "PTRA_EMPLEO_FR" ).setItem  ("REMANENTE", TruncService.trunc(DateUtil.monthsBetween(TruncService.lastDay(this.app.SYSTEM_DATE), this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem( "FECHA_DESDE_EXEN") )+1));
		}
		else if(Compare.equals(this.app.form ( "PTRA_EMPLEO_FR" ).getStringItem( "CAT_EXEN" ), "ETNF"))
		{
			this.app.form ( "PTRA_EMPLEO_FR" ).setItem ( "FECHA_DESDE_EXEN", DateUtil.addMonths (this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem( "FCH_COBRO" ),1 ));
			this.app.form ( "PTRA_EMPLEO_FR" ).setItem ( "FECHA_HASTA_EXEN", DateUtil.addMonths (this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem( "FCH_COBRO" ),18 ));
			this.app.form ( "PTRA_EMPLEO_FR" ).setItem  ("REMANENTE", TruncService.trunc(DateUtil.monthsBetween(TruncService.lastDay(this.app.SYSTEM_DATE), this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem( "FECHA_DESDE_EXEN") )+1));
		}
	        if ( Compare.ge ( this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem ( "FECHA_HASTA_EXEN" ), TruncService.lastDay ( this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem ( "FCH_TERMINA_EMPLEO" ))  ) ) 
	        {
	          if ( Compare.le ( this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem ( "FECHA_DESDE_EXEN" ), TruncService.lastDay ( this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem ( "FCH_TERMINA_EMPLEO" ))  ) ) 
	          {
	  			this.app.form ( "PTRA_EMPLEO_FR" ).setItem ( "FECHA_HASTA_EXEN", TruncService.lastDay ( this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem ( "FCH_TERMINA_EMPLEO" )));
				this.app.form ( "PTRA_EMPLEO_FR" ).setItem  ("REMANENTE", DateUtil.monthsBetween ( this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem ( "FECHA_DESDE_EXEN" ) , TruncService.lastDay ( this.app.form ( "PTRA_EMPLEO_FR" ).getDateItem ( "FCH_TERMINA_EMPLEO" )))+1 );
	          }
	          else
	          {
	  			this.app.form ( "PTRA_EMPLEO_FR" ).setItem ( "FECHA_DESDE_EXEN", "");
				this.app.form ( "PTRA_EMPLEO_FR" ).setItem ( "FECHA_HASTA_EXEN", "");
				this.app.form ( "PTRA_EMPLEO_FR" ).setItem  ("REMANENTE", 0);
	          }
	        }

	}
}

