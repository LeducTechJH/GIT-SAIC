package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class RR_AUTORI_AFR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMM = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMM  ( RallyApplication __app, Parameter value )
  {
    ( ( RR_AUTORI_AFR_ADL ) __app.getADL ( RR_AUTORI_AFR_ADL.class ) ).COMM = value.getDouble ( );
  }  
    



  /**  */
  public static double getCOMM  ( RallyApplication __app )
  {
    return ( ( RR_AUTORI_AFR_ADL ) __app.getADL ( RR_AUTORI_AFR_ADL.class ) ).COMM;
  }


  /**  */
  public static Double getCOMMDouble ( RallyApplication __app )
  {
    return new Double ( ( ( RR_AUTORI_AFR_ADL ) __app.getADL ( RR_AUTORI_AFR_ADL.class ) ).COMM );
  }


  /**  */
  public static void setCOMM  ( RallyApplication __app, double value )
  {
    ( ( RR_AUTORI_AFR_ADL ) __app.getADL ( RR_AUTORI_AFR_ADL.class ) ).COMM = value;
  }


  /**  */
  public static void setCOMM  ( RallyApplication __app, Object value )
  {
    ( ( RR_AUTORI_AFR_ADL ) __app.getADL ( RR_AUTORI_AFR_ADL.class ) ).COMM = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static RR_AUTORI_AFR_ADL get ( RallyApplication __app )
  {
    RR_AUTORI_AFR_ADL adl = new RR_AUTORI_AFR_ADL ( );
    __app.register ( adl, "RR_AUTORI_AFR_ADL" );
    __app.setADL ( RR_AUTORI_AFR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    RR_AUTORI_AFR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    RR_AUTORI_AFR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "RR_AUTORI_AFR_ADL" );
    if ( rObj != null && rObj instanceof RR_AUTORI_AFR_ADL )
    {
      this.app.setADL ( RR_AUTORI_AFR_ADL.class, ( RR_AUTORI_AFR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "RR_AUTORI_AFR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "RR_AUTORI_AFR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    COMM = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( Compare.equals ( COMM, RallyAppCommandFactory.ABORTACTION ) ) 
    {
      FLUJO_RECLA_RETRO_ADL.setAPEL_STATUS ( this.app, "FAILURE" );
      this.doReturn ( );
      return; 
    }
    if ( Compare.equals ( COMM, RallyAppCommandFactory.EXITACTION ) ) 
    {
      FLUJO_RECLA_RETRO_ADL.setAPEL_STATUS ( this.app, "SUCCESS" );
      this.doReturn ( );
      return; 
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure rr_autori_afr_adl;

var     comm    :       number;

set_trace();


begin
comm := get_cmd();
if comm = ABORTACTION
        then
        begin
        flujo_recla_retro_adl.apel_status := 'FAILURE';
        return;
        end;

if comm = EXITACTION
        then
        begin
        flujo_recla_retro_adl.apel_status := 'SUCCESS';
        return;
        end;

end;

set_notrace();
    



--------------------------------------------------------------------- */
