package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class RETRO_MAYOR_ANO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double NO_MTHS = 0;

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;

  public double ANODESDE = 0;

  public double ANOHASTA = 0;


  public Date TMPDATE = null;

  public String CDATE = null;

  public String C2DATE = null;

  public String FC = null;

  public String PC = null;

  public Date FCID = null;

  public Date PCDE = null;

  public Date FCH_EMISION = null;

  public DataStore GENERAL_TBL_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setTMPDATE  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).TMPDATE = value.getDate ( );
  }  

  
  /**  */
  public static void setCDATE  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).CDATE = value.getString ( );
  }  

  
  /**  */
  public static void setC2DATE  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).C2DATE = value.getString ( );
  }  

  
  /**  */
  public static void setNO_MTHS  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).NO_MTHS = value.getDouble ( );
  }  

  
  /**  */
  public static void setFC  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FC = value.getString ( );
  }  

  
  /**  */
  public static void setPC  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).PC = value.getString ( );
  }  

  
  /**  */
  public static void setFCID  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FCID = value.getDate ( );
  }  

  /**  */
  public static void setANODESDE  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR_ADL ) __app.getADL ( RECLA_HASTA_MAYOR_ADL.class ) ).ANODESDE = value.getDouble ( );
  }  
 
  /**  */
  public static void setANOHASTA  ( RallyApplication __app, Parameter value )
  {
    ( ( RECLA_HASTA_MAYOR_ADL ) __app.getADL ( RECLA_HASTA_MAYOR_ADL.class ) ).ANOHASTA = value.getDouble ( );
  }  

  /**  */
  public static void setPCDE  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).PCDE = value.getDate ( );
  }  

  
  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FCH_EMISION = value.getDate ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  
    


  /**  */
  public static Date getTMPDATE  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).TMPDATE;
  }


  /**  */
  public static void setTMPDATE  ( RallyApplication __app, Date value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).TMPDATE = value;
  }


  /**  */
  public static void setTMPDATE  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).TMPDATE = ( Date ) value;
  }



  /**  */
  public static String getCDATE  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).CDATE;
  }


  /**  */
  public static void setCDATE  ( RallyApplication __app, String value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).CDATE = value;
  }


  /**  */
  public static void setCDATE  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).CDATE = ( String ) value;
  }



  /**  */
  public static String getC2DATE  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).C2DATE;
  }


  /**  */
  public static void setC2DATE  ( RallyApplication __app, String value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).C2DATE = value;
  }


  /**  */
  public static void setC2DATE  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).C2DATE = ( String ) value;
  }



  /**  */
  public static String getFC  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FC;
  }


  /**  */
  public static void setFC  ( RallyApplication __app, String value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FC = value;
  }


  /**  */
  public static void setFC  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FC = ( String ) value;
  }



  /**  */
  public static String getPC  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).PC;
  }


  /**  */
  public static void setPC  ( RallyApplication __app, String value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).PC = value;
  }


  /**  */
  public static void setPC  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).PC = ( String ) value;
  }



  /**  */
  public static Date getFCID  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FCID;
  }


  /**  */
  public static void setFCID  ( RallyApplication __app, Date value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FCID = value;
  }


  /**  */
  public static void setFCID  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FCID = ( Date ) value;
  }



  /**  */
  public static Date getPCDE  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).PCDE;
  }


  /**  */
  public static void setPCDE  ( RallyApplication __app, Date value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).PCDE = value;
  }


  /**  */
  public static void setPCDE  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).PCDE = ( Date ) value;
  }



  /**  */
  public static Date getFCH_EMISION  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FCH_EMISION;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Date value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FCH_EMISION = value;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).FCH_EMISION = ( Date ) value;
  }



  /**  */
  public static DataStore getGENERAL_TBL_DSD  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).GENERAL_TBL_DSD;
  }


  /**  */
  public static void setGENERAL_TBL_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).GENERAL_TBL_DSD = value;
  }


  /**  */
  public static void setGENERAL_TBL_DSD  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).GENERAL_TBL_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getNO_MTHS  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).NO_MTHS;
  }


  /**  */
  public static Double getNO_MTHSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).NO_MTHS );
  }


  /**  */
  public static void setNO_MTHS  ( RallyApplication __app, double value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).NO_MTHS = value;
  }


  /**  */
  public static void setNO_MTHS  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).NO_MTHS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getANODESDE  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR_ADL ) __app.getADL ( RECLA_HASTA_MAYOR_ADL.class ) ).ANODESDE;
  }

  /**  */
  public static double getANOHASTA  ( RallyApplication __app )
  {
    return ( ( RECLA_HASTA_MAYOR_ADL ) __app.getADL ( RECLA_HASTA_MAYOR_ADL.class ) ).ANOHASTA;
  }

  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).STATUS_ID );
  }

  /**  */
  public static Double getANODESDEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( RECLA_HASTA_MAYOR_ADL ) __app.getADL ( RECLA_HASTA_MAYOR_ADL.class ) ).ANODESDE );
  }

  /**  */
  public static Double getANOHASTADouble ( RallyApplication __app )
  {
    return new Double ( ( ( RECLA_HASTA_MAYOR_ADL ) __app.getADL ( RECLA_HASTA_MAYOR_ADL.class ) ).ANOHASTA );
  }

  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( RETRO_MAYOR_ANO_ADL ) __app.getADL ( RETRO_MAYOR_ANO_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }

  /**  */
  public static void setANODESDE  ( RallyApplication __app, double value )
  {
    ( ( RECLA_HASTA_MAYOR_ADL ) __app.getADL ( RECLA_HASTA_MAYOR_ADL.class ) ).ANODESDE = value;
  }

  /**  */
  public static void setANOHASTA  ( RallyApplication __app, double value )
  {
    ( ( RECLA_HASTA_MAYOR_ADL ) __app.getADL ( RECLA_HASTA_MAYOR_ADL.class ) ).ANOHASTA = value;
  }

  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static RETRO_MAYOR_ANO_ADL get ( RallyApplication __app )
  {
    RETRO_MAYOR_ANO_ADL adl = new RETRO_MAYOR_ANO_ADL ( );
    __app.register ( adl, "RETRO_MAYOR_ANO_ADL" );
    __app.setADL ( RETRO_MAYOR_ANO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    RETRO_MAYOR_ANO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    RETRO_MAYOR_ANO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "RETRO_MAYOR_ANO_ADL" );
    if ( rObj != null && rObj instanceof RETRO_MAYOR_ANO_ADL )
    {
      this.app.setADL ( RETRO_MAYOR_ANO_ADL.class, ( RETRO_MAYOR_ANO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "RETRO_MAYOR_ANO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "RETRO_MAYOR_ANO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( Compare.equals ( this.app.form ( "RETRO_INSERT_FR" ).getStringItem ( "CS" ), "AE-C" ) ) 
    {
      this.doReturn ( );
      return; 
    }
    C2DATE = StringService.toStringValue  ( PCDE );

    CDATE = StringService.toStringValue  ( this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "FCID" ));
    GENERAL_TBL_DSD = this.dm.create ( "GENERAL_TBL_DSD" );
    OPEN_ID = GENERAL_TBL_DSD.getId ( );
    STATUS_ID = RallyDataStoreException.getDefault ( );

    STATUS_ID  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_GENERAL", "DATE" );
    if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "RETRO_INSERT_FR" ).getStringItem ( "COD_SERVICIO" ), 0, 3 ), "PAN" ) ) 
    {
      this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_ID", "EPAN" );
    }
    else if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "RETRO_INSERT_FR" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" )  )
    {
      this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_ID", "EAE" );
    }

    STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_ID  = this.dm.retrieve ( OPEN_ID );

    STATUS_ID  = this.dm.firstRow ( OPEN_ID );

    if ( Compare.equals ( STATUS_ID, 0 ) ) 
    {
      FCH_EMISION = RallySpanishDatesParser.parseDateString ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 0, 2 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 2, 3 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 5, 4 ) );
    }
    else
    {
      FCH_EMISION = this.app.SYSTEM_DATE;
    }
    if ( Compare.lt ( FCH_EMISION, this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "PCDE" )) ) 
    {
      this.app.setError ( 0, 7575 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    
    STATUS_ID  = this.dm.dbClose ( OPEN_ID );

    NO_MTHS = DateUtil.monthsBetween ( this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "FCID" ), this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "PCDE" ));
    CDATE = StringService.toStringValue  ( NO_MTHS );
    if ( Compare.ge ( NO_MTHS, 12 ) ) 
    {
      this.app.setError ( 1, 7555 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    if ( ( Compare.equals ( this.app.ACCION_GBL, "RETR" ) ) || ( Compare.equals ( this.app.ACCION_GBL, "RRET" ) ) ) 
    { 
    if ( Compare.gt ( StringService.toStringValue  ( this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "DESDE" ),"MM",StringService.Language.SPANISH ), "09" ) ) 
          ANODESDE = MathService.plus(FormattingFactory.parseStringToDouble (StringService.toStringValue  ( this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "DESDE" ),"YYYY",StringService.Language.SPANISH )),1);
    else
          ANODESDE = FormattingFactory.parseStringToDouble (StringService.toStringValue  ( this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "DESDE" ),"YYYY",StringService.Language.SPANISH ));
     
    if ( Compare.gt ( StringService.toStringValue  ( this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "HASTA" ),"MM",StringService.Language.SPANISH ), "09" ) ) 
        ANOHASTA = MathService.plus(FormattingFactory.parseStringToDouble (StringService.toStringValue  ( this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "HASTA" ),"YYYY",StringService.Language.SPANISH )),1);
    else
        ANOHASTA = FormattingFactory.parseStringToDouble (StringService.toStringValue  ( this.app.form ( "RETRO_INSERT_FR" ).getDateItem ( "HASTA" ),"YYYY",StringService.Language.SPANISH ));

    if ( !Compare.equals ( ANODESDE, ANOHASTA) ) 
    {
      this.app.setError ( 1, 7590 );
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    }
    
  }
}



/* ---------------------------------------------------------------------


     
procedure retro_mayor_ano_adl;

var     tmpdate :       date;
        cdate   :       char;
        c2date  :       char;
        no_mths :       number;
        FC      :       CHAR;
        PC      :       CHAR;
        FCID    :       DATE;
        PCDE    :       DATE;   
        fch_emision:    date;
        open_id :       number;
        status_id:      number;

set_trace();

begin

if retro_insert_fr.cs = 'AE-C'
then
begin
return;
end;

c2date := to_char (PCDE);

debug_log ('C2DATE ' || c2date);

CDATE   := TO_CHAR (RETRO_INSERT_FR.FCID);

debug_log ('CDATE ' || cdate);

DB_open(GENERAL_TBL_DSD,OPEN_ID, STATUS_ID);
DB_RESET(OPEN_ID, STATUS_ID);
GENERAL_TBL_DSD.COD_GENERAL := 'DATE';
IF SUBSTR(RETRO_INSERT_FR.COD_SERVICIO,0,3) = 'PAN' THEN
        GENERAL_TBL_DSD.COD_ID := 'EPAN';
ELSE
        IF SUBSTR(RETRO_INSERT_FR.COD_SERVICIO,0,2) = 'AE' THEN
                GENERAL_TBL_DSD.COD_ID := 'EAE';
DB_QUERY(OPEN_ID, STATUS_ID);
DB_GET_FIRST(OPEN_ID, STATUS_ID);
IF STATUS_ID = 0 THEN
        FCH_EMISION := TO_DATE(SUBSTR(GENERAL_TBL_DSD.DSC_CORTA,0,2) || '-' ||
                                SUBSTR(GENERAL_TBL_DSD.DSC_CORTA,2,3) || '-'||
                                SUBSTR(GENERAL_TBL_DSD.DSC_CORTA,5,4));
ELSE
        FCH_EMISION :=  SYSTEM_DATE;

if  FCH_EMISION  < retro_insert_fr.pcde
then
begin
error(7575);
set_failure();
return;
end;
DB_close(OPEN_ID, STATUS_ID);

no_mths := months_between(retro_insert_fr.fcid, retro_insert_fr.pcde);

cdate := to_char (no_mths);

debug_log ('no mth is ' || cdate);

if no_mths >= 12 
then
begin
error(7555);
set_failure();
return;
end;

end;

set_notrace();
    



--------------------------------------------------------------------- */
