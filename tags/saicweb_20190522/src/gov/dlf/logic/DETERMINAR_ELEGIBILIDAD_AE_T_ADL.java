package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DETERMINAR_ELEGIBILIDAD_AE_T_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double OPEN2_ID = 0;

  public double OPEN3_ID = 0;

  public double OPEN4_ID = 0;

  public double OPEN5_ID = 0;

  public double OPEN6_ID = 0;
  
  public double OPEN12_ID = 0;

  public double STATUS_CODE = 0;

  public double STATUS2_CODE = 0;
  
  public double STATUS12_CODE = 0;

  public double SERVICIO_BENEFICIO = 0;

  public double SAVE_SSN = 0;

  public double RECURSOS_ACUM = 0;

  public double EDAD_IND = 0;

  public double INGRESO_BRUTO = 0;

  public double SALARIO = 0;

  public double SEG_SOC = 0;

  public double OTROS = 0;

  public double INGRESO_NETO = 0;
  
  public double INGRESOS_NUCLEO =0;

  public double CUIDO_MENOR = 0;

  public double CUIDO = 0;

  public double DEDUCCION_INGRESO = 0;

  public double INCAPACITADO = 0;

  public double BENEFICIO = 0;

  public double TOTAL_CUIDO = 0;

  public double GASTOS_INHE = 0;

  public double GASTOS_INHERENTES = 0;

  public double RESTE_30 = 0;

  public double CENTAVOS = 0;
  
  public double NUCLEO=0;
  
  public double GASTOS_NUCLEO=0;

  public double ING_TEMP = 0;

  public double EXCENCION_SAL = 0;

  public double EXCENCION_TRABAJO = 0;

  public double EXCENCION_PROD = 0;

  public double EXCENCION_ALBERGUE = 0;

  public double DEFICIT = 0;

  public double SALARIO_CONYUGUE = 0;

  public double INGRESO_ACREDITABLE = 0;

  public double TOT_INGRE_ACREDI = 0;

  public double NECESIDAD_AJUSTADA = 0;

  public double TOT_AJUSTADA = 0;

  public double TOTAL_OTROS = 0;

  public double BENEFICIO_AUTO = 0;

  public double MENOR = 0;

  public double PARTE_PROP = 0;

  public double NUM_FAMILIA = 0;

  public double INGRESO_BRUTO_PADRES = 0;

  public double GASTOS_PADRES = 0;

  public double SS_MENOR = 0;

  public double EXC_PROD = 0;

  public double SALA = 0;

  public double ADIE = 0;

  public double NPRO = 0;

  public double NUM_MENOR_TRAB = 0;



  public String SERVICIO_STATUS = null;

  public String INELEGIBLE_REG = null;

  public String INELEGIBLE_EMER = null;

  public String RAZON = null;

  public String INELEGIBLE_INGRE_BRUTO = null;

  public String ELEGIBLE_REG = null;

  public String ELEGIBLE_EMER = null;

  public String STATUS = null;
  
  public Date FCH_EMISION=null;

  public DataStore NUCLEO_SERVICIO_DSD = null;

  public DataStore CLIENTES2_RO_DSD = null;

  public DataStore RECURSOS_NUCLEO_RO_DSD = null;

  public DataStore BENEFICIOS_PAN_RO_DSD = null;

  public DataStore INGRESOS_NUCLEO_RO_DSD = null;

  public DataStore GASTOS_NUCLEO_RO_DSD = null;
  
  public DataStore GENERAL_TBL_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN2_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN3_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN4_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN5_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN6_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS2_CODE = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERVICIO_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_STATUS = value.getString ( );
  }  

  
  /**  */
  public static void setSERVICIO_BENEFICIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_BENEFICIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SAVE_SSN = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECURSOS_ACUM  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RECURSOS_ACUM = value.getDouble ( );
  }  

  
  /**  */
  public static void setEDAD_IND  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EDAD_IND = value.getDouble ( );
  }  

  
  /**  */
  public static void setINELEGIBLE_REG  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_REG = value.getString ( );
  }  

  
  /**  */
  public static void setINELEGIBLE_EMER  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_EMER = value.getString ( );
  }  

  
  /**  */
  public static void setRAZON  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RAZON = value.getString ( );
  }  

  
  /**  */
  public static void setINGRESO_BRUTO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALARIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSEG_SOC  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SEG_SOC = value.getDouble ( );
  }  

  
  /**  */
  public static void setOTROS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OTROS = value.getDouble ( );
  }  

  
  /**  */
  public static void setINGRESO_NETO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_NETO = value.getDouble ( );
  }  

  
  /**  */
  public static void setCUIDO_MENOR  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO_MENOR = value.getDouble ( );
  }  

  
  /**  */
  public static void setCUIDO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO = value.getDouble ( );
  }  

  
  /**  */
  public static void setINELEGIBLE_INGRE_BRUTO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_INGRE_BRUTO = value.getString ( );
  }  

  
  /**  */
  public static void setDEDUCCION_INGRESO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEDUCCION_INGRESO = value.getDouble ( );
  }  

  
  /**  */
  public static void setINCAPACITADO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INCAPACITADO = value.getDouble ( );
  }  

  
  /**  */
  public static void setBENEFICIO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setELEGIBLE_REG  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ELEGIBLE_REG = value.getString ( );
  }  

  
  /**  */
  public static void setELEGIBLE_EMER  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ELEGIBLE_EMER = value.getString ( );
  }  

  
  /**  */
  public static void setTOTAL_CUIDO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_CUIDO = value.getDouble ( );
  }  

  
  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHE = value.getDouble ( );
  }  

  
  /**  */
  public static void setGASTOS_INHERENTES  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHERENTES = value.getDouble ( );
  }  

  
  /**  */
  public static void setRESTE_30  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RESTE_30 = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS = value.getString ( );
  }  

  
  /**  */
  public static void setCENTAVOS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CENTAVOS = value.getDouble ( );
  }  

  
  /**  */
  public static void setING_TEMP  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ING_TEMP = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_SAL  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_SAL = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_TRABAJO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_TRABAJO = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_PROD  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_PROD = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXCENCION_ALBERGUE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_ALBERGUE = value.getDouble ( );
  }  

  
  /**  */
  public static void setDEFICIT  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEFICIT = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALARIO_CONYUGUE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO_CONYUGUE = value.getDouble ( );
  }  

  
  /**  */
  public static void setINGRESO_ACREDITABLE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_ACREDITABLE = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOT_INGRE_ACREDI  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_INGRE_ACREDI = value.getDouble ( );
  }  

  
  /**  */
  public static void setNECESIDAD_AJUSTADA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NECESIDAD_AJUSTADA = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOT_AJUSTADA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_AJUSTADA = value.getDouble ( );
  }  

  
  /**  */
  public static void setTOTAL_OTROS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_OTROS = value.getDouble ( );
  }  

  
  /**  */
  public static void setBENEFICIO_AUTO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO_AUTO = value.getDouble ( );
  }  

  
  /**  */
  public static void setMENOR  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).MENOR = value.getDouble ( );
  }  

  
  /**  */
  public static void setPARTE_PROP  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).PARTE_PROP = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_FAMILIA = value.getDouble ( );
  }  

  
  /**  */
  public static void setINGRESO_BRUTO_PADRES  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO_PADRES = value.getDouble ( );
  }  

  public static void setOPEN12_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).OPEN12_ID = value.getDouble ( );
  }  
  
  public static double getOPEN12_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).OPEN12_ID;
  }


  /**  */
  public static Double getOPEN12_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).OPEN12_ID );
  }


  /**  */
  public static void setOPEN12_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).OPEN12_ID = value;
  }


  /**  */
  public static void setOPEN12_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).OPEN12_ID = ( ( Double ) value ).doubleValue ( );
  }
  
  /**  */
  public static void setGASTOS_PADRES  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_PADRES = value.getDouble ( );
  }  

  
  /**  */
  public static void setSS_MENOR  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SS_MENOR = value.getDouble ( );
  }  

  
  /**  */
  public static void setEXC_PROD  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXC_PROD = value.getDouble ( );
  }  

  
  /**  */
  public static void setSALA  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALA = value.getDouble ( );
  }  

  
  /**  */
  public static void setADIE  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ADIE = value.getDouble ( );
  }  

  
  /**  */
  public static void setNPRO  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NPRO = value.getDouble ( );
  }  

  
  /**  */
  public static void setNUM_MENOR_TRAB  ( RallyApplication __app, Parameter value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_MENOR_TRAB = value.getDouble ( );
  }  
    


  /**  */
  public static String getSERVICIO_STATUS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_STATUS;
  }


  /**  */
  public static void setSERVICIO_STATUS  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_STATUS = value;
  }


  /**  */
  public static void setSERVICIO_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_STATUS = ( String ) value;
  }



  /**  */
  public static String getINELEGIBLE_REG  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_REG;
  }


  /**  */
  public static void setINELEGIBLE_REG  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_REG = value;
  }


  /**  */
  public static void setINELEGIBLE_REG  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_REG = ( String ) value;
  }



  /**  */
  public static String getINELEGIBLE_EMER  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_EMER;
  }


  /**  */
  public static void setINELEGIBLE_EMER  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_EMER = value;
  }


  /**  */
  public static void setINELEGIBLE_EMER  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_EMER = ( String ) value;
  }



  /**  */
  public static String getRAZON  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RAZON;
  }


  /**  */
  public static void setRAZON  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RAZON = value;
  }


  /**  */
  public static void setRAZON  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RAZON = ( String ) value;
  }



  /**  */
  public static String getINELEGIBLE_INGRE_BRUTO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_INGRE_BRUTO;
  }


  /**  */
  public static void setINELEGIBLE_INGRE_BRUTO  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_INGRE_BRUTO = value;
  }


  /**  */
  public static void setINELEGIBLE_INGRE_BRUTO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INELEGIBLE_INGRE_BRUTO = ( String ) value;
  }



  /**  */
  public static String getELEGIBLE_REG  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ELEGIBLE_REG;
  }


  /**  */
  public static void setELEGIBLE_REG  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ELEGIBLE_REG = value;
  }


  /**  */
  public static void setELEGIBLE_REG  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ELEGIBLE_REG = ( String ) value;
  }



  /**  */
  public static String getELEGIBLE_EMER  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ELEGIBLE_EMER;
  }


  /**  */
  public static void setELEGIBLE_EMER  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ELEGIBLE_EMER = value;
  }


  /**  */
  public static void setELEGIBLE_EMER  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ELEGIBLE_EMER = ( String ) value;
  }



  /**  */
  public static String getSTATUS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS;
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, String value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS = value;
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS = ( String ) value;
  }

  public static double getSTATUS12_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).STATUS12_CODE;
  }


  /**  */
  public static Double getSTATUS12_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).STATUS12_CODE );
  }


  /**  */
  public static void setSTATUS12_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).STATUS12_CODE = value;
  }


  /**  */
  public static void setSTATUS12_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).STATUS12_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static DataStore getNUCLEO_SERVICIO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUCLEO_SERVICIO_DSD;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUCLEO_SERVICIO_DSD = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUCLEO_SERVICIO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getCLIENTES2_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CLIENTES2_RO_DSD;
  }


  /**  */
  public static void setCLIENTES2_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CLIENTES2_RO_DSD = value;
  }


  /**  */
  public static void setCLIENTES2_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CLIENTES2_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECURSOS_NUCLEO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RECURSOS_NUCLEO_RO_DSD;
  }


  /**  */
  public static void setRECURSOS_NUCLEO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RECURSOS_NUCLEO_RO_DSD = value;
  }


  /**  */
  public static void setRECURSOS_NUCLEO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RECURSOS_NUCLEO_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getBENEFICIOS_PAN_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIOS_PAN_RO_DSD;
  }


  /**  */
  public static void setBENEFICIOS_PAN_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIOS_PAN_RO_DSD = value;
  }


  /**  */
  public static void setBENEFICIOS_PAN_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIOS_PAN_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD;
  }


  /**  */
  public static void setINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD = value;
  }


  /**  */
  public static void setINGRESOS_NUCLEO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESOS_NUCLEO_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_NUCLEO_RO_DSD;
  }


  /**  */
  public static void setGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_NUCLEO_RO_DSD = value;
  }


  /**  */
  public static void setGASTOS_NUCLEO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_NUCLEO_RO_DSD = ( DataStore ) value;
  }

  public static DataStore getGENERAL_TBL_DSD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).GENERAL_TBL_DSD;
  }


  /**  */
  public static void setGENERAL_TBL_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).GENERAL_TBL_DSD = value;
  }


  /**  */
  public static void setGENERAL_TBL_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_A_ADL.class ) ).GENERAL_TBL_DSD = ( DataStore ) value;
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN2_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN2_ID;
  }


  /**  */
  public static Double getOPEN2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN2_ID );
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN2_ID = value;
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN3_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN3_ID;
  }


  /**  */
  public static Double getOPEN3_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN3_ID );
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN3_ID = value;
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN3_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN4_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN4_ID;
  }


  /**  */
  public static Double getOPEN4_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN4_ID );
  }


  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN4_ID = value;
  }


  /**  */
  public static void setOPEN4_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN4_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN5_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN5_ID;
  }


  /**  */
  public static Double getOPEN5_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN5_ID );
  }


  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN5_ID = value;
  }


  /**  */
  public static void setOPEN5_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN5_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN6_ID  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN6_ID;
  }


  /**  */
  public static Double getOPEN6_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN6_ID );
  }


  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN6_ID = value;
  }


  /**  */
  public static void setOPEN6_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OPEN6_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS2_CODE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS2_CODE;
  }


  /**  */
  public static Double getSTATUS2_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS2_CODE );
  }


  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS2_CODE = value;
  }


  /**  */
  public static void setSTATUS2_CODE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).STATUS2_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERVICIO_BENEFICIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_BENEFICIO;
  }


  /**  */
  public static Double getSERVICIO_BENEFICIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_BENEFICIO );
  }


  /**  */
  public static void setSERVICIO_BENEFICIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_BENEFICIO = value;
  }


  /**  */
  public static void setSERVICIO_BENEFICIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SERVICIO_BENEFICIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSAVE_SSN  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SAVE_SSN;
  }


  /**  */
  public static Double getSAVE_SSNDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SAVE_SSN );
  }


  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SAVE_SSN = value;
  }


  /**  */
  public static void setSAVE_SSN  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SAVE_SSN = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECURSOS_ACUM  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RECURSOS_ACUM;
  }


  /**  */
  public static Double getRECURSOS_ACUMDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RECURSOS_ACUM );
  }


  /**  */
  public static void setRECURSOS_ACUM  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RECURSOS_ACUM = value;
  }


  /**  */
  public static void setRECURSOS_ACUM  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RECURSOS_ACUM = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEDAD_IND  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EDAD_IND;
  }


  /**  */
  public static Double getEDAD_INDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EDAD_IND );
  }


  /**  */
  public static void setEDAD_IND  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EDAD_IND = value;
  }


  /**  */
  public static void setEDAD_IND  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EDAD_IND = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESO_BRUTO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO;
  }


  /**  */
  public static Double getINGRESO_BRUTODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO );
  }


  /**  */
  public static void setINGRESO_BRUTO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO = value;
  }


  /**  */
  public static void setINGRESO_BRUTO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALARIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO;
  }


  /**  */
  public static Double getSALARIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO );
  }


  /**  */
  public static void setSALARIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO = value;
  }


  /**  */
  public static void setSALARIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSEG_SOC  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SEG_SOC;
  }


  /**  */
  public static Double getSEG_SOCDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SEG_SOC );
  }


  /**  */
  public static void setSEG_SOC  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SEG_SOC = value;
  }


  /**  */
  public static void setSEG_SOC  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SEG_SOC = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOTROS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OTROS;
  }


  /**  */
  public static Double getOTROSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OTROS );
  }


  /**  */
  public static void setOTROS  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OTROS = value;
  }


  /**  */
  public static void setOTROS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).OTROS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESO_NETO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_NETO;
  }


  /**  */
  public static Double getINGRESO_NETODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_NETO );
  }


  /**  */
  public static void setINGRESO_NETO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_NETO = value;
  }


  /**  */
  public static void setINGRESO_NETO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_NETO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCUIDO_MENOR  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO_MENOR;
  }


  /**  */
  public static Double getCUIDO_MENORDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO_MENOR );
  }


  /**  */
  public static void setCUIDO_MENOR  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO_MENOR = value;
  }


  /**  */
  public static void setCUIDO_MENOR  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO_MENOR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCUIDO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO;
  }


  /**  */
  public static Double getCUIDODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO );
  }


  /**  */
  public static void setCUIDO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO = value;
  }


  /**  */
  public static void setCUIDO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CUIDO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDEDUCCION_INGRESO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEDUCCION_INGRESO;
  }


  /**  */
  public static Double getDEDUCCION_INGRESODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEDUCCION_INGRESO );
  }


  /**  */
  public static void setDEDUCCION_INGRESO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEDUCCION_INGRESO = value;
  }


  /**  */
  public static void setDEDUCCION_INGRESO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEDUCCION_INGRESO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINCAPACITADO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INCAPACITADO;
  }


  /**  */
  public static Double getINCAPACITADODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INCAPACITADO );
  }


  /**  */
  public static void setINCAPACITADO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INCAPACITADO = value;
  }


  /**  */
  public static void setINCAPACITADO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INCAPACITADO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getBENEFICIO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO;
  }


  /**  */
  public static Double getBENEFICIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO );
  }


  /**  */
  public static void setBENEFICIO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO = value;
  }


  /**  */
  public static void setBENEFICIO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOTAL_CUIDO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_CUIDO;
  }


  /**  */
  public static Double getTOTAL_CUIDODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_CUIDO );
  }


  /**  */
  public static void setTOTAL_CUIDO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_CUIDO = value;
  }


  /**  */
  public static void setTOTAL_CUIDO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_CUIDO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS_INHE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHE;
  }


  /**  */
  public static Double getGASTOS_INHEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHE );
  }


  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHE = value;
  }


  /**  */
  public static void setGASTOS_INHE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS_INHERENTES  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHERENTES;
  }


  /**  */
  public static Double getGASTOS_INHERENTESDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHERENTES );
  }


  /**  */
  public static void setGASTOS_INHERENTES  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHERENTES = value;
  }


  /**  */
  public static void setGASTOS_INHERENTES  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_INHERENTES = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRESTE_30  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RESTE_30;
  }


  /**  */
  public static Double getRESTE_30Double ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RESTE_30 );
  }


  /**  */
  public static void setRESTE_30  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RESTE_30 = value;
  }


  /**  */
  public static void setRESTE_30  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).RESTE_30 = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCENTAVOS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CENTAVOS;
  }


  /**  */
  public static Double getCENTAVOSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CENTAVOS );
  }


  /**  */
  public static void setCENTAVOS  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CENTAVOS = value;
  }


  /**  */
  public static void setCENTAVOS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).CENTAVOS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getING_TEMP  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ING_TEMP;
  }


  /**  */
  public static Double getING_TEMPDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ING_TEMP );
  }


  /**  */
  public static void setING_TEMP  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ING_TEMP = value;
  }


  /**  */
  public static void setING_TEMP  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ING_TEMP = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_SAL  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_SAL;
  }


  /**  */
  public static Double getEXCENCION_SALDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_SAL );
  }


  /**  */
  public static void setEXCENCION_SAL  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_SAL = value;
  }


  /**  */
  public static void setEXCENCION_SAL  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_SAL = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_TRABAJO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_TRABAJO;
  }


  /**  */
  public static Double getEXCENCION_TRABAJODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_TRABAJO );
  }


  /**  */
  public static void setEXCENCION_TRABAJO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_TRABAJO = value;
  }


  /**  */
  public static void setEXCENCION_TRABAJO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_TRABAJO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_PROD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_PROD;
  }


  /**  */
  public static Double getEXCENCION_PRODDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_PROD );
  }


  /**  */
  public static void setEXCENCION_PROD  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_PROD = value;
  }


  /**  */
  public static void setEXCENCION_PROD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_PROD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXCENCION_ALBERGUE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_ALBERGUE;
  }


  /**  */
  public static Double getEXCENCION_ALBERGUEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_ALBERGUE );
  }


  /**  */
  public static void setEXCENCION_ALBERGUE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_ALBERGUE = value;
  }


  /**  */
  public static void setEXCENCION_ALBERGUE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXCENCION_ALBERGUE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getDEFICIT  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEFICIT;
  }


  /**  */
  public static Double getDEFICITDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEFICIT );
  }


  /**  */
  public static void setDEFICIT  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEFICIT = value;
  }


  /**  */
  public static void setDEFICIT  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).DEFICIT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALARIO_CONYUGUE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO_CONYUGUE;
  }


  /**  */
  public static Double getSALARIO_CONYUGUEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO_CONYUGUE );
  }


  /**  */
  public static void setSALARIO_CONYUGUE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO_CONYUGUE = value;
  }


  /**  */
  public static void setSALARIO_CONYUGUE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALARIO_CONYUGUE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESO_ACREDITABLE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_ACREDITABLE;
  }


  /**  */
  public static Double getINGRESO_ACREDITABLEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_ACREDITABLE );
  }


  /**  */
  public static void setINGRESO_ACREDITABLE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_ACREDITABLE = value;
  }


  /**  */
  public static void setINGRESO_ACREDITABLE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_ACREDITABLE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOT_INGRE_ACREDI  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_INGRE_ACREDI;
  }


  /**  */
  public static Double getTOT_INGRE_ACREDIDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_INGRE_ACREDI );
  }


  /**  */
  public static void setTOT_INGRE_ACREDI  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_INGRE_ACREDI = value;
  }


  /**  */
  public static void setTOT_INGRE_ACREDI  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_INGRE_ACREDI = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNECESIDAD_AJUSTADA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NECESIDAD_AJUSTADA;
  }


  /**  */
  public static Double getNECESIDAD_AJUSTADADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NECESIDAD_AJUSTADA );
  }


  /**  */
  public static void setNECESIDAD_AJUSTADA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NECESIDAD_AJUSTADA = value;
  }


  /**  */
  public static void setNECESIDAD_AJUSTADA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NECESIDAD_AJUSTADA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOT_AJUSTADA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_AJUSTADA;
  }


  /**  */
  public static Double getTOT_AJUSTADADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_AJUSTADA );
  }


  /**  */
  public static void setTOT_AJUSTADA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_AJUSTADA = value;
  }


  /**  */
  public static void setTOT_AJUSTADA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOT_AJUSTADA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getTOTAL_OTROS  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_OTROS;
  }


  /**  */
  public static Double getTOTAL_OTROSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_OTROS );
  }


  /**  */
  public static void setTOTAL_OTROS  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_OTROS = value;
  }


  /**  */
  public static void setTOTAL_OTROS  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).TOTAL_OTROS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getBENEFICIO_AUTO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO_AUTO;
  }


  /**  */
  public static Double getBENEFICIO_AUTODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO_AUTO );
  }


  /**  */
  public static void setBENEFICIO_AUTO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO_AUTO = value;
  }


  /**  */
  public static void setBENEFICIO_AUTO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).BENEFICIO_AUTO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getMENOR  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).MENOR;
  }


  /**  */
  public static Double getMENORDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).MENOR );
  }


  /**  */
  public static void setMENOR  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).MENOR = value;
  }


  /**  */
  public static void setMENOR  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).MENOR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getPARTE_PROP  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).PARTE_PROP;
  }


  /**  */
  public static Double getPARTE_PROPDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).PARTE_PROP );
  }


  /**  */
  public static void setPARTE_PROP  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).PARTE_PROP = value;
  }


  /**  */
  public static void setPARTE_PROP  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).PARTE_PROP = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_FAMILIA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_FAMILIA;
  }


  /**  */
  public static Double getNUM_FAMILIADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_FAMILIA );
  }


  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_FAMILIA = value;
  }


  /**  */
  public static void setNUM_FAMILIA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_FAMILIA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getINGRESO_BRUTO_PADRES  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO_PADRES;
  }


  /**  */
  public static Double getINGRESO_BRUTO_PADRESDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO_PADRES );
  }


  /**  */
  public static void setINGRESO_BRUTO_PADRES  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO_PADRES = value;
  }


  /**  */
  public static void setINGRESO_BRUTO_PADRES  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).INGRESO_BRUTO_PADRES = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getGASTOS_PADRES  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_PADRES;
  }


  /**  */
  public static Double getGASTOS_PADRESDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_PADRES );
  }


  /**  */
  public static void setGASTOS_PADRES  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_PADRES = value;
  }


  /**  */
  public static void setGASTOS_PADRES  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).GASTOS_PADRES = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSS_MENOR  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SS_MENOR;
  }


  /**  */
  public static Double getSS_MENORDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SS_MENOR );
  }


  /**  */
  public static void setSS_MENOR  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SS_MENOR = value;
  }


  /**  */
  public static void setSS_MENOR  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SS_MENOR = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getEXC_PROD  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXC_PROD;
  }


  /**  */
  public static Double getEXC_PRODDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXC_PROD );
  }


  /**  */
  public static void setEXC_PROD  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXC_PROD = value;
  }


  /**  */
  public static void setEXC_PROD  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).EXC_PROD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSALA  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALA;
  }


  /**  */
  public static Double getSALADouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALA );
  }


  /**  */
  public static void setSALA  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALA = value;
  }


  /**  */
  public static void setSALA  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).SALA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getADIE  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ADIE;
  }


  /**  */
  public static Double getADIEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ADIE );
  }


  /**  */
  public static void setADIE  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ADIE = value;
  }


  /**  */
  public static void setADIE  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).ADIE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNPRO  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NPRO;
  }


  /**  */
  public static Double getNPRODouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NPRO );
  }


  /**  */
  public static void setNPRO  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NPRO = value;
  }


  /**  */
  public static void setNPRO  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NPRO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUM_MENOR_TRAB  ( RallyApplication __app )
  {
    return ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_MENOR_TRAB;
  }


  /**  */
  public static Double getNUM_MENOR_TRABDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_MENOR_TRAB );
  }


  /**  */
  public static void setNUM_MENOR_TRAB  ( RallyApplication __app, double value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_MENOR_TRAB = value;
  }


  /**  */
  public static void setNUM_MENOR_TRAB  ( RallyApplication __app, Object value )
  {
    ( ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) __app.getADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class ) ).NUM_MENOR_TRAB = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DETERMINAR_ELEGIBILIDAD_AE_T_ADL get ( RallyApplication __app )
  {
    DETERMINAR_ELEGIBILIDAD_AE_T_ADL adl = new DETERMINAR_ELEGIBILIDAD_AE_T_ADL ( );
    __app.register ( adl, "DETERMINAR_ELEGIBILIDAD_AE_T_ADL" );
    __app.setADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DETERMINAR_ELEGIBILIDAD_AE_T_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DETERMINAR_ELEGIBILIDAD_AE_T_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DETERMINAR_ELEGIBILIDAD_AE_T_ADL" );
    if ( rObj != null && rObj instanceof DETERMINAR_ELEGIBILIDAD_AE_T_ADL )
    {
      this.app.setADL ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL.class, ( DETERMINAR_ELEGIBILIDAD_AE_T_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DETERMINAR_ELEGIBILIDAD_AE_T_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
      case 7:  { this.currentStep ++; this.step7 ( this.keyParms ); break; }
      case 8:  { this.currentStep ++; this.step8 ( this.keyParms ); break; }
      case 9:  { this.currentStep ++; this.step9 ( this.keyParms ); break; }
      case 10:  { this.currentStep ++; this.step10 ( this.keyParms ); break; }
      case 11:  { this.currentStep ++; this.step11 ( this.keyParms ); break; }
      case 12:  { this.currentStep ++; this.step12 ( this.keyParms ); break; }
      case 13:  { this.currentStep ++; this.step13 ( this.keyParms ); break; }
      case 14:  { this.currentStep ++; this.step14 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DETERMINAR_ELEGIBILIDAD_AE_T_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NUCLEO_SERVICIO_DSD = this.dm.create ( "NUCLEO_SERVICIO_DSD" );
    OPEN_ID = NUCLEO_SERVICIO_DSD.getId ( );
    STATUS_CODE = RallyDataStoreException.getDefault ( );
    CLIENTES2_RO_DSD = this.dm.create ( "CLIENTES2_RO_DSD" );
    OPEN2_ID = CLIENTES2_RO_DSD.getId ( );
    STATUS2_CODE = RallyDataStoreException.getDefault ( );
    RECURSOS_NUCLEO_RO_DSD = this.dm.create ( "RECURSOS_NUCLEO_RO_DSD" );
    OPEN3_ID = RECURSOS_NUCLEO_RO_DSD.getId ( );
    STATUS_CODE = RallyDataStoreException.getDefault ( );
    BENEFICIOS_PAN_RO_DSD = this.dm.create ( "BENEFICIOS_PAN_RO_DSD" );
    OPEN4_ID = BENEFICIOS_PAN_RO_DSD.getId ( );
    STATUS_CODE = RallyDataStoreException.getDefault ( );
    INGRESOS_NUCLEO_RO_DSD = this.dm.create ( "INGRESOS_NUCLEO_RO_DSD" );
    OPEN5_ID = INGRESOS_NUCLEO_RO_DSD.getId ( );
    STATUS_CODE = RallyDataStoreException.getDefault ( );
    GASTOS_NUCLEO_RO_DSD = this.dm.create ( "GASTOS_NUCLEO_RO_DSD" );
    OPEN6_ID = GASTOS_NUCLEO_RO_DSD.getId ( );
    STATUS_CODE = RallyDataStoreException.getDefault ( );
    GENERAL_TBL_DSD = this.dm.create ( "GENERAL_TBL_DSD" );
    OPEN12_ID = GENERAL_TBL_DSD.getId ( );
    STATUS12_CODE = RallyDataStoreException.getDefault ( );


    STATUS12_CODE  = this.dm.reset ( OPEN12_ID );

    this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_GENERAL", "DATE" );
    this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_ID", "EAE" );

    STATUS12_CODE  = this.dm.limitQueryFromBuffer ( OPEN12_ID );
    STATUS12_CODE  = this.dm.retrieve ( OPEN12_ID );

    STATUS12_CODE  = this.dm.firstRow ( OPEN12_ID );

    if (Compare.equals(this.app.RUTINA_GBL, "RR"))
    {
    	FCH_EMISION = this.app.form ( "DETERMINAR_RECLAMACION_FR" ).getDateItem ( "MES_ANO_BENEFICIO_CORRECTO" );
    }
    else
    {
    	if ( Compare.equals ( STATUS12_CODE, 0 ) ) 
    	{
    		FCH_EMISION = RallySpanishDatesParser.parseDateString ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 0, 2 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 2, 3 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 5, 4 ) );
    	}
    	else
    	{
    		FCH_EMISION = this.app.SYSTEM_DATE;
    	}
    }
    CHECK_ID_AUTORIZA_ADL.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
	  STATUS_CODE  = this.dm.reset ( OPEN_ID );

	    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
	    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
	    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
	    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

	    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
	    STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

	    STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

	    while ( Compare.equals ( STATUS_CODE, 0 )  )
	    {
	      NUCLEO = MathService.plus ( NUCLEO, 1  );

	      STATUS_CODE  = this.dm.nextRow ( OPEN_ID );

	      if (Compare.equals(this.app.RUTINA_GBL, "RR"))
	      {
	  	    this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "NUMERO_MIEMBROS", NUCLEO  );
	      }
	    }
    RECURSOS_ACUM = 0;
    EDAD_IND = 0;

    STATUS_CODE  = this.dm.reset ( OPEN3_ID );

    this.dm.setField ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN3_ID );
    STATUS_CODE  = this.dm.retrieve ( OPEN3_ID );

    STATUS_CODE  = this.dm.firstRow ( OPEN3_ID );

    while ( Compare.equals ( STATUS_CODE, 0 )  )
    {
      STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

      this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
      this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
      STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

      STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

      EDAD_IND = DateUtil.monthsBetween ( FCH_EMISION, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;
      if ( Compare.lt ( EDAD_IND, 18 ) ) 
      {
        if ( ! Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "COD_TIPO_RECURSO" ), 0, 3 ), "VEH" ) ) 
        {
          RECURSOS_ACUM = MathService.plus ( RECURSOS_ACUM, this.dm.getFieldDouble ( this.dm.get ( "RECURSOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_RECURSO" )  );
        }
      }

      STATUS_CODE  = this.dm.nextRow ( OPEN3_ID );

    }
    
    if (Compare.equals(this.app.RUTINA_GBL, "RR"))
    {
    	 this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "RECURSOS", RECURSOS_ACUM  );
    }
    if ( Compare.gt ( RECURSOS_ACUM, 2000 ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      INELEGIBLE_REG = "*";
      RAZON = "FAMILIA EXCEDE EL MAXIMO DE RECURSOS";
      STATUS_CODE  = this.dm.dbClose ( OPEN_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN2_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN3_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN4_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN5_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN6_ID );
      if (Compare.equals(this.app.RUTINA_GBL, "RR"))
      {           
    	  this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "BENEFICIO_CALCULADO", 0  );
    	  RECURSOS_ACUM = 0;
    	  DETERMINAR_AEA.exec ( this.app );
    	  //this.doReturn ( );       	
      }
      else
      {
    	  if ( Compare.equals ( this.app.AUTORIZADA_GBL, "S" ) ) 
    	  {
    		  SERVICIO_STATUS = "CERRAD03";
    	  }
    	  else
    	  {
    		  SERVICIO_STATUS = "RECHAZ03";
    	  }
    	  SERVICIO_BENEFICIO = 0;
    	  DETERMINAR_AEA.exec ( this.app );

      }
	  return;
    }
  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.gt ( RECURSOS_ACUM, 2000 ) ) 
    {
      DETERMINACION_FINAL_MENU.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.gt ( RECURSOS_ACUM, 2000 ) ) 
    {
      if ( ! ( ( Compare.equals ( this.app.DETERMINACION_FINAL_GBL, "S" ) ) || ( Compare.equals ( this.app.DETERMINACION_FINAL_GBL, "s" ) ) ) ) 
      {
        this.doReturn ( );
        return;
      }
      if (! Compare.equals(this.app.RUTINA_GBL, "RR"))
      {
      DETER_ELEG_AET_UPDATE_SERV_ADL.exec ( this.app );
      }
      return;
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.gt ( RECURSOS_ACUM, 2000 ) ) 
    {
      this.callParms.clear ( );
      this.callParms.set ( this.app.SS_JEFE_GBL  );
      this.callParms.set ( this.app.SS_SERV_GBL  );
      this.callParms.set ( this.app.COD_SERV_GBL  );
      INFOR_BIO_NCAL_ADL.exec ( this.app, this.callParms );
      return;
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.gt ( RECURSOS_ACUM, 2000 ) ) 
    {
      this.callParms.reset ( );
      this.app.SS_JEFE_GBL  = this.callParms.getDouble ( );
      this.app.SS_SERV_GBL  = this.callParms.getDouble ( );
      this.app.COD_SERV_GBL  = this.callParms.getString ( );

      RECURSOS_ACUM = 0;
      this.doReturn ( );
      return; 
    }
    SALARIO = 0;
    SEG_SOC = 0;
    OTROS = 0;
    SALA = 0;
    ADIE = 0;
    NPRO = 0;
    NUM_MENOR_TRAB = 0;

    STATUS_CODE  = this.dm.reset ( OPEN5_ID );

    this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN5_ID );
    STATUS_CODE  = this.dm.retrieve ( OPEN5_ID );

    STATUS_CODE  = this.dm.firstRow ( OPEN5_ID );

    while ( Compare.equals ( STATUS_CODE, 0 )  )
    {
      if ( ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_PAN" ), "X" ) )  ) || ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_AE" ), "X" ) )  ) ) 
      {
        this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_REHABILITACION" ) );
        if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) 
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) )  );
        }
      }
      else
      {
        if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) 
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) )  );
        }
        if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "S" ) ) 
        {
          if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) || ( ! Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "AE-C" ) ) ) 
          {
            this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 4.3 );
          }
          else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE-C" ) ) 
          {
            this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 4.3 );
          }
        }
        else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "B" ) ) 
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 2.15 );
        }
        else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "FLG_FRECUENCIA" ), "Q" ) ) 
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 2.0 );
        }
        else
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) * 1.0 );
        }
        if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 3 ), "PAN" ) ) 
        {
          this.dm.setField ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO", TruncService.trunc ( this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" ) )  );
        }
      }

      STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

      this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
      this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
      STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

      STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

      EDAD_IND = DateUtil.monthsBetween ( FCH_EMISION, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;
      INGRESOS_NUCLEO = MathService.plus ( INGRESOS_NUCLEO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
      if ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "SALA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRB" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "ADIE" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "NPRO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRN" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "PTRA" ) ) ) && ( Compare.lt ( EDAD_IND, 18 ) )  ) 
      {
        SALARIO = MathService.plus ( SALARIO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
        INGRESO_BRUTO = MathService.plus ( INGRESO_BRUTO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
        NUM_MENOR_TRAB = MathService.plus ( NUM_MENOR_TRAB, 1  );
      }
      else if ( Compare.lt ( EDAD_IND, 18 ) ) 
      {
        OTROS = MathService.plus ( OTROS, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
      }
      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "SALA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRB" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "PTRA" ) ) ) 
      {
        SALA = MathService.plus ( SALA, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
      }
      else if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "ADIE" ) ) 
      {
        ADIE = MathService.plus ( ADIE, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
      }
      else if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "NPRO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "COD_TIPO_INGRESO" ), "AGRN" ) )  )
      {
        NPRO = MathService.plus ( NPRO, this.dm.getFieldDouble ( this.dm.get ( "INGRESOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_INGRESO" )  );
      }

      STATUS_CODE  = this.dm.nextRow ( OPEN5_ID );

    }
    
    if (Compare.equals(this.app.RUTINA_GBL, "RR"))
    {
    	 this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "INGRESOS", INGRESOS_NUCLEO  );
    }
    
    GASTOS_NUCLEO = 0;

    STATUS_CODE  = this.dm.reset ( OPEN6_ID );

    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
    STATUS_CODE  = this.dm.retrieve ( OPEN6_ID );

    STATUS_CODE  = this.dm.firstRow ( OPEN6_ID );

    while ( Compare.equals ( STATUS_CODE, 0 )  )
    {
      GASTOS_NUCLEO = MathService.plus ( GASTOS_NUCLEO, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );

      STATUS_CODE  = this.dm.nextRow ( OPEN6_ID );

    }
    if (Compare.equals(this.app.RUTINA_GBL, "RR"))
    {
    this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "GASTOS", GASTOS_NUCLEO  );
    } 
    
   
    GASTOS_INHERENTES = 0;
    GASTOS_INHE = 0;
    if ( ( Compare.gt ( NPRO, 0 ) ) && ( Compare.equals ( SALA, 0 ) )  ) 
    {
      STATUS_CODE  = this.dm.reset ( OPEN6_ID );

      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "COD_TIPO_DEDUCCIONE", "GINP" );
      this.dm.setField ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
      STATUS_CODE  = this.dm.retrieve ( OPEN6_ID );

      STATUS_CODE  = this.dm.firstRow ( OPEN6_ID );

      while ( Compare.equals ( STATUS_CODE, 0 )  )
      {
        STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

        this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
        this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

        STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
        STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

        STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

        EDAD_IND = DateUtil.monthsBetween ( FCH_EMISION, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;
        if ( Compare.lt ( EDAD_IND, 18 ) ) 
        {
          GASTOS_INHERENTES = MathService.plus ( GASTOS_INHERENTES, this.dm.getFieldDouble ( this.dm.get ( "GASTOS_NUCLEO_RO_DSD" ), "VLR_CANTIDAD_DEDUCCIONE" )  );
        }

        STATUS_CODE  = this.dm.nextRow ( OPEN6_ID );

      }
      GASTOS_INHERENTES = TruncService.trunc ( GASTOS_INHERENTES ) ;
      if ( Compare.ge ( SALARIO, GASTOS_INHERENTES ) ) 
      {
        GASTOS_INHE = MathService.minus ( SALARIO, GASTOS_INHERENTES  );
      }
      else
      {
        GASTOS_INHE = 0;
      }
    }
    if ( Compare.ge ( INGRESO_BRUTO, GASTOS_INHERENTES ) ) 
    {
      INGRESO_ACREDITABLE = MathService.minus ( INGRESO_BRUTO, GASTOS_INHERENTES  );
    }
    else
    {
      INGRESO_ACREDITABLE = 0;
    }
    EXCENCION_PROD = 0;
    EXC_PROD = 0;
    if ( Compare.gt ( SALARIO, 0 ) ) 
    {
      EXC_PROD = 75 * NUM_MENOR_TRAB;
      if ( Compare.ge ( INGRESO_ACREDITABLE, EXC_PROD ) ) 
      {
        INGRESO_ACREDITABLE = MathService.minus ( INGRESO_ACREDITABLE, EXC_PROD  );
      }
      else
      {
        INGRESO_ACREDITABLE = 0;
      }
    }
    CENTAVOS = 0;
    ING_TEMP = 0;
    EXCENCION_SAL = 0;
    EXCENCION_TRABAJO = 0;
    RESTE_30 = 0;
    TOT_INGRE_ACREDI = INGRESO_ACREDITABLE;
    TOTAL_OTROS = MathService.plus ( TOT_INGRE_ACREDI, OTROS  );
    INGRESO_NETO = TruncService.trunc ( MathService.plus ( TOTAL_OTROS, PARTE_PROP  ) ) ;
    if (Compare.equals(this.app.RUTINA_GBL, "RR"))
    {
    	 this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "INGRESOS", INGRESO_NETO  );
    }
    NUM_FAMILIA = 0;
    NECESIDAD_AJUSTADA = 0;

    STATUS_CODE  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

    STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

    while ( Compare.equals ( STATUS_CODE, 0 )  )
    {
      STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

      this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_SERVICIO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
      this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
      STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

      STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

      EDAD_IND = DateUtil.monthsBetween ( FCH_EMISION, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;
      if ( Compare.lt ( EDAD_IND, 18 ) ) 
      {
        NUM_FAMILIA = MathService.plus ( NUM_FAMILIA, 1  );
      }

      STATUS_CODE  = this.dm.nextRow ( OPEN_ID );

      if ( Compare.gt ( NUM_FAMILIA, 0 ) ) 
      {
        NECESIDAD_AJUSTADA = MathService.plus ( 32, ( ( MathService.minus ( NUM_FAMILIA, 1  ) ) * 24 )  );
      }
    }
    if ( Compare.equals ( NUM_FAMILIA, 0 ) ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      INELEGIBLE_REG = "*";
      RAZON = "SOLICITANTE(S) INELEGIBLE(S) MAYORES DE 18";
      STATUS_CODE  = this.dm.dbClose ( OPEN_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN2_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN3_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN4_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN5_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN6_ID );

      SERVICIO_BENEFICIO = 0;
      SALARIO = 0;
      GASTOS_INHERENTES = 0;
      GASTOS_INHE = 0;
      INGRESO_ACREDITABLE = 0;
      EXC_PROD = 0;
      EXCENCION_PROD = 0;
      TOTAL_OTROS = 0;
      INGRESO_NETO = 0;
      NECESIDAD_AJUSTADA = 0;
      if (Compare.equals(this.app.RUTINA_GBL, "RR"))
      {           
    	  this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "BENEFICIO_CALCULADO", 0  );
    	  RECURSOS_ACUM = 0;
    	  DETERMINAR_AEA.exec ( this.app );
    	  //this.doReturn ( );       	
      }
      else
      {
    	  if ( Compare.equals ( this.app.AUTORIZADA_GBL, "S" ) ) 
    	  {
    		  SERVICIO_STATUS = "CERRAD16";
    	  }
    	  else
    	  {
    		  SERVICIO_STATUS = "RECHAZ14";
    	  }

    	  DETERMINAR_AEA.exec ( this.app );
      }
      return;
    }

  }


  /**
   *
   */
  protected void step6 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( NUM_FAMILIA, 0 ) ) 
    {
      DETERMINACION_FINAL_MENU.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step7 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( NUM_FAMILIA, 0 ) ) 
    {
      if ( ! ( ( Compare.equals ( this.app.DETERMINACION_FINAL_GBL, "S" ) ) || ( Compare.equals ( this.app.DETERMINACION_FINAL_GBL, "s" ) ) ) ) 
      {
        this.doReturn ( );
        return;
      }
      if (! Compare.equals(this.app.RUTINA_GBL, "RR"))
      {
      DETER_ELEG_AET_UPDATE_SERV_ADL.exec ( this.app );
      }
      return;
    }

  }


  /**
   *
   */
  protected void step8 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( NUM_FAMILIA, 0 ) ) 
    {
      RECURSOS_ACUM = 0;
      this.doReturn ( );
      return; 
    }
    CENTAVOS = 0;
    ING_TEMP = 0;
    EXCENCION_ALBERGUE = 0;
    TOT_AJUSTADA = MathService.plus ( NECESIDAD_AJUSTADA, EXCENCION_ALBERGUE  );
    if ( Compare.ge ( NECESIDAD_AJUSTADA, INGRESO_NETO ) ) 
    {
      DEFICIT = MathService.minus ( NECESIDAD_AJUSTADA, TruncService.trunc ( INGRESO_NETO )   );
    }
    else
    {
      DEFICIT = 0;
    }
    DEFICIT = TruncService.trunc ( DEFICIT ) ;
    BENEFICIO_AUTO = 0;
    if ( ( Compare.equals ( DEFICIT, 0 ) ) && ( Compare.gt ( NUM_FAMILIA, 0 ) )  ) 
    {
      this._condition2 = true;
    }
    else
    {
      this._condition2 = false;
    }
    if ( this._condition2 )
    {
      INELEGIBLE_REG = "*";
      RAZON = "SOLICITANTE(S) INELEGIBLE(S) POR INGRESOS";
      STATUS_CODE  = this.dm.dbClose ( OPEN_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN2_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN3_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN4_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN5_ID );

      STATUS_CODE  = this.dm.dbClose ( OPEN6_ID );
      if (Compare.equals(this.app.RUTINA_GBL, "RR"))
      {           
    	  this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "BENEFICIO_CALCULADO", 0  );
    	  RECURSOS_ACUM = 0;
    	  DETERMINAR_AEA.exec ( this.app );
    	  //this.doReturn ( );       	
      }
      else
      {
    	  if ( Compare.equals ( this.app.AUTORIZADA_GBL, "S" ) ) 
    	  {
    		  SERVICIO_STATUS = "CERRAD04";
    	  }
    	  else
    	  {
    		  SERVICIO_STATUS = "RECHAZ13";
    	  }
    	  SERVICIO_BENEFICIO = 0;

    	  DETERMINAR_AEA.exec ( this.app );
      }
      return;
    }

  }


  /**
   *
   */
  protected void step9 ( ParameterSet ps )
  {
    if ( this._condition2 )    //    if ( ( Compare.equals ( DEFICIT, 0 ) ) && ( Compare.gt ( NUM_FAMILIA, 0 ) )  ) 
    {
      DETERMINACION_FINAL_MENU.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step10 ( ParameterSet ps )
  {
    if ( this._condition2 )    //    if ( ( Compare.equals ( DEFICIT, 0 ) ) && ( Compare.gt ( NUM_FAMILIA, 0 ) )  ) 
    {
      if ( ! ( ( Compare.equals ( this.app.DETERMINACION_FINAL_GBL, "S" ) ) || ( Compare.equals ( this.app.DETERMINACION_FINAL_GBL, "s" ) ) ) ) 
      {
        this.doReturn ( );
        return;
      }
      if (! Compare.equals(this.app.RUTINA_GBL, "RR"))
      {
      DETER_ELEG_AET_UPDATE_SERV_ADL.exec ( this.app );
      }
      return;
    }

  }


  /**
   *
   */
  protected void step11 ( ParameterSet ps )
  {
    if ( this._condition2 )    //    if ( ( Compare.equals ( DEFICIT, 0 ) ) && ( Compare.gt ( NUM_FAMILIA, 0 ) )  ) 
    {
      this.callParms.clear ( );
      this.callParms.set ( this.app.SS_JEFE_GBL  );
      this.callParms.set ( this.app.SS_SERV_GBL  );
      this.callParms.set ( this.app.COD_SERV_GBL  );
      INFOR_BIO_NCAL_ADL.exec ( this.app, this.callParms );
      return;
    }

  }


  /**
   *
   */
  protected void step12 ( ParameterSet ps )
  {
    if ( this._condition2 )    //    if ( ( Compare.equals ( DEFICIT, 0 ) ) && ( Compare.gt ( NUM_FAMILIA, 0 ) )  ) 
    {
      this.callParms.reset ( );
      this.app.SS_JEFE_GBL  = this.callParms.getDouble ( );
      this.app.SS_SERV_GBL  = this.callParms.getDouble ( );
      this.app.COD_SERV_GBL  = this.callParms.getString ( );

      RECURSOS_ACUM = 0;
      this.doReturn ( );
      return; 
    }
    if ( ( Compare.ge ( DEFICIT, 1 ) ) && ( Compare.le ( DEFICIT, 5 ) )  ) 
    {
      BENEFICIO_AUTO = 5;
    }
    else
    {
      BENEFICIO_AUTO = DEFICIT;
    }
    ELEGIBLE_REG = "*";
    STATUS_CODE  = this.dm.dbClose ( OPEN_ID );

    STATUS2_CODE  = this.dm.dbClose ( OPEN2_ID );

    STATUS_CODE  = this.dm.dbClose ( OPEN3_ID );

    STATUS_CODE  = this.dm.dbClose ( OPEN4_ID );

    STATUS_CODE  = this.dm.dbClose ( OPEN5_ID );

    STATUS_CODE  = this.dm.dbClose ( OPEN6_ID );
    if (Compare.equals(this.app.RUTINA_GBL, "RR"))
    {           
    	this.app.form ( "DETERMINAR_RECLAMACION_FR" ).setItem ( "BENEFICIO_CALCULADO", BENEFICIO_AUTO  );
    	DETERMINAR_AEA.exec ( this.app );
    	// this.doReturn ( );  
    }
    else
    {
    	if ( Compare.equals ( this.app.AUTORIZADA_GBL, "S" ) ) 
    	{
    		SERVICIO_STATUS = "PENDREVI";
    	}
    	else
    	{
    		SERVICIO_STATUS = "PENDCERT";
    	}
    	SERVICIO_BENEFICIO = BENEFICIO_AUTO;

    	DETERMINAR_AEA.exec ( this.app );
    }    
    return;

  }


  /**
   *
   */
  protected void step13 ( ParameterSet ps )
  {
    DETERMINACION_FINAL_MENU.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step14 ( ParameterSet ps )
  {
    if ( ! ( ( Compare.equals ( this.app.DETERMINACION_FINAL_GBL, "S" ) ) || ( Compare.equals ( this.app.DETERMINACION_FINAL_GBL, "s" ) ) ) ) 
    {
      this.doReturn ( );
      return;
    }
    if (! Compare.equals(this.app.RUTINA_GBL, "RR"))
    {
    DETER_ELEG_AET_UPDATE_SERV_ADL.exec ( this.app );
    }
    return;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE DETERMINAR_ELEGIBILIDAD_AE_T_ADL;

VAR

OPEN_ID : NUMBER;     
OPEN2_ID : NUMBER;
OPEN3_ID : NUMBER;
OPEN4_ID : NUMBER;
OPEN5_ID : NUMBER;
OPEN6_ID : NUMBER;

STATUS_CODE : NUMBER;
STATUS2_CODE : NUMBER;

SERVICIO_STATUS:        CHAR(8) EXPORT;
SERVICIO_BENEFICIO:     NUMBER EXPORT;

SAVE_SSN:       NUMBER;
RECURSOS_ACUM : NUMBER;
EDAD_IND : NUMBER;
INELEGIBLE_REG : CHAR(1) EXPORT;
INELEGIBLE_EMER : CHAR(1) EXPORT;
RAZON : CHAR(50) EXPORT;
INGRESO_BRUTO : NUMBER;
SALARIO : NUMBER EXPORT;
SEG_SOC : NUMBER EXPORT;
OTROS : NUMBER EXPORT;
INGRESO_NETO : NUMBER EXPORT;
CUIDO_MENOR : NUMBER EXPORT;
CUIDO : NUMBER EXPORT;
INELEGIBLE_INGRE_BRUTO : CHAR(1);
DEDUCCION_INGRESO : NUMBER;
INCAPACITADO : NUMBER;
BENEFICIO : NUMBER EXPORT;
ELEGIBLE_REG : CHAR(1) EXPORT;
ELEGIBLE_EMER : CHAR(1) EXPORT;
TOTAL_CUIDO : NUMBER EXPORT;
GASTOS_INHE : NUMBER EXPORT;
GASTOS_INHERENTES : NUMBER EXPORT;
RESTE_30 : NUMBER EXPORT;
STATUS : CHAR(4);
CENTAVOS : NUMBER;
ING_TEMP : NUMBER;
EXCENCION_SAL : NUMBER EXPORT;
EXCENCION_TRABAJO : NUMBER EXPORT;
EXCENCION_PROD : NUMBER EXPORT;
EXCENCION_ALBERGUE : NUMBER EXPORT;
DEFICIT : NUMBER EXPORT;
SALARIO_CONYUGUE : NUMBER EXPORT;
INGRESO_ACREDITABLE : NUMBER EXPORT;
TOT_INGRE_ACREDI : NUMBER EXPORT;
NECESIDAD_AJUSTADA : NUMBER EXPORT;
TOT_AJUSTADA : NUMBER EXPORT;
TOTAL_OTROS : NUMBER EXPORT;
BENEFICIO_AUTO : NUMBER EXPORT;
MENOR : NUMBER;
PARTE_PROP : NUMBER EXPORT;
NUM_FAMILIA : NUMBER EXPORT;
INGRESO_BRUTO_PADRES : NUMBER;
GASTOS_PADRES : NUMBER;
SS_MENOR : NUMBER;
EXC_PROD : NUMBER EXPORT;
SALA : NUMBER;
ADIE : NUMBER;
NPRO : NUMBER;
NUM_MENOR_TRAB : NUMBER;

BEGIN
SET_TRACE();
{       SS_JEFE_GBL := 583171929;
        SS_SERV_GBL := 583171929;
        COD_SERV_GBL := 'EAT';}
        {FCH_SOLIC_SERV_GBL:=TO_DATE('01-JAN-1993');}

        DB_OPEN(NUCLEO_SERVICIO_DSD,OPEN_ID,STATUS_CODE);
        DB_OPEN(CLIENTES2_RO_DSD,OPEN2_ID,STATUS2_CODE);
        DB_OPEN(RECURSOS_NUCLEO_RO_DSD,OPEN3_ID,STATUS_CODE);
        DB_OPEN(BENEFICIOS_PAN_RO_DSD,OPEN4_ID,STATUS_CODE);
        DB_OPEN(INGRESOS_NUCLEO_RO_DSD,OPEN5_ID,STATUS_CODE);
        DB_OPEN(GASTOS_NUCLEO_RO_DSD,OPEN6_ID,STATUS_CODE);

CALL CHECK_ID_AUTORIZA_ADL;

{ TOTALIZAR RECURSOS }
        RECURSOS_ACUM := 0;
        EDAD_IND := 0;
        DB_RESET(OPEN3_ID,STATUS_CODE);
        RECURSOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        RECURSOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        RECURSOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
        RECURSOS_NUCLEO_RO_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN3_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN3_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0
        DO BEGIN
                DB_RESET(OPEN2_ID,STATUS2_CODE);
                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE := RECURSOS_NUCLEO_RO_DSD
.SEGURO_SOCIAL_BENEFICIARIO;
                CLIENTES2_RO_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN2_ID,STATUS2_CODE);
                DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
                EDAD_IND := MONTHS_BETWEEN(SYSTEM_DATE,CLIENTES2_RO_DSD.FCH_NACI
MIENTO)/12;
                IF (EDAD_IND < 18)
                THEN BEGIN
                        IF SUBSTR(RECURSOS_NUCLEO_RO_DSD.COD_TIPO_RECURSO,0,3) <
> 'VEH'
                        THEN
                            RECURSOS_ACUM := RECURSOS_ACUM +
                                RECURSOS_NUCLEO_RO_DSD.VLR_CANTIDAD_RECURSO;
                     END;
                DB_GET_NEXT(OPEN3_ID,STATUS_CODE);
            END;

{DETERMINAR ELEGIBILIDAD POR RECURSOS }
        IF RECURSOS_ACUM > 2000
        THEN BEGIN
                INELEGIBLE_REG := '*';
                RAZON := 'FAMILIA EXCEDE EL MAXIMO DE RECURSOS';
                DB_CLOSE(OPEN_ID,STATUS_CODE);
                DB_CLOSE(OPEN2_ID,STATUS_CODE);
                DB_CLOSE(OPEN3_ID,STATUS_CODE);
                DB_CLOSE(OPEN4_ID,STATUS_CODE);
                DB_CLOSE(OPEN5_ID,STATUS_CODE);
                DB_CLOSE(OPEN6_ID,STATUS_CODE);
                IF AUTORIZADA_GBL = 'S'
                THEN SERVICIO_STATUS:='CERRAD03';
                ELSE SERVICIO_STATUS:='RECHAZ03';
                SERVICIO_BENEFICIO:=0;
                CALL DETERMINAR_AEA;
{        CALL DETERMINAR_AET_PKT;}
                        call DETERMINACION_FINAL_MENU;
                        if not((DETERMINACION_FINAL_GBL = 'S') or
                           (DETERMINACION_FINAL_GBL = 's')) then return;
                CALL DETER_ELEG_AET_UPDATE_SERV_ADL;
                CALL INFOR_BIO_NCAL_ADL(SS_JEFE_GBL,SS_SERV_GBL,COD_SERV_GBL);
                RECURSOS_ACUM:=0;
                RETURN;
            END;

{ Determinar Elegibilidad por Ingreso }
        SALARIO := 0;
        SEG_SOC := 0;
        OTROS := 0;
        SALA := 0;
        ADIE := 0;
        NPRO := 0;
        NUM_MENOR_TRAB :=  0;
        DB_RESET(OPEN5_ID,STATUS_CODE);
        INGRESOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        INGRESOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        INGRESOS_NUCLEO_RO_DSD.COD_SERVICIO := COD_SERV_GBL;
        INGRESOS_NUCLEO_RO_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN5_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN5_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
{
   Rutina para implementar computo de ingreso a base
   de norma de 4.3(AE) y 4.3(PAN).
   Se provee tambien para entrar ingreso AE segun forma AE-98
        9-MAYO-1994   Ramon Fardonk/Jorge Rodriguez
}
   IF ((SUBSTR(COD_SERV_GBL,0,3)='PAN') AND (INGRESOS_NUCLEO_RO_DSD.FLG_PAN = 'X
')) OR
        ((SUBSTR(COD_SERV_GBL,0,2)='AE') AND (INGRESOS_NUCLEO_RO_DSD.FLG_AE = 'X
'))
        THEN BEGIN
               INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                 INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_REHABILITACION;
                IF (SUBSTR(COD_SERV_GBL,0,3)='PAN')
                THEN BEGIN
                     INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                     TRUNC(INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO);
                     END;
             END;
        ELSE BEGIN
                IF (SUBSTR(COD_SERV_GBL,0,3)='PAN')
                THEN BEGIN
                     INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                     TRUNC(INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO);
                     END;
               IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='S')
                  THEN BEGIN
                       IF (SUBSTR(COD_SERV_GBL,0,3)='PAN') OR
                          (SUBSTR(COD_SERV_GBL,0,4)<>'AE-C')
                          THEN BEGIN
                                INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                                INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 4.
3;
                               END;
                          ELSE IF (SUBSTR(COD_SERV_GBL,0,2)='AE-C')
                               THEN BEGIN
                                    INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:
=
                                    INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO 
* 4.3;
                                    END;
                       END;
               ELSE IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='B')
                  THEN BEGIN
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 2.15;
                       END;
               ELSE IF (INGRESOS_NUCLEO_RO_DSD.FLG_FRECUENCIA='Q')
                  THEN BEGIN
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 2.0;
                       END;
               ELSE BEGIN
{                         Entro 'M' o estaba en blanco }
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                       INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO * 1.0;
                    END;
                IF (SUBSTR(COD_SERV_GBL,0,3)='PAN')
                THEN BEGIN
                     INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO:=
                     TRUNC(INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO);
                     END;
        END;

                DB_RESET(OPEN2_ID,STATUS2_CODE);
                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE := INGRESOS_NUCLEO_RO_DSD
.SEGURO_SOCIAL_BENEFICIARIO;
                CLIENTES2_RO_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN2_ID,STATUS2_CODE);
                DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
                EDAD_IND := MONTHS_BETWEEN(SYSTEM_DATE,CLIENTES2_RO_DSD.FCH_NACI
MIENTO)/12;
                IF ((INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'SALA') OR
                  (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRB') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'ADIE') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'NPRO') or
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRN') OR
                   (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'PTRA')) AND 
                   (EDAD_IND < 18)
                THEN BEGIN
                         SALARIO := SALARIO + 
                                        INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGR
ESO;
                         INGRESO_BRUTO := INGRESO_BRUTO + 
                                        INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGR
ESO;
                         NUM_MENOR_TRAB := NUM_MENOR_TRAB + 1;
                     END;
                ELSE
                    IF (EDAD_IND < 18)
                    THEN
                       OTROS := OTROS + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGR
ESO;

               IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'SALA') OR
                  (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRB') OR
                  (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'PTRA')
                THEN
                   SALA := SALA + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRESO;
                ELSE
                   IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'ADIE') 
                   THEN
                        ADIE := ADIE + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_INGRE
SO;
                   ELSE
                      IF (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'NPRO') OR 
                         (INGRESOS_NUCLEO_RO_DSD.COD_TIPO_INGRESO = 'AGRN')
                      THEN
                          NPRO := NPRO + INGRESOS_NUCLEO_RO_DSD.VLR_CANTIDAD_ING
RESO;


         DB_GET_NEXT(OPEN5_ID,STATUS_CODE);
         END;

{         SALARIO := TRUNC(SALARIO);}
{         OTROS := TRUNC(OTROS);
{         INGRESO_BRUTO := TRUNC(INGRESO_BRUTO);}

{ RESTE GASTOS INHERENTES AL NEGOCIO PROPIO}
        GASTOS_INHERENTES := 0;
        GASTOS_INHE := 0;
IF (NPRO > 0) AND (SALA = 0)
THEN BEGIN
        DB_RESET(OPEN6_ID,STATUS_CODE);
        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_FAM:=SS_JEFE_GBL;
        GASTOS_NUCLEO_RO_DSD.SEGURO_SOCIAL_JEFE_SERV:=SS_SERV_GBL;
        GASTOS_NUCLEO_RO_DSD.COD_SERVICIO:=COD_SERV_GBL;
        GASTOS_NUCLEO_RO_DSD.COD_TIPO_DEDUCCIONE := 'GINP';
        GASTOS_NUCLEO_RO_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN6_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN6_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
             DB_RESET(OPEN2_ID,STATUS2_CODE);
             CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE := GASTOS_NUCLEO_RO_DSD.SEGU
RO_SOCIAL_BENEFICIARIO;
             CLIENTES2_RO_DSD.RMO_OFICINA := RMO_GBL;
             DB_QUERY(OPEN2_ID,STATUS2_CODE);
             DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
             EDAD_IND := MONTHS_BETWEEN(SYSTEM_DATE,CLIENTES2_RO_DSD.FCH_NACIMIE
NTO)/12;
             IF (EDAD_IND < 18)
             THEN
                GASTOS_INHERENTES := GASTOS_INHERENTES + 
                        GASTOS_NUCLEO_RO_DSD.VLR_CANTIDAD_DEDUCCIONE;
                DB_GET_NEXT(OPEN6_ID,STATUS_CODE);
         END;
                GASTOS_INHERENTES := TRUNC(GASTOS_INHERENTES);

{       IF SALARIO >= GASTOS_INHERENTES
        THEN
            GASTOS_INHE := EXCENCION_PROD - GASTOS_INHERENTES;
        ELSE
}
        IF SALARIO >= GASTOS_INHERENTES
        THEN
                GASTOS_INHE := SALARIO - GASTOS_INHERENTES;
        ELSE
                GASTOS_INHE := 0;
   END;
        IF INGRESO_BRUTO >= GASTOS_INHERENTES
        THEN
           INGRESO_ACREDITABLE := INGRESO_BRUTO - GASTOS_INHERENTES;
        ELSE
           INGRESO_ACREDITABLE := 0;

{ RESTE LOS GASTOS DE PRODUCCION }
        EXCENCION_PROD := 0;
        EXC_PROD := 0;
            IF (SALARIO > 0)
            THEN BEGIN
                        EXC_PROD := 75 * NUM_MENOR_TRAB;

{                       EXC_PROD := EXC_PROD + 75; }

                        IF INGRESO_ACREDITABLE >= EXC_PROD
                        THEN
                                INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - EXC
_PROD;
                        ELSE
                                INGRESO_ACREDITABLE := 0;
                 END;
                

{ SE COMPARA CONTRA TABLA DE EXENCION AL INGRESO POR TRABAJO }
        CENTAVOS := 0;
        ING_TEMP := 0;
        EXCENCION_SAL := 0;
        EXCENCION_TRABAJO := 0;
{       CENTAVOS := SALARIO - TRUNC(SALARIO);
        IF CENTAVOS > 0 
          THEN 
                ING_TEMP := TRUNC(SALARIO + 1);
          ELSE 
                ING_TEMP := SALARIO;

        IF ING_TEMP <= 20
          THEN 
                EXCENCION_SAL := ING_TEMP;
          ELSE 
                EXCENCION_SAL := 20 + ((ING_TEMP - 20)/2);

        IF EXCENCION_SAL > 50
          THEN 
                EXCENCION_SAL := 50;

        EXCENCION_SAL := TRUNC(EXCENCION_SAL);

        IF SALARIO >= EXCENCION_SAL
        THEN
           EXCENCION_TRABAJO := SALARIO - EXCENCION_SAL;
        ELSE
           EXCENCION_TRABAJO := 0;

        EXCENCION_TRABAJO := TRUNC(EXCENCION_TRABAJO);

        IF INGRESO_ACREDITABLE >= EXCENCION_SAL
        THEN
            INGRESO_ACREDITABLE := INGRESO_ACREDITABLE - EXCENCION_SAL;
        ELSE
            INGRESO_ACREDITABLE := 0;
}


{ CASOS ACTIVOS CAT. C }
        RESTE_30 := 0;

{ TOTAL INGRESOS ACREDITABLES A + B PARA CATEGORIA C }

        TOT_INGRE_ACREDI :=  INGRESO_ACREDITABLE;

{ TOTAL OTROS INGRESOS }

        TOTAL_OTROS := TOT_INGRE_ACREDI + OTROS;
        
{ TOTAL INGRESO NETO }
        INGRESO_NETO := TRUNC(TOTAL_OTROS + PARTE_PROP);
{       INGRESO_NETO := TRUNC(INGRESO_NETO);}

{ NECESIDADES BASICAS AJUSTADAS }
        NUM_FAMILIA := 0;
        NECESIDAD_AJUSTADA := 0;
        DB_RESET(OPEN_ID,STATUS_CODE);
        NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        NUCLEO_SERVICIO_DSD.COD_SERVICIO := COD_SERV_GBL;
        NUCLEO_SERVICIO_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN_ID,STATUS_CODE);
        DB_GET_FIRST(OPEN_ID,STATUS_CODE);
        WHILE STATUS_CODE = 0 DO
        BEGIN
                DB_RESET(OPEN2_ID,STATUS2_CODE);
                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE :=
                        NUCLEO_SERVICIO_DSD.SEGURO_SOCIAL_BENEFICIARIO;
                CLIENTES2_RO_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN2_ID,STATUS2_CODE);
                DB_GET_FIRST(OPEN2_ID,STATUS2_CODE);
                EDAD_IND := MONTHS_BETWEEN(SYSTEM_DATE,CLIENTES2_RO_DSD.FCH_NACI
MIENTO)/12;
                IF  EDAD_IND < 18
                THEN
                         NUM_FAMILIA := NUM_FAMILIA + 1;
        DB_GET_NEXT(OPEN_ID,STATUS_CODE);
        IF NUM_FAMILIA > 0
        THEN
                NECESIDAD_AJUSTADA := 32 + ((NUM_FAMILIA - 1)*24);
        END;

{ VERIFICAR LA EXISTENCIA DE MENORES EN EL NUCLEO }
        IF NUM_FAMILIA = 0
        THEN BEGIN
                INELEGIBLE_REG := '*';
                RAZON := 'SOLICITANTE(S) INELEGIBLE(S) MAYORES DE 18';
                DB_CLOSE(OPEN_ID,STATUS_CODE);
                DB_CLOSE(OPEN2_ID,STATUS_CODE);
                DB_CLOSE(OPEN3_ID,STATUS_CODE);
                DB_CLOSE(OPEN4_ID,STATUS_CODE);
                DB_CLOSE(OPEN5_ID,STATUS_CODE);
                DB_CLOSE(OPEN6_ID,STATUS_CODE);
                IF AUTORIZADA_GBL = 'S'
                THEN SERVICIO_STATUS:='CERRAD16';
                ELSE SERVICIO_STATUS:='RECHAZ14';
                SERVICIO_BENEFICIO:=0;
                SALARIO := 0;
                GASTOS_INHERENTES := 0;
                GASTOS_INHE := 0;
                INGRESO_ACREDITABLE := 0;
                EXC_PROD := 0;
                EXCENCION_PROD := 0;
                TOTAL_OTROS := 0;
                INGRESO_NETO := 0;
                NECESIDAD_AJUSTADA := 0;
                CALL DETERMINAR_AEA;
        {       CALL DETERMINAR_AET_PKT;}
                        call DETERMINACION_FINAL_MENU;
                        if not((DETERMINACION_FINAL_GBL = 'S') or
                           (DETERMINACION_FINAL_GBL = 's')) then return;
                CALL DETER_ELEG_AET_UPDATE_SERV_ADL;
                RECURSOS_ACUM:=0;
                RETURN;
             END;

{ ALBERGUE AJUSTADO }
        CENTAVOS := 0;
        ING_TEMP := 0;
        EXCENCION_ALBERGUE := 0;

{ TOTAL NECESIDADES AJUSTADAS }

        TOT_AJUSTADA := NECESIDAD_AJUSTADA + EXCENCION_ALBERGUE;

{ CALCULAR EL DEFICIT }
        IF NECESIDAD_AJUSTADA >= INGRESO_NETO
        THEN
           DEFICIT := NECESIDAD_AJUSTADA - TRUNC(INGRESO_NETO);
        ELSE
           DEFICIT := 0;

        DEFICIT := TRUNC(DEFICIT);

{ BENEFICIO AUTORIZADO }
        BENEFICIO_AUTO := 0;
        IF (DEFICIT = 0) AND (NUM_FAMILIA > 0)
        THEN
            BEGIN
                INELEGIBLE_REG := '*';
                RAZON := 'SOLICITANTE(S) INELEGIBLE(S) POR INGRESOS';
                DB_CLOSE(OPEN_ID,STATUS_CODE);
                DB_CLOSE(OPEN2_ID,STATUS_CODE);
                DB_CLOSE(OPEN3_ID,STATUS_CODE);
                DB_CLOSE(OPEN4_ID,STATUS_CODE);
                DB_CLOSE(OPEN5_ID,STATUS_CODE);
                DB_CLOSE(OPEN6_ID,STATUS_CODE);
                IF AUTORIZADA_GBL = 'S'
                THEN SERVICIO_STATUS:='CERRAD04';
                ELSE SERVICIO_STATUS:='RECHAZ13';
                SERVICIO_BENEFICIO:=0;
                CALL DETERMINAR_AEA;
        {       CALL DETERMINAR_AET_PKT;}
                        call DETERMINACION_FINAL_MENU;
                        if not((DETERMINACION_FINAL_GBL = 'S') or
                           (DETERMINACION_FINAL_GBL = 's')) then return;
                CALL DETER_ELEG_AET_UPDATE_SERV_ADL;
                CALL INFOR_BIO_NCAL_ADL(SS_JEFE_GBL,SS_SERV_GBL,COD_SERV_GBL);
                RECURSOS_ACUM:=0;
                RETURN;
             END;

        IF (DEFICIT >= 1) AND (DEFICIT <= 5)
        THEN
            BENEFICIO_AUTO := 5;
        ELSE
            BENEFICIO_AUTO := DEFICIT;

        ELEGIBLE_REG := '*';
        DB_CLOSE(OPEN_ID,STATUS_CODE);
        DB_CLOSE(OPEN2_ID,STATUS2_CODE);
        DB_CLOSE(OPEN3_ID,STATUS_CODE);
        DB_CLOSE(OPEN4_ID,STATUS_CODE);
        DB_CLOSE(OPEN5_ID,STATUS_CODE);
        DB_CLOSE(OPEN6_ID,STATUS_CODE);
        IF AUTORIZADA_GBL = 'S' THEN
                SERVICIO_STATUS:='PENDREVI';
        ELSE
                SERVICIO_STATUS:='PENDCERT';

        SERVICIO_BENEFICIO := BENEFICIO_AUTO;
        CALL DETERMINAR_AEA;
{       CALL DETERMINAR_AET_PKT;}
                        call DETERMINACION_FINAL_MENU;
                        if not((DETERMINACION_FINAL_GBL = 'S') or
                           (DETERMINACION_FINAL_GBL = 's')) then return;
        CALL DETER_ELEG_AET_UPDATE_SERV_ADL;

SET_NOTRACE();

END;


    



--------------------------------------------------------------------- */
