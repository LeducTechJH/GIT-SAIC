package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SAVE_CALEND_ACTIVITY_VALUES_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SAVE_CALEND_ACTIVITY_VALUES_ADL get ( RallyApplication __app )
  {
    SAVE_CALEND_ACTIVITY_VALUES_ADL adl = new SAVE_CALEND_ACTIVITY_VALUES_ADL ( );
    __app.register ( adl, "SAVE_CALEND_ACTIVITY_VALUES_ADL" );
    __app.setADL ( SAVE_CALEND_ACTIVITY_VALUES_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SAVE_CALEND_ACTIVITY_VALUES_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SAVE_CALEND_ACTIVITY_VALUES_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SAVE_CALEND_ACTIVITY_VALUES_ADL" );
    if ( rObj != null && rObj instanceof SAVE_CALEND_ACTIVITY_VALUES_ADL )
    {
      this.app.setADL ( SAVE_CALEND_ACTIVITY_VALUES_ADL.class, ( SAVE_CALEND_ACTIVITY_VALUES_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SAVE_CALEND_ACTIVITY_VALUES_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SAVE_CALEND_ACTIVITY_VALUES_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.INFORMACION_REQUERIMIENTO_GBL = "T";
    this.app.INFORMACION_REQUERIMIENTO_DHM_GBL = this.app.form ( "TECNICOS_DISPONIBLES_ENTREVISTA_FR" ).getDateItem ( "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" );
    this.app.TEMP_TECNICO_GBL = this.app.ID_TECNICO_GBL;
    this.app.ID_TECNICO_GBL = this.app.form ( "TECNICOS_DISPONIBLES_ENTREVISTA_FR" ).getDoubleItem ( "ID_TECNICO0" );
    INFORMACION_REFERIMIENTO_ADL.setCOMPLETION_STATUS ( this.app, "SUCCESS" );
    INVOCAR_CALENDARIO_ADL.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    if ( Compare.equals ( INFORMACION_REFERIMIENTO_ADL.getCOMPLETION_STATUS ( this.app ), "FAILURE" ) ) 
    {
      this.doReturn ( );
      return;
    }
    else
    {
      this.app.returnTo ( "INFORMACION_REFERIMIENTO_ADL" ); if ( true ) return;
    }
    this.app.ID_TECNICO_GBL = this.app.TEMP_TECNICO_GBL;

  }
}



/* ---------------------------------------------------------------------


     
procedure save_calend_activity_values_adl;
begin

SET_TRACE();

{
CALEND_DURACION_ACTIVIDAD_GBL:=
        TECNICOS_DISPONIBLES_ENTREVISTA_FR.DURACION_HORA_MIN_CONTACTO;
CALEND_FECHA_ACTIVIDAD_GBL:=
        TECNICOS_DISPONIBLES_ENTREVISTA_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0;
CALEND_SST_GBL:=TECNICOS_DISPONIBLES_ENTREVISTA_FR.ID_TECNICO0;
}

INFORMACION_REQUERIMIENTO_GBL:='T';
INFORMACION_REQUERIMIENTO_DHM_GBL:=
        TECNICOS_DISPONIBLES_ENTREVISTA_FR.FCH_ACTIVIDAD_HORA_MIN_CONTAC0;
TEMP_TECNICO_GBL:=ID_TECNICO_GBL;
ID_TECNICO_GBL:=TECNICOS_DISPONIBLES_ENTREVISTA_FR.ID_TECNICO0;
INFORMACION_REFERIMIENTO_ADL.COMPLETION_STATUS:='SUCCESS';

CALL INVOCAR_CALENDARIO_ADL;
IF INFORMACION_REFERIMIENTO_ADL.COMPLETION_STATUS='FAILURE'
   THEN RETURN;
   ELSE RETURN_TO INFORMACION_REFERIMIENTO_ADL;

ID_TECNICO_GBL:=TEMP_TECNICO_GBL;

SET_NOTRACE();
end;
    



--------------------------------------------------------------------- */
