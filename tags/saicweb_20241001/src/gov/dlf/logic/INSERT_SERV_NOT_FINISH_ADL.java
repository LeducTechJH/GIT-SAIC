package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class INSERT_SERV_NOT_FINISH_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

  public boolean _condition0 = false;

  public boolean _condition1 = false;

  public boolean _condition2 = false;

  public boolean _condition3 = false;

  public boolean _condition4 = false;

  public boolean _condition5 = false;

  public boolean _condition6 = false;

  public boolean _condition7 = false;

  public boolean _condition8 = false;

  public boolean _condition9 = false;

  public boolean _condition10 = false;

  public boolean _condition11 = false;

  public boolean _condition12 = false;

  public boolean _condition13 = false;



  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double NUCLEO_SERVICIO = 0;

  public double STATUS = 0;

  public double COMMAND = 0;

  public double OPEN_ID = 0;

  public double STATUS_CODE = 0;

  public double OPEN2_ID = 0;

  public double STATUS2_ID = 0;

  public double OPEN3_ID = 0;

  public double STATUS3_CODE = 0;



  public DataStore NUCLEO_READ_LOC_DSD = null;

  public DataStore SERVICIOS2_DSD = null;

  public DataStore CLIENTES_READ_LOC_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------


  /**  */
  public static void setNUCLEO_SERVICIO  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).NUCLEO_SERVICIO = value.getDouble ( );
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS = value.getDouble ( );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).COMMAND = value.getDouble ( );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS_CODE = value.getDouble ( );
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN2_ID = value.getDouble ( );
  }


  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS2_ID = value.getDouble ( );
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN3_ID = value.getDouble ( );
  }


  /**  */
  public static void setSTATUS3_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS3_CODE = value.getDouble ( );
  }



  /**  */
  public static DataStore getNUCLEO_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).NUCLEO_READ_LOC_DSD;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).NUCLEO_READ_LOC_DSD = value;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).NUCLEO_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getSERVICIOS2_DSD  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).SERVICIOS2_DSD;
  }


  /**  */
  public static void setSERVICIOS2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).SERVICIOS2_DSD = value;
  }


  /**  */
  public static void setSERVICIOS2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).SERVICIOS2_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getCLIENTES_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).CLIENTES_READ_LOC_DSD;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).CLIENTES_READ_LOC_DSD = value;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).CLIENTES_READ_LOC_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getNUCLEO_SERVICIO  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).NUCLEO_SERVICIO;
  }


  /**  */
  public static Double getNUCLEO_SERVICIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).NUCLEO_SERVICIO );
  }


  /**  */
  public static void setNUCLEO_SERVICIO  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).NUCLEO_SERVICIO = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).NUCLEO_SERVICIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS;
  }


  /**  */
  public static Double getSTATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS );
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS = value;
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCOMMAND  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).COMMAND;
  }


  /**  */
  public static Double getCOMMANDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).COMMAND );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).COMMAND = value;
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_CODE  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS_CODE;
  }


  /**  */
  public static Double getSTATUS_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS_CODE );
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS_CODE = value;
  }


  /**  */
  public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN2_ID  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN2_ID;
  }


  /**  */
  public static Double getOPEN2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN2_ID );
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN2_ID = value;
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS2_ID  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS2_ID;
  }


  /**  */
  public static Double getSTATUS2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS2_ID );
  }


  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS2_ID = value;
  }


  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN3_ID  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN3_ID;
  }


  /**  */
  public static Double getOPEN3_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN3_ID );
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN3_ID = value;
  }


  /**  */
  public static void setOPEN3_ID  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).OPEN3_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS3_CODE  ( RallyApplication __app )
  {
    return ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS3_CODE;
  }


  /**  */
  public static Double getSTATUS3_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS3_CODE );
  }


  /**  */
  public static void setSTATUS3_CODE  ( RallyApplication __app, double value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS3_CODE = value;
  }


  /**  */
  public static void setSTATUS3_CODE  ( RallyApplication __app, Object value )
  {
    ( ( INSERT_SERV_NOT_FINISH_ADL ) __app.getADL ( INSERT_SERV_NOT_FINISH_ADL.class ) ).STATUS3_CODE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   *
   * @param __app
   * @return
   */
  public static INSERT_SERV_NOT_FINISH_ADL get ( RallyApplication __app )
  {
    INSERT_SERV_NOT_FINISH_ADL adl = new INSERT_SERV_NOT_FINISH_ADL ( );
    __app.register ( adl, "INSERT_SERV_NOT_FINISH_ADL" );
    __app.setADL ( INSERT_SERV_NOT_FINISH_ADL.class, adl );
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    INSERT_SERV_NOT_FINISH_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    INSERT_SERV_NOT_FINISH_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   *
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   *
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "INSERT_SERV_NOT_FINISH_ADL" );
    if ( rObj != null && rObj instanceof INSERT_SERV_NOT_FINISH_ADL )
    {
      this.app.setADL ( INSERT_SERV_NOT_FINISH_ADL.class, ( INSERT_SERV_NOT_FINISH_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   *
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "INSERT_SERV_NOT_FINISH_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep )
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
      case 7:  { this.currentStep ++; this.step7 ( this.keyParms ); break; }
      case 8:  { this.currentStep ++; this.step8 ( this.keyParms ); break; }
      case 9:  { this.currentStep ++; this.step9 ( this.keyParms ); break; }
      case 10:  { this.currentStep ++; this.step10 ( this.keyParms ); break; }
      default:
      {
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "INSERT_SERV_NOT_FINISH_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NUCLEO_READ_LOC_DSD = this.dm.create ( "NUCLEO_READ_LOC_DSD" );
    NUCLEO_SERVICIO = NUCLEO_READ_LOC_DSD.getId ( );
    STATUS = RallyDataStoreException.getDefault ( );
    SERVICIOS2_DSD = this.dm.create ( "SERVICIOS2_DSD" );
    OPEN2_ID = SERVICIOS2_DSD.getId ( );
    STATUS2_ID = RallyDataStoreException.getDefault ( );
    CLIENTES_READ_LOC_DSD = this.dm.create ( "CLIENTES_READ_LOC_DSD" );
    OPEN3_ID = CLIENTES_READ_LOC_DSD.getId ( );
    STATUS3_CODE = RallyDataStoreException.getDefault ( );
    COMMAND = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    this.app.SS_SERV_GBL = this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" );
    if ( Compare.equals ( this.app.getInstanceMode ( ), "INSERT" ) )
    {
      this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "SEGURO_SOCIAL_JEFE_ANTERIOR", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ) );
    }
    if ( Compare.equals ( this.app.getInstanceMode ( ), "INSERT" ) )
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 4 ), "PANE" ) )
      {
        STATUS2_ID  = this.dm.reset ( OPEN2_ID );

        this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));

        STATUS2_ID  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
        STATUS2_ID  = this.dm.retrieve ( OPEN2_ID );

        STATUS2_ID  = this.dm.firstRow ( OPEN2_ID );

        if ( ! Compare.equals ( STATUS2_ID, 0 ) )
        {
          this.doReturn ( );
          return;
        }
        while ( Compare.equals ( STATUS2_ID, 0 ) )
        {
          STATUS3_CODE  = this.dm.reset ( OPEN3_ID );

          this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
          this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

          STATUS3_CODE  = this.dm.limitQueryFromBuffer ( OPEN3_ID );
          STATUS3_CODE  = this.dm.retrieve ( OPEN3_ID );

          STATUS3_CODE  = this.dm.firstRow ( OPEN3_ID );

          if ( !Compare.equals( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO" ), "PANED" ) && ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO" ), 0, 4 ), "PANE" ) ) && ( Compare.equals ( TruncService.trunc ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDateItem ( "FCH_SOLICITUD" ), "MON" ) , TruncService.trunc ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS2_DSD" ), "FCH_SOLICITUD" ), "MON" )  ) )  && ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "COD_INSTITUCION" ), "ALBE" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "COD_INSTITUCION" ), "HOPM" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "COD_INSTITUCION" ), "HOFA" ) )  )  )
          {
            this.app.setError ( 0, 4041 );
            this.app.errorFlag = false;
            STATUS3_CODE  = this.dm.dbClose ( OPEN3_ID );

            this.doReturn ( );
            return;
          }

          STATUS2_ID  = this.dm.nextRow ( OPEN2_ID );

        }
        STATUS3_CODE  = this.dm.dbClose ( OPEN3_ID );

      }
      else
      {
        STATUS  = this.dm.reset ( NUCLEO_SERVICIO );

        this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ));
        this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAM" ));
        this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
        this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

        STATUS  = this.dm.limitQueryFromBuffer ( NUCLEO_SERVICIO );
        STATUS  = this.dm.retrieve ( NUCLEO_SERVICIO );

        STATUS  = this.dm.firstRow ( NUCLEO_SERVICIO );

        while ( Compare.equals ( STATUS, 0 ) )
        {
          if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) )
          {
            STATUS2_ID  = this.dm.reset ( OPEN2_ID );

            this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) );
            this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO", this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO" ) );

            STATUS2_ID  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
            STATUS2_ID  = this.dm.retrieve ( OPEN2_ID );

            STATUS2_ID  = this.dm.firstRow ( OPEN2_ID );

            if ( Compare.equals ( STATUS2_ID, 0 ) )
            {
              if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDELEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "JUNTAMED" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDJMED" ) )|| ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDAUTO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) )
              {
                this.app.COMPLETION_STATUS_GBL = "FAILURE";
                this.app.setError ( 1, 2757 );
                this.app.errorFlag = false;
                STATUS  = this.dm.dbClose ( NUCLEO_SERVICIO );

                STATUS2_ID  = this.dm.dbClose ( OPEN2_ID );

                this.doReturn ( );
                return;
              }
            }

            STATUS  = this.dm.nextRow ( NUCLEO_SERVICIO );

          }
        }
        if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" ) )
        {
          STATUS  = this.dm.reset ( NUCLEO_SERVICIO );

          this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAM" ));
          this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
          this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

          STATUS  = this.dm.limitQueryFromBuffer ( NUCLEO_SERVICIO );
          STATUS  = this.dm.retrieve ( NUCLEO_SERVICIO );

          STATUS  = this.dm.firstRow ( NUCLEO_SERVICIO );

          while ( Compare.equals ( STATUS, 0 ) )
          {
            if ( ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO" ), 0, 2 ), "AE" ) ) && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) )  )
            {
              STATUS2_ID  = this.dm.reset ( OPEN2_ID );

              this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) );
              this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO", this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO" ) );

              STATUS2_ID  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
              STATUS2_ID  = this.dm.retrieve ( OPEN2_ID );

              STATUS2_ID  = this.dm.firstRow ( OPEN2_ID );

              if ( Compare.equals ( STATUS2_ID, 0 ) )
              {
                  if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDELEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "JUNTAMED" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDJMED" ) )|| ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDAUTO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) )
                  {
                  this.app.COMPLETION_STATUS_GBL = "FAILURE";
                  this.app.setError ( 2, 2758 );
                  this.app.errorFlag = false;
                  STATUS  = this.dm.dbClose ( NUCLEO_SERVICIO );

                  STATUS2_ID  = this.dm.dbClose ( OPEN2_ID );

                  this.doReturn ( );
                  return;
                }
              }
            }

            STATUS  = this.dm.nextRow ( NUCLEO_SERVICIO );

          }
        }
        if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
        {
          this._condition1 = true;
        }
        else
        {
          this._condition1 = false;
        }
        if ( this._condition1 )
        {
          if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" ) )
          {
            this._condition2 = true;
          }
          else
          {
            this._condition2 = false;
          }
          if ( this._condition2 )
          {
            STATUS  = this.dm.reset ( NUCLEO_SERVICIO );

            this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
            this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

            STATUS  = this.dm.limitQueryFromBuffer ( NUCLEO_SERVICIO );
            STATUS  = this.dm.retrieve ( NUCLEO_SERVICIO );

            STATUS  = this.dm.firstRow ( NUCLEO_SERVICIO );

            this.process ( ps );
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.getMode ( ), "INSERT" ) )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 4 ), "PANE" ) )
      {
      }
      else
      {
        if ( this._condition1 )    //        if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
        {
          if ( this._condition2 )    //          if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" ) )
          {
            if ( Compare.equals ( STATUS, 0 )  )
            {
              this._condition3 = true;
            }
            else
            {
              this._condition3 = false;
            }
            if ( this._condition3 )
            {
              if ( ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO" ), 0, 2 ), "AE" ) ) && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) )  && ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) ) )  )
              {
                this._condition4 = true;
              }
              else
              {
                this._condition4 = false;
              }
              if ( this._condition4 )
              {
                STATUS2_ID  = this.dm.reset ( OPEN2_ID );

                this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) );
                this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO", this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO" ) );

                STATUS2_ID  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
                STATUS2_ID  = this.dm.retrieve ( OPEN2_ID );

                STATUS2_ID  = this.dm.firstRow ( OPEN2_ID );

                if ( Compare.equals ( STATUS2_ID, 0 ) )
                {
                  this._condition5 = true;
                }
                else
                {
                  this._condition5 = false;
                }
                if ( this._condition5 )
                {
                    if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDELEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "JUNTAMED" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDJMED" ) )|| ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDAUTO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) )
                    	 
                  {
                    this._condition6 = true;
                  }
                  else
                  {
                    this._condition6 = false;
                  }
                  if ( this._condition6 )
                  {
                    this.app.COMPLETION_STATUS_GBL = "FAILURE";
                    this.app.setError ( 3, 2758 );
                    STATUS  = this.dm.dbClose ( NUCLEO_SERVICIO );

                    STATUS2_ID  = this.dm.dbClose ( OPEN2_ID );

                    this.app.callCommand ( RallyAppCommandFactory.IGNORE );
                    return;
                  }
                }
              }
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.getMode ( ), "INSERT" ) )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 4 ), "PANE" ) )
      {
      }
      else
      {
        if ( this._condition1 )    //        if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
        {
          if ( this._condition2 )    //          if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" ) )
          {
            if ( this._condition3 )    //            while ( Compare.equals ( STATUS, 0 )  )
            {
              if ( this._condition4 )    //              if ( ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO" ), 0, 2 ), "AE" ) ) && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) )  && ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) ) )  )
              {
                if ( this._condition5 )    //                if ( Compare.equals ( STATUS2_ID, 0 ) )
                {
                  if ( this._condition6 )    //                  if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDELEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDAUTO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) )
                  {
                    this.app.executeCommand ( RallyAppCommandFactory.ABORTACTION );
                    return;
                  }
                }
              }
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.getMode ( ), "INSERT" ) )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 4 ), "PANE" ) )
      {
      }
      else
      {
        if ( this._condition1 )    //        if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
        {
          if ( this._condition2 )    //          if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" ) )
          {
            if ( this._condition3 )    //            while ( Compare.equals ( STATUS, 0 )  )
            {
              if ( this._condition4 )    //              if ( ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO" ), 0, 2 ), "AE" ) ) && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) )  && ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) ) )  )
              {
                if ( this._condition5 )    //                if ( Compare.equals ( STATUS2_ID, 0 ) )
                {
                  if ( this._condition6 )    //                  if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDELEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDAUTO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) )
                  {
                    return;/*
                    this.doReturn ( );
                    return;*/
                  }
                }
              }

              STATUS  = this.dm.nextRow ( NUCLEO_SERVICIO );

              this.currentStep = 1;
              return;
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.getMode ( ), "INSERT" ) )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 4 ), "PANE" ) )
      {
      }
      else
      {
        if ( this._condition1 )    //        if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
        {
          if ( this._condition2 )    //          if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" ) )
          {
          }
          if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
          {
            this._condition7 = true;
          }
          else
          {
            this._condition7 = false;
          }
          if ( this._condition7 )
          {
            if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 3 ), "PAN" ) )
            {
              this._condition8 = true;
            }
            else
            {
              this._condition8 = false;
            }
            if ( this._condition8 )
            {
              STATUS  = this.dm.reset ( NUCLEO_SERVICIO );

              this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
              this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
              this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ));

              STATUS  = this.dm.limitQueryFromBuffer ( NUCLEO_SERVICIO );
              STATUS  = this.dm.retrieve ( NUCLEO_SERVICIO );

              STATUS  = this.dm.firstRow ( NUCLEO_SERVICIO );

              this.process ( ps );
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.getMode ( ), "INSERT" ) )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 4 ), "PANE" ) )
      {
      }
      else
      {
        if ( this._condition1 )    //        if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
        {
          if ( this._condition7 )    //          if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
          {
            if ( this._condition8 )    //            if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 3 ), "PAN" ) )
            {
              if ( Compare.equals ( STATUS, 0 )  )
              {
                this._condition9 = true;
              }
              else
              {
                this._condition9 = false;
              }
              if ( this._condition9 )
              {
                if ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) ) && ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) ) ) )  )
                {
                  this._condition10 = true;
                }
                else
                {
                  this._condition10 = false;
                }
                if ( this._condition10 )
                {
                  STATUS2_ID  = this.dm.reset ( OPEN2_ID );

                  this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) );
                  this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO", this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO" ) );

                  STATUS2_ID  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
                  STATUS2_ID  = this.dm.retrieve ( OPEN2_ID );

                  STATUS2_ID  = this.dm.firstRow ( OPEN2_ID );

                  if ( Compare.equals ( STATUS2_ID, 0 ) )
                  {
                    this._condition11 = true;
                  }
                  else
                  {
                    this._condition11 = false;
                  }
                  if ( this._condition11 )
                  {
                      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDELEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "JUNTAMED" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDJMED" ) )|| ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDAUTO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) )
                    {
                      this._condition12 = true;
                    }
                    else
                    {
                      this._condition12 = false;
                    }
                    if ( this._condition12 )
                    {
                      this.app.COMPLETION_STATUS_GBL = "FAILURE";
                      this.app.setError ( 4, 2758 );
                      STATUS  = this.dm.dbClose ( NUCLEO_SERVICIO );

                      STATUS2_ID  = this.dm.dbClose ( OPEN2_ID );

                      this.app.callCommand ( RallyAppCommandFactory.IGNORE );
                      return;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step6 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.getMode ( ), "INSERT" ) )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 4 ), "PANE" ) )
      {
      }
      else
      {
        if ( this._condition1 )    //        if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
        {
          if ( this._condition7 )    //          if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
          {
            if ( this._condition8 )    //            if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 3 ), "PAN" ) )
            {
              if ( this._condition9 )    //              while ( Compare.equals ( STATUS, 0 )  )
              {
                if ( this._condition10 )    //                if ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) ) && ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) ) ) )  )
                {
                  if ( this._condition11 )    //                  if ( Compare.equals ( STATUS2_ID, 0 ) )
                  {
                    if ( this._condition12 )    //                    if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDELEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDAUTO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) )
                    {
                      this.app.executeCommand ( RallyAppCommandFactory.ABORTACTION );
                      return;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step7 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.equals ( this.app.getMode ( ), "INSERT" ) )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 4 ), "PANE" ) )
      {
      }
      else
      {
        if ( this._condition1 )    //        if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
        {
          if ( this._condition7 )    //          if ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )
          {
            if ( this._condition8 )    //            if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 3 ), "PAN" ) )
            {
              if ( this._condition9 )    //              while ( Compare.equals ( STATUS, 0 )  )
              {
                if ( this._condition10 )    //                if ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) ) && ( ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ), this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV" ) ) ) )  )
                {
                  if ( this._condition11 )    //                  if ( Compare.equals ( STATUS2_ID, 0 ) )
                  {
                    if ( this._condition12 )    //                    if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACTIVO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDELEG" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDREVI" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "PENDAUTO" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" ), "ACCNEG" ) ) )
                    {
                      return;/*
                      this.doReturn ( );
                      return;*/
                    }
                  }
                }

                STATUS  = this.dm.nextRow ( NUCLEO_SERVICIO );

                this.currentStep = 5;
                return;
              }
            }
          }
        }
      }
    }

  }


  /**
   *
   */
  protected void step8 ( ParameterSet ps )
  {
    STATUS  = this.dm.dbClose ( NUCLEO_SERVICIO );

    STATUS2_ID  = this.dm.dbClose ( OPEN2_ID );

    if ( ( Compare.equals ( this.app.getMode ( ), "INSERT" ) ) && ( Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) )  )
    {
      this._condition13 = true;
    }
    else
    {
      this._condition13 = false;
    }
    if ( this._condition13 )
    {
      this.app.callCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step9 ( ParameterSet ps )
  {
    if ( this._condition13 )    //    if ( ( Compare.equals ( this.app.getMode ( ), "INSERT" ) ) && ( Compare.equals ( COMMAND, RallyAppCommandFactory.EXITACTION ) )  )
    {
      this.app.callCommand ( RallyAppCommandFactory.COMMIT );
      return;
    }

  }


  /**
   *
   */
  protected void step10 ( ParameterSet ps )
  {
    STATUS  = this.dm.dbClose ( NUCLEO_SERVICIO );

    STATUS2_ID  = this.dm.dbClose ( OPEN2_ID );

  }
}



/* ---------------------------------------------------------------------



PROCEDURE INSERT_SERV_NOT_FINISH_ADL;

VAR
        nucleo_servicio:number;
        status         :number;
        COMMAND:        NUMBER(9,0);
        OPEN_ID: NUMBER;
        STATUS_CODE : NUMBER;
        OPEN2_ID: NUMBER;
        STATUS2_ID : NUMBER;
        OPEN3_ID: NUMBER;
        STATUS3_CODE: NUMBER;

BEGIN
SET_TRACE();
db_open(NUCLEO_READ_LOC_DSD,nucleo_servicio,status);
DB_OPEN(SERVICIOS2_DSD,OPEN2_ID,STATUS2_ID);
DB_OPEN(CLIENTES_READ_LOC_DSD,OPEN3_ID,STATUS3_CODE);
COMMAND:=GET_CMD();
SS_SERV_GBL := SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_SERV;
{ let see if this service already exist }
if (GET_MODE() = 'INSERT') then
begin
SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_ANTERIOR := SERV_NUCLEO_SERV_FRM.SEGURO_
SOCIAL_JEFE_SERV;
end;
if (GET_MODE() = 'INSERT')
then
IF (SUBSTR(SERV_NUCLEO_SERV_FRM.COD_SERVICIO,0,4) = 'PANE')
THEN
BEGIN
        DB_RESET(OPEN2_ID,STATUS2_ID);
        SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV := SERV_NUCLEO_SERV_FRM.SEGURO_SO
CIAL_JEFE_SERV;
        DB_QUERY(OPEN2_ID,STATUS2_ID);
        DB_GET_FIRST(OPEN2_ID,STATUS2_ID);
        if (status2_id<>0)
        then
              return;
        while (status2_id = 0) do
        begin
                DB_RESET(OPEN3_ID,STATUS3_CODE);
                CLIENTES_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE :=
                        SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_SERV;
                CLIENTES_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN3_ID,STATUS3_CODE);
                DB_GET_FIRST(OPEN3_ID,STATUS3_CODE);
                if (substr(SERVICIOS2_DSD.cod_servicio,0,4) = 'PANE') AND
                   (TRUNC(SERV_NUCLEO_SERV_FRM.FCH_SOLICITUD,'MON') =
                    TRUNC(SERVICIOS2_DSD.FCH_SOLICITUD,'MON')) AND
                   ((CLIENTES_READ_LOC_DSD.COD_INSTITUCION <> 'ALBE') and
                    (CLIENTES_READ_LOC_DSD.COD_INSTITUCION <> 'HOPM') and
                    (CLIENTES_READ_LOC_DSD.COD_INSTITUCION <> 'HOFA'))
                THEN
                    BEGIN
                           error(4041);
                           SET_failure();
                           DB_CLOSE(OPEN3_ID,STATUS3_CODE);
                           return;
                    END;
        DB_GET_NEXT(OPEN2_ID,STATUS2_ID);
        END;
    DB_CLOSE(OPEN3_ID,STATUS3_CODE);
END;
ELSE
begin
db_reset(nucleo_servicio,status);
NUCLEO_READ_LOC_DSD.COD_SERVICIO := SERV_NUCLEO_SERV_FRM.COD_SERVICIO;
NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM := SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL
_JEFE_FAM;
NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV := SERV_NUCLEO_SERV_FRM.SEGURO_SOCIA
L_JEFE_SERV;
NUCLEO_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
db_query(nucleo_servicio,status);
db_get_first(nucleo_servicio,status);
while (status=0) do
  begin
      if ((NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV = 'BNPR') OR
        (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV = 'BNSC'))
  THEN
        BEGIN
                DB_RESET(OPEN2_ID,STATUS2_ID);
                SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV := NUCLEO_READ_LOC_DSD.SE
GURO_SOCIAL_JEFE_SERV;
                SERVICIOS2_DSD.COD_SERVICIO := NUCLEO_READ_LOC_DSD.COD_SERVICIO;
                DB_QUERY(OPEN2_ID,STATUS2_ID);
                DB_GET_FIRST(OPEN2_ID,STATUS2_ID);
                IF STATUS2_ID = 0 THEN
                    BEGIN
                        IF ((SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'ACTIVO') OR
                           (SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'PENDELEG') OR
                           (SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'PENDREVI') OR
                           (SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'PENDAUTO') OR
                           (SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'ACCNEG'))
                        THEN
                                BEGIN
                                   completion_status_gbl := 'FAILURE';
                                   error(2757);
                                   SEt_failure();
                                   DB_CLOSE(NUCLEO_SERVICIO,STATUS);
                                   DB_CLOSE(OPEN2_ID,STATUS2_ID);

                                   return;
                                END;
                    END;
      db_get_next(nucleo_servicio,status);
  end;

END;


if (substr(SERV_NUCLEO_SERV_FRM.COD_SERVICIO,0,2) = 'AE')  THEN
BEGIN
db_reset(nucleo_servicio,status);
NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM := SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL
_JEFE_FAM;
NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV := SERV_NUCLEO_SERV_FRM.SEGURO_SOCIA
L_JEFE_SERV;
NUCLEO_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
db_query(nucleo_servicio,status);
db_get_first(nucleo_servicio,status);
while (status=0) do
  begin
      if (substr(NUCLEO_READ_LOC_DSD.COD_SERVICIO,0,2) = 'AE') AND
         ((NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV = 'BNPR') OR
        (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV = 'BNSC'))
  THEN
        BEGIN
                DB_RESET(OPEN2_ID,STATUS2_ID);
                SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV := NUCLEO_READ_LOC_DSD.SE
GURO_SOCIAL_JEFE_SERV;
                SERVICIOS2_DSD.COD_SERVICIO := NUCLEO_READ_LOC_DSD.COD_SERVICIO;
                DB_QUERY(OPEN2_ID,STATUS2_ID);
                DB_GET_FIRST(OPEN2_ID,STATUS2_ID);
                IF STATUS2_ID = 0 THEN
                    BEGIN
                        IF ((SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'ACTIVO') OR
                           (SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'PENDELEG') OR
                           (SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'PENDREVI') OR
                           (SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'PENDAUTO') OR
                           (SERVICIOS2_DSD.COD_STATUS_SERVICIO = 'ACCNEG'))
                        THEN
                                BEGIN
                                   completion_status_gbl := 'FAILURE';
                                   error(2758);
                                   SEt_failure();
                                   DB_CLOSE(NUCLEO_SERVICIO,STATUS);
                                   DB_CLOSE(OPEN2_ID,STATUS2_ID);

                                   return;
                                END;
                    END;
  end;
      db_get_next(nucleo_servicio,status);

END;
END;

{ VERIFICAR SI BENEFICIARIO AE PERTENECE A OTRO SERVICIO }

IF (SSJS_ANT_GBL <> SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_SERV)
THEN
BEGIN

IF (SUBSTR(SERV_NUCLEO_SERV_FRM.COD_SERVICIO,0,2)='AE')
        THEN BEGIN

{               DB_OPEN(SERVICIOS2_DSD,OPEN2_ID,STATUS2_ID);}
                   DB_RESET(NUCLEO_SERVICIO,STATUS);
                   NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO := SERV_NUCLEO
_SERV_FRM.SEGURO_SOCIAL_JEFE_SERV;
                   NUCLEO_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;

                   DB_QUERY(NUCLEO_SERVICIO,STATUS);
                   DB_GET_FIRST(NUCLEO_SERVICIO,STATUS);
                   WHILE STATUS = 0 DO
                        BEGIN
                           IF (SUBSTR(NUCLEO_READ_LOC_DSD.COD_SERVICIO,0,2) = 'A
E') AND
                              ((NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV
 = 'BNPR') OR
                               (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV
 = 'BNSC')) AND
                               ((NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV <>
                                        SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_
SERV))
                                THEN
                                   BEGIN
                                        DB_RESET(OPEN2_ID,STATUS2_ID);
                                        SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV :
= NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV;
                                        SERVICIOS2_DSD.COD_SERVICIO := NUCLEO_RE
AD_LOC_DSD.COD_SERVICIO;
                                        DB_QUERY(OPEN2_ID,STATUS2_ID);
                                        DB_GET_FIRST(OPEN2_ID,STATUS2_ID);
                                        IF STATUS2_ID = 0 THEN
                                            BEGIN
                                                IF ((SERVICIOS2_DSD.COD_STATUS_S
ERVICIO = 'ACTIVO') OR
                                                   (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'PENDELEG') OR
                                                   (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'PENDREVI') OR
                                                   (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'PENDAUTO') OR
                                                   (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'ACCNEG'))
                                                THEN
                                                BEGIN
                                                   completion_status_gbl := 'FAI
LURE';
                                                   error(2758);
                                                   DB_CLOSE(NUCLEO_SERVICIO,STAT
US);
                                                   DB_CLOSE(OPEN2_ID,STATUS2_ID)
;
                                                   call_cmd(ignore);
                                                   execute_cmd(abortaction);
                                                   return;
                                                END;
                                            END;
                                     END;
                           DB_GET_NEXT(NUCLEO_SERVICIO,STATUS);
                        end;
        END;

{**************************}
{ VERIFICAR SI BENEFICIARIO PAN PERTENECE A OTRO SERVICIO }
IF (SSJS_ANT_GBL <> SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_SERV)
THEN
BEGIN
IF (SUBSTR(SERV_NUCLEO_SERV_FRM.COD_SERVICIO,0,3)='PAN')
        THEN BEGIN
{               DB_OPEN(SERVICIOS2_DSD,OPEN2_ID,STATUS2_ID);}
                   DB_RESET(NUCLEO_SERVICIO,STATUS);
                   NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO := SERV_NUCLEO
_SERV_FRM.SEGURO_SOCIAL_JEFE_SERV;
                   NUCLEO_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
                   NUCLEO_READ_LOC_DSD.COD_SERVICIO := SERV_NUCLEO_SERV_FRM.COD_
SERVICIO;
                   DB_QUERY(NUCLEO_SERVICIO,STATUS);
                   DB_GET_FIRST(NUCLEO_SERVICIO,STATUS);
                   WHILE STATUS = 0 DO
                        BEGIN
{((SUBSTR(NUCLEO_READ_LOC_DSD.COD_SERVICIO,0,3) = 'PAN') AND }

                           IF  (((NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SE
RV = 'BNPR') OR
                                (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SER
V = 'BNSC')) AND
                                ((NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV <>

                                        SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV))
)
                                THEN BEGIN
                                        DB_RESET(OPEN2_ID,STATUS2_ID);
                                        SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV :
= NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV;
                                        SERVICIOS2_DSD.COD_SERVICIO := NUCLEO_RE
AD_LOC_DSD.COD_SERVICIO;
                                        DB_QUERY(OPEN2_ID,STATUS2_ID);
                                        DB_GET_FIRST(OPEN2_ID,STATUS2_ID);
                                        IF STATUS2_ID = 0
                                        THEN
                                            BEGIN
                                                IF (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'ACTIVO') OR
                                                   (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'PENDELEG') OR
                                                   (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'PENDREVI') OR
                                                   (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'PENDAUTO') OR
                                                   (SERVICIOS2_DSD.COD_STATUS_SE
RVICIO = 'ACCNEG')
                                                THEN
                                                BEGIN

                                                   completion_status_gbl := 'FAI
LURE';
                                                   error(2758);
                                                   DB_CLOSE(NUCLEO_SERVICIO,STAT
US);
                                                   DB_CLOSE(OPEN2_ID,STATUS2_ID)
;
                                                   call_cmd(ignore);
                                                   execute_cmd(abortaction);
                                                   return;
                                                END;
                                            END;
                                     END;
                           DB_GET_NEXT(NUCLEO_SERVICIO,STATUS);
                        end;
        END;
 END;
END;
END;
DB_CLOSE(nucleo_servicio,status);
DB_CLOSE(OPEN2_ID,STATUS2_ID);
{**************************}

IF (GET_MODE()='INSERT') AND (COMMAND=EXITACTION)
   THEN BEGIN
          CALL_CMD(IGNORE);
          CALL_CMD(COMMIT);
        END;
      DB_CLOSE(nucleo_servicio,status);
      DB_CLOSE(OPEN2_ID,STATUS2_ID);

SET_NOTRACE();

END;





--------------------------------------------------------------------- */
