package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AUTPAG_RESTARA_DEUDA_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------



  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RECL_ID = 0;

  public double RECL_CODE = 0;

  public double RECA_ID = 0;

  public double RECA_CODE = 0;



  public String RA_TMP = null;

  public Date TMP_DATE = null;

  public DataStore AUTPAG_RECLA_DSD = null;

  public DataStore AUTPAG_AG2_DSD = null;

  public double result;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------


  /**  */
  public static void setRA_TMP  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RA_TMP = value.getString ( );
  }


  /**  */
  public static void setRECL_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_ID = value.getDouble ( );
  }


  /**  */
  public static void setRECL_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_CODE = value.getDouble ( );
  }


  /**  */
  public static void setRECA_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_ID = value.getDouble ( );
  }


  /**  */
  public static void setRECA_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_CODE = value.getDouble ( );
  }


  /**  */
  public static void setTMP_DATE  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).TMP_DATE = value.getDate ( );
  }



  /**  */
  public static String getRA_TMP  ( RallyApplication __app )
  {
    return ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RA_TMP;
  }


  /**  */
  public static void setRA_TMP  ( RallyApplication __app, String value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RA_TMP = value;
  }


  /**  */
  public static void setRA_TMP  ( RallyApplication __app, Object value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RA_TMP = ( String ) value;
  }



  /**  */
  public static Date getTMP_DATE  ( RallyApplication __app )
  {
    return ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).TMP_DATE;
  }


  /**  */
  public static void setTMP_DATE  ( RallyApplication __app, Date value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).TMP_DATE = value;
  }


  /**  */
  public static void setTMP_DATE  ( RallyApplication __app, Object value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).TMP_DATE = ( Date ) value;
  }



  /**  */
  public static DataStore getAUTPAG_RECLA_DSD  ( RallyApplication __app )
  {
    return ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).AUTPAG_RECLA_DSD;
  }


  /**  */
  public static void setAUTPAG_RECLA_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).AUTPAG_RECLA_DSD = value;
  }


  /**  */
  public static void setAUTPAG_RECLA_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).AUTPAG_RECLA_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getAUTPAG_AG2_DSD  ( RallyApplication __app )
  {
    return ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).AUTPAG_AG2_DSD;
  }


  /**  */
  public static void setAUTPAG_AG2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).AUTPAG_AG2_DSD = value;
  }


  /**  */
  public static void setAUTPAG_AG2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).AUTPAG_AG2_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRECL_ID  ( RallyApplication __app )
  {
    return ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_ID;
  }


  /**  */
  public static Double getRECL_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_ID );
  }


  /**  */
  public static void setRECL_ID  ( RallyApplication __app, double value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_ID = value;
  }


  /**  */
  public static void setRECL_ID  ( RallyApplication __app, Object value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECL_CODE  ( RallyApplication __app )
  {
    return ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_CODE;
  }


  /**  */
  public static Double getRECL_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_CODE );
  }


  /**  */
  public static void setRECL_CODE  ( RallyApplication __app, double value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_CODE = value;
  }


  /**  */
  public static void setRECL_CODE  ( RallyApplication __app, Object value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECL_CODE = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECA_ID  ( RallyApplication __app )
  {
    return ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_ID;
  }


  /**  */
  public static Double getRECA_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_ID );
  }


  /**  */
  public static void setRECA_ID  ( RallyApplication __app, double value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_ID = value;
  }


  /**  */
  public static void setRECA_ID  ( RallyApplication __app, Object value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECA_CODE  ( RallyApplication __app )
  {
    return ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_CODE;
  }


  /**  */
  public static Double getRECA_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_CODE );
  }


  /**  */
  public static void setRECA_CODE  ( RallyApplication __app, double value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_CODE = value;
  }


  /**  */
  public static void setRECA_CODE  ( RallyApplication __app, Object value )
  {
    ( ( AUTPAG_RESTARA_DEUDA_ADL ) __app.getADL ( AUTPAG_RESTARA_DEUDA_ADL.class ) ).RECA_CODE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   *
   * @param __app
   * @return
   */
  public static AUTPAG_RESTARA_DEUDA_ADL get ( RallyApplication __app )
  {
    AUTPAG_RESTARA_DEUDA_ADL adl = new AUTPAG_RESTARA_DEUDA_ADL ( );
    __app.register ( adl, "AUTPAG_RESTARA_DEUDA_ADL" );
    __app.setADL ( AUTPAG_RESTARA_DEUDA_ADL.class, adl );
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    AUTPAG_RESTARA_DEUDA_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    AUTPAG_RESTARA_DEUDA_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   *
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   *
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "AUTPAG_RESTARA_DEUDA_ADL" );
    if ( rObj != null && rObj instanceof AUTPAG_RESTARA_DEUDA_ADL )
    {
      this.app.setADL ( AUTPAG_RESTARA_DEUDA_ADL.class, ( AUTPAG_RESTARA_DEUDA_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   *
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "AUTPAG_RESTARA_DEUDA_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep )
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default:
      {
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "AUTPAG_RESTARA_DEUDA_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

	    AUTPAG_RECLA_DSD = this.dm.create ( "AUTPAG_RECLA_DSD" );

	      RECL_ID = AUTPAG_RECLA_DSD.getId ( );
	      RECL_CODE = RallyDataStoreException.getDefault ( );
	      if ( ! Compare.equals ( RECL_CODE, 0 ) )
	      {
	        this.app.setError ( 0, RECL_CODE );
	        this.doReturn ( );
	        return;
	      }
	      AUTPAG_AG2_DSD = this.dm.create ( "AUTPAG_AG2_DSD" );
	      RECA_ID = AUTPAG_AG2_DSD.getId ( );
	      RECA_CODE = RallyDataStoreException.getDefault ( );
	      if ( ! Compare.equals ( RECA_CODE, 0 ) )
	      {
	        this.app.setError ( 1, RECA_CODE );
	        this.doReturn ( );
	        return;
	      }
	      RECL_CODE  = this.dm.reset ( RECL_ID );

	      if ( ! Compare.equals ( RECL_CODE, 0 ) )
	      {
	        this.app.setError ( 2, RECL_CODE );
	        this.doReturn ( );
	        return;
	      }

	      RECA_CODE  = this.dm.reset ( RECA_ID );

	      if ( ! Compare.equals ( RECA_CODE, 0 ) )
	      {
	        this.app.setError ( 3, RECA_CODE );
	        this.doReturn ( );
	        return;
	      }
	      this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "SS_JF" ));
	      this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
	      this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "COD_SERVICIO", this.app.form ( "AUTPAG_FR" ).getStringItem ( "CD_SERV" ));
	      this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "FECHA_IDENTIFICADO", this.app.form ( "AUTPAG_FR" ).getDateItem ( "FCH_IDN" ));
	      //this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

	      RECL_CODE  = this.dm.limitQueryFromBuffer ( RECL_ID );
	      RECL_CODE  = this.dm.retrieve ( RECL_ID );

	      if ( ! Compare.equals ( RECL_CODE, 0 ) )
	      {
	        this.app.setError ( 4, RECL_CODE );
	        this.doReturn ( );
	        return;
	      }

	      RECL_CODE  = this.dm.firstRow ( RECL_ID );

	      if ( ! Compare.equals ( RECL_CODE, 0 ) )
	      {
	        this.app.setError ( "0", "No se pudo actualizar el record" );
	        this.app.errorFlag = false;
	        this.doReturn ( );
	        return;
	      }
	      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "SS_JF", this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "SS_JF" ));
	      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
	      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "CD_SERV", this.app.form ( "AUTPAG_FR" ).getStringItem ( "CD_SERV" ));
	      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "FCH_IDN", this.app.form ( "AUTPAG_FR" ).getDateItem ( "FCH_IDN" ));
	      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "FCH_PAGO", this.app.form ( "AUTPAG_FR" ).getDateItem ( "FCH_PAGO" ));
	      //this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

	      RECA_CODE  = this.dm.limitQueryFromBuffer ( RECA_ID );
	      RECA_CODE  = this.dm.retrieve ( RECA_ID );

	      if ( ! Compare.equals ( RECA_CODE, 0 ) )
	      {
	        this.app.setError ( 6, RECA_CODE );
	        this.doReturn ( );
	        return;
	      }
	    //  Hashtable hTable = this.dm.getInMemoryRegistry();
	      RECA_CODE  = this.dm.firstRow ( RECA_ID );

	      /************************
	       * ADHOC VALIDATION RUTINE
	       *************************/

	      double balanceRecla = this.dm.getFieldDouble ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "VLR_BALANCE" );
	      double valorEntrado = this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "VLR_CANTIDAD" );

	      if ( this.app.form ( "AUTPAG_FR" ).getStringItem ( "MODO_PAGO" ) != "AJU+" )
	      {
	    	  if ( valorEntrado > balanceRecla )
	    	  {
	    		  //do nothing
	    	  }
	    	  else
	    	  {
	    		 result = balanceRecla - valorEntrado;
	    	  }

	      }
	      /******************************************************************************************************/


	if ( ( Compare.equals ( this.app.form ( "AUTPAG_FR" ).getStringItem ( "STAT_AUTO" ), "S" ) ) && ( ! Compare.equals ( this.app.form ( "AUTPAG_FR" ).getStringItem ( "UPDATED" ), "U" ) )  )
    {

      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "AUTPAG_AUTORIZACION", this.app.form ( "AUTPAG_FR" ).getStringItem ( "STAT_AUTO" ));
      if ( ! Compare.equals ( this.app.form ( "AUTPAG_FR" ).getStringItem ( "MODO_PAGO" ), "AJU+" ) )
      {
        if ( Compare.lt ( this.dm.getFieldDouble ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "VLR_BALANCE" ), this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "VLR_CANTIDAD" )) )
        {
          this.app.setError ( 7, 7275 );
          this.app.form ( "AUTPAG_FR" ).setItem ( "STAT_AUTO", "N"  );
          this.app.errorFlag = false;
          this.doReturn ( );
          return;
        }
      }
      if ( ! Compare.equals ( this.app.form ( "AUTPAG_FR" ).getStringItem ( "MODO_PAGO" ), "AJU+" ) )
      {
        if ( Compare.equals ( MathService.minus ( this.dm.getFieldDouble ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "VLR_BALANCE" ), this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "VLR_CANTIDAD" ) ), 0 ) )
        {
          this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "STATUS", "SALDADA" );
          this.app.setError ( 8, 7255 );
        }
        this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "VLR_BALANCE", MathService.minus ( this.dm.getFieldDouble ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "VLR_BALANCE" ), this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "VLR_CANTIDAD" ) ) );
      }
      else
      {
        this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "VLR_BALANCE", MathService.plus ( this.dm.getFieldDouble ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "VLR_BALANCE" ), this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "VLR_CANTIDAD" ) ) );
      }
    }
      RECL_CODE  = this.dm.update ( RECL_ID );

      if ( ! Compare.equals ( RECL_CODE, 0 ) )
      {
        this.app.setError ( 9, RECL_CODE );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }
      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "AUTPAG_AUTORIZACION", this.app.form ( "AUTPAG_FR" ).getStringItem ( "STAT_AUTO" ));
      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "TSS_AUTORIZA", this.app.ID_TECNICO_GBL );
      this.dm.setField ( this.dm.get ( "AUTPAG_AG2_DSD" ), "FECHA_AUTORIZA", this.app.SYSTEM_DATE );
      RECA_CODE  = this.dm.update ( RECA_ID );

      if ( ! Compare.equals ( RECA_CODE, 0 ) )
      {
        this.app.setError ( 10, RECA_CODE );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }
      this.app.form ( "AUTPAG_FR" ).setItem ( "UPDATED", "U"  );
      this.app.setError ( 11, 7250 );

      RECL_CODE  = this.dm.dbCommit ( );
      if ( ! Compare.equals ( RECL_CODE, 0 ) )
      {
        this.app.setError ( 12, RECL_CODE );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }

      /*********************Check for the value to have properly changed.*****************************/
      RECL_CODE  = this.dm.reset ( RECL_ID );

      if ( ! Compare.equals ( RECL_CODE, 0 ) )
      {
        this.app.setError ( 2, RECL_CODE );
        this.doReturn ( );
        return;
      }

      this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "SS_JF" ));
      this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "AUTPAG_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
      this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "COD_SERVICIO", this.app.form ( "AUTPAG_FR" ).getStringItem ( "CD_SERV" ));
      this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "FECHA_IDENTIFICADO", this.app.form ( "AUTPAG_FR" ).getDateItem ( "FCH_IDN" ));
      //this.dm.setField ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      RECL_CODE  = this.dm.limitQueryFromBuffer ( RECL_ID );
      RECL_CODE  = this.dm.retrieve ( RECL_ID );

      if ( ! Compare.equals ( RECL_CODE, 0 ) )
      {
        this.app.setError ( 4, RECL_CODE );
        this.doReturn ( );
        return;
      }

      RECL_CODE  = this.dm.firstRow ( RECL_ID );

      double dbBalance = this.dm.getFieldDouble ( this.dm.get ( "AUTPAG_RECLA_DSD" ), "VLR_BALANCE" );

      if ( result != dbBalance )
      {
    	  this.app.setError("9999", "Verificar en reclamaciones que el balance haya sido actualizado");
    	  this.app.errorFlag = false;
          this.doReturn ( );
          return;
      }

      /********************************************************************************************************/

      RECA_CODE  = this.dm.dbCommit ( );
      if ( ! Compare.equals ( RECA_CODE, 0 ) )
      {
        this.app.setError ( 13, RECA_CODE );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }


      RECL_CODE  = this.dm.dbClose ( RECL_ID );

      if ( ! Compare.equals ( RECL_CODE, 0 ) )
      {
        this.app.setError ( 14, RECL_CODE );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }
      RECA_CODE  = this.dm.dbClose ( RECA_ID );

      if ( ! Compare.equals ( RECA_CODE, 0 ) )
      {
        this.app.setError ( 15, RECA_CODE );
        this.app.errorFlag = false;
        this.doReturn ( );
        return;
      }

    this.doReturn ( );
    return;

  }
}



/* ---------------------------------------------------------------------



PROCEDURE AUTPAG_RESTARA_DEUDA_ADL;

VAR
        RA_TMP          :       CHAR (1);
        recl_id         :       number;
        recl_code       :       number;
        reca_id         :       number;
        reca_code       :       number;

        tmp_date        :       date;

SET_TRACE();
BEGIN
IF (AUTPAG_FR.stat_auto = 'S') AND
   (AUTPAG_FR.UPDATED <> 'U') THEN
        BEGIN
DB_OPEN( autpag_recla_dsd, recl_id, recl_code );
        IF (recl_code <> 0)     THEN
                BEGIN
                        ERROR (recl_code);
                        RETURN;
                END;


DB_OPEN( autpag_ag2_dsd, reca_id, reca_code );
        IF (reca_code <> 0)     THEN
                BEGIN
                        ERROR (reca_code);
                        RETURN;
                END;

DB_RESET (recl_id, recl_code);
        IF (recl_code <> 0) THEN
          BEGIN
                ERROR (recl_code);
                RETURN;
          END;

DB_RESET (reca_id, reca_code);
        IF (reca_code <> 0) THEN
          BEGIN
                ERROR (reca_code);
                RETURN;
          END;

{RECLAMACIONES RECORD}
AUTPAG_RECLA_DSD.SEGURO_SOCIAL_JEFE_FAM := AUTPAG_FR.SS_JF;
AUTPAG_RECLA_DSD.SEGURO_SOCIAL_JEFE_SERV:= AUTPAG_FR.SEGURO_SOCIAL_JEFE_SERV;
AUTPAG_RECLA_DSD.COD_SERVICIO           := AUTPAG_FR.CD_SERV;
AUTPAG_RECLA_DSD.FECHA_IDENTIFICADO     := AUTPAG_FR.FCH_IDN;
AUTPAG_RECLA_DSD.RMO_OFICINA            := RMO_GBL;

DB_QUERY (recl_id, recl_code);
        IF (recl_code <> 0) THEN
          BEGIN
                ERROR (recl_code);
                RETURN;
          END;

DB_GET_FIRST( recl_id, recl_code );
        IF (recl_code <> 0) THEN
        BEGIN
                ERROR (recl_code);
                SET_FAILURE ();
                RETURN;
        END;


{RECAUDACIONES RECORD}


AUTPAG_AG2_DSD.SS_JF                    :=      AUTPAG_FR.SS_JF;
AUTPAG_AG2_DSD.SEGURO_SOCIAL_JEFE_SERV  :=      AUTPAG_FR.SEGURO_SOCIAL_JEFE_SER
V;
AUTPAG_AG2_DSD.CD_SERV                  :=      AUTPAG_FR.CD_SERV;
AUTPAG_AG2_DSD.FCH_IDN                  :=      AUTPAG_FR.FCH_IDN;
AUTPAG_AG2_DSD.FCH_PAGO                 :=      AUTPAG_FR.fch_pago;
AUTPAG_AG2_DSD.RMO_OFICINA              :=      RMO_GBL;

DB_QUERY (reca_id, reca_code);
        IF (reca_code <> 0) THEN
          BEGIN
                ERROR (reca_code);
                RETURN;
          END;

DB_GET_FIRST( reca_id, reca_code );

AUTPAG_AG2_DSD.autpag_autorizacion      :=      AUTPAG_FR.stat_auto;


IF AUTPAG_FR.MODO_PAGO <> 'AJU+' THEN
BEGIN
        IF AUTPAG_RECLA_DSD.VLR_BALANCE < AUTPAG_FR.VLR_CANTIDAD THEN
        BEGIN
                ERROR(7275);
                AUTPAG_FR.stat_auto := 'N';
                SET_FAILURE();
                RETURN;
        END;
END;
{RECLAMACIONES UPDATE}
IF AUTPAG_FR.MODO_PAGO <> 'AJU+' THEN
BEGIN
        IF (AUTPAG_RECLA_DSD.VLR_BALANCE - AUTPAG_FR.VLR_CANTIDAD = 0) THEN
        begin
           AUTPAG_RECLA_DSD.STATUS := 'SALDADA';
           error(7255);
        end;
        AUTPAG_RECLA_DSD.VLR_BALANCE := AUTPAG_RECLA_DSD.VLR_BALANCE - AUTPAG_FR
.VLR_CANTIDAD;
END;
ELSE
BEGIN
        AUTPAG_RECLA_DSD.VLR_BALANCE := AUTPAG_RECLA_DSD.VLR_BALANCE + AUTPAG_FR
.VLR_CANTIDAD;
END;
{RECAUDACIONES UPDATE}
AUTPAG_AG2_DSD.autpag_autorizacion      :=      AUTPAG_FR.stat_auto;
AUTPAG_AG2_DSD.TSS_AUTORIZA             :=      ID_TECNICO_GBL;
AUTPAG_AG2_DSD.FECHA_AUTORIZA           :=      SYSTEM_DATE;

DB_UPDATE (recl_id, recl_code);
        IF (recl_code <> 0) THEN
        BEGIN
                ERROR (recl_code);
                SET_FAILURE ();
                RETURN;
        END;

DB_UPDATE (reca_id, reca_code);
        IF (reca_code <> 0) THEN
        BEGIN
                ERROR (reca_code);
                SET_FAILURE ();
                RETURN;
        END;

AUTPAG_FR.UPDATED := 'U';
ERROR(7250);

DB_COMMIT (recl_code);
        IF (recl_code <> 0) THEN
        BEGIN
                ERROR (recl_code);
                SET_FAILURE ();
                RETURN;
        END;

DB_COMMIT (reca_code);
        IF (reca_code <> 0) THEN
        BEGIN
                ERROR (reca_code);
                SET_FAILURE ();
                RETURN;
        END;

DB_CLOSE (recl_id, recl_code);
        IF (recl_code <> 0) THEN
        BEGIN
                ERROR (recl_code);
                SET_FAILURE ();
                RETURN;
        END;

DB_CLOSE (reca_id, reca_code);
        IF (reca_code <> 0) THEN
        BEGIN
                ERROR (reca_code);
                SET_FAILURE ();
                RETURN;
        END;
END;
        RETURN;
END;

SET_NOTRACE();




--------------------------------------------------------------------- */
