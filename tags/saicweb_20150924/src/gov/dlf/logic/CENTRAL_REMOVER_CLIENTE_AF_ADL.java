package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class CENTRAL_REMOVER_CLIENTE_AF_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;
 
  public boolean _condition2 = false;
 
  public boolean _condition3 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COMMAND = 0;

  public double NULL_VAR = 0;



  public String STATUS_VAR = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).COMMAND = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_VAR  ( RallyApplication __app, Parameter value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).STATUS_VAR = value.getString ( );
  }  

  
  /**  */
  public static void setNULL_VAR  ( RallyApplication __app, Parameter value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).NULL_VAR = value.getDouble ( );
  }  
    


  /**  */
  public static String getSTATUS_VAR  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).STATUS_VAR;
  }


  /**  */
  public static void setSTATUS_VAR  ( RallyApplication __app, String value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).STATUS_VAR = value;
  }


  /**  */
  public static void setSTATUS_VAR  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).STATUS_VAR = ( String ) value;
  }




  /**  */
  public static double getCOMMAND  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).COMMAND;
  }


  /**  */
  public static Double getCOMMANDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).COMMAND );
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, double value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).COMMAND = value;
  }


  /**  */
  public static void setCOMMAND  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).COMMAND = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNULL_VAR  ( RallyApplication __app )
  {
    return ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).NULL_VAR;
  }


  /**  */
  public static Double getNULL_VARDouble ( RallyApplication __app )
  {
    return new Double ( ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).NULL_VAR );
  }


  /**  */
  public static void setNULL_VAR  ( RallyApplication __app, double value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).NULL_VAR = value;
  }


  /**  */
  public static void setNULL_VAR  ( RallyApplication __app, Object value )
  {
    ( ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) __app.getADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class ) ).NULL_VAR = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static CENTRAL_REMOVER_CLIENTE_AF_ADL get ( RallyApplication __app )
  {
    CENTRAL_REMOVER_CLIENTE_AF_ADL adl = new CENTRAL_REMOVER_CLIENTE_AF_ADL ( );
    __app.register ( adl, "CENTRAL_REMOVER_CLIENTE_AF_ADL" );
    __app.setADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    CENTRAL_REMOVER_CLIENTE_AF_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    CENTRAL_REMOVER_CLIENTE_AF_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "CENTRAL_REMOVER_CLIENTE_AF_ADL" );
    if ( rObj != null && rObj instanceof CENTRAL_REMOVER_CLIENTE_AF_ADL )
    {
      this.app.setADL ( CENTRAL_REMOVER_CLIENTE_AF_ADL.class, ( CENTRAL_REMOVER_CLIENTE_AF_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "CENTRAL_REMOVER_CLIENTE_AF_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
      case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
      case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "CENTRAL_REMOVER_CLIENTE_AF_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NULL_VAR = TruncService.setNull ( NULL_VAR  );
    COMMAND = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) && ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.QUERY ) )  && ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.QBE ) )  ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.callCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) && ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.QUERY ) )  && ( ! Compare.equals ( COMMAND, RallyAppCommandFactory.QBE ) )  ) 
    {
      this.doReturn ( );
      return; 
    }
    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      if ( ( ! Compare.equals ( this.app.form ( "MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM" ).getDoubleItem ( "RMO_COD" ), this.app.RMO_GBL ) ) && ( Compare.gt ( this.app.form ( "MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM" ).getDoubleItem ( "RMO_COD" ), 0 ) )  && ( ! Compare.equals ( this.app.form ( "MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM" ).getDoubleItem ( "RMO_COD" ), NULL_VAR ) )  ) 
      {
        this._condition2 = true;
      }
      else
      {
        this._condition2 = false;
      }
      if ( this._condition2 )
      {
        this.app.setError ( 0, 2060 );
        this.app.callCommand ( RallyAppCommandFactory.ROLLBACK );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) 
    {
      if ( this._condition2 )    //      if ( ( ! Compare.equals ( this.app.form ( "MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM" ).getDoubleItem ( "RMO_COD" ), this.app.RMO_GBL ) ) && ( Compare.gt ( this.app.form ( "MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM" ).getDoubleItem ( "RMO_COD" ), 0 ) )  && ( ! Compare.equals ( this.app.form ( "MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM" ).getDoubleItem ( "RMO_COD" ), NULL_VAR ) )  ) 
      {
        this.app.errorFlag = false;
        this.doReturn ( );
        return; 
      }
      this.app.REMOVER_ANSWER_GBL = "N";
      REMOVER_CLIENTE_MENU.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) 
    {
      if ( Compare.equals ( this.app.REMOVER_ANSWER_GBL, "N" ) ) 
      {
        this._condition3 = true;
      }
      else
      {
        this._condition3 = false;
      }
      if ( this._condition3 )
      {
        this.app.errorFlag = false;
        this.app.callCommand ( RallyAppCommandFactory.ROLLBACK );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step4 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) 
    {
      if ( this._condition3 )    //      if ( Compare.equals ( this.app.REMOVER_ANSWER_GBL, "N" ) ) 
      {
        this.doReturn ( );
        return; 
      }
      STATUS_VAR = "FAILURE";

      this.callParms.clear ( );
      this.callParms.set ( STATUS_VAR  );
      CENTRAL_REMOVER_CLIENTE_ADL.exec ( this.app, this.callParms );
      return;
    }

  }


  /**
   *
   */
  protected void step5 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) 
    {
      this.callParms.reset ( );
      STATUS_VAR  = this.callParms.getString ( );

      if ( Compare.equals ( STATUS_VAR, "LOCAL" ) ) 
      {
        this.app.errorFlag = false;
        this.app.setError ( 1, 2061 );
        this.doReturn ( );
        return; 
      }
      if ( Compare.equals ( STATUS_VAR, "FAILURE" ) ) 
      {
        this.app.errorFlag = false;
        this.app.setError ( 2, 2062 );
        this.doReturn ( );
        return; 
      }
      this.app.callCommand ( RallyAppCommandFactory.QBE );
      return;
    }

  }


  /**
   *
   */
  protected void step6 ( ParameterSet ps )
  {
    if ( this._condition1 )    //    if ( Compare.equals ( COMMAND, RallyAppCommandFactory.DELREC ) ) 
    {
      this.doReturn ( );
      return; 
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE CENTRAL_REMOVER_CLIENTE_AF_ADL;

VAR

COMMAND :       NUMBER(9,0);
STATUS_VAR:     CHAR(8);
NULL_VAR:       NUMBER(9,0);
BEGIN

SET_TRACE();
MAKE_NULL(NULL_VAR);
COMMAND:=GET_CMD();
IF (COMMAND<>DELREC) AND (COMMAND<>QUERY)
   AND (COMMAND<>QBE)
   THEN BEGIN
          CALL_CMD(IGNORE);
          RETURN;
        END;

IF (COMMAND=DELREC)
   THEN BEGIN
        IF (MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM.RMO_COD<>RMO_GBL)
         AND (MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM.RMO_COD>0)
         AND (MANTENIMIENTO_REMOVER_CLIENTE_CENTRAL_FRM.RMO_COD<>NULL_VAR)
        THEN BEGIN
              ERROR(2060); { ELIMINAR SI RMO CLIENTE = RMO OFICINA LOCAL }
              CALL_CMD(ROLLBACK);
              SET_FAILURE();
              RETURN;
             END;
        REMOVER_ANSWER_GBL:='N';
        CALL REMOVER_CLIENTE_MENU;    
        IF REMOVER_ANSWER_GBL='N'
           THEN  BEGIN
                  SET_FAILURE();
                  CALL_CMD(ROLLBACK);
                  RETURN;
                 END;
         STATUS_VAR:='FAILURE';
         CALL CENTRAL_REMOVER_CLIENTE_ADL(STATUS_VAR);
         IF STATUS_VAR='LOCAL'
            THEN BEGIN
                  SET_FAILURE();
                  ERROR(2061);
                  RETURN;
                 END;
         IF STATUS_VAR='FAILURE'
            THEN BEGIN
                  SET_FAILURE();
                  ERROR(2062);
                  RETURN;
                 END;
         CALL_CMD(QBE);
         RETURN;
         END;
SET_NOTRACE();

END;


   
    



--------------------------------------------------------------------- */
