package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double NUCLEO_SERVICIO = 0;

  public double STATUS = 0;

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;

  public double OPEN2_ID = 0;

  public double STATUS2_ID = 0;

  public double COUNTER = 0;



  public Date FCH_EMISION_ANT = null;

  public DataStore NUCLEO_READ_LOC_DSD = null;

  public DataStore GENERAL_TBL_DSD = null;

  public DataStore TANF_60_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setNUCLEO_SERVICIO  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).NUCLEO_SERVICIO = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN2_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS2_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setFCH_EMISION_ANT  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).FCH_EMISION_ANT = value.getDate ( );
  }  

  
  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).COUNTER = value.getDouble ( );
  }  
    


  /**  */
  public static Date getFCH_EMISION_ANT  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).FCH_EMISION_ANT;
  }


  /**  */
  public static void setFCH_EMISION_ANT  ( RallyApplication __app, Date value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).FCH_EMISION_ANT = value;
  }


  /**  */
  public static void setFCH_EMISION_ANT  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).FCH_EMISION_ANT = ( Date ) value;
  }



  /**  */
  public static DataStore getNUCLEO_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).NUCLEO_READ_LOC_DSD;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).NUCLEO_READ_LOC_DSD = value;
  }


  /**  */
  public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).NUCLEO_READ_LOC_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getGENERAL_TBL_DSD  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).GENERAL_TBL_DSD;
  }


  /**  */
  public static void setGENERAL_TBL_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).GENERAL_TBL_DSD = value;
  }


  /**  */
  public static void setGENERAL_TBL_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).GENERAL_TBL_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getTANF_60_DSD  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).TANF_60_DSD;
  }


  /**  */
  public static void setTANF_60_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).TANF_60_DSD = value;
  }


  /**  */
  public static void setTANF_60_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).TANF_60_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getNUCLEO_SERVICIO  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).NUCLEO_SERVICIO;
  }


  /**  */
  public static Double getNUCLEO_SERVICIODouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).NUCLEO_SERVICIO );
  }


  /**  */
  public static void setNUCLEO_SERVICIO  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).NUCLEO_SERVICIO = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).NUCLEO_SERVICIO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS;
  }


  /**  */
  public static Double getSTATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS );
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS = value;
  }


  /**  */
  public static void setSTATUS  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN2_ID  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN2_ID;
  }


  /**  */
  public static Double getOPEN2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN2_ID );
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN2_ID = value;
  }


  /**  */
  public static void setOPEN2_ID  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).OPEN2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS2_ID  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS2_ID;
  }


  /**  */
  public static Double getSTATUS2_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS2_ID );
  }


  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS2_ID = value;
  }


  /**  */
  public static void setSTATUS2_ID  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).STATUS2_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCOUNTER  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).COUNTER;
  }


  /**  */
  public static Double getCOUNTERDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).COUNTER );
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).COUNTER = value;
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) __app.getADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class ) ).COUNTER = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL get ( RallyApplication __app )
  {
    SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL adl = new SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ( );
    __app.register ( adl, "SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL" );
    __app.setADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL" );
    if ( rObj != null && rObj instanceof SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL )
    {
      this.app.setADL ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL.class, ( SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.form ( "SERV_FAM_FRM" ).setItem ( "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ) );
    if ( Compare.equals ( this.app.getInstanceMode ( ), "INSERT" ) ) 
    {
      this.doReturn ( );
      return;
    }
    
    Object aggVal = this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getValue ( "DIR_SERV_AGG" );
    if ( aggVal == null )
    {  
      this.doReturn ( );
      return;
    }
    
    Double aggDval = ( Double ) aggVal;
    if ( aggDval.doubleValue ( ) <= 0 )
    {  
      this.doReturn ( );
      return;
    }
    
    
    if ( ( Compare.equals ( this.app.getInstanceMode ( ), "UPDATE" ) ) && ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) ) && (!Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ))  ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      NUCLEO_READ_LOC_DSD = this.dm.create ( "NUCLEO_READ_LOC_DSD" );
      NUCLEO_SERVICIO = NUCLEO_READ_LOC_DSD.getId ( );
      STATUS = RallyDataStoreException.getDefault ( );

      STATUS  = this.dm.reset ( NUCLEO_SERVICIO );

      this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ));
      this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAM" ));
      this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));
      this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
      this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA2", this.app.RMO_GBL );

      STATUS  = this.dm.limitQueryFromBuffer ( NUCLEO_SERVICIO );
      STATUS  = this.dm.retrieve ( NUCLEO_SERVICIO );

      STATUS  = this.dm.firstRow ( NUCLEO_SERVICIO );

      if ( Compare.equals ( STATUS, 0 ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        this.app.setError ( 0, 2757 );
        this.app.form ( "SERV_FAM_FRM" ).setItem ( "SEGURO_SOCIAL_JEFE_SERV", this.app.SSJS_ANT_GBL  );
        this.app.callCommand ( RallyAppCommandFactory.ABORTACTION );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( Compare.equals ( this.app.getMode ( ), "UPDATE" ) ) && ( ! Compare.equals ( this.app.SSJS_ANT_GBL, this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" )) )  ) 
    {
      if ( this._condition1 )    //      if ( Compare.equals ( STATUS, 0 ) ) 
      {
        this.doReturn ( );
        return; 
      }
      else
      {
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "SEGURO_SOCIAL_JEFE_ANTERIOR", this.app.SSJS_ANT_GBL  );
        GENERAL_TBL_DSD = this.dm.create ( "GENERAL_TBL_DSD" );
        OPEN_ID = GENERAL_TBL_DSD.getId ( );
        STATUS_ID = RallyDataStoreException.getDefault ( );
        TANF_60_DSD = this.dm.create ( "TANF_60_DSD" );
        OPEN2_ID = TANF_60_DSD.getId ( );
        STATUS2_ID = RallyDataStoreException.getDefault ( );

        STATUS2_ID  = this.dm.reset ( OPEN2_ID );

        if ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), "AE-C" ) ) 
        {
          COUNTER = 0;
          this.dm.setField ( this.dm.get ( "TANF_60_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SSJS_ANT_GBL );

          STATUS2_ID  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
          STATUS2_ID  = this.dm.retrieve ( OPEN2_ID );

          STATUS2_ID  = this.dm.firstRow ( OPEN2_ID );

          while ( Compare.equals ( STATUS2_ID, 0 )  )
          {
            this.dm.setField ( this.dm.get ( "TANF_60_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));

            STATUS2_ID  = this.dm.update ( TANF_60_DSD );

            if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
            {
              if ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "TANF_60_DSD" ), "TIPO" ), 0, 2 ), "AU" ) ) 
              {
                if ( Compare.lt ( COUNTER, 1 ) ) 
                {
                  this.app.setError ( 1, 1060 );
                }
                COUNTER = MathService.plus ( COUNTER, 1  );
                this.dm.setField ( this.dm.get ( "TANF_60_DSD" ), "TIPO", "DI88" );

                STATUS2_ID  = this.dm.update ( TANF_60_DSD );

                if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
                {
                  this.dm.setField ( this.dm.get ( "TANF_60_DSD" ), "TIPO", "DI89" );

                  STATUS2_ID  = this.dm.update ( TANF_60_DSD );

                  if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
                  {
                    STATUS2_ID  = this.dm.delete ( OPEN2_ID );
                    this.dm.update ( TANF_60_DSD );
                    
                    if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
                    {
                      this.app.setError ( 2, STATUS2_ID );
                    }
                  }
                }
              }
              else
              {
                STATUS2_ID  = this.dm.delete ( OPEN2_ID );
                this.dm.update ( TANF_60_DSD );
                if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
                {
                  this.app.setError ( 3, STATUS2_ID );
                }
              }
            }

            STATUS2_ID  = this.dm.nextRow ( OPEN2_ID );

          }

          STATUS2_ID  = this.dm.dbCommit ( );
          COUNTER = 0;
          FCH_EMISION_ANT = RallySpanishDatesParser.parseDateString ( "1-ENE-1900" );

          STATUS2_ID  = this.dm.reset ( OPEN2_ID );

          this.dm.setField ( this.dm.get ( "TANF_60_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" ));

          STATUS2_ID  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
          STATUS2_ID  = this.dm.retrieve ( OPEN2_ID );

          STATUS2_ID  = this.dm.firstRow ( OPEN2_ID );

          while ( Compare.equals ( STATUS2_ID, 0 ) ) 
          {
            if ( Compare.equals ( TruncService.trunc ( this.dm.getFieldDate ( this.dm.get ( "TANF_60_DSD" ), "FCH_EMISION" ), "MM" ) , TruncService.trunc ( FCH_EMISION_ANT, "MM" )  ) ) 
            {
              if ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "TANF_60_DSD" ), "TIPO" ), 0, 2 ), "AU" ) ) 
              {
                COUNTER = MathService.plus ( COUNTER, 1  );
              }
            }
            else
            {
              COUNTER = 0;
            }
            FCH_EMISION_ANT = this.dm.getFieldDate ( this.dm.get ( "TANF_60_DSD" ), "FCH_EMISION" );
            if ( Compare.ge ( COUNTER, 1 ) ) 
            {
              this.dm.setField ( this.dm.get ( "TANF_60_DSD" ), "TIPO", "DI89" );

              STATUS2_ID  = this.dm.update ( OPEN2_ID );

              if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
              {
                STATUS2_ID  = this.dm.delete ( OPEN2_ID );
                this.dm.update ( TANF_60_DSD );
                if ( ! Compare.equals ( STATUS2_ID, 0 ) ) 
                {
                  this.app.setError ( 4, STATUS2_ID );
                }
              }
            }

            STATUS2_ID  = this.dm.nextRow ( OPEN2_ID );

          }

          STATUS2_ID  = this.dm.dbCommit ( );
        }

        STATUS_ID  = this.dm.reset ( OPEN_ID );

        this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_GENERAL", "DATE" );
        if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 3 ), "PAN" ) ) 
        {
          this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_ID", "EPAN" );
        }
        else if ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "COD_SERVICIO" ), 0, 2 ), "AE" )  )
        {
          this.dm.setField ( this.dm.get ( "GENERAL_TBL_DSD" ), "COD_ID", "EAE" );
        }

        STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
        STATUS_ID  = this.dm.retrieve ( OPEN_ID );

        STATUS_ID  = this.dm.firstRow ( OPEN_ID );

        if ( Compare.equals ( STATUS_ID, 0 ) ) 
        {
          this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "FECHA_CAMBIO_JEFE", RallySpanishDatesParser.parseDateString ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 0, 2 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 2, 3 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_DSD" ), "DSC_CORTA" ), 5, 4 ) )  );
        }
        else
        {
          this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "FECHA_CAMBIO_JEFE", this.app.SYSTEM_DATE  );
        }
      }
    }
    this.app.SSJS_ANT_GBL = this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" );
    this.app.form ( "SERV_NUCLEO_SERV_FRM" ).update ( );
 //   this.app.callCommand ( RallyAppCommandFactory.QBE );
    return;

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
 //   this.app.callCommand ( RallyAppCommandFactory.QUERY );
    return;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SERV_NUCLEO_SERV_UPDATE_JEFE_SERV_ADL;

VAR
        TIPO_OPER : CHAR (1) IMPORT CHECK_NUM_SERVICIOS_INSERT_ADL.TIPO_OPER;
        nucleo_servicio : number;
        status : number;
        open_id: number;
        status_id: number;
        open2_id: number;
        status2_id: number;
        FCH_EMISION_ANT: DATE;
        COUNTER: NUMBER;

BEGIN
SET_TRACE();

SERV_FAM_FRM.SEGURO_SOCIAL_JEFE_SERV:=SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_SE
RV;

if (get_mode()='INSERT') 
        THEN RETURN;

if (GET_MODE() = 'UPDATE') AND (SSJS_ANT_GBL <> SERV_NUCLEO_SERV_FRM.SEGURO_SOCI
AL_JEFE_SERV) then
begin
db_open(nucleo_read_loc_dsd,nucleo_servicio,status);
db_reset(nucleo_servicio,status);
NUCLEO_READ_LOC_DSD.COD_SERVICIO := SERV_NUCLEO_SERV_FRM.COD_SERVICIO;
NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM := SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL
_JEFE_FAM;
NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV := SERV_NUCLEO_SERV_FRM.SEGURO_SOCIA
L_JEFE_SERV;
NUCLEO_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
NUCLEO_READ_LOC_DSD.RMO_OFICINA2:=RMO_GBL;
db_query(nucleo_servicio,status);
db_get_first(nucleo_servicio,status);
if (status=0)
then
  begin
      error(2757);
      SERV_FAM_FRM.SEGURO_SOCIAL_JEFE_SERV:=SSJS_ANT_GBL;
      CALL_CMD(abortaction);
{     CALL_CMD('previous group');}
      return;
  end;
else
  begin
   SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_JEFE_ANTERIOR := SSJS_ANT_GBL;
   db_open(general_tbl_dsd,open_id, status_id);
   db_open(TANF_60_DSD,open2_id, status2_id);
   DB_RESET(OPEN2_ID, STATUS2_ID);
   IF SERV_NUCLEO_SERV_FRM.COD_SERVICIO = 'AE-C' THEN
   BEGIN
{ISP/LEDUC  21/marzo/06}
        {Coteja duplicidad del tipo de TANF 60 al realizar cambio en SS}

        COUNTER := 0; 

        TANF_60_DSD.SEGURO_SOCIAL_JEFE_SERV :=  SSJS_ANT_GBL;
        db_QUERY(OPEN2_ID, STATUS2_ID);
        DB_GET_FIRST(OPEN2_ID, STATUS2_ID);
        WHILE STATUS2_ID = 0 DO
        BEGIN
           TANF_60_DSD.SEGURO_SOCIAL_JEFE_SERV :=  SERV_NUCLEO_SERV_FRM.SEGURO_S
OCIAL_JEFE_SERV;
           DB_UPDATE(OPEN2_ID, STATUS2_ID);
           IF STATUS2_ID <> 0 THEN
           BEGIN
              IF (SUBSTR(TANF_60_DSD.TIPO,0,2) = 'AU' ) then
              BEGIN
                 IF COUNTER < 1 THEN
                     ERROR(1060);
                 COUNTER :=  COUNTER + 1;
                 TANF_60_DSD.TIPO := 'DI88';
                 DB_UPDATE(OPEN2_ID, STATUS2_ID);
                 IF STATUS2_ID <> 0 THEN
                    BEGIN                       
                         TANF_60_DSD.TIPO := 'DI89';
                         DB_UPDATE(OPEN2_ID, STATUS2_ID);
                         IF STATUS2_ID <> 0 THEN
                         BEGIN
                                DB_DELETE(OPEN2_ID, STATUS2_ID);
                                 IF STATUS2_ID <> 0 THEN
                                        ERROR(STATUS2_ID);
                         END;
                    END;
                END;
                ELSE
                  BEGIN
                        DB_DELETE(OPEN2_ID, STATUS2_ID);
                        IF STATUS2_ID <> 0 THEN
                                ERROR(STATUS2_ID);
                   END;

           END;    
           DB_GET_NEXT(OPEN2_ID, STATUS2_ID);   
         END;
         DB_COMMIT(STATUS2_ID);
{21/marzo/06  ISP/LEDUC }
        {Coteja que al realizar cambio en SS si hay mas de una  emision
         con la misma fecha pero con ajustes aumentar diferentes}

        COUNTER := 0; 
        FCH_EMISION_ANT := TO_DATE('1-ENE-1900');

        DB_RESET(OPEN2_ID, STATUS2_ID);
        TANF_60_DSD.SEGURO_SOCIAL_JEFE_SERV :=  SERV_NUCLEO_SERV_FRM.SEGURO_SOCI
AL_JEFE_SERV;
        db_QUERY(OPEN2_ID, STATUS2_ID);
        DB_GET_FIRST(OPEN2_ID, STATUS2_ID);
        WHILE (STATUS2_ID = 0) 
        DO BEGIN
                IF (TRUNC(TANF_60_DSD.FCH_EMISION,'MM') = TRUNC(FCH_EMISION_ANT,
'MM'))
                THEN BEGIN
                        IF (SUBSTR(TANF_60_DSD.TIPO,0,2) = 'AU' )
                         THEN
                               COUNTER :=  COUNTER + 1;
                     END;
                ELSE
                    COUNTER := 0;
        
                FCH_EMISION_ANT := TANF_60_DSD.FCH_EMISION;
{ISP/LL 5/10/06}
                IF COUNTER >= 1 THEN
                BEGIN
                 TANF_60_DSD.TIPO := 'DI89';
                 DB_UPDATE(OPEN2_ID, STATUS2_ID);
                 IF STATUS2_ID <> 0 THEN
                    BEGIN
                         DB_DELETE(OPEN2_ID, STATUS2_ID);
                         IF STATUS2_ID <> 0 THEN
                                ERROR(STATUS2_ID);
                    END;
                END;

                DB_GET_NEXT(OPEN2_ID, STATUS2_ID);      
           END;
         DB_COMMIT(STATUS2_ID);
   END;

   DB_RESET(OPEN_ID, STATUS_ID);  
   GENERAL_TBL_DSD.COD_GENERAL := 'DATE';
   IF SUBSTR(SERV_NUCLEO_SERV_FRM.COD_SERVICIO,0,3) = 'PAN' THEN
            GENERAL_TBL_DSD.COD_ID := 'EPAN';
      ELSE
         IF SUBSTR(SERV_NUCLEO_SERV_FRM.COD_SERVICIO,0,2) = 'AE' THEN
                 GENERAL_TBL_DSD.COD_ID := 'EAE';

      
      db_QUERY(OPEN_ID, STATUS_ID);
      DB_GET_FIRST(OPEN_ID, STATUS_ID);
      IF STATUS_ID = 0 THEN
         SERV_NUCLEO_SERV_FRM.FECHA_CAMBIO_JEFE := TO_DATE(SUBSTR(GENERAL_TBL_DS
D.DSC_CORTA,0,2) || '-' ||
                                SUBSTR(GENERAL_TBL_DSD.DSC_CORTA,2,3) || '-'||
                                SUBSTR(GENERAL_TBL_DSD.DSC_CORTA,5,4));
      ELSE
         SERV_NUCLEO_SERV_FRM.FECHA_CAMBIO_JEFE :=  SYSTEM_DATE;
      end;
  end;



{   IF (TIPO_OPER = 'I') THEN RETURN;}

CALL_CMD(QBE);
CALL_CMD(QUERY);
SET_NOTRACE();
END;


    



--------------------------------------------------------------------- */
