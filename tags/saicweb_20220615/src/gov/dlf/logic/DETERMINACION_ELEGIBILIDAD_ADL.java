package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DETERMINACION_ELEGIBILIDAD_ADL
extends ADL
{
	// -------------------------------------------------------------------
	// ----------   Class Attributes   -----------------------------------

	/**  */
	public static boolean staticCall = false;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes   --------------------------------

	/**  */
	public SAIC_DMQ_ORA_Application app;
	/**  */
	public RallyDataManager dm = null;



	// -------------------------------------------------------------------
	// ----------   Instance Condition Attributes   ----------------------

	public boolean _condition0 = false;

	public boolean _condition1 = false;

	public boolean _condition2 = false;

	public boolean _condition3 = false;

	public boolean _condition4 = false;

	public boolean _condition5 = false;

	public boolean _condition6 = false;

	public boolean _condition7 = false;

	public boolean _condition8 = false;

	public boolean _condition9 = false;

	public boolean _condition10 = false;

	public boolean _condition11 = false;

	public boolean _condition12 = false;

	public boolean _condition13 = false;

	public boolean _condition14 = false;

	public boolean _condition15 = false;

	public boolean _condition16 = false;

	public boolean _condition17 = false;

	public boolean _condition18 = false;

	public boolean _condition19 = false;

	public boolean _condition20 = false;

	public boolean _condition21 = false;

	public boolean _condition22 = false;

	public boolean _condition23 = false;

	public boolean _condition24 = false;

	public boolean _condition25 = false;

	public boolean _condition26 = false;

	public boolean _condition27 = false;



	// -------------------------------------------------------------------
	// ----------   Instance Export Attributes   -------------------------

	public double SERV_ID = 0;

	public double STAT_CODE = 0;

	public double OPEN_ID = 0;

	public double OPEN_ID2 = 0;

	public double OPEN_ID3 = 0;

	public double OPEN_ID4 = 0;

	public double OPEN_ID5 = 0;

	public double OPEN_ID6 = 0;

	public double STATUS_CODE5 = 0;

	public double STATUS_CODE6 = 0;

	public double STATUS_CODE = 0;

	public double STATUS_CODE2 = 0;

	public double STATUS_CODE3 = 0;

	public double STATUS_CODE4 = 0;

	public double CNT_NUCLEO = 0;

	public double FLG_NCAL = 0;

	public double FLG_DESCALIFICADO = 0;

	public double EDAD = 0;



	public String TIPO_REGISTRO_EXP = null;

	public DataStore CLIENTES2_RO_DSD = null;

	public DataStore NUCLEO_READ_LOC_DSD = null;

	public DataStore SERVICIOS_LOC2_DSD = null;

	public DataStore DESCALIFICADOS_READ_LOC_DSD = null;

	public DataStore EMPLEOS_CLIENTE_RO_DSD = null;



	// -------------------------------------------------------------------
	// ----------   Instance Attributes' Access Methods   ----------------


	/**  */
	public static void setSERV_ID  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).SERV_ID = value.getDouble ( );
	}  


	/**  */
	public static void setSTAT_CODE  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STAT_CODE = value.getDouble ( );
	}  


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID = value.getDouble ( );
	}  


	/**  */
	public static void setOPEN_ID2  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID2 = value.getDouble ( );
	}  


	/**  */
	public static void setOPEN_ID3  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID3 = value.getDouble ( );
	}  


	/**  */
	public static void setOPEN_ID4  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID4 = value.getDouble ( );
	}  


	/**  */
	public static void setOPEN_ID5  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID5 = value.getDouble ( );
	}  


	/**  */
	public static void setOPEN_ID6  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID6 = value.getDouble ( );
	}  


	/**  */
	public static void setSTATUS_CODE5  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE5 = value.getDouble ( );
	}  


	/**  */
	public static void setSTATUS_CODE6  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE6 = value.getDouble ( );
	}  


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE = value.getDouble ( );
	}  


	/**  */
	public static void setSTATUS_CODE2  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE2 = value.getDouble ( );
	}  


	/**  */
	public static void setSTATUS_CODE3  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE3 = value.getDouble ( );
	}  


	/**  */
	public static void setSTATUS_CODE4  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE4 = value.getDouble ( );
	}  


	/**  */
	public static void setCNT_NUCLEO  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).CNT_NUCLEO = value.getDouble ( );
	}  


	/**  */
	public static void setFLG_NCAL  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_NCAL = value.getDouble ( );
	}  


	/**  */
	public static void setFLG_DESCALIFICADO  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_DESCALIFICADO = value.getDouble ( );
	}  


	/**  */
	public static void setTIPO_REGISTRO_EXP  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).TIPO_REGISTRO_EXP = value.getString ( );
	}  


	/**  */
	public static void setEDAD  ( RallyApplication __app, Parameter value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).EDAD = value.getDouble ( );
	}  



	/**  */
	public static String getTIPO_REGISTRO_EXP  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).TIPO_REGISTRO_EXP;
	}


	/**  */
	public static void setTIPO_REGISTRO_EXP  ( RallyApplication __app, String value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).TIPO_REGISTRO_EXP = value;
	}


	/**  */
	public static void setTIPO_REGISTRO_EXP  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).TIPO_REGISTRO_EXP = ( String ) value;
	}



	/**  */
	public static DataStore getCLIENTES2_RO_DSD  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).CLIENTES2_RO_DSD;
	}


	/**  */
	public static void setCLIENTES2_RO_DSD  ( RallyApplication __app, DataStore value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).CLIENTES2_RO_DSD = value;
	}


	/**  */
	public static void setCLIENTES2_RO_DSD  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).CLIENTES2_RO_DSD = ( DataStore ) value;
	}



	/**  */
	public static DataStore getNUCLEO_READ_LOC_DSD  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).NUCLEO_READ_LOC_DSD;
	}


	/**  */
	public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).NUCLEO_READ_LOC_DSD = value;
	}


	/**  */
	public static void setNUCLEO_READ_LOC_DSD  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).NUCLEO_READ_LOC_DSD = ( DataStore ) value;
	}



	/**  */
	public static DataStore getSERVICIOS_LOC2_DSD  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).SERVICIOS_LOC2_DSD;
	}


	/**  */
	public static void setSERVICIOS_LOC2_DSD  ( RallyApplication __app, DataStore value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).SERVICIOS_LOC2_DSD = value;
	}


	/**  */
	public static void setSERVICIOS_LOC2_DSD  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).SERVICIOS_LOC2_DSD = ( DataStore ) value;
	}



	/**  */
	public static DataStore getDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD;
	}


	/**  */
	public static void setDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD = value;
	}


	/**  */
	public static void setDESCALIFICADOS_READ_LOC_DSD  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).DESCALIFICADOS_READ_LOC_DSD = ( DataStore ) value;
	}



	/**  */
	public static DataStore getEMPLEOS_CLIENTE_RO_DSD  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).EMPLEOS_CLIENTE_RO_DSD;
	}


	/**  */
	public static void setEMPLEOS_CLIENTE_RO_DSD  ( RallyApplication __app, DataStore value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).EMPLEOS_CLIENTE_RO_DSD = value;
	}


	/**  */
	public static void setEMPLEOS_CLIENTE_RO_DSD  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).EMPLEOS_CLIENTE_RO_DSD = ( DataStore ) value;
	}




	/**  */
	public static double getSERV_ID  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).SERV_ID;
	}


	/**  */
	public static Double getSERV_IDDouble ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).SERV_ID );
	}


	/**  */
	public static void setSERV_ID  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).SERV_ID = value;
	}


	/**  */
	public static void setSERV_ID  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).SERV_ID = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTAT_CODE  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STAT_CODE;
	}


	/**  */
	public static Double getSTAT_CODEDouble ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STAT_CODE );
	}


	/**  */
	public static void setSTAT_CODE  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STAT_CODE = value;
	}


	/**  */
	public static void setSTAT_CODE  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STAT_CODE = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getOPEN_ID  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID;
	}


	/**  */
	public static Double getOPEN_IDDouble ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID );
	}


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID = value;
	}


	/**  */
	public static void setOPEN_ID  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getOPEN_ID2  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID2;
	}


	/**  */
	public static Double getOPEN_ID2Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID2 );
	}


	/**  */
	public static void setOPEN_ID2  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID2 = value;
	}


	/**  */
	public static void setOPEN_ID2  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID2 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getOPEN_ID3  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID3;
	}


	/**  */
	public static Double getOPEN_ID3Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID3 );
	}


	/**  */
	public static void setOPEN_ID3  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID3 = value;
	}


	/**  */
	public static void setOPEN_ID3  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID3 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getOPEN_ID4  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID4;
	}


	/**  */
	public static Double getOPEN_ID4Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID4 );
	}


	/**  */
	public static void setOPEN_ID4  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID4 = value;
	}


	/**  */
	public static void setOPEN_ID4  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID4 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getOPEN_ID5  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID5;
	}


	/**  */
	public static Double getOPEN_ID5Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID5 );
	}


	/**  */
	public static void setOPEN_ID5  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID5 = value;
	}


	/**  */
	public static void setOPEN_ID5  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID5 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getOPEN_ID6  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID6;
	}


	/**  */
	public static Double getOPEN_ID6Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID6 );
	}


	/**  */
	public static void setOPEN_ID6  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID6 = value;
	}


	/**  */
	public static void setOPEN_ID6  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).OPEN_ID6 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTATUS_CODE5  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE5;
	}


	/**  */
	public static Double getSTATUS_CODE5Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE5 );
	}


	/**  */
	public static void setSTATUS_CODE5  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE5 = value;
	}


	/**  */
	public static void setSTATUS_CODE5  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE5 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTATUS_CODE6  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE6;
	}


	/**  */
	public static Double getSTATUS_CODE6Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE6 );
	}


	/**  */
	public static void setSTATUS_CODE6  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE6 = value;
	}


	/**  */
	public static void setSTATUS_CODE6  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE6 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTATUS_CODE  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE;
	}


	/**  */
	public static Double getSTATUS_CODEDouble ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE );
	}


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE = value;
	}


	/**  */
	public static void setSTATUS_CODE  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTATUS_CODE2  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE2;
	}


	/**  */
	public static Double getSTATUS_CODE2Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE2 );
	}


	/**  */
	public static void setSTATUS_CODE2  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE2 = value;
	}


	/**  */
	public static void setSTATUS_CODE2  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE2 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTATUS_CODE3  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE3;
	}


	/**  */
	public static Double getSTATUS_CODE3Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE3 );
	}


	/**  */
	public static void setSTATUS_CODE3  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE3 = value;
	}


	/**  */
	public static void setSTATUS_CODE3  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE3 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getSTATUS_CODE4  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE4;
	}


	/**  */
	public static Double getSTATUS_CODE4Double ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE4 );
	}


	/**  */
	public static void setSTATUS_CODE4  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE4 = value;
	}


	/**  */
	public static void setSTATUS_CODE4  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).STATUS_CODE4 = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getCNT_NUCLEO  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).CNT_NUCLEO;
	}


	/**  */
	public static Double getCNT_NUCLEODouble ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).CNT_NUCLEO );
	}


	/**  */
	public static void setCNT_NUCLEO  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).CNT_NUCLEO = value;
	}


	/**  */
	public static void setCNT_NUCLEO  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).CNT_NUCLEO = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getFLG_NCAL  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_NCAL;
	}


	/**  */
	public static Double getFLG_NCALDouble ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_NCAL );
	}


	/**  */
	public static void setFLG_NCAL  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_NCAL = value;
	}


	/**  */
	public static void setFLG_NCAL  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_NCAL = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getFLG_DESCALIFICADO  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_DESCALIFICADO;
	}


	/**  */
	public static Double getFLG_DESCALIFICADODouble ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_DESCALIFICADO );
	}


	/**  */
	public static void setFLG_DESCALIFICADO  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_DESCALIFICADO = value;
	}


	/**  */
	public static void setFLG_DESCALIFICADO  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).FLG_DESCALIFICADO = ( ( Double ) value ).doubleValue ( );
	}


	/**  */
	public static double getEDAD  ( RallyApplication __app )
	{
		return ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).EDAD;
	}


	/**  */
	public static Double getEDADDouble ( RallyApplication __app )
	{
		return new Double ( ( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).EDAD );
	}


	/**  */
	public static void setEDAD  ( RallyApplication __app, double value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).EDAD = value;
	}


	/**  */
	public static void setEDAD  ( RallyApplication __app, Object value )
	{
		( ( DETERMINACION_ELEGIBILIDAD_ADL ) __app.getADL ( DETERMINACION_ELEGIBILIDAD_ADL.class ) ).EDAD = ( ( Double ) value ).doubleValue ( );
	}



	// -------------------------------------------------------------------
	// ----------   Methods   --------------------------------------------

	/**
	 * 
	 * @param __app
	 * @return
	 */
	public static DETERMINACION_ELEGIBILIDAD_ADL get ( RallyApplication __app )
	{
		DETERMINACION_ELEGIBILIDAD_ADL adl = new DETERMINACION_ELEGIBILIDAD_ADL ( );
		__app.register ( adl, "DETERMINACION_ELEGIBILIDAD_ADL" );
		__app.setADL ( DETERMINACION_ELEGIBILIDAD_ADL.class, adl ); 
		adl.setApplication ( __app );
		return adl;
	}


	/**
	 *
	 * @param __app
	 * @param ps
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app, ParameterSet ps )
	{
		DETERMINACION_ELEGIBILIDAD_ADL.get ( __app ).process ( ps );
	}


	/**
	 *
	 * @param __app
	 *
	 * @return
	 */
	public static void exec ( RallyApplication __app )
	{
		ParameterSet ps = null;
		DETERMINACION_ELEGIBILIDAD_ADL.exec ( __app, ps );
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param __app
	 */
	public void setApplication ( RallyApplication __app )
	{
		this.app = ( SAIC_DMQ_ORA_Application ) __app;
		if ( this.app != null )
		{
			this.dm = ( RallyDataManager ) this.app.getDataManager ( );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param parms
	 */
	public void execute ( ParameterSet parms )
	{
		this.process ( parms );
	}




	/**
	 *
	 */
	protected void doReturn ( )
	{
		this.unregister ( );
	}


	/**
	 *
	 */
	public void unregister ( )
	{
		this.app.unregister ( this );
		IRegisteredObject rObj = this.app.get ( "DETERMINACION_ELEGIBILIDAD_ADL" );
		if ( rObj != null && rObj instanceof DETERMINACION_ELEGIBILIDAD_ADL )
		{
			this.app.setADL ( DETERMINACION_ELEGIBILIDAD_ADL.class, ( DETERMINACION_ELEGIBILIDAD_ADL ) rObj );
		}
	}


	/**
	 * Overrides the ancestor's method
	 * 
	 * @param ps
	 */
	protected void process ( ParameterSet ps )
	{
		Debug.println ( Debug.TRACE, "DETERMINACION_ELEGIBILIDAD_ADL Step " + this.currentStep );
		super.process ( ps );
		switch ( this.currentStep ) 
		{
		case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
		case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
		case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
		case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
		case 4:  { this.currentStep ++; this.step4 ( this.keyParms ); break; }
		case 5:  { this.currentStep ++; this.step5 ( this.keyParms ); break; }
		case 6:  { this.currentStep ++; this.step6 ( this.keyParms ); break; }
		case 7:  { this.currentStep ++; this.step7 ( this.keyParms ); break; }
		case 8:  { this.currentStep ++; this.step8 ( this.keyParms ); break; }
		case 9:  { this.currentStep ++; this.step9 ( this.keyParms ); break; }
		case 10:  { this.currentStep ++; this.step10 ( this.keyParms ); break; }
		case 11:  { this.currentStep ++; this.step11 ( this.keyParms ); break; }
		case 12:  { this.currentStep ++; this.step12 ( this.keyParms ); break; }
		case 13:  { this.currentStep ++; this.step13 ( this.keyParms ); break; }
		default: 
		{ 
			this.currentStep = 0;
			Debug.println ( Debug.TRACE, "DETERMINACION_ELEGIBILIDAD_ADL ended" );
			this.unregister ( );
			break;
		}
		}
		if ( this.currentStep > 0 ) this.app.goOn ( );
	}



	/**
	 *
	 */
	protected void step0 ( ParameterSet ps )
	{
	    if(  Compare.equals(this.app.MACA_GBL, 1)&&(Compare.equals( this.app.form ( "SERV_FAM_FRM" ).getStringItem ( "COD_SERVICIO" ),"TANFS")||Compare.equals( this.app.form ( "SERV_FAM_FRM" ).getStringItem ( "COD_SERVICIO" ),"TANFE")))
	    {
	    	this.app.ACCESS_STATUS_GBL= "SUCESS" ;
	    	return;
	    }
	    else
	    {
		this.app.COD_ACCESS_GBL = "DETE";
		SECURITY_ADL.exec ( this.app );
		return;
	    }

	}


	/**
	 *
	 */
	protected void step1 ( ParameterSet ps )
	{

		if ( Compare.equals ( this.app.ACCESS_STATUS_GBL, "FAILURE" ) ) 
		{
			this.app.setError ( 0, 1006 );
			this.doReturn ( );
			return; 
		}
		this.app.FLAG_UPD_GBL = "N";
		this.app.ANSWER_GBL = "N";
		TIPO_REGISTRO_EXP = " ";

		if ( ! (Compare.equals(this.app.RUTINA_GBL, "RR")))
		{		
		String codStat = this.app.form  ( "PRE_MENU_MANT_SERV_FR" ).getStringItem ( "COD_STATUS_SERVICIO" );
		if ( ( Compare.equals ( RallyStringService.subString ( codStat, 0, 4 ), "CERR" ) ) || ( Compare.equals ( RallyStringService.subString ( codStat, 0, 4 ), "RECH" ) ) ) 
		{
			this.app.setError ( 1, 4001 );
			this.doReturn ( );
			return; 
		}
		}

		//if ( ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_FAM_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "CERR" ) ) || ( Compare.equals ( RallyStringService.subString ( this.app.form ( "SERV_FAM_FRM" ).getStringItem ( "COD_STATUS_SERVICIO" ), 0, 4 ), "RECH" ) ) ) 

		if (Compare.equals(this.app.RUTINA_GBL, "RR"))
		{		
			this.app.COD_SERV_GBL = this.app.form ( "DETERMINAR_RECLAMACION_FR" ).getStringItem ( "COD_SERVICIO" );
			this.app.SS_JEFE_GBL = this.app.form ( "DETERMINAR_RECLAMACION_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAM" );
			this.app.SS_SERV_GBL = this.app.form ( "DETERMINAR_RECLAMACION_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" );
			this.app.EDATE = this.app.form ( "DETERMINAR_RECLAMACION_FR" ).getDateItem ( "MES_ANO_BENEFICIO_CORRECTO" );
			this.app.FCH_SOLIC_SERV_GBL = this.app.form ( "DETERMINAR_RECLAMACION_FR" ).getDateItem ( "FCH_SOLICITUD" );
		}
		else 
		{
			this.app.SS_JEFE_GBL = this.app.form ( "SERV_FAM_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAM" );
			this.app.SS_SERV_GBL = this.app.form ( "SERV_FAM_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERV" );
			this.app.COD_SERV_GBL = this.app.form ( "SERV_FAM_FRM" ).getStringItem ( "COD_SERVICIO" );
			this.app.FCH_SOLIC_SERV_GBL = this.app.form ( "SERV_FAM_FRM" ).getDateItem ( "FCH_SOLICITUD" );
		}


		CLIENTES2_RO_DSD = this.dm.create ( "CLIENTES2_RO_DSD" );
		OPEN_ID = CLIENTES2_RO_DSD.getId ( );
		STATUS_CODE = RallyDataStoreException.getDefault ( );
		NUCLEO_READ_LOC_DSD = this.dm.create ( "NUCLEO_READ_LOC_DSD" );
		OPEN_ID2 = NUCLEO_READ_LOC_DSD.getId ( );
		STATUS_CODE2 = RallyDataStoreException.getDefault ( );
		SERVICIOS_LOC2_DSD = this.dm.create ( "SERVICIOS_LOC2_DSD" );
		OPEN_ID3 = SERVICIOS_LOC2_DSD.getId ( );
		STATUS_CODE3 = RallyDataStoreException.getDefault ( );
		DESCALIFICADOS_READ_LOC_DSD = this.dm.create ( "DESCALIFICADOS_READ_LOC_DSD" );
		OPEN_ID5 = DESCALIFICADOS_READ_LOC_DSD.getId ( );
		STATUS_CODE5 = RallyDataStoreException.getDefault ( );
		EMPLEOS_CLIENTE_RO_DSD = this.dm.create ( "EMPLEOS_CLIENTE_RO_DSD" );
		OPEN_ID6 = EMPLEOS_CLIENTE_RO_DSD.getId ( );
		STATUS_CODE6 = RallyDataStoreException.getDefault ( );
		CNT_NUCLEO = 0;
		FLG_NCAL = 0;

		STATUS_CODE2  = this.dm.reset ( OPEN_ID2 );

		this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
		this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
		this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
		this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

		STATUS_CODE2  = this.dm.limitQueryFromBuffer ( OPEN_ID2 );
		STATUS_CODE2  = this.dm.retrieve ( OPEN_ID2 );

		STATUS_CODE2  = this.dm.firstRow ( OPEN_ID2 );

		while ( Compare.equals ( STATUS_CODE2, 0 )  )
		{
			CNT_NUCLEO = MathService.plus ( CNT_NUCLEO, 1  );
			if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) ) && ( Compare.equals ( CNT_NUCLEO, 1 ) )  ) 
			{
				FLG_NCAL = 1;
			}

			STATUS_CODE2  = this.dm.nextRow ( OPEN_ID2 );

		}
		if ( ( Compare.equals ( CNT_NUCLEO, 1 ) ) && ( Compare.equals ( FLG_NCAL, 1 ) )  && ( ! Compare.equals(this.app.RUTINA_GBL, "RR"))) 
		{
			if ( Compare.gt ( this.app.form ( "SERV_FAM_FRM" ).getDateItem ( "FCH_TERMINACION" ), RallySpanishDatesParser.parseDateString ( "" ) )  ) 
			{
				this.app.form ( "PRE_MENU_MANT_SERV_FR" ).setItem ( "COD_STATUS_SERVICIO", "CERRAD12"  );
				this.app.form ( "SERV_FAM_FRM" ).setItem ( "COD_STATUS_SERVICIO", "CERRAD12"  );

				STATUS_CODE3  = this.dm.reset ( OPEN_ID3 );

				this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
				this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
				this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
				this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

				STATUS_CODE3  = this.dm.limitQueryFromBuffer ( OPEN_ID3 );
				STATUS_CODE3  = this.dm.retrieve ( OPEN_ID3 );

				STATUS_CODE3  = this.dm.firstRow ( OPEN_ID3 );

				if ( Compare.equals ( STATUS_CODE3, 0 ) ) 
				{
					this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "FCH_CERRADO", TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  );
					this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "COD_STATUS_SERVICIO", "CERRAD12" );

					STATUS_CODE3  = this.dm.update ( OPEN_ID3 );

					STATUS_CODE3  = this.dm.dbCommit ( );
				}
			}
			else
			{
				this.app.form ( "PRE_MENU_MANT_SERV_FR" ).setItem ( "COD_STATUS_SERVICIO", "RECHAZ10"  );
				this.app.form ( "SERV_FAM_FRM" ).setItem ( "COD_STATUS_SERVICIO", "RECHAZ10"  );

				STATUS_CODE3  = this.dm.reset ( OPEN_ID3 );

				this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
				this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
				this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
				this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

				STATUS_CODE3  = this.dm.limitQueryFromBuffer ( OPEN_ID3 );
				STATUS_CODE3  = this.dm.retrieve ( OPEN_ID3 );

				STATUS_CODE3  = this.dm.firstRow ( OPEN_ID3 );

				if ( Compare.equals ( STATUS_CODE3, 0 ) ) 
				{
					this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "FCH_CERRADO", TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  );
					this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "COD_STATUS_SERVICIO", "RECHAZ10" );

					STATUS_CODE3  = this.dm.update ( OPEN_ID3 );

					STATUS_CODE3  = this.dm.dbCommit ( );
				}
			}
			this.app.setError ( 2, 2063 );
			this.app.errorFlag = false;
			this.doReturn ( );
			return; 
		}
		if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "PA" ) ) 
		{
			this._condition0 = true;
		}
		else
		{
			this._condition0 = false;
		}
		if ( Compare.equals ( this.app.COD_SERV_GBL, "AE-C" ) ) 
		{
			this._condition10 = true;
		}
		else
		{
			this._condition10 = false;
		}

		STATUS_CODE2  = this.dm.reset ( OPEN_ID2 );

		this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
		this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
		this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
		this.dm.setField ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

		STATUS_CODE2  = this.dm.limitQueryFromBuffer ( OPEN_ID2 );
		STATUS_CODE2  = this.dm.retrieve ( OPEN_ID2 );

		STATUS_CODE2  = this.dm.firstRow ( OPEN_ID2 );

		//this.process ( ps );
		return;
	}


	/**
	 *
	 */
	protected void step2 ( ParameterSet ps )
	{
		if ( this._condition10 )    //    if ( Compare.equals ( this.app.COD_SERV_GBL, "AE-C" ) ) 
		{
			if ( Compare.equals ( STATUS_CODE2, 0 )  )
			{
				this._condition11 = true;
			}
			else
			{
				this._condition11 = false;
			}
			if ( this._condition11 )
			{
				if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "EXIN" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAL" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "ENNA" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NCAT" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "NA" ) )  ) 
				{
					this._condition12 = true;
				}
				else
				{
					this._condition12 = false;
				}
				if ( this._condition12 )
				{
					STATUS_CODE  = this.dm.reset ( OPEN_ID );

					this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
					this.dm.setField ( this.dm.get ( "CLIENTES2_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

					STATUS_CODE  = this.dm.limitQueryFromBuffer ( OPEN_ID );
					STATUS_CODE  = this.dm.retrieve ( OPEN_ID );

					STATUS_CODE  = this.dm.firstRow ( OPEN_ID );

					EDAD = DateUtil.monthsBetween ( this.app.SYSTEM_DATE, this.dm.getFieldDate ( this.dm.get ( "CLIENTES2_RO_DSD" ), "FCH_NACIMIENTO" ) ) / 12;
					if ( ( Compare.gt ( EDAD, 18 ) ) && ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNPR" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "COD_PARENTESCO_RELACION_SERV" ), "BNSC" ) ) )  ) 
					{
						this._condition13 = true;
					}
					else
					{
						this._condition13 = false;
					}
					if ( this._condition13 )
					{
						if ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PASOS" ), "NOAC" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PASOS" ), "NA" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PASOS" ), "" ) ) ) && ( Compare.equals ( STATUS_CODE, 0 ) )  ) 
						{
							this._condition14 = true;
						}
						else
						{
							this._condition14 = false;
						}
						if ( this._condition14 )
						{
							STATUS_CODE5  = this.dm.reset ( OPEN_ID5 );

							this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.dm.getFieldDouble ( this.dm.get ( "NUCLEO_READ_LOC_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO" ) );
							this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
							this.dm.setField ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

							STATUS_CODE5  = this.dm.limitQueryFromBuffer ( OPEN_ID5 );
							STATUS_CODE5  = this.dm.retrieve ( OPEN_ID5 );

							STATUS_CODE5  = this.dm.firstRow ( OPEN_ID5 );

							FLG_DESCALIFICADO = 0;
							while ( ( Compare.equals ( FLG_DESCALIFICADO, 0 ) ) && ( Compare.equals ( STATUS_CODE5, 0 ) )   )
							{
								if ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "DESCALIFICADOS_READ_LOC_DSD" ), "FCH_VENCIMIENTO" ), this.app.SYSTEM_DATE ) ) 
								{
									FLG_DESCALIFICADO = 1;
								}

								STATUS_CODE5  = this.dm.nextRow ( OPEN_ID5 );

							}
							if ( Compare.equals ( FLG_DESCALIFICADO, 0 ) ) 
							{
								this._condition15 = true;
							}
							else
							{
								this._condition15 = false;
							}
							if ( this._condition15 )
							{
								if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "JEFE" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "COD_PARENTESCO_FAM" ), "CONY" ) ) ) 
								{
									this._condition16 = true;
								}
								else
								{
									this._condition16 = false;
								}
								if ( this._condition16 )
								{
									STATUS_CODE3  = this.dm.reset ( OPEN_ID3 );

									this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
									this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
									this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
									this.dm.setField ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

									STATUS_CODE3  = this.dm.limitQueryFromBuffer ( OPEN_ID3 );
									STATUS_CODE3  = this.dm.retrieve ( OPEN_ID3 );

									STATUS_CODE3  = this.dm.firstRow ( OPEN_ID3 );

									if ( Compare.equals ( STATUS_CODE3, 0 ) ) 
									{
										this._condition17 = true;
									}
									else
									{
										this._condition17 = false;
									}
									if ( this._condition17 )
									{
										TIPO_REGISTRO_EXP = this.dm.getFieldString ( this.dm.get ( "CLIENTES2_RO_DSD" ), "TIPO_REGISTRO" );
										this.app.ANSWER_GBL = "N";
										if ( Compare.gt ( StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "SERVICIOS_LOC2_DSD" ), "FCH_AUTORIZACION" ) ), "" ) ) 
										{
											this.app.setError ( 7, 6189 );
											this.app.errorFlag = false;
											this.doReturn ( );
											return; 
										}
										else
										{
											DESEA_RECHAZ17_MENU.exec ( this.app );
											return;
										}
									}
								}
							}
						}
					}
				}
			}
			return;
		}

	}

	protected void step3 ( ParameterSet ps )
	{
		STATUS_CODE  = this.dm.dbClose ( OPEN_ID );

		STATUS_CODE2  = this.dm.dbClose ( OPEN_ID2 );

		STATUS_CODE3  = this.dm.dbClose ( OPEN_ID3 );

		STATUS_CODE5  = this.dm.dbClose ( OPEN_ID5 );

		STATUS_CODE6  = this.dm.dbClose ( OPEN_ID5 );

		if ( ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "PA" ) ) && ( ! Compare.equals ( this.app.COD_SERV_GBL, "PANB" ) )  ) 
//			&& ( ! Compare.equals ( this.app.COD_SERV_GBL, "PANED" ) )  )
		{
			this._condition18 = true;
		}
		else
		{
			this._condition18 = false;
		}
		if ( this._condition18 )
		{
			DETERMINAR_ELEGIBILIDAD_PAN_2.exec ( this.app );
			if (Compare.equals(this.app.RUTINA_GBL, "RR"))
			{
				CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
			}
			return;
		}
		return;
	}


	/**
	 *
	 */
	protected void step4 ( ParameterSet ps )
	{
		if ( Compare.equals ( this.app.COD_SERV_GBL, "PANB" ) ) 
		{
			this._condition19 = true;
		}
		else
		{
			this._condition19 = false;
		}
		if ( this._condition19 )
		{
			DETERMINAR_ELEGIBILIDAD_PANB.exec ( this.app );
			return;
		}
		return;
	}


	/**
	 *
	 */
	protected void step5 ( ParameterSet ps )
	{
		if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
		{
			this._condition20 = true;
		}
		else
		{
			this._condition20 = false;
		}
		if ( this._condition20 )
		{
			if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "A" ) ) 
			{
				this._condition21 = true;
			}
			else
			{
				this._condition21 = false;
			}
			if ( this._condition21 )
			{
				DETERMINAR_ELEGIBILIDAD_AE_A_ADL.exec ( this.app );
				if (Compare.equals(this.app.RUTINA_GBL, "RR"))
				{
					CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
				}
				return;
			}
		}
		return;
	}


	/**
	 *
	 */
	protected void step6 ( ParameterSet ps )
	{
		if ( this._condition20 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
		{
			if ( this._condition21 )    //      if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "A" ) ) 
			{
			}
			if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "B" ) ) 
			{
				this._condition22 = true;
			}
			else
			{
				this._condition22 = false;
			}
			if ( this._condition22 )
			{
				DETERMINAR_ELEGIBILIDAD_AE_B_ADL.exec ( this.app );
				if (Compare.equals(this.app.RUTINA_GBL, "RR"))
				{
					CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
				}
				return;
			}
		}
		return;
	}


	/**
	 *
	 */
	protected void step7 ( ParameterSet ps )
	{
		if ( this._condition20 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
		{
			if ( this._condition22 )    //      if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "B" ) ) 
			{
			}
			if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "D" ) ) 
			{
				this._condition23 = true;
			}
			else
			{
				this._condition23 = false;
			}
			if ( this._condition23 )
			{
				DETERMINAR_ELEGIBILIDAD_AE_A_ADL.exec ( this.app );
				if (Compare.equals(this.app.RUTINA_GBL, "RR"))
				{
					CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
				}
				return;
			}
		}
		return;
	}


	/**
	 *
	 */
	protected void step8 ( ParameterSet ps )
	{
		if ( this._condition20 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
		{
			if ( this._condition23 )    //      if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "D" ) ) 
			{
			}
			if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "G" ) ) 
			{
				this._condition24 = true;
			}
			else
			{
				this._condition24 = false;
			}
			if ( this._condition24 )
			{
				DETERMINAR_ELEGIBILIDAD_AE_B_ADL.exec ( this.app );
				if (Compare.equals(this.app.RUTINA_GBL, "RR"))
				{
					CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
				}
				return;
			}
		}
		return;
	}


	/**
	 *
	 */
	protected void step9 ( ParameterSet ps )
	{
		if ( this._condition20 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
		{
			if ( this._condition24 )    //      if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "G" ) ) 
			{
			}
			if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "T" ) ) 
			{
				this._condition25 = true;
			}
			else
			{
				this._condition25 = false;
			}
			if ( this._condition25 )
			{
				DETERMINAR_ELEGIBILIDAD_AE_T_ADL.exec ( this.app );
				if (Compare.equals(this.app.RUTINA_GBL, "RR"))
				{
					CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
				}
				return;
			}
		}
		return;
	}


	/**
	 *
	 */
	protected void step10 ( ParameterSet ps )
	{
		if ( this._condition20 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
		{
			if ( this._condition25 )    //      if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "T" ) ) 
			{
			}
			if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "C" ) ) 
			{
				this._condition26 = true;
			}
			else
			{
				this._condition26 = false;
			}
			if ( this._condition26 )
			{
				DETERMINAR_ELEGIBILIDAD_AE_C1_ADL.exec ( this.app );
				if (Compare.equals(this.app.RUTINA_GBL, "RR"))
				{
					CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
				}
				return;
			}
		}
		return;
	}
	protected void step11 ( ParameterSet ps )
	{
		//    if ( this._condition20 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
		//    {
		//      if ( this._condition25 )    //      if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "T" ) ) 
		//      {
		//      }
		if ( Compare.equals (  this.app.COD_SERV_GBL , "LISE" ) ||Compare.equals (  RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 4 ), "LICE" )) 
		{
			this._condition27 = true;
		}
		else
		{
			this._condition27 = false;
		}
		if ( this._condition27 )
		{
			DETERMINAR_ELEGIBILIDAD_LIHEAP.exec ( this.app );
			return;
		}

		return;
	}
	
	protected void step12 ( ParameterSet ps )
	{
		//    if ( this._condition20 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
		//    {
		//      if ( this._condition25 )    //      if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "T" ) ) 
		//      {
		//      }
		if ( Compare.equals (  this.app.COD_SERV_GBL , "TANFS" ) ) 
		{
			if (Compare.equals(this.app.RUTINA_GBL, "RR"))
			{
				CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
			}
			else
			DETERMINAR_ELEGIBILIDAD_TANFS.exec ( this.app );
			
			return;
		}
	}
		
		protected void step13 ( ParameterSet ps )
		{
			//    if ( this._condition20 )    //    if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" ) ) 
			//    {
			//      if ( this._condition25 )    //      if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 3, 1 ), "T" ) ) 
			//      {
			//      }
			if ( Compare.equals (  this.app.COD_SERV_GBL , "TANFE" ) ) 
			{
				if (Compare.equals(this.app.RUTINA_GBL, "RR"))
				{
					CALCULAR_AJUSTE_BASE_ADL.exec ( this.app );
				}
				else
				DETERMINAR_ELEGIBILIDAD_TANFE.exec ( this.app );
				
				return;
			}
		}
	}



/* ---------------------------------------------------------------------



PROCEDURE DETERMINACION_ELEGIBILIDAD_ADL;

VAR
        SERV_ID         :       NUMBER;
        STAT_CODE       :       NUMBER;
        OPEN_ID         :       NUMBER;
        OPEN_ID2        :       NUMBER;
        OPEN_ID3        :       NUMBER;
        OPEN_ID4        :       NUMBER;
        OPEN_ID5        :       NUMBER;
        OPEN_ID6        :       NUMBER;
        STATUS_CODE5    :       NUMBER;
        STATUS_CODE6    :       NUMBER;
        STATUS_CODE     :       NUMBER;
        STATUS_CODE2    :       NUMBER;
        STATUS_CODE3    :       NUMBER;
        STATUS_CODE4    :       NUMBER;
        CNT_NUCLEO      :       NUMBER;
        FLG_NCAL        :       NUMBER;
        FLG_DESCALIFICADO :     NUMBER;
        TIPO_REGISTRO_EXP :     CHAR(4) EXPORT;
        EDAD            :       NUMBER;
BEGIN
SET_TRACE();
cod_acceSs_gbl := 'DETE';
CALL SECURITY_ADL;
IF ACCESS_STATUS_GBL = 'FAILURE' 
   THEN BEGIN
        ERROR(1006);
        RETURN;
        END;

FLAG_UPD_GBL := 'N';
ANSWER_GBL := 'N';
TIPO_REGISTRO_EXP := ' ';

{IF (SERV_FAM_FRM.COD_STATUS_SERVICIO<>'ACTIVO') AND
   (SERV_FAM_FRM.COD_STATUS_SERVICIO<>'PENDELEG')
   THEN BEGIN
         ERROR(4001);
         RETURN;
        END;}

{MODIFICACION PARA NO PERMITIR LA DETERMINACION DE ELEGIBILIDAD
 PARA SERVICIOS CON STATUS DE CERRADO}

IF (SUBSTR(SERV_FAM_FRM.COD_STATUS_SERVICIO,0,4) ='CERR') OR
   (SUBSTR(SERV_FAM_FRM.COD_STATUS_SERVICIO,0,4) ='RECH')
   THEN BEGIN
         ERROR(4001);
         RETURN;
        END;

SS_JEFE_GBL:=SERV_FAM_FRM.SEGURO_SOCIAL_JEFE_FAM;
SS_SERV_GBL:=SERV_FAM_FRM.SEGURO_SOCIAL_JEFE_SERV;
COD_SERV_GBL:=SERV_FAM_FRM.COD_SERVICIO;
FCH_SOLIC_SERV_GBL:=SERV_FAM_FRM.FCH_SOLICITUD;

DB_OPEN(CLIENTES2_RO_DSD,OPEN_ID,STATUS_CODE);
DB_OPEN(NUCLEO_READ_LOC_DSD,OPEN_ID2,STATUS_CODE2);
DB_OPEN(SERVICIOS_LOC2_DSD,OPEN_ID3,STATUS_CODE3);
DB_OPEN(DESCALIFICADOS_READ_LOC_DSD,OPEN_ID5,STATUS_CODE5);
DB_OPEN(EMPLEOS_CLIENTE_RO_DSD,OPEN_ID6,STATUS_CODE6);

{VERIFICA SI EL UNICO MIEMBRO ESTA DESCALIFICADO}
CNT_NUCLEO := 0;
FLG_NCAL := 0;
DB_RESET(OPEN_ID2,STATUS_CODE2);
NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
NUCLEO_READ_LOC_DSD.COD_SERVICIO := COD_SERV_GBL;
NUCLEO_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(OPEN_ID2,STATUS_CODE2);
DB_GET_FIRST(OPEN_ID2,STATUS_CODE2);
WHILE STATUS_CODE2 = 0 DO
BEGIN
        CNT_NUCLEO := CNT_NUCLEO+ 1;
        IF (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV = 'NCAL') AND
           (CNT_NUCLEO = 1 ) THEN
        BEGIN
                FLG_NCAL := 1;
        END;
        DB_GET_NEXT(OPEN_ID2,STATUS_CODE2);
END;
IF (CNT_NUCLEO = 1) AND (FLG_NCAL = 1) THEN
BEGIN

        IF SERV_FAM_FRM.FCH_TERMINACION > TO_DATE('') THEN
        BEGIN
                PRE_MENU_MANT_SERV_FR.COD_STATUS_SERVICIO:='CERRAD12';
                SERV_FAM_FRM.COD_STATUS_SERVICIO := 'CERRAD12';
                DB_RESET(OPEN_ID3,STATUS_CODE3);
                SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
                SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
                SERVICIOS_LOC2_DSD.COD_SERVICIO := COD_SERV_GBL;
                SERVICIOS_LOC2_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN_ID3,STATUS_CODE3);
                DB_GET_FIRST(OPEN_ID3,STATUS_CODE3);
                IF STATUS_CODE3 = 0 THEN
                BEGIN   
                        SERVICIOS_LOC2_DSD.FCH_CERRADO := TRUNC(SYSTEM_DATE,'DDD
');
                        SERVICIOS_LOC2_DSD.COD_STATUS_SERVICIO := 'CERRAD12';
                        DB_UPDATE(OPEN_ID3,STATUS_CODE3);
                        DB_COMMIT(STATUS_CODE3);
                END;
        END;
        ELSE
        BEGIN
                PRE_MENU_MANT_SERV_FR.COD_STATUS_SERVICIO:='RECHAZ23';
                SERV_FAM_FRM.COD_STATUS_SERVICIO := 'RECHAZ23';
                DB_RESET(OPEN_ID3,STATUS_CODE3);
                SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
                SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
                SERVICIOS_LOC2_DSD.COD_SERVICIO := COD_SERV_GBL;
                SERVICIOS_LOC2_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN_ID3,STATUS_CODE3);
                DB_GET_FIRST(OPEN_ID3,STATUS_CODE3);
                IF STATUS_CODE3 = 0 THEN
                BEGIN   
                        SERVICIOS_LOC2_DSD.FCH_CERRADO := TRUNC(SYSTEM_DATE,'DDD
');
                        SERVICIOS_LOC2_DSD.COD_STATUS_SERVICIO := 'RECHAZ23';
                        DB_UPDATE(OPEN_ID3,STATUS_CODE3);
                        DB_COMMIT(STATUS_CODE3);
                END;
        END;

        ERROR(2063);
        SET_FAILURE();
        RETURN;
END;
{ EXENCION DEL REGISTRO DE EMPLEO}
IF SUBSTR(COD_SERV_GBL,0,2)='PA' THEN
  BEGIN 
        DB_RESET(OPEN_ID2,STATUS_CODE2);
        NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        NUCLEO_READ_LOC_DSD.COD_SERVICIO := COD_SERV_GBL;
        NUCLEO_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN_ID2,STATUS_CODE2);
        DB_GET_FIRST(OPEN_ID2,STATUS_CODE2);
        WHILE STATUS_CODE2 = 0 DO
        BEGIN
                DB_RESET(OPEN_ID6,STATUS_CODE6);
                EMPLEOS_CLIENTE_RO_DSD.SEGURO_SOCIAL_CLIENTE :=
                                NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO;
                EMPLEOS_CLIENTE_RO_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN_ID6,STATUS_CODE6);
                DB_GET_FIRST(OPEN_ID6,STATUS_CODE6);
                WHILE (STATUS_CODE6 = 0) AND
                (EMPLEOS_CLIENTE_RO_DSD.FCH_GESTION <= SYSTEM_DATE) DO
                BEGIN
                        DB_GET_NEXT(OPEN_ID6,STATUS_CODE6);
                END;

                DB_RESET(OPEN_ID,STATUS_CODE);
                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE := 
                                NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO;
                CLIENTES2_RO_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN_ID,STATUS_CODE);
                DB_GET_FIRST(OPEN_ID,STATUS_CODE);
                IF ((CLIENTES2_RO_DSD.TIPO_REGISTRO = 'VOLU') OR
                    (CLIENTES2_RO_DSD.TIPO_REGISTRO = 'OBLI') OR
                    (CLIENTES2_RO_DSD.TIPO_REGISTRO = '')) AND
                   ((CLIENTES2_RO_DSD.ACEPTA_REGISTRO_EMPLEO <> 'S') OR
                    ((EMPLEOS_CLIENTE_RO_DSD.FLG_GESTION <> 'S') OR 
                    (STATUS_CODE6 <> 0))) AND
                    (STATUS_CODE = 0)
                THEN BEGIN

{ VERIFICAR SI ESTA DESCALIFICADO EL CLIENTE }
                DB_RESET(OPEN_ID5,STATUS_CODE5);
                 DESCALIFICADOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE :=
                 NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO;
                 DESCALIFICADOS_READ_LOC_DSD.COD_SERVICIO:=
                COD_SERV_GBL;   
                DESCALIFICADOS_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY(OPEN_ID5,STATUS_CODE5);
                DB_GET_FIRST(OPEN_ID5,STATUS_CODE5);
                FLG_DESCALIFICADO := 0;
                WHILE  (FLG_DESCALIFICADO = 0) AND (STATUS_CODE5 = 0) DO
                BEGIN
                   IF DESCALIFICADOS_READ_LOC_DSD.FCH_VENCIMIENTO >= SYSTEM_DATE
 THEN 
                        FLG_DESCALIFICADO := 1;
                   DB_GET_NEXT(OPEN_ID5,STATUS_CODE5);
                END;
                IF FLG_DESCALIFICADO = 0
                   THEN
                  BEGIN
                   IF CLIENTES2_RO_DSD.TIPO_REGISTRO = '' THEN
                    BEGIN
                        error(6120);
                        RETURN;
                    END;
                    IF ((CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'JEFE') OR
                       (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY'))
                     THEN
                     BEGIN
                       DB_RESET(OPEN_ID3,STATUS_CODE3);
                       SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
                       SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL
;
                       SERVICIOS_LOC2_DSD.COD_SERVICIO := COD_SERV_GBL;
                       SERVICIOS_LOC2_DSD.RMO_OFICINA := RMO_GBL;
                       DB_QUERY(OPEN_ID3,STATUS_CODE3);
                       DB_GET_FIRST(OPEN_ID3,STATUS_CODE3);
                       IF  (STATUS_CODE3 = 0) THEN
                        BEGIN
                              TIPO_REGISTRO_EXP := CLIENTES2_RO_DSD.TIPO_REGISTR
O;
                             ANSWER_GBL := 'N';
                             IF TO_CHAR(SERVICIOS_LOC2_DSD.FCH_AUTORIZACION) > '
' THEN
                                BEGIN 
                                { error(6110);}
                                 IF (CLIENTES2_RO_DSD.ACEPTA_REGISTRO_EMPLEO <> 
'S') THEN
                                 BEGIN
                                        CALL DESEA_CERRAD47_MENU;
                                        IF ANSWER_GBL = 'N' THEN
                                          return;
                                         IF ANSWER_GBL = 'Y' THEN
                                         BEGIN
                                           PRE_MENU_MANT_SERV_FR.COD_STATUS_SERV
ICIO:='CERRAD40';
                                           SERV_FAM_FRM.COD_STATUS_SERVICIO := '
CERRAD40';
                                           SERVICIOS_LOC2_DSD.COD_STATUS_SERVICI
O := 'CERRAD40';
                                           SERVICIOS_LOC2_DSD.FCH_CERRADO := TRU
NC(SYSTEM_DATE,'DDD');
                                         END;
                                 END;                            
                                 ELSE
                                 BEGIN
                                  IF (EMPLEOS_CLIENTE_RO_DSD.FLG_GESTION <> 'S')
 THEN
                                  BEGIN
                                    CALL DESEA_CERRAD_SEGGEST_MENU;
                                    IF ANSWER_GBL = 'N' THEN
                                        return;
                                    IF ANSWER_GBL = 'Y' THEN
                                         BEGIN
                                           PRE_MENU_MANT_SERV_FR.COD_STATUS_SERV
ICIO:='CERRAD40';
                                           SERV_FAM_FRM.COD_STATUS_SERVICIO := '
CERRAD40';
                                           SERVICIOS_LOC2_DSD.COD_STATUS_SERVICI
O := 'CERRAD40';
                                           SERVICIOS_LOC2_DSD.FCH_CERRADO := TRU
NC(SYSTEM_DATE,'DDD');
                                         END;
                                  END;
                                 END; 
                                END;
                                ELSE
                                BEGIN
                                 IF (CLIENTES2_RO_DSD.ACEPTA_REGISTRO_EMPLEO <> 
'S') THEN
                                    BEGIN
                                        CALL DESEA_RECHAZ30_MENU;
                                         IF ANSWER_GBL = 'Y' THEN
                                         BEGIN
                                           PRE_MENU_MANT_SERV_FR.COD_STATUS_SERV
ICIO:='RECHAZ24';
                                           SERV_FAM_FRM.COD_STATUS_SERVICIO := '
RECHAZ24';
                                           SERVICIOS_LOC2_DSD.COD_STATUS_SERVICI
O := 'RECHAZ24';
                                           SERVICIOS_LOC2_DSD.FCH_CERRADO := TRU
NC(SYSTEM_DATE,'DDD');
                                         END;
                                         IF ANSWER_GBL = 'N' THEN
                                           return;
                                    END;
                                END;
                                 IF ANSWER_GBL = 'Y' THEN
                                   BEGIN
                                     ANSWER_GBL := 'N';
                                     DB_UPDATE(OPEN_ID3,STATUS_CODE3);
                                     DB_COMMIT(STATUS_CODE3);
                                     RETURN;
                                   END;
                        END;
                     END;
                     ELSE
                      BEGIN
                        IF ((CLIENTES2_RO_DSD.TIPO_REGISTRO = ''))
                        THEN
                          BEGIN
                            error(6120);
                            DB_CLOSE(OPEN_ID,STATUS_CODE);
                            DB_CLOSE(OPEN_ID2,STATUS_CODE2);
                            DB_CLOSE(OPEN_ID3,STATUS_CODE3);
                            DB_CLOSE(OPEN_ID5,STATUS_CODE5);
                            DB_CLOSE(OPEN_ID5,STATUS_CODE6);
                            RETURN;
                          END;
                        IF (EMPLEOS_CLIENTE_RO_DSD.FLG_GESTION <> 'S')  AND
                        (TO_CHAR(SERVICIOS_LOC2_DSD.FCH_AUTORIZACION) > '')
                        THEN
                          BEGIN
                            error(6121);
                            DB_CLOSE(OPEN_ID,STATUS_CODE);
                            DB_CLOSE(OPEN_ID2,STATUS_CODE2);
                            DB_CLOSE(OPEN_ID3,STATUS_CODE3);
                            DB_CLOSE(OPEN_ID5,STATUS_CODE5);
                            DB_CLOSE(OPEN_ID5,STATUS_CODE6);
                            RETURN;
                          END;
                                 IF (CLIENTES2_RO_DSD.ACEPTA_REGISTRO_EMPLEO <> 
'S') THEN
                                 BEGIN
                                     DB_RESET(OPEN_ID3,STATUS_CODE3);
                                       SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_FAM
 := SS_JEFE_GBL;
                                       SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_SER
V := SS_SERV_GBL;
                                       SERVICIOS_LOC2_DSD.COD_SERVICIO := COD_SE
RV_GBL;
                                       DB_QUERY(OPEN_ID3,STATUS_CODE3);
                                       DB_GET_FIRST(OPEN_ID3,STATUS_CODE3);
                                       IF  (STATUS_CODE3 = 0) THEN
                                        BEGIN
                                                error(6120);
                                                RETURN;
                                        END;

                                END;
                      END;
                     END;
                END;
                DB_GET_NEXT(OPEN_ID2,STATUS_CODE2);
        END;
  END;
{******}
{ VALIDACION DE CODIGO PRI}
IF COD_SERV_GBL='AE-C' THEN
  BEGIN 
        DB_RESET(OPEN_ID2,STATUS_CODE2);
        NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
        NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
        NUCLEO_READ_LOC_DSD.COD_SERVICIO := COD_SERV_GBL;
        NUCLEO_READ_LOC_DSD.RMO_OFICINA := RMO_GBL;
        DB_QUERY(OPEN_ID2,STATUS_CODE2);
        DB_GET_FIRST(OPEN_ID2,STATUS_CODE2);
        WHILE STATUS_CODE2 = 0 DO
        BEGIN
           IF (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV <> 'EXIN') AND
              (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAL') AND
              (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV <> 'ENNA') AND
              (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV <> 'NCAT') AND
              (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV <> 'NA')
           THEN
            BEGIN
                DB_RESET(OPEN_ID,STATUS_CODE);
                CLIENTES2_RO_DSD.SEGURO_SOCIAL_CLIENTE := 
                                NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO;
                CLIENTES2_RO_DSD.RMO_OFICINA := RMO_GBL;
                DB_QUERY(OPEN_ID,STATUS_CODE);
                DB_GET_FIRST(OPEN_ID,STATUS_CODE);
        EDAD := MONTHS_BETWEEN(SYSTEM_DATE, CLIENTES2_RO_DSD.FCH_NACIMIENTO)/12;
        IF (EDAD > 18) AND ((NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV = 
'BNPR') OR
           (NUCLEO_READ_LOC_DSD.COD_PARENTESCO_RELACION_SERV = 'BNSC'))
        THEN
         BEGIN
                IF ((CLIENTES2_RO_DSD.COD_PASOS = 'NOAC') OR
                    (CLIENTES2_RO_DSD.COD_PASOS = 'NA') OR
                    (CLIENTES2_RO_DSD.COD_PASOS = '')) AND
                    (STATUS_CODE = 0)
                THEN BEGIN

{ VERIFICAR SI ESTA DESCALIFICADO EL CLIENTE }
                DB_RESET(OPEN_ID5,STATUS_CODE5);
                 DESCALIFICADOS_READ_LOC_DSD.SEGURO_SOCIAL_CLIENTE :=
                 NUCLEO_READ_LOC_DSD.SEGURO_SOCIAL_BENEFICIARIO;
                 DESCALIFICADOS_READ_LOC_DSD.COD_SERVICIO:=
                COD_SERV_GBL;   
                DESCALIFICADOS_READ_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY(OPEN_ID5,STATUS_CODE5);
                DB_GET_FIRST(OPEN_ID5,STATUS_CODE5);
                FLG_DESCALIFICADO := 0;
                WHILE  (FLG_DESCALIFICADO = 0) AND (STATUS_CODE5 = 0) DO
                BEGIN
                   IF DESCALIFICADOS_READ_LOC_DSD.FCH_VENCIMIENTO >= SYSTEM_DATE
 THEN 
                        FLG_DESCALIFICADO := 1;
                   DB_GET_NEXT(OPEN_ID5,STATUS_CODE5);
                END;
                IF FLG_DESCALIFICADO = 0
                   THEN
                  BEGIN

                    IF ((CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'JEFE') OR
                       (CLIENTES2_RO_DSD.COD_PARENTESCO_FAM = 'CONY'))
                     THEN
                     BEGIN
                       DB_RESET(OPEN_ID3,STATUS_CODE3);
                       SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
                       SERVICIOS_LOC2_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL
;
                       SERVICIOS_LOC2_DSD.COD_SERVICIO := COD_SERV_GBL;
                       SERVICIOS_LOC2_DSD.RMO_OFICINA := RMO_GBL;
                       DB_QUERY(OPEN_ID3,STATUS_CODE3);
                       DB_GET_FIRST(OPEN_ID3,STATUS_CODE3);
                       IF  (STATUS_CODE3 = 0) THEN
                        BEGIN
                              TIPO_REGISTRO_EXP := CLIENTES2_RO_DSD.TIPO_REGISTR
O;
                             ANSWER_GBL := 'N';
                             IF TO_CHAR(SERVICIOS_LOC2_DSD.FCH_AUTORIZACION) > '
' THEN
                                BEGIN 
                                        error(6189);
                                        SET_FAILURE();
                                        RETURN;
                                END;
                             ELSE
                                BEGIN

                                CALL DESEA_RECHAZ17_MENU;
                                 IF ANSWER_GBL = 'Y' THEN
                                 BEGIN
                                     PRE_MENU_MANT_SERV_FR.COD_STATUS_SERVICIO:=
'RECHAZ17';
                                     SERV_FAM_FRM.COD_STATUS_SERVICIO := 'RECHAZ
17';
                                     SERVICIOS_LOC2_DSD.COD_STATUS_SERVICIO := '
RECHAZ17';
                                     SERVICIOS_LOC2_DSD.FCH_CERRADO := TRUNC(SYS
TEM_DATE,'DDD');
                                     ANSWER_GBL := 'N';
                                     DB_UPDATE(OPEN_ID3,STATUS_CODE3);
                                     DB_COMMIT(STATUS_CODE3);
                                     RETURN;
                                 END;
                                 ELSE
                                    RETURN;

                                END;
                        END;
                     END;

                     END;
                END;
                END;
                END;
                DB_GET_NEXT(OPEN_ID2,STATUS_CODE2);
        END;
  END;



{******} 
DB_CLOSE(OPEN_ID,STATUS_CODE);
DB_CLOSE(OPEN_ID2,STATUS_CODE2);
DB_CLOSE(OPEN_ID3,STATUS_CODE3);
DB_CLOSE(OPEN_ID5,STATUS_CODE5);
DB_CLOSE(OPEN_ID5,STATUS_CODE6);


IF (SUBSTR(COD_SERV_GBL,0,2)='PA') AND (COD_SERV_GBL <> 'PANB')
   THEN CALL DETERMINAR_ELEGIBILIDAD_PAN_2;

IF  (COD_SERV_GBL = 'PANB')
   THEN CALL DETERMINAR_ELEGIBILIDAD_PANB;


IF SUBSTR(COD_SERV_GBL,0,2)='AE'
   THEN BEGIN
          IF SUBSTR(COD_SERV_GBL,3,1)='A'
              THEN CALL DETERMINAR_ELEGIBILIDAD_AE_A_ADL;
          IF SUBSTR(COD_SERV_GBL,3,1)='B'
              THEN CALL DETERMINAR_ELEGIBILIDAD_AE_B_ADL;
          IF SUBSTR(COD_SERV_GBL,3,1)='D'
              THEN CALL DETERMINAR_ELEGIBILIDAD_AE_A_ADL;
          IF SUBSTR(COD_SERV_GBL,3,1)='G'
              THEN CALL DETERMINAR_ELEGIBILIDAD_AE_B_ADL;
          IF SUBSTR(COD_SERV_GBL,3,1)='T'
              THEN CALL DETERMINAR_ELEGIBILIDAD_AE_T_ADL;
          IF SUBSTR(COD_SERV_GBL,3,1)='C'
              THEN CALL DETERMINAR_ELEGIBILIDAD_AE_C1_ADL;
        END;


SET_NOTRACE();
END;





--------------------------------------------------------------------- */
