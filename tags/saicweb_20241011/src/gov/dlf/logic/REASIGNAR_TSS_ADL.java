package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class REASIGNAR_TSS_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;



  public DataStore TECNICO_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getTECNICO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).TECNICO_RO_DSD;
  }


  /**  */
  public static void setTECNICO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).TECNICO_RO_DSD = value;
  }


  /**  */
  public static void setTECNICO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).TECNICO_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( REASIGNAR_TSS_ADL ) __app.getADL ( REASIGNAR_TSS_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static REASIGNAR_TSS_ADL get ( RallyApplication __app )
  {
    REASIGNAR_TSS_ADL adl = new REASIGNAR_TSS_ADL ( );
    __app.register ( adl, "REASIGNAR_TSS_ADL" );
    __app.setADL ( REASIGNAR_TSS_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    REASIGNAR_TSS_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    REASIGNAR_TSS_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "REASIGNAR_TSS_ADL" );
    if ( rObj != null && rObj instanceof REASIGNAR_TSS_ADL )
    {
      this.app.setADL ( REASIGNAR_TSS_ADL.class, ( REASIGNAR_TSS_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "REASIGNAR_TSS_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "REASIGNAR_TSS_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.COD_ACCESS_GBL = "RTSS";
    SECURITY_ADL.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    if ( Compare.equals ( this.app.ACCESS_STATUS_GBL, "FAILURE" ) ) 
    {
      this.app.setError ( 0, 1006 );
      this.doReturn ( );
      return; 
    }
    TECNICO_RO_DSD = this.dm.create ( "TECNICO_RO_DSD" );
    OPEN_ID = TECNICO_RO_DSD.getId ( );
    STATUS_ID = RallyDataStoreException.getDefault ( );

    STATUS_ID  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( this.dm.get ( "TECNICO_RO_DSD" ), "ID_SUPERVISOR", this.app.ID_TECNICO_GBL );
    this.dm.setField ( this.dm.get ( "TECNICO_RO_DSD" ), "COD_RMO", this.app.RMO_GBL );

    STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_ID  = this.dm.retrieve ( OPEN_ID );

    STATUS_ID  = this.dm.firstRow ( OPEN_ID );

    STATUS_ID  = this.dm.dbClose ( OPEN_ID );

    if ( Compare.equals ( this.app.RUTINA_GBL, "MC" ) ) 
    {
      MANTENIMIENTO_DE_CASOS_ADL.setCOMPLETION_STATUS ( this.app, "SUCCESS" );
    }
    else if ( Compare.equals ( this.app.RUTINA_GBL, "AC" )  )
    {
      APERTURA_DE_CASO_ADL.setCOMPLETION_STATUS ( this.app, "SUCCESS" );
    }
    this.app.MANT_ACCION_SERV_GBL = "LI";
    this.app.FLAG_UPD_GBL = "N";
    QFECHAS_SERVICIO_PKT.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( Compare.equals ( this.app.RUTINA_GBL, "MC" ) ) 
    {
      if ( Compare.equals ( MANTENIMIENTO_DE_CASOS_ADL.getCOMPLETION_STATUS ( this.app ), "FAILURE" ) ) 
      {
        this.doReturn ( );
        return;
      }
    }
    else
    {
      if ( Compare.equals ( this.app.RUTINA_GBL, "AC" ) ) 
      {
        if ( Compare.equals ( APERTURA_DE_CASO_ADL.getCOMPLETION_STATUS ( this.app ), "FAILURE" ) ) 
        {
          this.doReturn ( );
          return;
        }
      }
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE REASIGNAR_TSS_ADL;

VAR
        OPEN_ID         :       NUMBER;
        STATUS_ID       :       NUMBER;

BEGIN
SET_TRACE();
cod_acceSs_gbl := 'RTSS';
CALL SECURITY_ADL;
IF ACCESS_STATUS_GBL = 'FAILURE' 
   THEN BEGIN
        ERROR(1006);
        RETURN;
        END;

DB_OPEN(TECNICO_RO_DSD,OPEN_ID,STATUS_ID);
DB_RESET(OPEN_ID,STATUS_ID);
TECNICO_RO_DSD.ID_SUPERVISOR:=ID_TECNICO_GBL;
TECNICO_RO_DSD.COD_RMO:=RMO_GBL;
DB_QUERY(OPEN_ID,STATUS_ID);
DB_GET_FIRST(OPEN_ID,STATUS_ID);

{IF STATUS_ID<>0
   THEN BEGIN
        DB_CLOSE(OPEN_ID,STATUS_ID);
        ERROR(4005);
        RETURN;
        END;
}


DB_CLOSE(OPEN_ID,STATUS_ID);


IF RUTINA_GBL='MC'
   THEN MANTENIMIENTO_DE_CASOS_ADL.COMPLETION_STATUS:='SUCCESS';
   ELSE IF RUTINA_GBL='AC'
        THEN APERTURA_DE_CASO_ADL.COMPLETION_STATUS:='SUCCESS';

MANT_ACCION_SERV_GBL:='AT';
FLAG_UPD_GBL := 'N';
CALL QFECHAS_SERVICIO_PKT;

IF RUTINA_GBL='MC'
   THEN BEGIN
        IF MANTENIMIENTO_DE_CASOS_ADL.COMPLETION_STATUS='FAILURE'
        THEN RETURN;
        END;
   ELSE BEGIN
        IF RUTINA_GBL='AC'
        THEN IF APERTURA_DE_CASO_ADL.COMPLETION_STATUS='FAILURE'
             THEN RETURN;
        END;

SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
