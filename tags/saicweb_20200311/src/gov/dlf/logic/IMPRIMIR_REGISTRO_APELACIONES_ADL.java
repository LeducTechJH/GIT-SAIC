package gov.dlf.logic;


import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class IMPRIMIR_REGISTRO_APELACIONES_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------



  public String FECHAS = null;

  public String MINUTOS = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setFECHAS  ( RallyApplication __app, Parameter value )
  {
    ( ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) __app.getADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class ) ).FECHAS = value.getString ( );
  }  

  
  /**  */
  public static void setMINUTOS  ( RallyApplication __app, Parameter value )
  {
    ( ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) __app.getADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class ) ).MINUTOS = value.getString ( );
  }  
    


  /**  */
  public static String getFECHAS  ( RallyApplication __app )
  {
    return ( ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) __app.getADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class ) ).FECHAS;
  }


  /**  */
  public static void setFECHAS  ( RallyApplication __app, String value )
  {
    ( ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) __app.getADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class ) ).FECHAS = value;
  }


  /**  */
  public static void setFECHAS  ( RallyApplication __app, Object value )
  {
    ( ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) __app.getADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class ) ).FECHAS = ( String ) value;
  }



  /**  */
  public static String getMINUTOS  ( RallyApplication __app )
  {
    return ( ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) __app.getADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class ) ).MINUTOS;
  }


  /**  */
  public static void setMINUTOS  ( RallyApplication __app, String value )
  {
    ( ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) __app.getADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class ) ).MINUTOS = value;
  }


  /**  */
  public static void setMINUTOS  ( RallyApplication __app, Object value )
  {
    ( ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) __app.getADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class ) ).MINUTOS = ( String ) value;
  }





  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static IMPRIMIR_REGISTRO_APELACIONES_ADL get ( RallyApplication __app )
  {
    IMPRIMIR_REGISTRO_APELACIONES_ADL adl = new IMPRIMIR_REGISTRO_APELACIONES_ADL ( );
    __app.register ( adl, "IMPRIMIR_REGISTRO_APELACIONES_ADL" );
    __app.setADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    IMPRIMIR_REGISTRO_APELACIONES_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    IMPRIMIR_REGISTRO_APELACIONES_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "IMPRIMIR_REGISTRO_APELACIONES_ADL" );
    if ( rObj != null && rObj instanceof IMPRIMIR_REGISTRO_APELACIONES_ADL )
    {
      this.app.setADL ( IMPRIMIR_REGISTRO_APELACIONES_ADL.class, ( IMPRIMIR_REGISTRO_APELACIONES_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "IMPRIMIR_REGISTRO_APELACIONES_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "IMPRIMIR_REGISTRO_APELACIONES_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.FECHA_DESDE_GBL = this.app.form ( "SEL_FECHAS_REP_APELACIONES_FR" ).getDateItem ( "FECHA_DESDE" );
    FECHAS = StringService.toStringValue  ( this.app.form ( "SEL_FECHAS_REP_APELACIONES_FR" ).getDateItem ( "FECHA_HASTA" ),"dd-MMM-yyyy" ,StringService.Language.SPANISH ) + ":23:59:59";
    this.app.FECHA_HASTA_GBL = RallySpanishDatesParser.parseDateString ( FECHAS, "dd-Mon-YYYY:HH24:MI:SS" );
    if ( Compare.equals ( this.app.ANSWER_GBL, "S" ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      REGISTRO_APELACIONES_FRM_PKT.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( Compare.equals ( this.app.ANSWER_GBL, "N" ) ) 
    {
      this._condition1 = true;
    }
    else
    {
      this._condition1 = false;
    }
    if ( this._condition1 )
    {
      INFORME_ESTADISTICO_APEL_PKT.exec ( this.app );
      return;
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure imprimir_registro_apelaciones_adl;
var
        fechas  : char;
        minutos : char;

begin
set_trace();
        fecha_desde_gbl := SEL_FECHAS_REP_APELACIONES_FR.FECHA_DESDE;

        fechas := to_char(SEL_FECHAS_REP_APELACIONES_FR.FECHA_HASTA,'dd-Mon-YYYY
')||':23:59:59';

        fecha_hasta_gbl := to_date(fechas,'dd-Mon-YYYY:HH24:MI:SS'); 
debug_log(to_char(fecha_hasta_gbl,'dd-Mon-YYYY:HH24:MI:SS'));
        
         if answer_gbl = 'S' then
         call REGISTRO_APELACIONES_FRM_PKT;
        {endif}

        if answer_gbl = 'N' then
        call informe_estadistico_apel_pkt;
        {endif}
set_notrace();
end;

    



--------------------------------------------------------------------- */
