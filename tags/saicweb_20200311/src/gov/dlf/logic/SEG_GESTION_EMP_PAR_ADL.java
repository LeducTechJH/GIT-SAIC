package gov.dlf.logic;


import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SEG_GESTION_EMP_PAR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double NGET_CMD = 0;

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;



  public DataStore SEG_GESTION_LOC_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, Parameter value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).NGET_CMD = value.getDouble ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getSEG_GESTION_LOC_RO_DSD  ( RallyApplication __app )
  {
    return ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).SEG_GESTION_LOC_RO_DSD;
  }


  /**  */
  public static void setSEG_GESTION_LOC_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).SEG_GESTION_LOC_RO_DSD = value;
  }


  /**  */
  public static void setSEG_GESTION_LOC_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).SEG_GESTION_LOC_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getNGET_CMD  ( RallyApplication __app )
  {
    return ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).NGET_CMD;
  }


  /**  */
  public static Double getNGET_CMDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).NGET_CMD );
  }


  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, double value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).NGET_CMD = value;
  }


  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, Object value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).NGET_CMD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( SEG_GESTION_EMP_PAR_ADL ) __app.getADL ( SEG_GESTION_EMP_PAR_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SEG_GESTION_EMP_PAR_ADL get ( RallyApplication __app )
  {
    SEG_GESTION_EMP_PAR_ADL adl = new SEG_GESTION_EMP_PAR_ADL ( );
    __app.register ( adl, "SEG_GESTION_EMP_PAR_ADL" );
    __app.setADL ( SEG_GESTION_EMP_PAR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SEG_GESTION_EMP_PAR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SEG_GESTION_EMP_PAR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SEG_GESTION_EMP_PAR_ADL" );
    if ( rObj != null && rObj instanceof SEG_GESTION_EMP_PAR_ADL )
    {
      this.app.setADL ( SEG_GESTION_EMP_PAR_ADL.class, ( SEG_GESTION_EMP_PAR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SEG_GESTION_EMP_PAR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SEG_GESTION_EMP_PAR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    SEL_SSN_PTRA_PKT.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( Compare.gt ( this.app.SSN_GBL, 0 ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      SEG_GESTION_LOC_RO_DSD = this.dm.create ( "SEG_GESTION_LOC_RO_DSD" );
      OPEN_ID = SEG_GESTION_LOC_RO_DSD.getId ( );
      STATUS_ID = RallyDataStoreException.getDefault ( );

      STATUS_ID  = this.dm.reset ( OPEN_ID );

      this.dm.setField ( this.dm.get ( "SEG_GESTION_LOC_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.SSN_GBL );
      this.dm.setField ( this.dm.get ( "SEG_GESTION_LOC_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
      STATUS_ID  = this.dm.retrieve ( OPEN_ID );

      STATUS_ID  = this.dm.firstRow ( OPEN_ID );

      if ( Compare.equals ( STATUS_ID, 0 ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        SEG_GESTION_EMP_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( Compare.gt ( this.app.SSN_GBL, 0 ) ) 
    {
      if ( this._condition1 )    //      if ( Compare.equals ( STATUS_ID, 0 ) ) 
      {
      }
      else
      {
        this.app.setError ( 0, 6180 );
      }
      STATUS_ID  = this.dm.dbClose ( OPEN_ID );

    }

  }
}



/* ---------------------------------------------------------------------


     
VAR
   NGET_CMD : NUMBER;
   OPEN_ID  : NUMBER;
   STATUS_ID  : NUMBER;

BEGIN
   CALL SEL_SSN_PTRA_PKT;
   IF SSN_GBL > 0 THEN
     BEGIN

        DB_OPEN(SEG_GESTION_LOC_RO_DSD,OPEN_ID,STATUS_ID);
        DB_RESET(OPEN_ID,STATUS_ID);
        SEG_GESTION_LOC_RO_DSD.SEGURO_SOCIAL_CLIENTE:=SSN_GBL;
        SEG_GESTION_LOC_RO_DSD.RMO_OFICINA:=RMO_GBL;
        DB_QUERY(OPEN_ID,STATUS_ID);

        DB_GET_FIRST(OPEN_ID,STATUS_ID);
        IF STATUS_ID = 0 THEN
          CALL SEG_GESTION_EMP_PKT;
        ELSE
          ERROR(6180);

        DB_CLOSE(OPEN_ID,STATUS_ID);
     END;       
END;
    



--------------------------------------------------------------------- */
