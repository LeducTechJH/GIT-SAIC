package gov.dlf.logic;


import gov.dlf.facade.*;
import java.util.*;

import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class VERIFICAR_PARK_VISTA_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double KEY_PRESSED = 0;



  public Date NULL_DATE = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Parameter value )
  {
    ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).NULL_DATE = value.getDate ( );
  }  

  
  /**  */
  public static void setKEY_PRESSED  ( RallyApplication __app, Parameter value )
  {
    ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).KEY_PRESSED = value.getDouble ( );
  }  
    


  /**  */
  public static Date getNULL_DATE  ( RallyApplication __app )
  {
    return ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).NULL_DATE;
  }


  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Date value )
  {
    ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).NULL_DATE = value;
  }


  /**  */
  public static void setNULL_DATE  ( RallyApplication __app, Object value )
  {
    ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).NULL_DATE = ( Date ) value;
  }




  /**  */
  public static double getKEY_PRESSED  ( RallyApplication __app )
  {
    return ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).KEY_PRESSED;
  }


  /**  */
  public static Double getKEY_PRESSEDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).KEY_PRESSED );
  }


  /**  */
  public static void setKEY_PRESSED  ( RallyApplication __app, double value )
  {
    ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).KEY_PRESSED = value;
  }


  /**  */
  public static void setKEY_PRESSED  ( RallyApplication __app, Object value )
  {
    ( ( VERIFICAR_PARK_VISTA_ADL ) __app.getADL ( VERIFICAR_PARK_VISTA_ADL.class ) ).KEY_PRESSED = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static VERIFICAR_PARK_VISTA_ADL get ( RallyApplication __app )
  {
    VERIFICAR_PARK_VISTA_ADL adl = new VERIFICAR_PARK_VISTA_ADL ( );
    __app.register ( adl, "VERIFICAR_PARK_VISTA_ADL" );
    __app.setADL ( VERIFICAR_PARK_VISTA_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    VERIFICAR_PARK_VISTA_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    VERIFICAR_PARK_VISTA_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  @Override
public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  @Override
public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "VERIFICAR_PARK_VISTA_ADL" );
    if ( rObj != null && rObj instanceof VERIFICAR_PARK_VISTA_ADL )
    {
      this.app.setADL ( VERIFICAR_PARK_VISTA_ADL.class, ( VERIFICAR_PARK_VISTA_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  @Override
protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "VERIFICAR_PARK_VISTA_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "VERIFICAR_PARK_VISTA_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NULL_DATE = TruncService.setNull ( NULL_DATE  );
    KEY_PRESSED = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    if ( ( Compare.equals ( this.app.form ( "SELECCION_FECHA_VISTA_APEL_FR" ).getDateItem ( "FECHA_VISTA" ), NULL_DATE ) ) && ( Compare.equals ( this.app.form ( "SELECCION_FECHA_VISTA_APEL_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERVICIO" ), 0 ) )  ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.callCommand ( RallyAppCommandFactory.IGNORE );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( Compare.equals ( this.app.form ( "SELECCION_FECHA_VISTA_APEL_FR" ).getDateItem ( "FECHA_VISTA" ), NULL_DATE ) ) && ( Compare.equals ( this.app.form ( "SELECCION_FECHA_VISTA_APEL_FR" ).getDoubleItem ( "SEGURO_SOCIAL_JEFE_SERVICIO" ), 0 ) )  ) 
    {
      this.app.setError ( 0, 1033 );
      this.app.browseToField ( "SELECCION_FECHA_VISTA_APEL_FR", "FECHA_VISTA" ); 
    }

  }
}



/* ---------------------------------------------------------------------


     
procedure verificar_park_vista_adl;
var
        null_date    : date;
        key_pressed  : number(9,0);


begin
set_trace();
    make_null(null_date);
    key_pressed := get_cmd();

{   if (SELECCION_FECHA_VISTA_APEL_FR.FECHA_VISTA <> null_date) and (key_pressed
= fprev)
    then
       set_current_field(SELECCION_FECHA_VISTA_APEL_FR.FECHA_VISTA);}
    {endif}
    
    if (SELECCION_FECHA_VISTA_APEL_FR.FECHA_VISTA = null_date) and (SELECCION_FE
CHA_VISTA_APEL_FR.SEGURO_SOCIAL_JEFE_SERVICIO = 0)
    then
       begin
       call_cmd('ignore');
       error(1033);
       set_current_field(SELECCION_FECHA_VISTA_APEL_FR.FECHA_VISTA);
       end;
    {endif}

set_notrace();
end;
    



--------------------------------------------------------------------- */
