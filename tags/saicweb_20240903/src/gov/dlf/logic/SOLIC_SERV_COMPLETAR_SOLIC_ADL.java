package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SOLIC_SERV_COMPLETAR_SOLIC_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------
    




  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SOLIC_SERV_COMPLETAR_SOLIC_ADL get ( RallyApplication __app )
  {
    SOLIC_SERV_COMPLETAR_SOLIC_ADL adl = new SOLIC_SERV_COMPLETAR_SOLIC_ADL ( );
    __app.register ( adl, "SOLIC_SERV_COMPLETAR_SOLIC_ADL" );
    __app.setADL ( SOLIC_SERV_COMPLETAR_SOLIC_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SOLIC_SERV_COMPLETAR_SOLIC_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SOLIC_SERV_COMPLETAR_SOLIC_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SOLIC_SERV_COMPLETAR_SOLIC_ADL" );
    if ( rObj != null && rObj instanceof SOLIC_SERV_COMPLETAR_SOLIC_ADL )
    {
      this.app.setADL ( SOLIC_SERV_COMPLETAR_SOLIC_ADL.class, ( SOLIC_SERV_COMPLETAR_SOLIC_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SOLIC_SERV_COMPLETAR_SOLIC_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SOLIC_SERV_COMPLETAR_SOLIC_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.ANSWER_GBL = " ";
    APERTURA_DE_CASO_ADL.setCOMPLETION_STATUS ( this.app, "SUCCESS" );
    this.app.RETURN_TO_FLAG_GBL = 22;
    COMPLETAR_TRANSACCION_MENU.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( Compare.equals ( APERTURA_DE_CASO_ADL.getCOMPLETION_STATUS ( this.app ), "FAILURE" ) ) 
    {
      this.app.returnTo ( "APERTURA_DE_CASO_ADL" ); if ( true ) return;
    }
    if ( Compare.equals ( this.app.ANSWER_GBL, "N" ) ) 
    {
      this.app.errorFlag = false;
      this.doReturn ( );
      return; 
    }
    Form form = this.app.getLastForm ( "SOLIC_PROGRAMA_POTENCIAL_FR" );
    if ( form != null ) form.update ( );
    this.app.returnTo ( "APERTURA_DE_CASO_ADL" ); if ( true ) return;

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SOLIC_SERV_COMPLETAR_SOLIC_ADL;

BEGIN
SET_TRACE();
        ANSWER_GBL:=' ';                                                  
        APERTURA_DE_CASO_ADL.COMPLETION_STATUS:='SUCCESS';
        RETURN_TO_FLAG_GBL:=22;
        CALL COMPLETAR_TRANSACCION_MENU;                                  
        IF APERTURA_DE_CASO_ADL.COMPLETION_STATUS='FAILURE'
           THEN RETURN_TO APERTURA_DE_CASO_ADL;
        IF ANSWER_GBL='N'                                                 
           THEN BEGIN
                  SET_FAILURE();
                  RETURN;
                END;

        RETURN_TO APERTURA_DE_CASO_ADL;

SET_NOTRACE();                                                            
END;                                                                      

    



--------------------------------------------------------------------- */
