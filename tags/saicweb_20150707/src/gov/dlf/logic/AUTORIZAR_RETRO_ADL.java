package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class AUTORIZAR_RETRO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RECLA_ID = 0;

  public double RECLA_STATUS = 0;

  public double RECLA_ID2 = 0;

  public double RECLA_STATUS2 = 0;

  public double SERV_ID = 0;

  public double SERV_STATUS = 0;

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;



  public Date FCH_EMISION = null;

  public DataStore RECLA_RETRO_DSD = null;

  public DataStore SERVICIOS2_DSD = null;

  public DataStore RECLA_RETRO_TABLE_DSD = null;

  public DataStore GENERAL_TBL_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLA_ID2  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID2 = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECLA_STATUS2  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS2 = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERV_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERV_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).FCH_EMISION = value.getDate ( );
  }  

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  
    


  /**  */
  public static Date getFCH_EMISION  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).FCH_EMISION;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Date value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).FCH_EMISION = value;
  }


  /**  */
  public static void setFCH_EMISION  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).FCH_EMISION = ( Date ) value;
  }



  /**  */
  public static DataStore getRECLA_RETRO_DSD  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_RETRO_DSD;
  }


  /**  */
  public static void setRECLA_RETRO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_RETRO_DSD = value;
  }


  /**  */
  public static void setRECLA_RETRO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_RETRO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getSERVICIOS2_DSD  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERVICIOS2_DSD;
  }


  /**  */
  public static void setSERVICIOS2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERVICIOS2_DSD = value;
  }


  /**  */
  public static void setSERVICIOS2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERVICIOS2_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRECLA_RETRO_TABLE_DSD  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_RETRO_TABLE_DSD;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_RETRO_TABLE_DSD = value;
  }


  /**  */
  public static void setRECLA_RETRO_TABLE_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_RETRO_TABLE_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getGENERAL_TBL_RO_DSD  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).GENERAL_TBL_RO_DSD;
  }


  /**  */
  public static void setGENERAL_TBL_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).GENERAL_TBL_RO_DSD = value;
  }


  /**  */
  public static void setGENERAL_TBL_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).GENERAL_TBL_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRECLA_ID  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID;
  }


  /**  */
  public static Double getRECLA_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID );
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, double value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID = value;
  }


  /**  */
  public static void setRECLA_ID  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLA_STATUS  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS;
  }


  /**  */
  public static Double getRECLA_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS );
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, double value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS = value;
  }


  /**  */
  public static void setRECLA_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLA_ID2  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID2;
  }


  /**  */
  public static Double getRECLA_ID2Double ( RallyApplication __app )
  {
    return new Double ( ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID2 );
  }


  /**  */
  public static void setRECLA_ID2  ( RallyApplication __app, double value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID2 = value;
  }


  /**  */
  public static void setRECLA_ID2  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_ID2 = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECLA_STATUS2  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS2;
  }


  /**  */
  public static Double getRECLA_STATUS2Double ( RallyApplication __app )
  {
    return new Double ( ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS2 );
  }


  /**  */
  public static void setRECLA_STATUS2  ( RallyApplication __app, double value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS2 = value;
  }


  /**  */
  public static void setRECLA_STATUS2  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).RECLA_STATUS2 = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERV_ID  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_ID;
  }


  /**  */
  public static Double getSERV_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_ID );
  }


  /**  */
  public static void setSERV_ID  ( RallyApplication __app, double value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_ID = value;
  }


  /**  */
  public static void setSERV_ID  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERV_STATUS  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_STATUS;
  }


  /**  */
  public static Double getSERV_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_STATUS );
  }


  /**  */
  public static void setSERV_STATUS  ( RallyApplication __app, double value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_STATUS = value;
  }


  /**  */
  public static void setSERV_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).SERV_STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( AUTORIZAR_RETRO_ADL ) __app.getADL ( AUTORIZAR_RETRO_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static AUTORIZAR_RETRO_ADL get ( RallyApplication __app )
  {
    AUTORIZAR_RETRO_ADL adl = new AUTORIZAR_RETRO_ADL ( );
    __app.register ( adl, "AUTORIZAR_RETRO_ADL" );
    __app.setADL ( AUTORIZAR_RETRO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    AUTORIZAR_RETRO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    AUTORIZAR_RETRO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "AUTORIZAR_RETRO_ADL" );
    if ( rObj != null && rObj instanceof AUTORIZAR_RETRO_ADL )
    {
      this.app.setADL ( AUTORIZAR_RETRO_ADL.class, ( AUTORIZAR_RETRO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "AUTORIZAR_RETRO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "AUTORIZAR_RETRO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.ANSWER_GBL = "S";
    RECLA_RETRO_DSD = this.dm.create ( "RECLA_RETRO_DSD" );
    RECLA_ID2 = RECLA_RETRO_DSD.getId ( );
    RECLA_STATUS2 = RallyDataStoreException.getDefault ( );
    SERVICIOS2_DSD = this.dm.create ( "SERVICIOS2_DSD" );
    SERV_ID = SERVICIOS2_DSD.getId ( );
    SERV_STATUS = RallyDataStoreException.getDefault ( );
    RECLA_RETRO_TABLE_DSD = this.dm.create ( "RECLA_RETRO_TABLE_DSD" );
    RECLA_ID = RECLA_RETRO_TABLE_DSD.getId ( );
    RECLA_STATUS = RallyDataStoreException.getDefault ( );

    RECLA_STATUS2  = this.dm.reset ( RECLA_ID2 );

    SERV_STATUS  = this.dm.reset ( SERV_ID );

    RECLA_STATUS  = this.dm.reset ( RECLA_ID );

    GENERAL_TBL_RO_DSD = this.dm.create ( "GENERAL_TBL_RO_DSD" );
    OPEN_ID = GENERAL_TBL_RO_DSD.getId ( );
    STATUS_ID = RallyDataStoreException.getDefault ( );

    STATUS_ID  = this.dm.reset ( OPEN_ID );

    this.dm.setField ( this.dm.get ( "GENERAL_TBL_RO_DSD" ), "COD_GENERAL", "DATE" );
    if ( Compare.equals ( this.app.COD_SERV_GBL, "PAN" ) ) 
    {
      this.dm.setField ( this.dm.get ( "GENERAL_TBL_RO_DSD" ), "COD_ID", "EPAN" );
    }
    else if ( Compare.equals ( RallyStringService.subString ( this.app.COD_SERV_GBL, 0, 2 ), "AE" )  )
    {
      this.dm.setField ( this.dm.get ( "GENERAL_TBL_RO_DSD" ), "COD_ID", "EAE" );
    }

    STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_ID  = this.dm.retrieve ( OPEN_ID );

    STATUS_ID  = this.dm.firstRow ( OPEN_ID );

    if ( Compare.equals ( STATUS_ID, 0 ) ) 
    {
      FCH_EMISION = RallySpanishDatesParser.parseDateString ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_RO_DSD" ), "DSC_CORTA" ), 0, 2 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_RO_DSD" ), "DSC_CORTA" ), 2, 3 ) + "-" + RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "GENERAL_TBL_RO_DSD" ), "DSC_CORTA" ), 5, 4 ) );
    }
    else
    {
      FCH_EMISION = this.app.SYSTEM_DATE;
    }
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_IDENTIFICADO", this.app.FECHA_IDENTIFICADO_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "ACCION", this.app.ACCION_GBL );
    this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECLA_STATUS  = this.dm.limitQueryFromBuffer ( RECLA_ID );
    RECLA_STATUS  = this.dm.retrieve ( RECLA_ID );

    RECLA_STATUS  = this.dm.firstRow ( RECLA_ID );

    if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "NOPROC10" ) ) && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "NOGESCOB" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "PENDCOBR" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "SALDRETR" ) )  && ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "NOPRODT" ) )  && ( Compare.gt ( this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "VLR_BALANCE" ), 0 ) )  ) 
    {
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO", this.app.SYSTEM_DATE );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS", "AUTORIZA" );
    }
    else
    {
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS_AUTORIZACION", "AUTO" );
      this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "FECHA_AUTORIZADO", this.app.SYSTEM_DATE );
      if ( ( ! Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "STATUS" ), "SALDRETR" ) ) && ( Compare.gt ( this.dm.getFieldDouble ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "VLR_BALANCE" ), 0 ) )  ) 
      {
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "VLR_BALANCE", 0 );
      }
    }
    if ( ( Compare.equals ( this.app.ACCION_GBL, "RREC" ) ) || ( Compare.equals ( this.app.ACCION_GBL, "RRET" ) ) ) 
    {
      if ( Compare.equals ( this.app.ACCION_GBL, "RREC" ) ) 
      {
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "FECHA_IDENTIFICADO", this.app.FECHA_RECLA_ORIG_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "ACCION", "RECL" );

        RECLA_STATUS2  = this.dm.limitQueryFromBuffer ( RECLA_ID2 );
        RECLA_STATUS2  = this.dm.retrieve ( RECLA_ID2 );

        RECLA_STATUS2  = this.dm.firstRow ( RECLA_ID2 );

        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "STATUS", "REDETERM" );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "VLR_BALANCE", 0 );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "VLR_BALANCE", this.app.VLR_BENEFICIO_MAX_GBL );

        RECLA_STATUS2  = this.dm.update ( RECLA_ID2 );

      }
      else
      {
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
        this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "ACCION", "RETR" );

        RECLA_STATUS2  = this.dm.limitQueryFromBuffer ( RECLA_ID2 );
        RECLA_STATUS2  = this.dm.retrieve ( RECLA_ID2 );

        RECLA_STATUS2  = this.dm.firstRow ( RECLA_ID2 );

        while ( Compare.equals ( RECLA_STATUS2, 0 )  )
        {
          //***** START MODS BY J. OLMEDA 5/4/2009 *****
          // remove date comparison
          //if ( ( Compare.ge ( RallyStringService.subString ( StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "RECLA_RETRO_DSD" ), "FECHA_IDENTIFICADO" ) ), 3, 8 ), RallyStringService.subString ( StringService.toStringValue  ( FCH_EMISION ), 3, 8 ) ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_DSD" ), "STATUS" ), "AUTORIZA" ) )  ) 
          if ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RECLA_RETRO_DSD" ), "STATUS" ), "AUTORIZA" ) )
          //***** END MODS BY J. OLMEDA 5/4/2009 *****
          {
            this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "STATUS", "REDETERM" );
            this.dm.setField ( this.dm.get ( "RECLA_RETRO_TABLE_DSD" ), "VLR_BALANCE", this.app.VLR_BENEFICIO_MAX_GBL );
            this.dm.setField ( this.dm.get ( "RECLA_RETRO_DSD" ), "VLR_BALANCE", 0 );

            RECLA_STATUS2  = this.dm.update ( RECLA_ID2 );

          }

          RECLA_STATUS2  = this.dm.nextRow ( RECLA_ID2 );

        }
      }
    }
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    SERV_STATUS  = this.dm.limitQueryFromBuffer ( SERV_ID );
    SERV_STATUS  = this.dm.retrieve ( SERV_ID );

    SERV_STATUS  = this.dm.firstRow ( SERV_ID );

    if ( ( Compare.equals ( this.app.ACCION_GBL, "RECL" ) ) || ( Compare.equals ( this.app.ACCION_GBL, "RREC" ) ) ) 
    {
      this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "RECLA_RETRO_FLG", "C" );
    }
    else
    {
      this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "RECLA_RETRO_FLG", "R" );
    }

    SERV_STATUS  = this.dm.update ( SERV_ID );

    if ( ! Compare.equals ( SERV_STATUS, 0 ) ) 
    {
      this.app.setError ( 0, SERV_STATUS );
    }

    RECLA_STATUS  = this.dm.update ( RECLA_ID );

    RECLA_ID  = this.dm.dbCommit ( );

    RECLA_ID2  = this.dm.dbCommit ( );

    SERV_STATUS  = this.dm.dbCommit ( );
    RECLA_STATUS  = this.dm.dbClose ( RECLA_ID );

    RECLA_STATUS2  = this.dm.dbClose ( RECLA_ID2 );

    SERV_STATUS  = this.dm.dbClose ( SERV_ID );

    STATUS_ID  = this.dm.dbClose ( OPEN_ID );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE AUTORIZAR_RETRO_ADL;

var
        recla_id     :  number(9,0);
        recla_status :  number (9,0);
        
        recla_id2    :  number(9,0);
        recla_status2 : number(9,0);

        serv_id  : number(9,0);
        serv_status : number(9,0);
        FCH_EMISION: DATE;
        OPEN_ID :number;
        status_id: number;

SET_TRACE();

BEGIN

ANSWER_GBL := 'S';
DB_OPEN(RECLA_RETRO_DSD,RECLA_ID2,RECLA_STATUS2);
db_open(SERVICIOS2_DSD,serv_id,serv_status);
db_open(recla_retro_table_dsd,recla_id,recla_status);            
DB_RESET(RECLA_ID2,RECLA_STATUS2);
db_reset(serv_id,serv_status);
db_reset(recla_id,recla_status);
DB_open(GENERAL_TBL_RO_DSD,OPEN_ID, STATUS_ID);
DB_RESET(OPEN_ID, STATUS_ID);
GENERAL_TBL_RO_DSD.COD_GENERAL := 'DATE';
IF COD_SERV_GBL = 'PAN' THEN
        GENERAL_TBL_RO_DSD.COD_ID := 'EPAN';
ELSE
        IF SUBSTR(COD_SERV_GBL,0,2) = 'AE' THEN
                GENERAL_TBL_RO_DSD.COD_ID := 'EAE';
DB_QUERY(OPEN_ID, STATUS_ID);
DB_GET_FIRST(OPEN_ID, STATUS_ID);
IF STATUS_ID = 0 THEN
        FCH_EMISION := TO_DATE(SUBSTR(GENERAL_TBL_RO_DSD.DSC_CORTA,0,2) || '-' |
|
                                SUBSTR(GENERAL_TBL_RO_DSD.DSC_CORTA,2,3) || '-'|
|
                                SUBSTR(GENERAL_TBL_RO_DSD.DSC_CORTA,5,4));
ELSE
        FCH_EMISION :=  SYSTEM_DATE;


            
recla_retro_table_dsd.SEGURO_SOCIAL_JEFE_FAM    := ss_jefe_familia_gbl;
recla_retro_table_dsd.SEGURO_SOCIAL_JEFE_SERV   := ss_jefe_servicio_gbl;
recla_retro_table_dsd.COD_SERVICIO              := cod_serv_gbl;
recla_retro_table_dsd.FECHA_IDENTIFICADO        := fecha_identificado_gbl;
recla_retro_table_dsd.accion                    := accion_gbl;            
RECLA_RETRO_TABLE_DSD.RMO_OFICINA               := RMO_GBL;
db_query(recla_id,recla_status);
db_get_first(recla_id,recla_status);


if (RECLA_RETRO_TABLE_DSD.STATUS <> 'NOPROC10')
  AND (RECLA_RETRO_TABLE_DSD.STATUS <> 'NOGESCOB')
  AND (RECLA_RETRO_TABLE_DSD.STATUS <> 'PENDCOBR')
  AND (RECLA_RETRO_TABLE_DSD.STATUS <> 'SALDRETR')
  AND (RECLA_RETRO_TABLE_DSD.STATUS <> 'NOPRODT')
  AND (RECLA_RETRO_TABLE_DSD.VLR_BALANCE > 0)
        THEN
            BEGIN 
                RECLA_RETRO_TABLE_DSD.status_autorizacion       := 'AUTO';
                RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO := SYSTEM_DATE;
                RECLA_RETRO_TABLE_DSD.status := 'AUTORIZA';
        
            END;
ELSE
        BEGIN
                RECLA_RETRO_TABLE_DSD.status_autorizacion       := 'AUTO';
                RECLA_RETRO_TABLE_DSD.FECHA_AUTORIZADO := SYSTEM_DATE;
                IF (RECLA_RETRO_TABLE_DSD.STATUS <> 'SALDRETR')
                  AND (RECLA_RETRO_TABLE_DSD.VLR_BALANCE > 0) THEN
                        RECLA_RETRO_TABLE_DSD.VLR_BALANCE := 0;
        END;
if (accion_gbl = 'RREC') OR (ACCION_GBL = 'RRET')
THEN
   BEGIN
        IF ACCION_GBL = 'RREC'
        THEN
          BEGIN
                recla_retro_dsd.SEGURO_SOCIAL_JEFE_FAM  := ss_jefe_familia_gbl;
                recla_retro_dsd.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
                recla_retro_dsd.COD_SERVICIO            := cod_serv_gbl;
                RECLA_RETRO_DSD.RMO_OFICINA             := RMO_GBL;
                recla_retro_dsd.FECHA_IDENTIFICADO      := FECHA_RECLA_ORIG_GBL;
                recla_retro_dsd.accion  := 'RECL';
                db_query(recla_id2,recla_status2);
                db_get_first(recla_id2,recla_status2);
                RECLA_RETRO_DSD.STATUS := 'REDETERM';
                RECLA_RETRO_DSD.VLR_BALANCE := 0;
                RECLA_RETRO_TABLE_DSD.VLR_BALANCE := VLR_BENEFICIO_MAX_GBL;
                DB_UPDATE(RECLA_ID2,RECLA_STATUS2);
          END;
        ELSE
          BEGIN
                recla_retro_dsd.SEGURO_SOCIAL_JEFE_FAM  := ss_jefe_familia_gbl;
                recla_retro_dsd.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
                recla_retro_dsd.COD_SERVICIO            := cod_serv_gbl;
                RECLA_RETRO_DSD.RMO_OFICINA             := RMO_GBL;
                recla_retro_dsd.accion  := 'RETR';
                db_query(recla_id2,recla_status2);
                db_get_first(recla_id2,recla_status2);
                WHILE recla_status2 = 0 DO
                BEGIN
                        IF (Substr(to_char(recla_retro_dsd.FECHA_IDENTIFICADO),3
,8) 
                        >= substr(to_char(fch_emision),3,8)) AND 
                        (RECLA_RETRO_DSD.STATUS = 'AUTORIZA') THEN              

                        BEGIN
                                RECLA_RETRO_DSD.STATUS := 'REDETERM';
                                RECLA_RETRO_TABLE_DSD.VLR_BALANCE := VLR_BENEFIC
IO_MAX_GBL;
                                RECLA_RETRO_DSD.VLR_BALANCE := 0;
                                DB_UPDATE(RECLA_ID2,RECLA_STATUS2);
                        END;
                        DB_GET_NEXT(RECLA_ID2,RECLA_STATUS2);
                END;
         END;
        {ENDIF}    
   END;

{poner flag de recla o retro en tabla de servicio}

        SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
        SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
        SERVICIOS2_DSD.COD_SERVICIO := cod_serv_gbl;
        SERVICIOS2_DSD.RMO_OFICINA := RMO_GBL;
        db_query(serv_id,serv_status);
        db_get_first(serv_id,serv_status);
        if (accion_gbl = 'RECL') or (accion_gbl = 'RREC')
        then
                SERVICIOS2_DSD.RECLA_RETRO_FLG := 'C';
        else
                SERVICIOS2_DSD.RECLA_RETRO_FLG := 'R';
        
        db_update(serv_id,serv_status);
        IF SERV_STATUS <> 0 
        THEN ERROR(SERV_STATUS);
db_update(recla_id,recla_status);
db_commit(recla_id);              
DB_COMMIT(RECLA_ID2);
db_commit(serv_status);
db_close(recla_id,recla_status);
DB_CLOSE(RECLA_ID2,RECLA_STATUS2);
db_close(serv_id,serv_status);
db_close(open_id,status_id);
SET_NOTRACE();            
END;


    



--------------------------------------------------------------------- */
