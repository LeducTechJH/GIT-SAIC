package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class GEN_PAR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------



  public String TEMP = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setTEMP  ( RallyApplication __app, Parameter value )
  {
    ( ( GEN_PAR_ADL ) __app.getADL ( GEN_PAR_ADL.class ) ).TEMP = value.getString ( );
  }  
    


  /**  */
  public static String getTEMP  ( RallyApplication __app )
  {
    return ( ( GEN_PAR_ADL ) __app.getADL ( GEN_PAR_ADL.class ) ).TEMP;
  }


  /**  */
  public static void setTEMP  ( RallyApplication __app, String value )
  {
    ( ( GEN_PAR_ADL ) __app.getADL ( GEN_PAR_ADL.class ) ).TEMP = value;
  }


  /**  */
  public static void setTEMP  ( RallyApplication __app, Object value )
  {
    ( ( GEN_PAR_ADL ) __app.getADL ( GEN_PAR_ADL.class ) ).TEMP = ( String ) value;
  }





  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static GEN_PAR_ADL get ( RallyApplication __app )
  {
    GEN_PAR_ADL adl = new GEN_PAR_ADL ( );
    __app.register ( adl, "GEN_PAR_ADL" );
    __app.setADL ( GEN_PAR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    GEN_PAR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    GEN_PAR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "GEN_PAR_ADL" );
    if ( rObj != null && rObj instanceof GEN_PAR_ADL )
    {
      this.app.setADL ( GEN_PAR_ADL.class, ( GEN_PAR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "GEN_PAR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "GEN_PAR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", ""  );
    if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_PARENTESCO_FAM" ) ) 
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "PARF"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PARENTESCO_FAM" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_PARENTESCO_FAM", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_PARENTESCO_FAM", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_PROBLEMA" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "PROB"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PROBLEMA" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_PROBLEMA", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_PROBLEMA", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_OCUPACION" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "CLLA"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_OCUPACION" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_OCUPACION", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_OCUPACION", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_INSTITUCION" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "INST"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_INSTITUCION" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_INSTITUCION", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_INSTITUCION", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_ESCOLARIDAD" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "GRES"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_ESCOLARIDAD" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_ESCOLARIDAD", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_ESCOLARIDAD", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_CIUDADANIA" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "CIUD"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_CIUDADANIA" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_CIUDADANIA", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_CIUDADANIA", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_INCAPACIDAD_PRIMARIA" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "INCA"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_INCAPACIDAD_PRIMARIA" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_INCAPACIDAD_PRIMARIA", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_INCAPACIDAD_PRIMARIA", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_INCAPACIDAD_SECUNDARIA" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "PRES"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_INCAPACIDAD_SECUNDARIA" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_INCAPACIDAD_SECUNDARIA", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_INCAPACIDAD_SECUNDARIA", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_ESTADO_CIVIL" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "ESCI"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_ESTADO_CIVIL" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_ESTADO_CIVIL", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_ESTADO_CIVIL", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_ESTATUS_EMPLEO" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "STEM"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_ESTATUS_EMPLEO" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_ESTATUS_EMPLEO", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_ESTATUS_EMPLEO", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "COD_PASOS" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "PADE"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "COD_PASOS" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_PASOS", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "COD_PASOS", TEMP  );
    }
    else if ( this.app.isCurrentField ( "INFOR_BIO_FRM", "FACT_ELEGIBILIDAD_AEC" )  )
    {
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "PARENTESCO_VAR", "FAEL"  );
      TEMP = this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "FACT_ELEGIBILIDAD_AEC" );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "FACT_ELEGIBILIDAD_AEC", ""  );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "FACT_ELEGIBILIDAD_AEC", TEMP  );
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE GEN_PAR_ADL;

VAR
        TEMP:   CHAR(4);
BEGIN
SET_TRACE();
    INFOR_BIO_FRM.PARENTESCO_VAR := '';
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_PARENTESCO_FAM)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'PARF';
       TEMP:=INFOR_BIO_FRM.COD_PARENTESCO_FAM;
       INFOR_BIO_FRM.COD_PARENTESCO_FAM:='';
       INFOR_BIO_FRM.COD_PARENTESCO_FAM:=TEMP;
        END;
    ELSE
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_PROBLEMA)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'PROB';
       TEMP:=INFOR_BIO_FRM.COD_PROBLEMA;
       INFOR_BIO_FRM.COD_PROBLEMA:='';
       INFOR_BIO_FRM.COD_PROBLEMA:=TEMP;
        END;
    ELSE
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_OCUPACION)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'CLLA';
       TEMP:=INFOR_BIO_FRM.COD_OCUPACION;
       INFOR_BIO_FRM.COD_OCUPACION:='';
       INFOR_BIO_FRM.COD_OCUPACION:=TEMP;
        END;
    ELSE
   IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_INSTITUCION)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'INST';
       TEMP:=INFOR_BIO_FRM.COD_INSTITUCION;
       INFOR_BIO_FRM.COD_INSTITUCION:='';
       INFOR_BIO_FRM.COD_INSTITUCION:=TEMP;
        END;
    ELSE 
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_ESCOLARIDAD)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'GRES';
       TEMP:=INFOR_BIO_FRM.COD_ESCOLARIDAD;
       INFOR_BIO_FRM.COD_ESCOLARIDAD:='';
       INFOR_BIO_FRM.COD_ESCOLARIDAD:=TEMP;
        END;
    ELSE
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_CIUDADANIA)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'CIUD';
       TEMP:=INFOR_BIO_FRM.COD_CIUDADANIA;
       INFOR_BIO_FRM.COD_CIUDADANIA:='';
       INFOR_BIO_FRM.COD_CIUDADANIA:=TEMP;
        END;
    ELSE
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_INCAPACIDAD_PRIMARIA)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'INCA';
       TEMP:=INFOR_BIO_FRM.COD_INCAPACIDAD_PRIMARIA;
       INFOR_BIO_FRM.COD_INCAPACIDAD_PRIMARIA:='';
       INFOR_BIO_FRM.COD_INCAPACIDAD_PRIMARIA:=TEMP;
        END;
    ELSE
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_INCAPACIDAD_SECUNDARIA)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'PRES';
       TEMP:=INFOR_BIO_FRM.COD_INCAPACIDAD_SECUNDARIA;
       INFOR_BIO_FRM.COD_INCAPACIDAD_SECUNDARIA:='';
       INFOR_BIO_FRM.COD_INCAPACIDAD_SECUNDARIA:=TEMP;
        END;
     ELSE
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_ESTADO_CIVIL)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'ESCI';
       TEMP:=INFOR_BIO_FRM.COD_ESTADO_CIVIL;
       INFOR_BIO_FRM.COD_ESTADO_CIVIL:='';
       INFOR_BIO_FRM.COD_ESTADO_CIVIL:=TEMP;
        END;
     ELSE
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_ESTATUS_EMPLEO)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'STEM';
       TEMP:=INFOR_BIO_FRM.COD_ESTATUS_EMPLEO;
       INFOR_BIO_FRM.COD_ESTATUS_EMPLEO:='';
       INFOR_BIO_FRM.COD_ESTATUS_EMPLEO:=TEMP;
        END;
    ELSE
    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.COD_PASOS)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'PADE';
       TEMP:=INFOR_BIO_FRM.COD_PASOS;
       INFOR_BIO_FRM.COD_PASOS:='';
       INFOR_BIO_FRM.COD_PASOS:=TEMP;
        END;
     ELSE

    IF IS_CURRENT_FIELD(INFOR_BIO_FRM.FACT_ELEGIBILIDAD_AEC)
    THEN BEGIN
       INFOR_BIO_FRM.PARENTESCO_VAR := 'FAEL';
       TEMP:=INFOR_BIO_FRM.FACT_ELEGIBILIDAD_AEC;
       INFOR_BIO_FRM.FACT_ELEGIBILIDAD_AEC:='';
       INFOR_BIO_FRM.FACT_ELEGIBILIDAD_AEC:=TEMP;
        END;

DEBUG_LOG('PARENTESCO VAR ' || INFOR_BIO_FRM.PARENTESCO_VAR);
SET_NOTRACE();
END;






    



--------------------------------------------------------------------- */
