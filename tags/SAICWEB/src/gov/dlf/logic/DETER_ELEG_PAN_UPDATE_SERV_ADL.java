package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class DETER_ELEG_PAN_UPDATE_SERV_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double SERVICIOS_ID = 0;

  public double CLIENTES_ID = 0;

  public double CLIENTES_STATUS = 0;

  public double SERVICIOS_STATUS = 0;



  public DataStore CLIENTES2_DSD = null;

  public DataStore SERVICIOS2_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setSERVICIOS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCLIENTES_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setCLIENTES_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setSERVICIOS_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_STATUS = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getCLIENTES2_DSD  ( RallyApplication __app )
  {
    return ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES2_DSD;
  }


  /**  */
  public static void setCLIENTES2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES2_DSD = value;
  }


  /**  */
  public static void setCLIENTES2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES2_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getSERVICIOS2_DSD  ( RallyApplication __app )
  {
    return ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS2_DSD;
  }


  /**  */
  public static void setSERVICIOS2_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS2_DSD = value;
  }


  /**  */
  public static void setSERVICIOS2_DSD  ( RallyApplication __app, Object value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS2_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getSERVICIOS_ID  ( RallyApplication __app )
  {
    return ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_ID;
  }


  /**  */
  public static Double getSERVICIOS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_ID );
  }


  /**  */
  public static void setSERVICIOS_ID  ( RallyApplication __app, double value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_ID = value;
  }


  /**  */
  public static void setSERVICIOS_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCLIENTES_ID  ( RallyApplication __app )
  {
    return ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_ID;
  }


  /**  */
  public static Double getCLIENTES_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_ID );
  }


  /**  */
  public static void setCLIENTES_ID  ( RallyApplication __app, double value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_ID = value;
  }


  /**  */
  public static void setCLIENTES_ID  ( RallyApplication __app, Object value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCLIENTES_STATUS  ( RallyApplication __app )
  {
    return ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_STATUS;
  }


  /**  */
  public static Double getCLIENTES_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_STATUS );
  }


  /**  */
  public static void setCLIENTES_STATUS  ( RallyApplication __app, double value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_STATUS = value;
  }


  /**  */
  public static void setCLIENTES_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).CLIENTES_STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSERVICIOS_STATUS  ( RallyApplication __app )
  {
    return ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_STATUS;
  }


  /**  */
  public static Double getSERVICIOS_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_STATUS );
  }


  /**  */
  public static void setSERVICIOS_STATUS  ( RallyApplication __app, double value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_STATUS = value;
  }


  /**  */
  public static void setSERVICIOS_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) __app.getADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class ) ).SERVICIOS_STATUS = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static DETER_ELEG_PAN_UPDATE_SERV_ADL get ( RallyApplication __app )
  {
    DETER_ELEG_PAN_UPDATE_SERV_ADL adl = new DETER_ELEG_PAN_UPDATE_SERV_ADL ( );
    __app.register ( adl, "DETER_ELEG_PAN_UPDATE_SERV_ADL" );
    __app.setADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    DETER_ELEG_PAN_UPDATE_SERV_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    DETER_ELEG_PAN_UPDATE_SERV_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "DETER_ELEG_PAN_UPDATE_SERV_ADL" );
    if ( rObj != null && rObj instanceof DETER_ELEG_PAN_UPDATE_SERV_ADL )
    {
      this.app.setADL ( DETER_ELEG_PAN_UPDATE_SERV_ADL.class, ( DETER_ELEG_PAN_UPDATE_SERV_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "DETER_ELEG_PAN_UPDATE_SERV_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "DETER_ELEG_PAN_UPDATE_SERV_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    CLIENTES2_DSD = this.dm.create ( "CLIENTES2_DSD" );
    CLIENTES_ID = CLIENTES2_DSD.getId ( );
    CLIENTES_STATUS = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( CLIENTES_STATUS, 0 ) ) 
    {
      this.app.setError ( 0, CLIENTES_STATUS );
      this.doReturn ( );
      return; 
    }
    SERVICIOS2_DSD = this.dm.create ( "SERVICIOS2_DSD" );
    SERVICIOS_ID = SERVICIOS2_DSD.getId ( );
    SERVICIOS_STATUS = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( SERVICIOS_STATUS, 0 ) ) 
    {
      this.app.setError ( 1, SERVICIOS_STATUS );
      this.doReturn ( );
      return; 
    }
    if ( Compare.equals ( this.app.AUTORIZADA_GBL, "S" ) ) 
    {
      SERVICIOS_STATUS  = this.dm.reset ( SERVICIOS_ID );

      this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
      this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
      this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
      this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      SERVICIOS_STATUS  = this.dm.limitQueryFromBuffer ( SERVICIOS_ID );
      SERVICIOS_STATUS  = this.dm.retrieve ( SERVICIOS_ID );

      SERVICIOS_STATUS  = this.dm.firstRow ( SERVICIOS_ID );

      if ( ( Compare.lt ( DETERMINAR_ELEGIBILIDAD_PAN_2.getSERVICIO_BENEFICIO ( this.app ), this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS2_DSD" ), "VLR_BENEFICIO_ANTERIOR" ) ) ) && ( Compare.gt ( DETERMINAR_ELEGIBILIDAD_PAN_2.getSERVICIO_BENEFICIO ( this.app ), 0 ) )  && ( ! Compare.equals ( this.app.RECERT_TIPO_GBL, "P" ) )  && ( ! Compare.equals ( this.app.RECERT_TIPO_GBL, "S" ) )  && ( ! Compare.equals ( this.app.RECERT_TIPO_GBL, "D" ) )  && ( ! Compare.equals ( this.app.RECERT_TIPO_GBL, "A" ) )  && ( Compare.equals ( this.app.RUTINA_GBL, "MC" ) )  ) 
      {
        DETERMINAR_ELEGIBILIDAD_PAN_2.setSERVICIO_STATUS ( this.app, "PENDREVI" );
        this.app.FLAG_UPD_GBL = "S";

        CLIENTES_STATUS  = this.dm.reset ( CLIENTES_ID );

        this.dm.setField ( this.dm.get ( "CLIENTES2_DSD" ), "SEGURO_SOCIAL_JEFE_FAMILIA", this.app.SS_JEFE_GBL );
        this.dm.setField ( this.dm.get ( "CLIENTES2_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.SS_SERV_GBL );
        this.dm.setField ( this.dm.get ( "CLIENTES2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

        CLIENTES_STATUS  = this.dm.limitQueryFromBuffer ( CLIENTES_ID );
        CLIENTES_STATUS  = this.dm.retrieve ( CLIENTES_ID );

        CLIENTES_STATUS  = this.dm.firstRow ( CLIENTES_ID );

        if ( Compare.equals ( CLIENTES_STATUS, 0 ) ) 
        {
          this.app.FLAG_UPD_GBL = "N";
          this.dm.setField ( this.dm.get ( "CLIENTES2_DSD" ), "COD_STATUS", "PENDREVI" );
          this.dm.setField ( this.dm.get ( "CLIENTES2_DSD" ), "FCH_STATUS", TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  );

          CLIENTES_STATUS  = this.dm.update ( CLIENTES_ID );

          CLIENTES_ID  = this.dm.dbCommit ( );
        }
      }
    }

    SERVICIOS_STATUS  = this.dm.reset ( SERVICIOS_ID );

    if ( ! Compare.equals ( SERVICIOS_STATUS, 0 ) ) 
    {
      this.app.setError ( 2, SERVICIOS_STATUS );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_GBL );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_SERV_GBL );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_SERVICIO", this.app.COD_SERV_GBL );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    SERVICIOS_STATUS  = this.dm.limitQueryFromBuffer ( SERVICIOS_ID );
    SERVICIOS_STATUS  = this.dm.retrieve ( SERVICIOS_ID );

    if ( ! Compare.equals ( SERVICIOS_STATUS, 0 ) ) 
    {
      this.app.setError ( 3, SERVICIOS_STATUS );
      this.doReturn ( );
      return; 
    }

    SERVICIOS_STATUS  = this.dm.firstRow ( SERVICIOS_ID );

    if ( ! Compare.equals ( SERVICIOS_STATUS, 0 ) ) 
    {
      this.app.setError ( 4, SERVICIOS_STATUS );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO", DETERMINAR_ELEGIBILIDAD_PAN_2.getSERVICIO_STATUS ( this.app ) );
    if ( Compare.equals ( DETERMINAR_ELEGIBILIDAD_PAN_2.getSERVICIO_STATUS ( this.app ), "ACTIVO" ) ) 
    {
      this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "VLR_BENEFICIO_ANTERIOR", DETERMINAR_ELEGIBILIDAD_PAN_2.getSERVICIO_BENEFICIO ( this.app ) );
    }
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "BENEFICIO_PRO",DETERMINAR_ELEGIBILIDAD_PAN_2.getBENEFICIO_PRORRATEADO(this.app));
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "VLR_BENEFICIOS", DETERMINAR_ELEGIBILIDAD_PAN_2.getSERVICIO_BENEFICIO ( this.app ) );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "FCH_DECISION", TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "FCH_TRANS", TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  );
    this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "ID_TECNICO_DETER_ELEGIBILIDAD", this.app.ID_TECNICO_GBL );
    this.app.form ( "SERV_FAM_FRM" ).setItem ( "COD_STATUS_SERVICIO", this.dm.getFieldString ( this.dm.get ( "SERVICIOS2_DSD" ), "COD_STATUS_SERVICIO" )  );
    this.app.form ( "SERV_FAM_FRM" ).setItem ( "VLR_BENEFICIO", this.dm.getFieldDouble ( this.dm.get ( "SERVICIOS2_DSD" ), "VLR_BENEFICIOS" )  );
    this.app.form ( "SERV_FAM_FRM" ).setItem ( "FCH_DECISION", this.dm.getFieldDate ( this.dm.get ( "SERVICIOS2_DSD" ), "FCH_DECISION" )  );
    if ( ( Compare.equals ( RallyStringService.subString ( DETERMINAR_ELEGIBILIDAD_PAN_2.getSERVICIO_STATUS ( this.app ), 0, 4 ), "CERR" ) ) || ( Compare.equals ( RallyStringService.subString ( DETERMINAR_ELEGIBILIDAD_PAN_2.getSERVICIO_STATUS ( this.app ), 0, 4 ), "RECH" ) ) ) 
    {
      this.dm.setField ( this.dm.get ( "SERVICIOS2_DSD" ), "FCH_CERRADO", TruncService.trunc ( this.app.SYSTEM_DATE, "DDD" )  );
    }

    SERVICIOS_STATUS  = this.dm.update ( SERVICIOS_ID );

    if ( ! Compare.equals ( SERVICIOS_STATUS, 0 ) ) 
    {
      this.app.setError ( 5, SERVICIOS_STATUS );
      this.doReturn ( );
      return; 
    }

    SERVICIOS_STATUS  = this.dm.dbCommit ( );
    if ( ! Compare.equals ( SERVICIOS_STATUS, 0 ) ) 
    {
      this.app.setError ( 6, SERVICIOS_STATUS );
      this.doReturn ( );
      return; 
    }
    SERVICIOS_STATUS  = this.dm.dbClose ( SERVICIOS_ID );

    if ( ! Compare.equals ( SERVICIOS_STATUS, 0 ) ) 
    {
      this.app.setError ( 7, SERVICIOS_STATUS );
      this.doReturn ( );
      return; 
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE DETER_ELEG_PAN_UPDATE_SERV_ADL;

VAR

        SERVICIOS_ID    : NUMBER(9,0);
        CLIENTES_ID     : NUMBER(9,0);
        CLIENTES_STATUS : NUMBER(9,0);
        SERVICIOS_STATUS: NUMBER(9,0);
BEGIN
SET_TRACE();
        DB_OPEN(CLIENTES2_DSD,CLIENTES_ID,CLIENTES_STATUS);
        IF CLIENTES_STATUS <> 0
         THEN BEGIN
                ERROR(CLIENTES_STATUS);
         RETURN;
        END;

         DB_OPEN(SERVICIOS2_DSD,SERVICIOS_ID,SERVICIOS_STATUS);
        IF SERVICIOS_STATUS <> 0
         THEN BEGIN
                ERROR(SERVICIOS_STATUS);
         RETURN;
        END;

        IF AUTORIZADA_GBL = 'S'
        THEN BEGIN
         DB_RESET(SERVICIOS_ID,SERVICIOS_STATUS);
         SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_FAM := SS_JEFE_GBL;
         SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV := SS_SERV_GBL;
         SERVICIOS2_DSD.COD_SERVICIO := COD_SERV_GBL;
         SERVICIOS2_DSD.RMO_OFICINA := RMO_GBL;
         DB_QUERY(SERVICIOS_ID,SERVICIOS_STATUS);
         DB_GET_FIRST(SERVICIOS_ID,SERVICIOS_STATUS);
         DEBUG_LOG('BENE LOCAL:'||TO_CHAR(DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO
_BENEFICIO));
         DEBUG_LOG('BENE CENTRAL:'||TO_CHAR(SERVICIOS2_DSD.VLR_BENEFICIOS));
         DEBUG_LOG('RECERT:'||RECERT_TIPO_GBL);

         IF (DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_BENEFICIO < SERVICIOS2_DSD.V
LR_BENEFICIO_ANTERIOR) AND 
            (DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_BENEFICIO > 0 ) AND
            (RECERT_TIPO_GBL <> 'P') AND (RECERT_TIPO_GBL <> 'S') AND
            (RECERT_TIPO_GBL <> 'D') AND (RECERT_TIPO_GBL <> 'A') AND
            (RUTINA_GBL = 'MC')
            THEN BEGIN
                      DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_STATUS := 'PENDREVI
';
                      FLAG_UPD_GBL := 'S';
                        { actualizar status del jefe del servicio }
                        DB_RESET(CLIENTES_ID,CLIENTES_STATUS);
                        CLIENTES2_DSD.SEGURO_SOCIAL_JEFE_FAMILIA := SS_JEFE_GBL;
                        CLIENTES2_DSD.SEGURO_SOCIAL_CLIENTE := SS_SERV_GBL;
                        CLIENTES2_DSD.RMO_OFICINA := RMO_GBL;
                        DB_QUERY(CLIENTES_ID,CLIENTES_STATUS);
                        DB_GET_FIRST(CLIENTES_ID,CLIENTES_STATUS);
                        IF CLIENTES_STATUS = 0
                        THEN
                         BEGIN
                                FLAG_UPD_GBL := 'N';
                                CLIENTES2_DSD.COD_STATUS := 'PENDREVI';
                                CLIENTES2_DSD.FCH_STATUS := TRUNC(SYSTEM_DATE,'D
DD');
                                DB_UPDATE(CLIENTES_ID,CLIENTES_STATUS);
                                DB_COMMIT(CLIENTES_ID);
                         END;
                 END;
        END;

DB_RESET(SERVICIOS_ID,SERVICIOS_STATUS);
IF SERVICIOS_STATUS <> 0
   THEN BEGIN
         ERROR(SERVICIOS_STATUS);
         RETURN;
        END;
SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_FAM:=SS_JEFE_GBL;
SERVICIOS2_DSD.SEGURO_SOCIAL_JEFE_SERV:=SS_SERV_GBL;
SERVICIOS2_DSD.COD_SERVICIO:=COD_SERV_GBL;
SERVICIOS2_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY(SERVICIOS_ID,SERVICIOS_STATUS);
IF SERVICIOS_STATUS <> 0
   THEN BEGIN
         ERROR(SERVICIOS_STATUS);
         RETURN;
        END;
DB_GET_FIRST(SERVICIOS_ID,SERVICIOS_STATUS);
IF SERVICIOS_STATUS <> 0
   THEN BEGIN
         ERROR(SERVICIOS_STATUS);
         RETURN;
        END;
SERVICIOS2_DSD.COD_STATUS_SERVICIO:=
     DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_STATUS;

if  DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_STATUS = 'ACTIVO' THEN
        SERVICIOS2_DSD.VLR_BENEFICIO_ANTERIOR:=
     DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_BENEFICIO;

SERVICIOS2_DSD.VLR_BENEFICIOS:=
     DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_BENEFICIO;

SERVICIOS2_DSD.FCH_DECISION:=TRUNC(SYSTEM_DATE,'DDD');
SERVICIOS2_DSD.FCH_TRANS:=TRUNC(SYSTEM_DATE,'DDD');
SERVICIOS2_DSD.ID_TECNICO_DETER_ELEGIBILIDAD:=ID_TECNICO_GBL;

SERV_FAM_FRM.COD_STATUS_SERVICIO := SERVICIOS2_DSD.COD_STATUS_SERVICIO;
SERV_FAM_FRM.VLR_BENEFICIO := SERVICIOS2_DSD.VLR_BENEFICIOS;
SERV_FAM_FRM.FCH_DECISION := SERVICIOS2_DSD.FCH_DECISION;                  

IF (SUBSTR(DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_STATUS,0,4) = 'CERR') OR
   (SUBSTR(DETERMINAR_ELEGIBILIDAD_PAN_2.SERVICIO_STATUS,0,4) = 'RECH')
 THEN
BEGIN
        SERVICIOS2_DSD.FCH_CERRADO := TRUNC(SYSTEM_DATE,'DDD');
END;

DB_UPDATE(SERVICIOS_ID,SERVICIOS_STATUS);
IF SERVICIOS_STATUS <> 0
   THEN BEGIN
         ERROR(SERVICIOS_STATUS);
         RETURN;
        END;
DB_COMMIT(SERVICIOS_STATUS);
IF SERVICIOS_STATUS <> 0
   THEN BEGIN
         ERROR(SERVICIOS_STATUS);
         RETURN;
        END;

db_close(SERVICIOS_ID,SERVICIOS_STATUS);
IF SERVICIOS_STATUS <> 0
   THEN BEGIN
         ERROR(SERVICIOS_STATUS);
         RETURN;
        END;

SET_NOTRACE();
END;


    



--------------------------------------------------------------------- */
