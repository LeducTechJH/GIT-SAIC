package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class NUM_VECES_DESCAL_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double COUNTER = 0;





  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Parameter value )
  {
    ( ( NUM_VECES_DESCAL_ADL ) __app.getADL ( NUM_VECES_DESCAL_ADL.class ) ).COUNTER = value.getDouble ( );
  }  
    



  /**  */
  public static double getCOUNTER  ( RallyApplication __app )
  {
    return ( ( NUM_VECES_DESCAL_ADL ) __app.getADL ( NUM_VECES_DESCAL_ADL.class ) ).COUNTER;
  }


  /**  */
  public static Double getCOUNTERDouble ( RallyApplication __app )
  {
    return new Double ( ( ( NUM_VECES_DESCAL_ADL ) __app.getADL ( NUM_VECES_DESCAL_ADL.class ) ).COUNTER );
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, double value )
  {
    ( ( NUM_VECES_DESCAL_ADL ) __app.getADL ( NUM_VECES_DESCAL_ADL.class ) ).COUNTER = value;
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Object value )
  {
    ( ( NUM_VECES_DESCAL_ADL ) __app.getADL ( NUM_VECES_DESCAL_ADL.class ) ).COUNTER = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static NUM_VECES_DESCAL_ADL get ( RallyApplication __app )
  {
    NUM_VECES_DESCAL_ADL adl = new NUM_VECES_DESCAL_ADL ( );
    __app.register ( adl, "NUM_VECES_DESCAL_ADL" );
    __app.setADL ( NUM_VECES_DESCAL_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    NUM_VECES_DESCAL_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    NUM_VECES_DESCAL_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "NUM_VECES_DESCAL_ADL" );
    if ( rObj != null && rObj instanceof NUM_VECES_DESCAL_ADL )
    {
      this.app.setADL ( NUM_VECES_DESCAL_ADL.class, ( NUM_VECES_DESCAL_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "NUM_VECES_DESCAL_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "NUM_VECES_DESCAL_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( Compare.gt ( this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" ), 0 ) ) 
    {
      COUNTER = this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).getDoubleItem ( "NUM_VECES_DESC" );
    }
    else
    {
      COUNTER = 0;
    }
    this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "NUM_VECES_DESC_PTRA", FormattingFactory.parseStringToDouble ( RallyStringService.subString ( "00" + StringService.toStringValue  ( COUNTER ), MathService.minus ( StringService.length ( "000" + StringService.toStringValue  ( COUNTER )  ), 2  ), 1 ) )  );
    this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "NUM_VECES_DESC_AE", FormattingFactory.parseStringToDouble ( RallyStringService.subString ( "00" + StringService.toStringValue  ( COUNTER ), MathService.minus ( StringService.length ( "000" + StringService.toStringValue  ( COUNTER )  ), 3), 1 ) )  );
    this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "NUM_VECES_DESC_PAN", FormattingFactory.parseStringToDouble ( RallyStringService.subString ( "00" + StringService.toStringValue  ( COUNTER ), MathService.minus ( StringService.length ( "000" + StringService.toStringValue  ( COUNTER )  ), 4), 1 ) )  );
    this.app.form ( "DESCALIFICADOS_CLIENTE_FR" ).setItem ( "NUM_VECES_DESC_MACA", FormattingFactory.parseStringToDouble ( RallyStringService.subString ( "00" + StringService.toStringValue  ( COUNTER ), MathService.minus ( StringService.length ( "000" + StringService.toStringValue  ( COUNTER )  ), 5 ), 1 ) )  );

  }
}



/* ---------------------------------------------------------------------


     
VAR
 COUNTER : NUMBER;

BEGIN
IF INFOR_BIO_FRM.NUM_VECES_DESC > 0 THEN
 COUNTER := INFOR_BIO_FRM.NUM_VECES_DESC;
ELSE
 COUNTER := 0;

INFOR_BIO_FRM.NUM_VECES_DESC_PTRA:=
to_number(SUBSTR('00'||TO_CHAR(counter),LENGTH('000'||TO_CHAR(counter))-1,1)); 
INFOR_BIO_FRM.NUM_VECES_DESC_AE := 
to_number(SUBSTR('00'||TO_CHAR(counter),LENGTH('000'||TO_CHAR(counter))-2,1));
INFOR_BIO_FRM.NUM_VECES_DESC_PAN:= 
to_number(SUBSTR('00'||TO_CHAR(counter),LENGTH('000'||TO_CHAR(counter))-3,1));
INFOR_BIO_FRM.NUM_VECES_DESC_MACA := 
to_number(SUBSTR('00'||TO_CHAR(counter),LENGTH('000'||TO_CHAR(counter))-4,1));

END;
    



--------------------------------------------------------------------- */
