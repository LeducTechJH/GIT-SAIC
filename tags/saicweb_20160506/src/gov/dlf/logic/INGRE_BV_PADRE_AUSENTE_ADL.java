package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class INGRE_BV_PADRE_AUSENTE_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN2_ID = 0;

  public double STATUS2_CODE = 0;

  public DataStore CLIENTES_READ_LOC_DSD = null;

  public double OPEN5_ID = 0;

  public double STATUS5_CODE = 0;

  public DataStore NUCLEO_SERVICIO_RO_DSD = null;

  public double OPEN6_ID = 0;

  public double STATUS6_CODE = 0;

  public DataStore SERVICIOS_LOC2_RO_DSD = null;

  public double CLIENTES_OCI = 0;

  public double CLIENTES_OCI_STATUS = 0;

  public DataStore CENTRAL_CLIENTES_RO_DSD = null;




  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------


  /**  */
  public static DataStore getCLIENTES_READ_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( INGRE_BV_PERS_ENCARGADA_ADL ) __app.getADL ( INGRE_BV_PERS_ENCARGADA_ADL.class ) ).CLIENTES_READ_LOC_DSD;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( INGRE_BV_PERS_ENCARGADA_ADL ) __app.getADL ( INGRE_BV_PERS_ENCARGADA_ADL.class ) ).CLIENTES_READ_LOC_DSD = value;
  }


  /**  */
  public static void setCLIENTES_READ_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( INGRE_BV_PERS_ENCARGADA_ADL ) __app.getADL ( INGRE_BV_PERS_ENCARGADA_ADL.class ) ).CLIENTES_READ_LOC_DSD = ( DataStore ) value;
  }

  /**  */
  public static DataStore getNUCLEO_SERVICIO_RO_DSD  ( RallyApplication __app )
  {
    return ( ( INGRE_BV_PADRE_AUSENTE_ADL ) __app.getADL ( INGRE_BV_PADRE_AUSENTE_ADL.class ) ).NUCLEO_SERVICIO_RO_DSD;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( INGRE_BV_PADRE_AUSENTE_ADL ) __app.getADL ( INGRE_BV_PADRE_AUSENTE_ADL.class ) ).NUCLEO_SERVICIO_RO_DSD = value;
  }


  /**  */
  public static void setNUCLEO_SERVICIO_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( INGRE_BV_PADRE_AUSENTE_ADL ) __app.getADL ( INGRE_BV_PADRE_AUSENTE_ADL.class ) ).NUCLEO_SERVICIO_RO_DSD = ( DataStore ) value;
  }

  /**  */
  public static DataStore getSERVICIOS_LOC2_RO_DSD  ( RallyApplication __app )
  {
    return ( ( INGRE_BV_PADRE_AUSENTE_ADL ) __app.getADL ( INGRE_BV_PADRE_AUSENTE_ADL.class ) ).SERVICIOS_LOC2_RO_DSD;
  }


  /**  */
  public static void setSERVICIOS_LOC2_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( INGRE_BV_PADRE_AUSENTE_ADL ) __app.getADL ( INGRE_BV_PADRE_AUSENTE_ADL.class ) ).SERVICIOS_LOC2_RO_DSD = value;
  }


  /**  */
  public static void setSERVICIOS_LOC2_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( INGRE_BV_PADRE_AUSENTE_ADL ) __app.getADL ( INGRE_BV_PADRE_AUSENTE_ADL.class ) ).SERVICIOS_LOC2_RO_DSD = ( DataStore ) value;
  }





  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static INGRE_BV_PADRE_AUSENTE_ADL get ( RallyApplication __app )
  {
    INGRE_BV_PADRE_AUSENTE_ADL adl = new INGRE_BV_PADRE_AUSENTE_ADL ( );
    __app.register ( adl, "INGRE_BV_PADRE_AUSENTE_ADL" );
    __app.setADL ( INGRE_BV_PADRE_AUSENTE_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    INGRE_BV_PADRE_AUSENTE_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    INGRE_BV_PADRE_AUSENTE_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "INGRE_BV_PADRE_AUSENTE_ADL" );
    if ( rObj != null && rObj instanceof INGRE_BV_PADRE_AUSENTE_ADL )
    {
      this.app.setADL ( INGRE_BV_PADRE_AUSENTE_ADL.class, ( INGRE_BV_PADRE_AUSENTE_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "INGRE_BV_PADRE_AUSENTE_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "INGRE_BV_PADRE_AUSENTE_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {  
	boolean foundPadreAusente = false;

	CLIENTES_READ_LOC_DSD = this.dm.create ( "CLIENTES_READ_LOC_DSD" );
	OPEN2_ID = CLIENTES_READ_LOC_DSD.getId ( );
	STATUS2_CODE = RallyDataStoreException.getDefault ( );

	STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

	this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).getDoubleItem ( "SEGURO_SOCIAL_PADRE_AUSENTE" ) );
	this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

	STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
	STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

	STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

    if ( Compare.equals ( STATUS2_CODE, 0 )  )
    {
      foundPadreAusente = true;
    }
    else
    {
      // try to find padre ausente in CENTRAL de clientes
      CENTRAL_CLIENTES_RO_DSD = this.dm.create ( "CENTRAL_CLIENTES_RO_DSD" );
      CLIENTES_OCI = CENTRAL_CLIENTES_RO_DSD.getId ( );
      CLIENTES_OCI_STATUS = RallyDataStoreException.getDefault ( );
      
      CLIENTES_OCI_STATUS  = this.dm.reset ( CLIENTES_OCI );
      
  	  this.dm.setField ( this.dm.get ( "CENTRAL_CLIENTES_RO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).getDoubleItem ( "SEGURO_SOCIAL_PADRE_AUSENTE" ) );

      CLIENTES_OCI_STATUS  = this.dm.limitQueryFromBuffer ( CLIENTES_OCI );
      CLIENTES_OCI_STATUS  = this.dm.retrieve ( CLIENTES_OCI );
      
      CLIENTES_OCI_STATUS  = this.dm.firstRow ( CLIENTES_OCI );

      if ( Compare.equals ( CLIENTES_OCI_STATUS, 0 ) )
      {
    	// set form rmo in case padre ausente was found in different rmo
        this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "RMO_OFICINA", this.dm.getFieldDouble ( this.dm.get ( "CENTRAL_CLIENTES_RO_DSD" ), "RMO_OFICINA" )  );
        this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "RMO_OFICINA2", this.dm.getFieldDouble ( this.dm.get ( "CENTRAL_CLIENTES_RO_DSD" ), "RMO_OFICINA" )  );

        STATUS2_CODE  = this.dm.reset ( OPEN2_ID );

    	this.dm.setField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).getDoubleItem ( "SEGURO_SOCIAL_PADRE_AUSENTE" ) );
        setFieldDouble ( CLIENTES_READ_LOC_DSD, CENTRAL_CLIENTES_RO_DSD, "RMO_OFICINA" );

    	STATUS2_CODE  = this.dm.limitQueryFromBuffer ( OPEN2_ID );
    	STATUS2_CODE  = this.dm.retrieve ( OPEN2_ID );

    	STATUS2_CODE  = this.dm.firstRow ( OPEN2_ID );

        if ( Compare.equals ( STATUS2_CODE, 0 )  )
        {
          foundPadreAusente = true;
        }
      }
    }

    if ( foundPadreAusente  )
    {
      this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "DSC_APELLIDO_PATERNO", this.dm.getField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_APELLIDO_PATERNO" )  );
      this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "DSC_APELLIDO_MATERNO", this.dm.getField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_APELLIDO_MATERNO" )  );
      this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "DSC_NOMBRE", this.dm.getField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_NOMBRE" )  );
      this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "DSC_INICIAL", this.dm.getField ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_INICIAL" )  );
	  this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "FCH_NACIMIENTO", this.dm.getFieldDate ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "FCH_NACIMIENTO" )  );
	  this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "PLAN_MEDICO", this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "NOMBRE_PLAN_MEDICO" )  );
	  this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "APODO", this.dm.getFieldString ( this.dm.get ( "CLIENTES_READ_LOC_DSD" ), "DSC_APODO" )  );

	  NUCLEO_SERVICIO_RO_DSD = this.dm.create ( "NUCLEO_SERVICIO_RO_DSD" );
	  OPEN5_ID = NUCLEO_SERVICIO_RO_DSD.getId ( );
	  STATUS5_CODE = RallyDataStoreException.getDefault ( );
	  STATUS5_CODE  = this.dm.reset ( OPEN5_ID );

	  SERVICIOS_LOC2_RO_DSD = this.dm.create ( "SERVICIOS_LOC2_RO_DSD" );
	  OPEN6_ID = SERVICIOS_LOC2_RO_DSD.getId ( );
	  STATUS6_CODE = RallyDataStoreException.getDefault ( );

	  this.dm.setField ( this.dm.get ( "NUCLEO_SERVICIO_RO_DSD" ), "SEGURO_SOCIAL_BENEFICIARIO", this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).getDoubleItem ( "SEGURO_SOCIAL_PADRE_AUSENTE" ) );

	  STATUS5_CODE  = this.dm.limitQueryFromBuffer ( OPEN5_ID );
	  STATUS5_CODE  = this.dm.retrieve ( OPEN5_ID );

	  STATUS5_CODE  = this.dm.firstRow ( OPEN5_ID );

	  this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "FLG_PAN", "N"  );
	  this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "FLG_AE", "N"  );

	  while ( Compare.equals ( STATUS5_CODE, 0 )  )
	  {
	    String codServicio = this.dm.getFieldString ( this.dm.get ( "NUCLEO_SERVICIO_RO_DSD" ), "COD_SERVICIO" );
	    if ( ( codServicio.startsWith("PAN") ) || ( Compare.equals ( codServicio, "AE-C" ) ) ) 
	    {
	      STATUS6_CODE  = this.dm.reset ( OPEN6_ID );
	      setFieldDouble ( SERVICIOS_LOC2_RO_DSD, NUCLEO_SERVICIO_RO_DSD, "SEGURO_SOCIAL_JEFE_FAM" );
	      setFieldDouble ( SERVICIOS_LOC2_RO_DSD, NUCLEO_SERVICIO_RO_DSD, "SEGURO_SOCIAL_JEFE_SERV" );
	      setFieldString ( SERVICIOS_LOC2_RO_DSD, NUCLEO_SERVICIO_RO_DSD, "COD_SERVICIO" );

	      STATUS6_CODE  = this.dm.limitQueryFromBuffer ( OPEN6_ID );
	      STATUS6_CODE  = this.dm.retrieve ( OPEN6_ID );

	      STATUS6_CODE  = this.dm.firstRow ( OPEN6_ID );

	      while ( Compare.equals ( STATUS6_CODE, 0 )  )
	      {
	                	  
	        String codStatusServicio = this.dm.getFieldString ( this.dm.get ( "SERVICIOS_LOC2_RO_DSD" ), "COD_STATUS_SERVICIO" );
	        if( (codStatusServicio.equals("ACTIVO")) || (codStatusServicio.equals("PENDCERT")) || (codStatusServicio.equals("PENDREVI")) || (codStatusServicio.equals("PENDAUTO")) || (codStatusServicio.equals("ACCNEG")) )
	        {
	          if ( ( codServicio.startsWith("PAN") ) ) 
	          {
	            this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "FLG_PAN", "S"  );
	          }
	          else if ( ( Compare.equals ( codServicio, "AE-C" ) )   ) 
	          {
	            this.app.form ( "PADRE_MADRE_AUSENTE_CLIENTE_FR" ).setItem ( "FLG_AE", "S"  );
	          }
	        }

	        STATUS6_CODE  = this.dm.nextRow ( OPEN6_ID );
	      }

	      STATUS5_CODE  = this.dm.nextRow ( OPEN5_ID );
	    }
	  }
	            
	  STATUS5_CODE  = this.dm.dbClose ( OPEN5_ID );            
	  STATUS6_CODE  = this.dm.dbClose ( OPEN6_ID );
    }
    
	STATUS2_CODE  = this.dm.dbClose ( OPEN2_ID );
  }
  
  /**
   * Copy the value of the specified field in the source DataStore to the corresponding field in the target DataStore. 
   * This method assumes that the value being set is of type Double. 
   * @param target
   * @param source
   * @param field 
   */

    private final double setFieldDouble(DataStore target, DataStore source, String field) {
  
    	return this.dm.setField ( target, field, this.dm.getFieldDouble ( source, field ) );
    }
    /**
     * Copy the value of the specified field in the source DataStore to the corresponding field in the target DataStore. 
     * This method assumes that the value being set is of type String. 
     * @param target
     * @param source
     * @param field
     */
    private final double setFieldString(DataStore target, DataStore source, String field) {
          return this.dm.setField ( target, field, this.dm.getFieldString ( source, field ) );
    }

}
