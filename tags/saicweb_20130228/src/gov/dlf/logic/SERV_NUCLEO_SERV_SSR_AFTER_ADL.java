package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SERV_NUCLEO_SERV_SSR_AFTER_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double NULL_NUMBER = 0;

  public double CLI_ID = 0;

  public double STAT_CODE = 0;



  public String NULL_CHAR = null;

  public DataStore CLIENTE_R_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setNULL_CHAR  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_CHAR = value.getString ( );
  }  

  
  /**  */
  public static void setNULL_NUMBER  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_NUMBER = value.getDouble ( );
  }  

  
  /**  */
  public static void setCLI_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).CLI_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTAT_CODE  ( RallyApplication __app, Parameter value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).STAT_CODE = value.getDouble ( );
  }  
    


  /**  */
  public static String getNULL_CHAR  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_CHAR;
  }


  /**  */
  public static void setNULL_CHAR  ( RallyApplication __app, String value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_CHAR = value;
  }


  /**  */
  public static void setNULL_CHAR  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_CHAR = ( String ) value;
  }



  /**  */
  public static DataStore getCLIENTE_R_DSD  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).CLIENTE_R_DSD;
  }


  /**  */
  public static void setCLIENTE_R_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).CLIENTE_R_DSD = value;
  }


  /**  */
  public static void setCLIENTE_R_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).CLIENTE_R_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getNULL_NUMBER  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_NUMBER;
  }


  /**  */
  public static Double getNULL_NUMBERDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_NUMBER );
  }


  /**  */
  public static void setNULL_NUMBER  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_NUMBER = value;
  }


  /**  */
  public static void setNULL_NUMBER  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).NULL_NUMBER = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCLI_ID  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).CLI_ID;
  }


  /**  */
  public static Double getCLI_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).CLI_ID );
  }


  /**  */
  public static void setCLI_ID  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).CLI_ID = value;
  }


  /**  */
  public static void setCLI_ID  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).CLI_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTAT_CODE  ( RallyApplication __app )
  {
    return ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).STAT_CODE;
  }


  /**  */
  public static Double getSTAT_CODEDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).STAT_CODE );
  }


  /**  */
  public static void setSTAT_CODE  ( RallyApplication __app, double value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).STAT_CODE = value;
  }


  /**  */
  public static void setSTAT_CODE  ( RallyApplication __app, Object value )
  {
    ( ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) __app.getADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class ) ).STAT_CODE = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SERV_NUCLEO_SERV_SSR_AFTER_ADL get ( RallyApplication __app )
  {
    SERV_NUCLEO_SERV_SSR_AFTER_ADL adl = new SERV_NUCLEO_SERV_SSR_AFTER_ADL ( );
    __app.register ( adl, "SERV_NUCLEO_SERV_SSR_AFTER_ADL" );
    __app.setADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SERV_NUCLEO_SERV_SSR_AFTER_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SERV_NUCLEO_SERV_SSR_AFTER_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SERV_NUCLEO_SERV_SSR_AFTER_ADL" );
    if ( rObj != null && rObj instanceof SERV_NUCLEO_SERV_SSR_AFTER_ADL )
    {
      this.app.setADL ( SERV_NUCLEO_SERV_SSR_AFTER_ADL.class, ( SERV_NUCLEO_SERV_SSR_AFTER_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SERV_NUCLEO_SERV_SSR_AFTER_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SERV_NUCLEO_SERV_SSR_AFTER_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    INSERT_SERV_NOT_FINISH_ADL.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {

    NULL_CHAR = TruncService.setNull ( NULL_CHAR  );
    NULL_NUMBER = TruncService.setNull ( NULL_NUMBER  );
  //  if ( ( ! Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_REPRE" ), NULL_NUMBER ) ) && ( Compare.equals ( this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getStringItem ( "PATERNO_REPRE" ), NULL_CHAR ) )  ) 
    double soc_ref = this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_REPRE" );
    if ( !Double.isNaN ( soc_ref ) && soc_ref > 0  )       
    {
      CLIENTE_R_DSD = this.dm.create ( "CLIENTE_R_DSD" );
      CLI_ID = CLIENTE_R_DSD.getId ( );
      STAT_CODE = RallyDataStoreException.getDefault ( );
      if ( ! Compare.equals ( STAT_CODE, 0 ) ) 
      {
        this.app.setError ( 0, STAT_CODE );

        STAT_CODE  = this.dm.rollBack ( );
        this.doReturn ( );
        return; 
      }

      STAT_CODE  = this.dm.reset ( CLI_ID );

      this.dm.setField ( this.dm.get ( "CLIENTE_R_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "SERV_NUCLEO_SERV_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_REPRE" ));
      this.dm.setField ( this.dm.get ( "CLIENTE_R_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

      STAT_CODE  = this.dm.limitQueryFromBuffer ( CLI_ID );
      STAT_CODE  = this.dm.retrieve ( CLI_ID );

      STAT_CODE  = this.dm.firstRow ( CLI_ID );

      if ( ! Compare.equals ( STAT_CODE, 0 ) ) 
      {
        this.app.setError ( 1, 5530 );
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "PATERNO_REPRE", ""  );
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "MATERNO_REPRE", ""  );
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "NOMBRE_REPRE", ""  );
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "INICIAL_REPRE", ""  );
        this.doReturn ( );
        return; 
      }
      else
      {
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "PATERNO_REPRE", this.dm.getFieldString ( this.dm.get ( "CLIENTE_R_DSD" ), "DSC_APELLIDO_PATERNO" )  );
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "MATERNO_REPRE", this.dm.getFieldString ( this.dm.get ( "CLIENTE_R_DSD" ), "DSC_APELLIDO_MATERNO" )  );
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "NOMBRE_REPRE", this.dm.getFieldString ( this.dm.get ( "CLIENTE_R_DSD" ), "DSC_NOMBRE" )  );
        this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "INICIAL_REPRE", this.dm.getFieldString ( this.dm.get ( "CLIENTE_R_DSD" ), "DSC_INICIAL" )  );

        STAT_CODE  = this.dm.rollBack ( );
        if ( ! Compare.equals ( STAT_CODE, 0 ) ) 
        {
          this.app.setError ( 2, STAT_CODE );

          STAT_CODE  = this.dm.rollBack ( );
          this.doReturn ( );
          return; 
        }
        STAT_CODE  = this.dm.dbClose ( CLI_ID );

        if ( ! Compare.equals ( STAT_CODE, 0 ) ) 
        {
          this.app.setError ( 3, STAT_CODE );

          STAT_CODE  = this.dm.rollBack ( );
          this.doReturn ( );
          return; 
        }
      }
    }
    else
    {
      this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "SEGURO_SOCIAL_REPRE", "" );      
      this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "PATERNO_REPRE", ""  );
      this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "MATERNO_REPRE", ""  );
      this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "NOMBRE_REPRE", ""  );
      this.app.form ( "SERV_NUCLEO_SERV_FRM" ).setItem ( "INICIAL_REPRE", ""  );
     
    }

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE SERV_NUCLEO_SERV_SSR_AFTER_ADL;

VAR
        NULL_CHAR       :       CHAR;
        NULL_NUMBER     :       NUMBER;
        CLI_ID          :       NUMBER;
        STAT_CODE       :       NUMBER;

BEGIN
SET_TRACE();
        CALL INSERT_SERV_NOT_FINISH_ADL;
        MAKE_NULL (NULL_CHAR);
        MAKE_NULL (NULL_NUMBER);
        IF (SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_REPRE <> NULL_NUMBER) AND
           (SERV_NUCLEO_SERV_FRM.PATERNO_REPRE = NULL_CHAR) THEN
        BEGIN
                DB_OPEN (CLIENTE_R_DSD, CLI_ID, STAT_CODE);
                IF (STAT_CODE <> 0) THEN
                BEGIN
                        ERROR (STAT_CODE);
                        DB_ROLLBACK (STAT_CODE);
                        RETURN;
                END;                              

                DB_RESET (CLI_ID, STAT_CODE);
                CLIENTE_R_DSD.SEGURO_SOCIAL_CLIENTE :=  
                SERV_NUCLEO_SERV_FRM.SEGURO_SOCIAL_REPRE;
                CLIENTE_R_DSD.RMO_OFICINA:=RMO_GBL;
                DB_QUERY (CLI_ID, STAT_CODE);
                DB_GET_FIRST (CLI_ID, STAT_CODE);
                IF (STAT_CODE <> 0) THEN
                BEGIN
                        ERROR (5530);
{                       SET_FAILURE();
                        DB_ROLLBACK (STAT_CODE);}
                        RETURN;
                END;                              
                ELSE BEGIN                
                SERV_NUCLEO_SERV_FRM.PATERNO_REPRE := 
                        CLIENTE_R_DSD.DSC_APELLIDO_PATERNO;
                SERV_NUCLEO_SERV_FRM.MATERNO_REPRE :=
                        CLIENTE_R_DSD.DSC_APELLIDO_MATERNO;
                SERV_NUCLEO_SERV_FRM.NOMBRE_REPRE :=
                        CLIENTE_R_DSD.DSC_NOMBRE;
                SERV_NUCLEO_SERV_FRM.INICIAL_REPRE :=
                        CLIENTE_R_DSD.DSC_INICIAL;

                DB_ROLLBACK (STAT_CODE);
                IF (STAT_CODE <> 0) THEN
                BEGIN
                        ERROR (STAT_CODE);
                        DB_ROLLBACK (STAT_CODE);
                        RETURN;
                END;                              

                DB_CLOSE (CLI_ID, STAT_CODE);
                IF (STAT_CODE <> 0) THEN
                BEGIN
                        ERROR (STAT_CODE);
                        DB_ROLLBACK (STAT_CODE);
                        RETURN;
                END;                              
             END;
        END;
SET_NOTRACE();
END;

    



--------------------------------------------------------------------- */
