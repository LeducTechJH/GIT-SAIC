package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class ADSEF_DIP_2T_BFR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = true;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double RID = 0;

  public double RCD = 0;

  public double NID = 0;

  public double NCD = 0;

  public double NUL = 0;

  public double CANT_RETRO = 0;

  public double CANT_RECLA = 0;

  public double RECAUDA_ID = 0;

  public double RECAUDA_STATUS = 0;

  public double VALOR_CANT = 0;

  public double COUNTER = 0;



  public String TMP = null;

  public DataStore RECAUDACIONES_RO_DSD = null;

  public DataStore RR_INSERT_RO_DSD = null;

  public DataStore CLASI_RECLA_DSD = null;

  public DataStore CALENDARIO_RECLA_RO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setRID  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRCD  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RCD = value.getDouble ( );
  }  

  
  /**  */
  public static void setNID  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NID = value.getDouble ( );
  }  

  
  /**  */
  public static void setNCD  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NCD = value.getDouble ( );
  }  

  
  /**  */
  public static void setTMP  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).TMP = value.getString ( );
  }  

  
  /**  */
  public static void setNUL  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NUL = value.getDouble ( );
  }  

  
  /**  */
  public static void setCANT_RETRO  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RETRO = value.getDouble ( );
  }  

  
  /**  */
  public static void setCANT_RECLA  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RECLA = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECAUDA_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setRECAUDA_STATUS  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_STATUS = value.getDouble ( );
  }  

  
  /**  */
  public static void setVALOR_CANT  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).VALOR_CANT = value.getDouble ( );
  }  

  
  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).COUNTER = value.getDouble ( );
  }  
    


  /**  */
  public static String getTMP  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).TMP;
  }


  /**  */
  public static void setTMP  ( RallyApplication __app, String value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).TMP = value;
  }


  /**  */
  public static void setTMP  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).TMP = ( String ) value;
  }



  /**  */
  public static DataStore getRECAUDACIONES_RO_DSD  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDACIONES_RO_DSD;
  }


  /**  */
  public static void setRECAUDACIONES_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDACIONES_RO_DSD = value;
  }


  /**  */
  public static void setRECAUDACIONES_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDACIONES_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getRR_INSERT_RO_DSD  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RR_INSERT_RO_DSD;
  }


  /**  */
  public static void setRR_INSERT_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RR_INSERT_RO_DSD = value;
  }


  /**  */
  public static void setRR_INSERT_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RR_INSERT_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getCLASI_RECLA_DSD  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CLASI_RECLA_DSD;
  }


  /**  */
  public static void setCLASI_RECLA_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CLASI_RECLA_DSD = value;
  }


  /**  */
  public static void setCLASI_RECLA_DSD  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CLASI_RECLA_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getCALENDARIO_RECLA_RO_DSD  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CALENDARIO_RECLA_RO_DSD;
  }


  /**  */
  public static void setCALENDARIO_RECLA_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CALENDARIO_RECLA_RO_DSD = value;
  }


  /**  */
  public static void setCALENDARIO_RECLA_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CALENDARIO_RECLA_RO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getRID  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RID;
  }


  /**  */
  public static Double getRIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RID );
  }


  /**  */
  public static void setRID  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RID = value;
  }


  /**  */
  public static void setRID  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRCD  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RCD;
  }


  /**  */
  public static Double getRCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RCD );
  }


  /**  */
  public static void setRCD  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RCD = value;
  }


  /**  */
  public static void setRCD  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RCD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNID  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NID;
  }


  /**  */
  public static Double getNIDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NID );
  }


  /**  */
  public static void setNID  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NID = value;
  }


  /**  */
  public static void setNID  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNCD  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NCD;
  }


  /**  */
  public static Double getNCDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NCD );
  }


  /**  */
  public static void setNCD  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NCD = value;
  }


  /**  */
  public static void setNCD  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NCD = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNUL  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NUL;
  }


  /**  */
  public static Double getNULDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NUL );
  }


  /**  */
  public static void setNUL  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NUL = value;
  }


  /**  */
  public static void setNUL  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).NUL = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCANT_RETRO  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RETRO;
  }


  /**  */
  public static Double getCANT_RETRODouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RETRO );
  }


  /**  */
  public static void setCANT_RETRO  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RETRO = value;
  }


  /**  */
  public static void setCANT_RETRO  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RETRO = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCANT_RECLA  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RECLA;
  }


  /**  */
  public static Double getCANT_RECLADouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RECLA );
  }


  /**  */
  public static void setCANT_RECLA  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RECLA = value;
  }


  /**  */
  public static void setCANT_RECLA  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).CANT_RECLA = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECAUDA_ID  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_ID;
  }


  /**  */
  public static Double getRECAUDA_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_ID );
  }


  /**  */
  public static void setRECAUDA_ID  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_ID = value;
  }


  /**  */
  public static void setRECAUDA_ID  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getRECAUDA_STATUS  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_STATUS;
  }


  /**  */
  public static Double getRECAUDA_STATUSDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_STATUS );
  }


  /**  */
  public static void setRECAUDA_STATUS  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_STATUS = value;
  }


  /**  */
  public static void setRECAUDA_STATUS  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).RECAUDA_STATUS = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getVALOR_CANT  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).VALOR_CANT;
  }


  /**  */
  public static Double getVALOR_CANTDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).VALOR_CANT );
  }


  /**  */
  public static void setVALOR_CANT  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).VALOR_CANT = value;
  }


  /**  */
  public static void setVALOR_CANT  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).VALOR_CANT = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getCOUNTER  ( RallyApplication __app )
  {
    return ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).COUNTER;
  }


  /**  */
  public static Double getCOUNTERDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).COUNTER );
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).COUNTER = value;
  }


  /**  */
  public static void setCOUNTER  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_DIP_2T_BFR_ADL ) __app.getADL ( ADSEF_DIP_2T_BFR_ADL.class ) ).COUNTER = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static ADSEF_DIP_2T_BFR_ADL get ( RallyApplication __app )
  {
    ADSEF_DIP_2T_BFR_ADL adl = new ADSEF_DIP_2T_BFR_ADL ( );
    __app.register ( adl, "ADSEF_DIP_2T_BFR_ADL" );
    __app.setADL ( ADSEF_DIP_2T_BFR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    ADSEF_DIP_2T_BFR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    ADSEF_DIP_2T_BFR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "ADSEF_DIP_2T_BFR_ADL" );
    if ( rObj != null && rObj instanceof ADSEF_DIP_2T_BFR_ADL )
    {
      this.app.setADL ( ADSEF_DIP_2T_BFR_ADL.class, ( ADSEF_DIP_2T_BFR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "ADSEF_DIP_2T_BFR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "ADSEF_DIP_2T_BFR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NUL = TruncService.setNull ( NUL  );
    CANT_RETRO = 0;
    CANT_RECLA = 0;
    VALOR_CANT = 0;
    COUNTER = 0;
    RECAUDACIONES_RO_DSD = this.dm.create ( "RECAUDACIONES_RO_DSD" );
    RECAUDA_ID = RECAUDACIONES_RO_DSD.getId ( );
    RECAUDA_STATUS = RallyDataStoreException.getDefault ( );
    RR_INSERT_RO_DSD = this.dm.create ( "RR_INSERT_RO_DSD" );
    RID = RR_INSERT_RO_DSD.getId ( );
    RCD = RallyDataStoreException.getDefault ( );

    RCD  = this.dm.reset ( RID );

    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "FECHA_IDENTIFICADO", this.app.RR_FCH_IDN );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "ACCION", this.app.RR_ACCION_GBL );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RCD  = this.dm.limitQueryFromBuffer ( RID );
    RCD  = this.dm.retrieve ( RID );

    RCD  = this.dm.firstRow ( RID );

    if ( ! Compare.equals ( RCD, 0 ) ) 
    {
      this.doReturn ( );
      return;
    }
    if ( Compare.equals ( this.app.RR_ACCION_GBL, "RECL" ) ) 
    {
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "X1", "X"  );
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "CANT_RECLA_RETRO", this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      CANT_RECLA = this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "CANTIDAD_RECLA_RETRO" );
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "DESDE", this.dm.getFieldDate ( this.dm.get ( "RR_INSERT_RO_DSD" ), "DESDE" )  );
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "HASTA", this.dm.getFieldDate ( this.dm.get ( "RR_INSERT_RO_DSD" ), "HASTA" )  );
    }
    else if ( Compare.equals ( this.app.RR_ACCION_GBL, "RREC" ) ) 
    {
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "X2", "X"  );
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "CANT_RECLA_RETRO_2", this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
      CANT_RECLA = this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "CANTIDAD_RECLA_RETRO" );
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "DESDE_2", this.dm.getFieldDate ( this.dm.get ( "RR_INSERT_RO_DSD" ), "DESDE" )  );
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "HASTA_2", this.dm.getFieldDate ( this.dm.get ( "RR_INSERT_RO_DSD" ), "HASTA" )  );
    }
    else
    {
      this.doReturn ( );
      return;
    }
    CLASI_RECLA_DSD = this.dm.create ( "CLASI_RECLA_DSD" );
    NID = CLASI_RECLA_DSD.getId ( );
    NCD = RallyDataStoreException.getDefault ( );

    NCD  = this.dm.reset ( NID );

    this.dm.setField ( this.dm.get ( "CLASI_RECLA_DSD" ), "COD_ID", this.dm.getFieldString ( this.dm.get ( "RR_INSERT_RO_DSD" ), "CLASIFICACION_RECLA" ) );

    NCD  = this.dm.limitQueryFromBuffer ( NID );
    NCD  = this.dm.retrieve ( NID );

    NCD  = this.dm.firstRow ( NID );

    this.app.form ( "ADSEF_DIP_2" ).setItem ( "RAZON_RETRO", this.dm.getFieldString ( this.dm.get ( "CLASI_RECLA_DSD" ), "DSC_LARGA" )  );
    NCD  = this.dm.dbClose ( NID );

    RCD  = this.dm.reset ( RID );

    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "ACCION", "RETR" );
    this.dm.setField ( this.dm.get ( "RR_INSERT_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RCD  = this.dm.limitQueryFromBuffer ( RID );
    RCD  = this.dm.retrieve ( RID );

    RCD  = this.dm.firstRow ( RID );

    while ( ( Compare.equals ( RCD, 0 ) ) || ( Compare.equals ( COUNTER, 0 ) )  )
    {
      if ( Compare.equals ( RallyStringService.subString ( this.dm.getFieldString ( this.dm.get ( "RR_INSERT_RO_DSD" ), "COD_SERVICIO" ), 0, 3 ), RallyStringService.subString ( this.app.COD_SERVICIO_GBL, 0, 3 ) ) ) 
      {
        if ( ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RR_INSERT_RO_DSD" ), "STATUS" ), "COMPRECL" ) ) && ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RR_INSERT_RO_DSD" ), "STATUS_AUTORIZACION" ), "AUTO" ) )  ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "RR_INSERT_RO_DSD" ), "STATUS" ), "AUTORIZA" ) ) ) 
        {
          if ( ! Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "VLR_BALANCE" ), 0 ) ) 
          {
            CANT_RETRO = this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "CANTIDAD_RECLA_RETRO" );
          }
          if ( ! Compare.equals ( this.app.RR_ACCION_GBL, "RREC" ) ) 
          {
            if ( Compare.gt ( CANT_RETRO, CANT_RECLA ) ) 
            {
              this.app.form ( "ADSEF_DIP_2" ).setItem ( "CANT_RETRO", CANT_RECLA  );
              this.app.form ( "ADSEF_DIP_2" ).setItem ( "BAL_RECLA", MathService.minus ( CANT_RECLA, this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "VLR_BALANCE" )  )  );
            }
            else
            {
              if ( ! Compare.equals ( CANT_RETRO, 0 ) ) 
              {
                this.app.form ( "ADSEF_DIP_2" ).setItem ( "CANT_RETRO", this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "CANTIDAD_RECLA_RETRO" )  );
                this.app.form ( "ADSEF_DIP_2" ).setItem ( "BAL_RECLA", MathService.minus ( this.app.form ( "ADSEF_DIP_2" ).getDoubleItem ( "CANT_RECLA_RETRO" ), this.dm.getFieldDouble ( this.dm.get ( "RR_INSERT_RO_DSD" ), "CANTIDAD_RECLA_RETRO" )  )  );
              }
            }
          }
        }
        COUNTER = MathService.plus ( COUNTER, 1  );
      }

      RCD  = this.dm.nextRow ( RID );

    }

    RECAUDA_STATUS  = this.dm.reset ( RECAUDA_ID );

    this.dm.setField ( this.dm.get ( "RECAUDACIONES_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "RECAUDACIONES_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RECAUDACIONES_RO_DSD" ), "FECHA_IDENTIFICADO", this.app.RR_FCH_IDN );
    this.dm.setField ( this.dm.get ( "RECAUDACIONES_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "RECAUDACIONES_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RECAUDA_STATUS  = this.dm.limitQueryFromBuffer ( RECAUDA_ID );
    RECAUDA_STATUS  = this.dm.retrieve ( RECAUDA_ID );

    RECAUDA_STATUS  = this.dm.firstRow ( RECAUDA_ID );

    while ( Compare.equals ( RECAUDA_STATUS, 0 ) ) 
    {
      if ( Compare.equals ( this.dm.getFieldDouble ( this.dm.get ( "RECAUDACIONES_RO_DSD" ), "VLR_CANTIDAD" ), NUL ) ) 
      {
        VALOR_CANT = 0;
      }
      else
      {
        VALOR_CANT = this.dm.getFieldDouble ( this.dm.get ( "RECAUDACIONES_RO_DSD" ), "VLR_CANTIDAD" );
      }
      CANT_RETRO = MathService.plus ( CANT_RETRO, VALOR_CANT  );

      RECAUDA_STATUS  = this.dm.nextRow ( RECAUDA_ID );

    }
    RECAUDA_STATUS  = this.dm.dbClose ( RECAUDA_ID );

    if ( Compare.equals ( this.app.RR_ACCION_GBL, "RREC" ) ) 
    {
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "PAGOS_EFECTUADOS", CANT_RETRO  );
      this.app.form ( "ADSEF_DIP_2" ).setItem ( "BAL_RECLA_2", MathService.minus ( this.app.form ( "ADSEF_DIP_2" ).getDoubleItem ( "CANT_RECLA_RETRO_2" ), CANT_RETRO  )  );
    }
    RCD  = this.dm.dbClose ( RID );

    CALENDARIO_RECLA_RO_DSD = this.dm.create ( "CALENDARIO_RECLA_RO_DSD" );
    RID = CALENDARIO_RECLA_RO_DSD.getId ( );
    RCD = RallyDataStoreException.getDefault ( );

    RCD  = this.dm.reset ( RID );

    this.dm.setField ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "COD_SERVICIO", "GENN" );
    this.dm.setField ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    RCD  = this.dm.limitQueryFromBuffer ( RID );
    RCD  = this.dm.retrieve ( RID );

    RCD  = this.dm.firstRow ( RID );

    while ( Compare.equals ( RCD, 0 ) ) 
    {
      if ( ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "COD_RAZON" ), "IRET" ) ) || ( Compare.equals ( this.dm.getFieldString ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "COD_RAZON" ), "IREC" ) ) ) 
      {
        this.app.form ( "ADSEF_DIP_2" ).setItem ( "DIA", StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" ) ,"dd" ,StringService.Language.SPANISH )  );
        this.app.form ( "ADSEF_DIP_2" ).setItem ( "MES", StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" ) ,"MMMM" ,StringService.Language.SPANISH )  );
        this.app.form ( "ADSEF_DIP_2" ).setItem ( "ANO", StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" ) ,"yyyy" ,StringService.Language.SPANISH )  );
        this.app.form ( "ADSEF_DIP_2" ).setItem ( "HORA", StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" ) ,"h" ,StringService.Language.SPANISH )  );
        this.app.form ( "ADSEF_DIP_2" ).setItem ( "MINUTOS", StringService.toStringValue  ( this.dm.getFieldDate ( this.dm.get ( "CALENDARIO_RECLA_RO_DSD" ), "FCH_ACTIVIDAD_HORA_MIN_CONTAC0" ) ,"mm" ,StringService.Language.SPANISH )  );
      }

      RCD  = this.dm.nextRow ( RID );

    }
    this.app.form ( "ADSEF_DIP_2" ).setItem ( "TEL1", this.app.RMO_PHONE_GBL  );
    this.app.form ( "ADSEF_DIP_2" ).setItem ( "TEL2", this.app.RMO_PHONE_GBL  );
    this.app.form ( "ADSEF_DIP_2" ).setItem ( "TEL3", this.app.RMO_PHONE_GBL  );
    RCD  = this.dm.dbClose ( RID );

  }
}



/* ---------------------------------------------------------------------


     
PROCEDURE DSS109_REC_BFR_ADL; 

VAR     RID     :       NUMBER;
        RCD     :       NUMBER;
        NID     :       NUMBER;
        NCD     :       NUMBER;
        TMP     :       CHAR(7);
        NUL     :       NUMBER;
        CANT_RETRO :    NUMBER;
        CANT_RECLA :    NUMBER;
        recauda_id      : number(9,0);
        recauda_status  : number(9,0);
        VALOR_CANT: NUMBER;
        COUNTER : NUMBER;

BEGIN
SET_TRACE();
MAKE_NULL(NUL);
CANT_RETRO := 0;
CANT_RECLA := 0;
VALOR_CANT := 0;
COUNTER := 0;

   db_open(recaudaciones_RO_dsd,recauda_id,recauda_status);

DB_OPEN(RR_INSERT_RO_DSD, RID, RCD);
DB_RESET (RID, RCD);

RR_INSERT_RO_DSD.SEGURO_SOCIAL_JEFE_FAM :=      SS_JEFE_FAMILIA_GBL;
RR_INSERT_RO_DSD.SEGURO_SOCIAL_JEFE_SERV        :=      SS_JEFE_SERVICIO_GBL;
RR_INSERT_RO_DSD.COD_SERVICIO           :=      COD_SERVICIO_GBL;
RR_INSERT_RO_DSD.FECHA_IDENTIFICADO     :=      RR_FCH_IDN;
RR_INSERT_RO_DSD.ACCION                 :=      RR_ACCION_GBL;
RR_INSERT_RO_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY (RID, RCD);
DB_GET_FIRST(RID,RCD);
IF RCD <> 0
THEN
        RETURN;
{ENDIF}

IF (RR_ACCION_GBL = 'RECL')
THEN
   BEGIN
        DSS109_REC_FR.X1                :=      'X';
        DSS109_REC_FR.CANT_RECLA_RETRO  := RR_INSERT_RO_DSD.CANTIDAD_RECLA_RETRO
;
        CANT_RECLA := RR_INSERT_RO_DSD.CANTIDAD_RECLA_RETRO;
        DSS109_REC_FR.DESDE             := RR_INSERT_RO_DSD.DESDE;
        DSS109_REC_FR.HASTA             := RR_INSERT_RO_DSD.HASTA;
   END;
ELSE
   IF (RR_ACCION_GBL = 'RREC')
   THEN
      BEGIN
        DSS109_REC_FR.X2                :=      'X';
        DSS109_REC_FR.CANT_RECLA_RETRO_2:= RR_INSERT_RO_DSD.CANTIDAD_RECLA_RETRO
;
        CANT_RECLA := RR_INSERT_RO_DSD.CANTIDAD_RECLA_RETRO;
        DSS109_REC_FR.DESDE_2           := RR_INSERT_RO_DSD.DESDE;
        DSS109_REC_FR.HASTA_2           := RR_INSERT_RO_DSD.HASTA;
      END;
   ELSE
      RETURN;

DB_OPEN(CLASI_RECLA_DSD, NID, NCD);
DB_RESET (NID, NCD);

CLASI_RECLA_DSD.COD_ID  := RR_INSERT_RO_DSD.CLASIFICACION_RECLA;

DB_QUERY (NID, NCD);
DB_GET_FIRST(NID,NCD);
DSS109_REC_FR.RAZON_RETRO       := CLASI_RECLA_DSD.DSC_LARGA;
DB_CLOSE (NID,NCD);


DB_RESET (RID, RCD);
RR_INSERT_RO_DSD.SEGURO_SOCIAL_JEFE_FAM :=      SS_JEFE_FAMILIA_GBL;
RR_INSERT_RO_DSD.SEGURO_SOCIAL_JEFE_SERV        :=      SS_JEFE_SERVICIO_GBL;
RR_INSERT_RO_DSD.COD_SERVICIO           :=      COD_SERVICIO_GBL;
{RR_INSERT_RO_DSD.FECHA_IDENTIFICADO    :=      RR_FCH_IDN;}
RR_INSERT_RO_DSD.ACCION                 :=      'RETR';
RR_INSERT_RO_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY (RID, RCD);

DB_GET_FIRST(RID,RCD);
WHILE (RCD = 0) OR (COUNTER = 0)
DO BEGIN
IF SUBSTR(RR_INSERT_RO_DSD.COD_SERVICIO,0,3) = SUBSTR(COD_SERVICIO_GBL,0,3)
THEN
   BEGIN
        IF ((RR_INSERT_RO_DSD.STATUS = 'COMPRECL') AND (RR_INSERT_RO_DSD.STATUS_
AUTORIZACION = 'AUTO')) 
         OR (RR_INSERT_RO_DSD.STATUS = 'AUTORIZA')
        THEN 
                BEGIN
{ISP 12/ENE/06}   IF RR_INSERT_RO_DSD.VLR_BALANCE <> 0
                  THEN  
                  BEGIN 
                   CANT_RETRO := RR_INSERT_RO_DSD.CANTIDAD_RECLA_RETRO;
                  END;   
                 IF RR_ACCION_GBL <> 'RREC'
                 THEN
                 BEGIN
                  IF CANT_RETRO > CANT_RECLA
                  THEN
                     BEGIN
                        DSS109_REC_FR.CANT_RETRO := CANT_RECLA;
                {ISP 12/ENE/06 DSS109_REC_FR.BAL_RECLA  := CANT_RECLA - DSS109_R
EC_FR.CANT_RETRO;}
                        DSS109_REC_FR.BAL_RECLA  := CANT_RECLA - RR_INSERT_RO_DS
D.VLR_BALANCE;                  
                     END;
                  ELSE
                     BEGIN
 {ISP 12/ENE/06  SE TRABAJA CON LAS VARIABLES UTILIZADAS PARA CALCULAR EL BALANC
E QUE
                 DESPLEGA LA FORMA YA QUE ESTABAN INVERTIDOS}
                IF CANT_RETRO <> 0
                        THEN
                         BEGIN 
                          DSS109_REC_FR.CANT_RETRO := RR_INSERT_RO_DSD.CANTIDAD_
RECLA_RETRO;
                          DSS109_REC_FR.BAL_RECLA       := DSS109_REC_FR.CANT_RE
CLA_RETRO - RR_INSERT_RO_DSD.CANTIDAD_RECLA_RETRO;
                         END;
                     END;
                 END;
                END;
        {ENDIF}
        COUNTER := COUNTER+1;
   END;
   DB_GET_NEXT(RID,RCD);
END;
   db_reset(recauda_id,recauda_status);
   RECAUDACIONES_RO_DSD.SEGURO_SOCIAL_JEFE_FAM := ss_jefe_familia_gbl;
   RECAUDACIONES_RO_DSD.SEGURO_SOCIAL_JEFE_SERV := ss_jefe_servicio_gbl;
   RECAUDACIONES_RO_DSD.FECHA_IDENTIFICADO := RR_FCH_IDN;
   RECAUDACIONES_RO_DSD.COD_SERVICIO := cod_servICIO_gbl;
   RECAUDACIONES_RO_DSD.RMO_OFICINA := RMO_GBL;
   db_query(recauda_id,recauda_status);
   db_get_first(recauda_id,recauda_status);
   
   while (recauda_status = 0)
   do   begin
            if RECAUDACIONES_RO_DSD.VLR_CANTIDAD = nuL
            then
                VALOR_CANT := 0;
            else
                valor_cant := RECAUDACIONES_RO_DSD.VLR_CANTIDAD;
            {endif}
            CANT_RETRO := CANT_RETRO + valor_cant;
            db_get_next(recauda_id,recauda_status);
        end;
    {end while}

   db_close(recauda_id,recauda_status);




IF RR_ACCION_GBL = 'RREC'
THEN
     BEGIN
     DSS109_REC_FR.PAGOS_EFECTUADOS := CANT_RETRO;
     DSS109_REC_FR.BAL_RECLA_2 :=DSS109_REC_FR.CANT_RECLA_RETRO_2 - CANT_RETRO;

     END;
{ENDIF}

DB_CLOSE (RID,RCD);

DB_OPEN(CALENDARIO_RECLA_RO_DSD, RID, RCD);
DB_RESET (RID, RCD);

CALENDARIO_RECLA_RO_DSD.SEGURO_SOCIAL_JEFE_FAM  :=      SS_JEFE_FAMILIA_GBL;
CALENDARIO_RECLA_RO_DSD.SEGURO_SOCIAL_JEFE_SERV :=      SS_JEFE_SERVICIO_GBL;
CALENDARIO_RECLA_RO_DSD.COD_SERVICIO            :=      'GENN';
CALENDARIO_RECLA_RO_DSD.RMO_OFICINA := RMO_GBL;
DB_QUERY (RID, RCD);
DB_GET_FIRST(RID,RCD);

WHILE (RCD = 0) DO
BEGIN
IF (CALENDARIO_RECLA_RO_DSD.COD_RAZON = 'IRET') OR
   (CALENDARIO_RECLA_RO_DSD.COD_RAZON = 'IREC')
THEN
   BEGIN
     DSS109_REC_FR.DIA := TO_CHAR(CALENDARIO_RECLA_RO_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0,'DD');
     DSS109_REC_FR.MES := TO_CHAR(CALENDARIO_RECLA_RO_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0,'Month');
     DSS109_REC_FR.ANO := TO_CHAR(CALENDARIO_RECLA_RO_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0,'YYYY');
     DSS109_REC_FR.HORA := TO_CHAR(CALENDARIO_RECLA_RO_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0,'HH');
     DSS109_REC_FR.MINUTOS := TO_CHAR(CALENDARIO_RECLA_RO_DSD.FCH_ACTIVIDAD_HORA_MIN_CONTAC0,'MI');
   END;
DB_GET_NEXT(RID,RCD);
END;

DSS109_REC_FR.TEL1      := RMO_PHONE_GBL;
DSS109_REC_FR.TEL2      := RMO_PHONE_GBL;
DSS109_REC_FR.TEL3      := RMO_PHONE_GBL;

DB_CLOSE (RID,RCD);

SET_NOTRACE();
END;
    



--------------------------------------------------------------------- */
