package gov.dlf.presentation;


import gov.dlf.facade.SAIC_DMQ_ORA_Application;
import gov.dlf.logic.COMPLETAR_TRANSACCION_ADL;
import gov.dlf.logic.SET_FAILURE_ADL;
import gov.dlf.logic.SOLICITUD_SERV_BF_ADL;

import java.awt.event.ActionEvent;

import net.maintrend.datamanager.DataStoreRow;
import net.maintrend.interfaces.IRegisteredObject;
import net.maintrend.interlink.ParameterSet;
import net.maintrend.jdatapanel.JDataPanelGroup;
import net.maintrend.jdatapanel.JDataPanelGroupInstance;
import net.maintrend.jdatapanel.JDataPanelGroupInstanceList;
import net.maintrend.jdatapanel.JDataPanelListener;
import net.maintrend.jdatapanel.ModeStyle;
import net.maintrend.mdi.MDIFrame;
import net.maintrend.rallyengine.Form;
import net.maintrend.rallyengine.FormSheet;
import net.maintrend.rallyengine.LegendRegistry;
import net.maintrend.rallyengine.RallyApplication;
import net.maintrend.util.Compare;



/**
 * 
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SOLICITUD_SERVICIO_UPDATE_PKT
     extends FormSheet
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static final long serialVersionUID = 0L;



  // -------------------------------------------------------------------
  // ----------   Constructors and Supporting Methods   ----------------

  /**
   *
   */
  public SOLICITUD_SERVICIO_UPDATE_PKT ( )
  {
    super ( "SOLICITUD_SERVICIO_UPDATE_PKT" );

    this.setEvents ( );
  }


  /**
   *
   */
  public SOLICITUD_SERVICIO_UPDATE_PKT ( String packetTitle )
  {
    super ( packetTitle );

    this.setEvents ( );
  }


  /**
   *
   */
  public SOLICITUD_SERVICIO_UPDATE_PKT ( MDIFrame pFrame )
  {
    super ( "SOLICITUD_SERVICIO_UPDATE_PKT", pFrame );

    this.setEvents ( );
  }


  /**
   *
   */
  public void createComponents ( )
  {
    this.createComponents ( new SOLICITUD_SERVICIO_FR ( ) );
    this.setLegendText ( LegendRegistry.get ( "30000" ) );
  }



  // -------------------------------------------------------------------
  // ----------   Static Invocation   ----------------------------------

  /**
   *
   */
  public static SOLICITUD_SERVICIO_UPDATE_PKT get ( RallyApplication __app )
  {
    return ( SOLICITUD_SERVICIO_UPDATE_PKT ) __app.getNewInstance ( "SOLICITUD_SERVICIO_UPDATE_PKT" );
  }


  /**
   *
   */
  public static IRegisteredObject exec ( RallyApplication __app )
  {
    SOLICITUD_SERVICIO_UPDATE_PKT fSheet = SOLICITUD_SERVICIO_UPDATE_PKT.get ( __app );
    fSheet.execute ( null );
    Form form = ( Form ) fSheet.getModel ( );
    int iMode = form.getInitialMode ( );
    if ( iMode == ModeStyle.PRINT || iMode == ModeStyle.WRITE )
    {
      String html = __app.getPrintHtml ( form );
      __app.registerClientContent ( html, "printStr" );
      __app.unregister ( form );
      return null;
    }
    return fSheet;
  }


  /**
   *
   */
  public static IRegisteredObject exec ( RallyApplication __app, ParameterSet ps )
  {
    return SOLICITUD_SERVICIO_UPDATE_PKT.exec ( __app );
  }



  // -------------------------------------------------------------------
  // -----------   Actions Support   -----------------------------------

  /**
   *
   */
  public boolean performAction ( String actionName, ActionEvent e )
  {
    return super.performAction ( actionName, e );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   *
   */
  public void open ( )
  {
    super.open ( );
    this.formModel.setInitialMode ( ModeStyle.UPDATE );
    this.formModel.setMode ( ModeStyle.UPDATE );
    this.formModel.build ( );
    this.notifyListener ( JDataPanelListener.AFTERLOAD );
  }



  // -------------------------------------------------------------------
  // ----------   Action Sites   ---------------------------------------

  /**
   *
   */
  public void setEvents ( )
  {

    this.formModel.setListener ( JDataPanelListener.AFTERLOAD, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; SOLICITUD_SERV_BF_ADL.exec ( app );

        Form form  = app.getLastForm ( "SOLICITUD_SERVICIO_FR" );
        double ssc = form.getDoubleItem ( "SEGURO_SOCIAL_CLIENTE" );
        
        if ( Compare.equals ( form.getDoubleItem ( "SEGURO_SOCIAL_JEFE_FAMILIA" ), 000000000 ) && ssc > 0 ) 
        {
          try
          {
            form.setItem ( "SEGURO_SOCIAL_JEFE_FAMILIA", ssc );
            ( ( SAIC_DMQ_ORA_Application ) app ).SSN_JEFE_FAM_GBL = ssc;
        
            JDataPanelGroup group1 = ( JDataPanelGroup ) form.getInDepth ( "CLIENTE_SOLICITA_GP" );
            DataStoreRow gRow = ( DataStoreRow ) group1.getDataInstance ( ).getData ( );
            gRow.update ( );
            form.build ( );
          }
          catch ( Exception ex )
          {}
        }
        
        
        JDataPanelGroupInstanceList resiList = form.getGroupInstanceList ( "DIR_RESI_GP" );
        JDataPanelGroupInstanceList postList = form.getGroupInstanceList ( "DIR_POST_GP" );
        if ( resiList.size ( ) == 0 ) resiList.addInstance ( );
        if ( postList.size ( ) == 0 ) postList.addInstance ( );

        return app.errorFlag;
      }
    } );
    this.formModel.setListener ( JDataPanelListener.BEFOREQUIT, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; SET_FAILURE_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.formModel.setListener ( JDataPanelListener.BEFORECOMMIT, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; COMPLETAR_TRANSACCION_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.formModel.setListener ( JDataPanelListener.BEFOREROLLBACK, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; COMPLETAR_TRANSACCION_ADL.exec ( app ); return app.errorFlag;
      }
    } );
  }
}
