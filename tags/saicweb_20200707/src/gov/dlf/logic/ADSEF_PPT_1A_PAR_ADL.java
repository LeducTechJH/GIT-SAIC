package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class ADSEF_PPT_1A_PAR_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double NGET_CMD = 0;



  public String OLD_COMMAND = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).NGET_CMD = value.getDouble ( );
  }  

  
  /**  */
  public static void setOLD_COMMAND  ( RallyApplication __app, Parameter value )
  {
    ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).OLD_COMMAND = value.getString ( );
  }  
    


  /**  */
  public static String getOLD_COMMAND  ( RallyApplication __app )
  {
    return ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).OLD_COMMAND;
  }


  /**  */
  public static void setOLD_COMMAND  ( RallyApplication __app, String value )
  {
    ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).OLD_COMMAND = value;
  }


  /**  */
  public static void setOLD_COMMAND  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).OLD_COMMAND = ( String ) value;
  }




  /**  */
  public static double getNGET_CMD  ( RallyApplication __app )
  {
    return ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).NGET_CMD;
  }


  /**  */
  public static Double getNGET_CMDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).NGET_CMD );
  }


  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, double value )
  {
    ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).NGET_CMD = value;
  }


  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, Object value )
  {
    ( ( ADSEF_PPT_1A_PAR_ADL ) __app.getADL ( ADSEF_PPT_1A_PAR_ADL.class ) ).NGET_CMD = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static ADSEF_PPT_1A_PAR_ADL get ( RallyApplication __app )
  {
    ADSEF_PPT_1A_PAR_ADL adl = new ADSEF_PPT_1A_PAR_ADL ( );
    __app.register ( adl, "ADSEF_PPT_1A_PAR_ADL" );
    __app.setADL ( ADSEF_PPT_1A_PAR_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    ADSEF_PPT_1A_PAR_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    ADSEF_PPT_1A_PAR_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "ADSEF_PPT_1A_PAR_ADL" );
    if ( rObj != null && rObj instanceof ADSEF_PPT_1A_PAR_ADL )
    {
      this.app.setADL ( ADSEF_PPT_1A_PAR_ADL.class, ( ADSEF_PPT_1A_PAR_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "ADSEF_PPT_1A_PAR_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "ADSEF_PPT_1A_PAR_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    this.app.FECHA_DESDE_GBL = RallySpanishDatesParser.parseDateString ( "" );
    this.app.FECHA_HASTA_GBL = RallySpanishDatesParser.parseDateString ( "" );
    SEL_FECHA_PTRA_PKT.exec ( this.app );
    return;

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    OLD_COMMAND = this.app.COMANDO_DCL_GBL;
    this.app.COMANDO_DCL_GBL = "@SAIC$APPL_COM:PRINT_132.COM";
    if ( ( ! Compare.equals ( this.app.FECHA_DESDE_GBL, RallySpanishDatesParser.parseDateString ( "" ) ) ) && ( ! Compare.equals ( this.app.FECHA_HASTA_GBL, RallySpanishDatesParser.parseDateString ( "" ) ) )  ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      ADSEF_PPT_1A_PKT.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    this.app.COMANDO_DCL_GBL = OLD_COMMAND;

  }
}



/* ---------------------------------------------------------------------


     
VAR
   NGET_CMD : NUMBER;
   OLD_COMMAND  : CHAR;

BEGIN
   FECHA_DESDE_GBL := TO_DATE('');
   FECHA_HASTA_GBL := TO_DATE('');
   CALL SEL_FECHA_PTRA_PKT;
   OLD_COMMAND := COMANDO_DCL_GBL;
   COMANDO_DCL_GBL := '@SAIC$APPL_COM:PRINT_132.COM';
   IF (FECHA_DESDE_GBL <>  TO_DATE('')) AND (FECHA_HASTA_GBL <>  TO_DATE('')) TH
EN
        CALL ADSEF_PPT_1A_PKT;
   COMANDO_DCL_GBL :=  OLD_COMMAND;
END;

    



--------------------------------------------------------------------- */
