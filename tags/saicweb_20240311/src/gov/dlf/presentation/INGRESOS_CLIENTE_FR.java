package gov.dlf.presentation;


import gov.dlf.facade.SAIC_DMQ_ORA_Application;
import gov.dlf.logic.BILLETES_ADL;
import gov.dlf.logic.CHECK_FLAG_BILLETE_ADL;
import gov.dlf.logic.CHECK_INGRESOS_CLIENTE_PARK_CMD_ADL;
import gov.dlf.logic.CHECK_NUM_INGRESO_ADL;
import gov.dlf.logic.INGRE_BV_ADL;
import gov.dlf.logic.VALIDAR_FRQ_INGRESO_ADL;

import net.maintrend.appmanager.Application;
import net.maintrend.jdatapanel.JDataPanelGroupArguments;
import net.maintrend.jdatapanel.JDataPanelListener;
import net.maintrend.rallyengine.Form;
import net.maintrend.rallyengine.RallyApplication;
import net.maintrend.util.Debug;
import net.maintrend.util.ResourceUtil;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class INGRESOS_CLIENTE_FR
     extends Form
{
  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;



  // -------------------------------------------------------------------
  // ----------   Constructors and supporting methods   ----------------

  /**
   *
   */
  public INGRESOS_CLIENTE_FR ( )
  {
    super ( );
    this.setName ( "INGRESOS_CLIENTE_FR" );

    Debug.println ( Debug.TRACE, "INGRESOS_CLIENTE_FR - constructor" );

    this.setDefinitionPath ( "gov/dlf/presentation/INGRESOS_CLIENTE_FR.jdp" );
    String definition = ResourceUtil.getResourceText ( this.definitionPath );
    this.setDefinition     ( definition );

    this.setHighLightSelected   ( false );
    this.compressFieldLocations ( false, true );  // Compresses only Y-locations

    this.setUpdateOnInstanceChange ( false );
  }


  /**
   * Overrides ancestor's script
   *
   * @param __app
   */
  public void setApplication ( Application __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.setDataManager ( this.app.getDataManager ( ) );
    }

    this.setArguments ( "NOMBRE_CLIENTE", new INGRESOS_CLIENTE_FR_NOMBRE_CLIENTE_Arguments ( this ) );

    this.setObjectEvents ( );
  }


  /**
   * Overrides ancestor's method
   * 
   * @return
   */
  public RallyApplication getApplication ( )
  {
    return this.app;
  }



  // -------------------------------------------------------------------
  // ----------   Action Sites   ---------------------------------------

  /**
   *
   */
  public void setObjectEvents ( )
  {
    this.registerListener ( "SEGURO_SOCIAL_CLIENTE", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; CHECK_NUM_INGRESO_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.registerListener ( "PARK", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; CHECK_NUM_INGRESO_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.registerListener ( "PARK", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; CHECK_INGRESOS_CLIENTE_PARK_CMD_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.registerListener ( "COD_TIPO_INGRESO", JDataPanelListener.BEFORELEAVE, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; CHECK_FLAG_BILLETE_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.registerListener ( "VLR_CANTIDAD_INGRESO", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; BILLETES_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.registerListener ( "FLG_FRECUENCIA", JDataPanelListener.AFTERVALUECHANGE, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; VALIDAR_FRQ_INGRESO_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.registerListener ( "FLG_FRECUENCIA", JDataPanelListener.VALIDATION, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; VALIDAR_FRQ_INGRESO_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.registerListener ( "PARKING", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; app.callCommand ( "FINISH ACTION" ); return app.errorFlag;
      }
    } );
    this.registerListener ( "INGRESO_CLIENTE", JDataPanelListener.BEFOREENTER, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; INGRE_BV_ADL.exec ( app ); return app.errorFlag;
      }
    } );
    this.registerListener ( "INGRESO_CLIENTE", JDataPanelListener.BEFOREINSERT, new JDataPanelListener ( )
    {
      public boolean eventFired ( String eventName )
      {
        app.errorFlag = true; INGRE_BV_ADL.exec ( app ); return app.errorFlag;
      }
    } );
  }
}





/**
 *
 */
class INGRESOS_CLIENTE_FR_NOMBRE_CLIENTE_Arguments extends JDataPanelGroupArguments
{
  /**  */
  protected Form model;
  /**  */
  protected SAIC_DMQ_ORA_Application app = null;

  /**  */
  public INGRESOS_CLIENTE_FR_NOMBRE_CLIENTE_Arguments ( Form form )
  {
    this.model = form;

    this.setArgName ( "SS_PAR" );
    this.setArgName ( "RMO_PAR" );
  }

  /**  */
  public Object getArgValue ( String argName )
  {
    if ( this.app == null ) this.app = ( SAIC_DMQ_ORA_Application ) this.model.getApplication ( );
    if ( argName == null )
    {
      return null;
    }
    else if ( argName.equals ( "SS_PAR" ) )
    {
      return this.app.getSSN_GBL ( ); // Global Variable
    }
    else if ( argName.equals ( "RMO_PAR" ) )
    {
      return this.app.getRMO_GBL ( ); // Global Variable
    }
    return null;
  }
}






