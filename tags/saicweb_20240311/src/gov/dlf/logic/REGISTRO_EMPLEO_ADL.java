package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class REGISTRO_EMPLEO_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;
 
  public boolean _condition1 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;

  public double NGET_CMD = 0;



  public DataStore REG_EMPLEO_LOC_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, Parameter value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).NGET_CMD = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getREG_EMPLEO_LOC_DSD  ( RallyApplication __app )
  {
    return ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).REG_EMPLEO_LOC_DSD;
  }


  /**  */
  public static void setREG_EMPLEO_LOC_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).REG_EMPLEO_LOC_DSD = value;
  }


  /**  */
  public static void setREG_EMPLEO_LOC_DSD  ( RallyApplication __app, Object value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).REG_EMPLEO_LOC_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getNGET_CMD  ( RallyApplication __app )
  {
    return ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).NGET_CMD;
  }


  /**  */
  public static Double getNGET_CMDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).NGET_CMD );
  }


  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, double value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).NGET_CMD = value;
  }


  /**  */
  public static void setNGET_CMD  ( RallyApplication __app, Object value )
  {
    ( ( REGISTRO_EMPLEO_ADL ) __app.getADL ( REGISTRO_EMPLEO_ADL.class ) ).NGET_CMD = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static REGISTRO_EMPLEO_ADL get ( RallyApplication __app )
  {
    REGISTRO_EMPLEO_ADL adl = new REGISTRO_EMPLEO_ADL ( );
    __app.register ( adl, "REGISTRO_EMPLEO_ADL" );
    __app.setADL ( REGISTRO_EMPLEO_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    REGISTRO_EMPLEO_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    REGISTRO_EMPLEO_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "REGISTRO_EMPLEO_ADL" );
    if ( rObj != null && rObj instanceof REGISTRO_EMPLEO_ADL )
    {
      this.app.setADL ( REGISTRO_EMPLEO_ADL.class, ( REGISTRO_EMPLEO_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "REGISTRO_EMPLEO_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "REGISTRO_EMPLEO_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    NGET_CMD = RallyAppCommandFactory.translate ( this.app.getLastCommandName ( ) );
    this.app.MOD_PTRA_GBL = "REUP";
    if ( ( ! Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "ACEPTA_REGISTRO_EMPLEO" ), "S" ) ) && ( ! Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "ACEPTA_REGISTRO_EMPLEO" ), "N" ) )  ) 
    {
      this.app.setError ( 0, 6504 );
      this.app.form ( "INFOR_BIO_FRM" ).setItem ( "ACEPTA_REGISTRO_EMPLEO", ""  );
      this.app.errorFlag = false;
    }
    if ( ( ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TIPO_REGISTRO" ), "DISP" ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TIPO_REGISTRO" ), "HABL" ) ) ) && ( ! Compare.equals ( NGET_CMD, 6143 ) )  ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      if ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "ACEPTA_REGISTRO_EMPLEO" ), "S" ) ) 
      {
        this._condition1 = true;
      }
      else
      {
        this._condition1 = false;
      }
      if ( this._condition1 )
      {
        REG_EMPLEO_LOC_DSD = this.dm.create ( "REG_EMPLEO_LOC_DSD" );
        OPEN_ID = REG_EMPLEO_LOC_DSD.getId ( );
        STATUS_ID = RallyDataStoreException.getDefault ( );

        STATUS_ID  = this.dm.reset ( OPEN_ID );

        this.dm.setField ( this.dm.get ( "REG_EMPLEO_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "INFOR_BIO_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_CLIENTE" ));
        this.dm.setField ( this.dm.get ( "REG_EMPLEO_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

        STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
        STATUS_ID  = this.dm.retrieve ( OPEN_ID );

        STATUS_ID  = this.dm.firstRow ( OPEN_ID );

        if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
        {
          this.dm.setField ( this.dm.get ( "REG_EMPLEO_LOC_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.form ( "INFOR_BIO_FRM" ).getDoubleItem ( "SEGURO_SOCIAL_CLIENTE" ));
          this.dm.setField ( this.dm.get ( "REG_EMPLEO_LOC_DSD" ), "FECHA_REGISTRO", this.app.SYSTEM_DATE );
          this.dm.setField ( this.dm.get ( "REG_EMPLEO_LOC_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );
          this.dm.setField ( this.dm.get ( "REG_EMPLEO_LOC_DSD" ), "NUM_SEQUENCIA", 1 );

          STATUS_ID  = this.dm.insertRow ( OPEN_ID );

          STATUS_ID  = this.dm.dbCommit ( );
        }
        STATUS_ID  = this.dm.dbClose ( OPEN_ID );

        REGISTRO_EMPLEO_PKT.exec ( this.app );
        return;
      }
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ( ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TIPO_REGISTRO" ), "DISP ) ) || ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "TIPO_REGISTRO" ), "HABL" ) ) ) && ( ! Compare.equals ( NGET_CMD, 6143 ) )  ) 
    {
      if ( this._condition1 )    //      if ( Compare.equals ( this.app.form ( "INFOR_BIO_FRM" ).getStringItem ( "ACEPTA_REGISTRO_EMPLEO" ), "S" ) ) 
      {
      }
      else
      {
        this.app.setError ( 1, 6050 );
      }
    }

  }
}



/* ---------------------------------------------------------------------


     
VAR
   OPEN_ID  : NUMBER;
   STATUS_ID: NUMBER;
   NGET_CMD : NUMBER;

BEGIN

NGET_CMD := GET_CMD();

MOD_PTRA_GBL := 'REUP';

IF (INFOR_BIO_FRM.ACEPTA_REGISTRO_EMPLEO<>'S') AND
      (INFOR_BIO_FRM.ACEPTA_REGISTRO_EMPLEO<>'N') 
        THEN BEGIN
              ERROR(6504);
              INFOR_BIO_FRM.ACEPTA_REGISTRO_EMPLEO := '';
              SET_FAILURE();
             END;
  
IF ((INFOR_BIO_FRM.TIPO_REGISTRO ='VOLU')
 OR (INFOR_BIO_FRM.TIPO_REGISTRO ='OBLI'))
 AND (NGET_CMD <> 6143)  
 THEN
   BEGIN
     IF (INFOR_BIO_FRM.ACEPTA_REGISTRO_EMPLEO = 'S') THEN
      BEGIN
        DB_OPEN(REG_EMPLEO_LOC_DSD,OPEN_ID,STATUS_ID);
        DB_RESET(OPEN_ID,STATUS_ID);
        REG_EMPLEO_LOC_DSD.SEGURO_SOCIAL_CLIENTE:=INFOR_BIO_FRM.SEGURO_SOCIAL_CL
IENTE;
        REG_EMPLEO_LOC_DSD.RMO_OFICINA:=RMO_GBL;
        DB_QUERY(OPEN_ID,STATUS_ID);
        DB_GET_FIRST(OPEN_ID,STATUS_ID);
        IF STATUS_ID <> 0 THEN
          BEGIN
                REG_EMPLEO_LOC_DSD.SEGURO_SOCIAL_CLIENTE:= INFOR_BIO_FRM.SEGURO_
SOCIAL_CLIENTE;
                REG_EMPLEO_LOC_DSD.FECHA_REGISTRO := SYSTEM_DATE;
                REG_EMPLEO_LOC_DSD.RMO_OFICINA:=RMO_GBL;
                REG_EMPLEO_LOC_DSD.NUM_SEQUENCIA := 1;
                DB_INSERT(OPEN_ID,STATUS_ID);
                DB_COMMIT(STATUS_ID);
          END;
        DB_CLOSE(OPEN_ID,STATUS_ID);
        CALL REGISTRO_EMPLEO_PKT;
     END;
    ELSE 
        ERROR(6050);

   END;
END;

    



--------------------------------------------------------------------- */
