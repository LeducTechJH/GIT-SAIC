package gov.dlf.logic;


import gov.dlf.external.*;
import gov.dlf.facade.*;
import gov.dlf.presentation.*;


import java.util.*;

import net.maintrend.appmanager.*;
import net.maintrend.datamanager.*;
import net.maintrend.interfaces.*;
import net.maintrend.interlink.*;
import net.maintrend.mdi.*;
import net.maintrend.rallyengine.*;
import net.maintrend.util.*;
import net.maintrend.util.format.*;



/**
 * __Comment
 *
 * Generated by Rally-to-Java Convertor. MainTrend Ltd.
 */
public class SC776_CHECK_RSE_ADL
     extends ADL
{
  // -------------------------------------------------------------------
  // ----------   Class Attributes   -----------------------------------

  /**  */
  public static boolean staticCall = false;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes   --------------------------------

  /**  */
  public SAIC_DMQ_ORA_Application app;
  /**  */
  public RallyDataManager dm = null;



  // -------------------------------------------------------------------
  // ----------   Instance Condition Attributes   ----------------------
 
  public boolean _condition0 = false;

 

  // -------------------------------------------------------------------
  // ----------   Instance Export Attributes   -------------------------

  public double OPEN_ID = 0;

  public double STATUS_ID = 0;



  public DataStore DIRECCIONES_RO_DSD = null;

  public DataStore SC776_EMPLEO_DSD = null;



  // -------------------------------------------------------------------
  // ----------   Instance Attributes' Access Methods   ----------------

  
  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).OPEN_ID = value.getDouble ( );
  }  

  
  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Parameter value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).STATUS_ID = value.getDouble ( );
  }  
    


  /**  */
  public static DataStore getDIRECCIONES_RO_DSD  ( RallyApplication __app )
  {
    return ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).DIRECCIONES_RO_DSD;
  }


  /**  */
  public static void setDIRECCIONES_RO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).DIRECCIONES_RO_DSD = value;
  }


  /**  */
  public static void setDIRECCIONES_RO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).DIRECCIONES_RO_DSD = ( DataStore ) value;
  }



  /**  */
  public static DataStore getSC776_EMPLEO_DSD  ( RallyApplication __app )
  {
    return ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).SC776_EMPLEO_DSD;
  }


  /**  */
  public static void setSC776_EMPLEO_DSD  ( RallyApplication __app, DataStore value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).SC776_EMPLEO_DSD = value;
  }


  /**  */
  public static void setSC776_EMPLEO_DSD  ( RallyApplication __app, Object value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).SC776_EMPLEO_DSD = ( DataStore ) value;
  }




  /**  */
  public static double getOPEN_ID  ( RallyApplication __app )
  {
    return ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).OPEN_ID;
  }


  /**  */
  public static Double getOPEN_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).OPEN_ID );
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, double value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).OPEN_ID = value;
  }


  /**  */
  public static void setOPEN_ID  ( RallyApplication __app, Object value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).OPEN_ID = ( ( Double ) value ).doubleValue ( );
  }


  /**  */
  public static double getSTATUS_ID  ( RallyApplication __app )
  {
    return ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).STATUS_ID;
  }


  /**  */
  public static Double getSTATUS_IDDouble ( RallyApplication __app )
  {
    return new Double ( ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).STATUS_ID );
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, double value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).STATUS_ID = value;
  }


  /**  */
  public static void setSTATUS_ID  ( RallyApplication __app, Object value )
  {
    ( ( SC776_CHECK_RSE_ADL ) __app.getADL ( SC776_CHECK_RSE_ADL.class ) ).STATUS_ID = ( ( Double ) value ).doubleValue ( );
  }



  // -------------------------------------------------------------------
  // ----------   Methods   --------------------------------------------

  /**
   * 
   * @param __app
   * @return
   */
  public static SC776_CHECK_RSE_ADL get ( RallyApplication __app )
  {
    SC776_CHECK_RSE_ADL adl = new SC776_CHECK_RSE_ADL ( );
    __app.register ( adl, "SC776_CHECK_RSE_ADL" );
    __app.setADL ( SC776_CHECK_RSE_ADL.class, adl ); 
    adl.setApplication ( __app );
    return adl;
  }


  /**
   *
   * @param __app
   * @param ps
   *
   * @return
   */
  public static void exec ( RallyApplication __app, ParameterSet ps )
  {
    SC776_CHECK_RSE_ADL.get ( __app ).process ( ps );
  }


  /**
   *
   * @param __app
   *
   * @return
   */
  public static void exec ( RallyApplication __app )
  {
    ParameterSet ps = null;
    SC776_CHECK_RSE_ADL.exec ( __app, ps );
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param __app
   */
  public void setApplication ( RallyApplication __app )
  {
    this.app = ( SAIC_DMQ_ORA_Application ) __app;
    if ( this.app != null )
    {
      this.dm = ( RallyDataManager ) this.app.getDataManager ( );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param parms
   */
  public void execute ( ParameterSet parms )
  {
    this.process ( parms );
  }




  /**
   *
   */
  protected void doReturn ( )
  {
    this.unregister ( );
  }


  /**
   *
   */
  public void unregister ( )
  {
    this.app.unregister ( this );
    IRegisteredObject rObj = this.app.get ( "SC776_CHECK_RSE_ADL" );
    if ( rObj != null && rObj instanceof SC776_CHECK_RSE_ADL )
    {
      this.app.setADL ( SC776_CHECK_RSE_ADL.class, ( SC776_CHECK_RSE_ADL ) rObj );
    }
  }


  /**
   * Overrides the ancestor's method
   * 
   * @param ps
   */
  protected void process ( ParameterSet ps )
  {
    Debug.println ( Debug.TRACE, "SC776_CHECK_RSE_ADL Step " + this.currentStep );
    super.process ( ps );
    switch ( this.currentStep ) 
    {
      case 0:  { this.currentStep ++; this.step0 ( this.keyParms ); break; }
      case 1:  { this.currentStep ++; this.step1 ( this.keyParms ); break; }
      case 2:  { this.currentStep ++; this.step2 ( this.keyParms ); break; }
      case 3:  { this.currentStep ++; this.step3 ( this.keyParms ); break; }
      default: 
      { 
        this.currentStep = 0;
        Debug.println ( Debug.TRACE, "SC776_CHECK_RSE_ADL ended" );
        this.unregister ( );
        break;
      }
    }
    if ( this.currentStep > 0 ) this.app.goOn ( );
  }



  /**
   *
   */
  protected void step0 ( ParameterSet ps )
  {

    if ( ! Compare.equals ( this.app.form ( "SC776_FR" ).getDoubleItem ( "RECLA_RETRO_TBL_SEGURO_SOCIAL_JEFE_FAM" ), this.app.SS_JEFE_FAMILIA_GBL ) ) 
    {
      this._condition0 = true;
    }
    else
    {
      this._condition0 = false;
    }
    if ( this._condition0 )
    {
      this.app.setError ( 0, 1071 );
      GET_SC776_SET_ADL.exec ( this.app );
      return;
    }

  }


  /**
   *
   */
  protected void step1 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ! Compare.equals ( this.app.form ( "SC776_FR" ).getDoubleItem ( "RECLA_RETRO_TBL_SEGURO_SOCIAL_JEFE_FAM" ), this.app.SS_JEFE_FAMILIA_GBL ) ) 
    {
      this.app.executeCommand ( RallyAppCommandFactory.EXITACTION );
      return;
    }

  }


  /**
   *
   */
  protected void step2 ( ParameterSet ps )
  {
    if ( this._condition0 )    //    if ( ! Compare.equals ( this.app.form ( "SC776_FR" ).getDoubleItem ( "RECLA_RETRO_TBL_SEGURO_SOCIAL_JEFE_FAM" ), this.app.SS_JEFE_FAMILIA_GBL ) ) 
    {
      return; 
    }
    if ( Compare.equals ( this.app.form ( "GET_SC776_FR" ).getStringItem ( "OPT" ), "C" ) ) 
    {
      this.app.form ( "SC776_FR" ).setItem ( "CANCELAR", "X"  );
    }
    if ( Compare.equals ( this.app.form ( "GET_SC776_FR" ).getStringItem ( "OPT" ), "E" ) ) 
    {
      this.app.form ( "SC776_FR" ).setItem ( "ENMENDAR", "X"  );
    }

    this.callParms.clear ( );
    this.callParms.set ( this.app.SS_JEFE_FAMILIA_GBL  );
    this.callParms.set ( this.app.form ( "SC776_FR" ).getStringItem ( "NOMBRE_COMPLETO" ) );
    NOMBRE_COMPLETO_ADL.exec ( this.app, this.callParms );
    return;

  }


  /**
   *
   */
  protected void step3 ( ParameterSet ps )
  {
    this.callParms.reset ( );
    this.app.SS_JEFE_FAMILIA_GBL  = this.callParms.getDouble ( );
    this.app.form ( "SC776_FR" ).setItem ( "NOMBRE_COMPLETO", this.callParms.getString ( ) );

    DIRECCIONES_RO_DSD = this.dm.create ( "DIRECCIONES_RO_DSD" );
    OPEN_ID = DIRECCIONES_RO_DSD.getId ( );
    STATUS_ID = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 1, STATUS_ID );
      this.doReturn ( );
      return; 
    }

    STATUS_ID  = this.dm.reset ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 2, STATUS_ID );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "SEGURO_SOCIAL_JEFE_FAM", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "SEGURO_SOCIAL_JEFE_SERV", this.app.SS_JEFE_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "COD_SERVICIO", this.app.COD_SERVICIO_GBL );
    this.dm.setField ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "COD_TIPO_DIRECCION", "RESI" );
    this.dm.setField ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_ID  = this.dm.retrieve ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 3, STATUS_ID );
      this.doReturn ( );
      return; 
    }

    STATUS_ID  = this.dm.firstRow ( OPEN_ID );

    if ( Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.form ( "SC776_FR" ).setItem ( "DR", this.dm.getFieldString ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "DSC_DIRECCION_1" ) + " " + this.dm.getFieldString ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "DSC_DIRECCION_2" ) + " " + StringService.toStringValue  ( this.dm.getFieldDouble ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "ZIP_CODE" ) ) + " " + StringService.toStringValue  ( this.dm.getFieldDouble ( this.dm.get ( "DIRECCIONES_RO_DSD" ), "ZIP_CODE_4" ) )  );
    }
    STATUS_ID  = this.dm.dbClose ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 4, STATUS_ID );
      this.doReturn ( );
      return; 
    }
    SC776_EMPLEO_DSD = this.dm.create ( "SC776_EMPLEO_DSD" );
    OPEN_ID = SC776_EMPLEO_DSD.getId ( );
    STATUS_ID = RallyDataStoreException.getDefault ( );
    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 5, STATUS_ID );
      this.doReturn ( );
      return; 
    }

    STATUS_ID  = this.dm.reset ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 6, STATUS_ID );
      this.doReturn ( );
      return; 
    }
    this.dm.setField ( this.dm.get ( "SC776_EMPLEO_DSD" ), "SEGURO_SOCIAL_CLIENTE", this.app.SS_JEFE_FAMILIA_GBL );
    this.dm.setField ( this.dm.get ( "SC776_EMPLEO_DSD" ), "RMO_OFICINA", this.app.RMO_GBL );

    STATUS_ID  = this.dm.limitQueryFromBuffer ( OPEN_ID );
    STATUS_ID  = this.dm.retrieve ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 7, STATUS_ID );
      this.doReturn ( );
      return; 
    }

    STATUS_ID  = this.dm.firstRow ( OPEN_ID );

    if ( Compare.equals ( STATUS_ID, 0 ) ) 
    {
      while ( Compare.equals ( STATUS_ID, 0 ) ) 
      {
        if ( Compare.ge ( this.dm.getFieldDate ( this.dm.get ( "SC776_EMPLEO_DSD" ), "FECHA_TERMINA_EMPLEO" ), this.app.SYSTEM_DATE ) ) 
        {
          this.app.form ( "SC776_FR" ).setItem ( "TRABAJO", this.dm.getFieldString ( this.dm.get ( "SC776_EMPLEO_DSD" ), "NOMBRE_PATRONO" )  );
          this.app.form ( "SC776_FR" ).setItem ( "CARGO", this.dm.getFieldString ( this.dm.get ( "SC776_EMPLEO_DSD" ), "CODIGO_EMPLEO" )  );
          this.app.form ( "SC776_FR" ).setItem ( "SUELDO", this.dm.getFieldDouble ( this.dm.get ( "SC776_EMPLEO_DSD" ), "INGRESO" )  );
        }

        STATUS_ID  = this.dm.nextRow ( OPEN_ID );

      }
    }
    STATUS_ID  = this.dm.dbClose ( OPEN_ID );

    if ( ! Compare.equals ( STATUS_ID, 0 ) ) 
    {
      this.app.setError ( 8, STATUS_ID );
      this.doReturn ( );
      return; 
    }
    PRINT_MSG_ADL.exec ( this.app );
    return;

  }
}



/* ---------------------------------------------------------------------


     
procedure sc776_check_rse_adl;
var
        open_id         :       number(9,0);
        status_id       :       number(9,0);
begin
        if SC776_FR.RECLA_RETRO_TBL_SEGURO_SOCIAL_JEFE_FAM <> ss_jefe_familia_gb
l
        then
                begin
                        error(1071);
                        call get_sc776_set_adl;
                        EXECUTE_CMD('FINISH ACTION');
                end;
        {endif}
{verificar opt en pantalla para determinar cancelar o enmendar}
if get_sc776_fr.opt = 'C'
then
        begin
                sc776_fr.cancelar := 'X';
        end;
{endif}
if get_sc776_fr.opt = 'E'
then
        begin
                sc776_fr.enmendar := 'X';
        end;
{endif}
{buscar el nombre del cliente}
call nombre_completo_adl(ss_jefe_familia_gbl,sc776_fr.nombre_completo);
db_open(direcciones_RO_DSD,open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;
{endif}
db_reset(open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;
{endif}
direcciones_RO_dsd.seguro_social_jefe_fam  := ss_jefe_familia_gbl;
direcciones_RO_dsd.seguro_social_jefe_serv := ss_jefe_servicio_gbl;
direcciones_RO_dsd.cod_servicio            := cod_servicio_gbl;
direcciones_RO_dsd.cod_tipo_direccion      := 'RESI';
DIRECCIONES_RO_DSD.RMO_OFICINA          := RMO_GBL;
db_query(open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;
{endif}
db_get_first(open_id,status_id);
if status_id = 0
then
        begin
                sc776_fr.dr     :=      direcciones_RO_dsd.dsc_direccion_1 || ' 
' ||
                                        direcciones_RO_dsd.dsc_direccion_2 || ' 
' ||
                                        to_char(direcciones_RO_dsd.zip_code) || 
' ' ||
                                        to_char(direcciones_RO_dsd.zip_code_4);
        end;
{endif}
db_close(open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;
{endif}
{vamos a buscar en la tabla de registro_empleo el trabajo actual}
db_open(sc776_empleo_dsd,open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;
{endif}
db_reset(open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;
{endif}
sc776_empleo_dsd.seguro_social_cliente := ss_jefe_familia_gbl;
SC776_EMPLEO_DSD.RMO_OFICINA:=RMO_GBL;
db_query(open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;
{endif}
db_get_first(open_id,status_id);
if status_id = 0
then
        begin
                while (status_id = 0) do
                begin
                        if sc776_empleo_dsd.fecha_termina_empleo >= system_date
                        then
                                begin
                                sc776_fr.trabajo := sc776_empleo_dsd.nombre_patr
ono;
                                sc776_fr.cargo := sc776_empleo_dsd.codigo_empleo
;
                                sc776_fr.sueldo := sc776_empleo_dsd.ingreso;
                                end;
                        {endif}
                        db_get_next(open_id,status_id);
                end;
        end;
{endif}
db_close(open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;
{endif} 
{actualizar tabla de notificaciones}
{db_open(notificaciones_dsd,open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;}
{endif}
{notificaciones_dsd.seguro_social_jefe_fam      :=      ss_jefe_familia_gbl;
notificaciones_dsd.seguro_social_jefe_serv      :=      ss_jefe_servicio_gbl;
notificaciones_dsd.cod_servicio                 :=      cod_servicio_gbl;
notificaciones_dsd.cod_notificacion             :=      'C776';
notificaciones_dsd.fch_notificacion             :=      system_date;
NOTIFICACIONES_DSD.RMO_OFICINA                  :=      RMO_GBL;
db_insert(open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;}
{endif}
{db_commit(status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;}
{endif}
{db_close(open_id,status_id);
if status_id <> 0
then
        begin
                error(status_id);
                return;
        end;}
{endif}
call PRINT_MSG_ADL;
end;
    



--------------------------------------------------------------------- */
